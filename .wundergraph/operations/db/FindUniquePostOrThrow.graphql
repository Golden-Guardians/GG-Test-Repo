# This file is auto generated.
# Remove/modify this header if you want to customize the operation.
query db_findUniquePostOrThrow_query($where: db_PostWhereUniqueInput!, $db_findUniquePostOrThrow_author_author_accounts_where: db_AccountWhereInput, $db_findUniquePostOrThrow_author_author_accounts_orderBy: [db_AccountOrderByWithRelationInput], $db_findUniquePostOrThrow_author_author_accounts_cursor: db_AccountWhereUniqueInput, $db_findUniquePostOrThrow_author_author_accounts_take: Int, $db_findUniquePostOrThrow_author_author_accounts_skip: Int, $db_findUniquePostOrThrow_author_author_accounts_distinct: [db_AccountScalarFieldEnum], $db_findUniquePostOrThrow_author_author_sessions_where: db_SessionWhereInput, $db_findUniquePostOrThrow_author_author_sessions_orderBy: [db_SessionOrderByWithRelationInput], $db_findUniquePostOrThrow_author_author_sessions_cursor: db_SessionWhereUniqueInput, $db_findUniquePostOrThrow_author_author_sessions_take: Int, $db_findUniquePostOrThrow_author_author_sessions_skip: Int, $db_findUniquePostOrThrow_author_author_sessions_distinct: [db_SessionScalarFieldEnum], $db_findUniquePostOrThrow_author_author_Todo_where: db_TodoWhereInput, $db_findUniquePostOrThrow_author_author_Todo_orderBy: [db_TodoOrderByWithRelationInput], $db_findUniquePostOrThrow_author_author_Todo_cursor: db_TodoWhereUniqueInput, $db_findUniquePostOrThrow_author_author_Todo_take: Int, $db_findUniquePostOrThrow_author_author_Todo_skip: Int, $db_findUniquePostOrThrow_author_author_Todo_distinct: [db_TodoScalarFieldEnum]) {
  db_findUniquePostOrThrow(where: $where) {
    id
    title
    content
    published
    createdAt
    updatedAt
    authorId
    author {
      id
      name
      email
      emailVerified
      image
      createdAt
      updatedAt
      stripeCustomerId
      stripeSubscriptionId
      stripePriceId
      stripeCurrentPeriodEnd
      accounts(
        where: $db_findUniquePostOrThrow_author_author_accounts_where
        orderBy: $db_findUniquePostOrThrow_author_author_accounts_orderBy
        cursor: $db_findUniquePostOrThrow_author_author_accounts_cursor
        take: $db_findUniquePostOrThrow_author_author_accounts_take
        skip: $db_findUniquePostOrThrow_author_author_accounts_skip
        distinct: $db_findUniquePostOrThrow_author_author_accounts_distinct
      ) {
        id
        userId
        type
        provider
        providerAccountId
        refresh_token
        access_token
        expires_at
        token_type
        scope
        id_token
        session_state
        createdAt
        updatedAt
      }
      sessions(
        where: $db_findUniquePostOrThrow_author_author_sessions_where
        orderBy: $db_findUniquePostOrThrow_author_author_sessions_orderBy
        cursor: $db_findUniquePostOrThrow_author_author_sessions_cursor
        take: $db_findUniquePostOrThrow_author_author_sessions_take
        skip: $db_findUniquePostOrThrow_author_author_sessions_skip
        distinct: $db_findUniquePostOrThrow_author_author_sessions_distinct
      ) {
        id
        sessionToken
        userId
        expires
      }
      Todo(
        where: $db_findUniquePostOrThrow_author_author_Todo_where
        orderBy: $db_findUniquePostOrThrow_author_author_Todo_orderBy
        cursor: $db_findUniquePostOrThrow_author_author_Todo_cursor
        take: $db_findUniquePostOrThrow_author_author_Todo_take
        skip: $db_findUniquePostOrThrow_author_author_Todo_skip
        distinct: $db_findUniquePostOrThrow_author_author_Todo_distinct
      ) {
        id
        text
        isCompleted
        createdAt
        updatedAt
        userId
      }
      _count {
        accounts
        sessions
        Post
        Todo
      }
    }
  }
}