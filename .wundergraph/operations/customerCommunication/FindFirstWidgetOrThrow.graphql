# This file is auto generated.
# Remove/modify this header if you want to customize the operation.
query customerCommunication_findFirstWidgetOrThrow_query($where: customerCommunication_WidgetWhereInput, $orderBy: [customerCommunication_WidgetOrderByWithRelationInput], $cursor: customerCommunication_WidgetWhereUniqueInput, $take: Int, $skip: Int, $distinct: [customerCommunication_WidgetScalarFieldEnum], $customerCommunication_findFirstWidgetOrThrow_interactions_where: customerCommunication_InteractionWhereInput, $customerCommunication_findFirstWidgetOrThrow_interactions_orderBy: [customerCommunication_InteractionOrderByWithRelationInput], $customerCommunication_findFirstWidgetOrThrow_interactions_cursor: customerCommunication_InteractionWhereUniqueInput, $customerCommunication_findFirstWidgetOrThrow_interactions_take: Int, $customerCommunication_findFirstWidgetOrThrow_interactions_skip: Int, $customerCommunication_findFirstWidgetOrThrow_interactions_distinct: [customerCommunication_InteractionScalarFieldEnum], $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_where: customerCommunication_AccountWhereInput, $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_orderBy: [customerCommunication_AccountOrderByWithRelationInput], $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_cursor: customerCommunication_AccountWhereUniqueInput, $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_take: Int, $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_skip: Int, $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_distinct: [customerCommunication_AccountScalarFieldEnum], $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_where: customerCommunication_SessionWhereInput, $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_orderBy: [customerCommunication_SessionOrderByWithRelationInput], $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_cursor: customerCommunication_SessionWhereUniqueInput, $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_take: Int, $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_skip: Int, $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_distinct: [customerCommunication_SessionScalarFieldEnum]) {
  customerCommunication_findFirstWidgetOrThrow(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    take: $take
    skip: $skip
    distinct: $distinct
  ) {
    id
    embeddedIn
    interactions(
      where: $customerCommunication_findFirstWidgetOrThrow_interactions_where
      orderBy: $customerCommunication_findFirstWidgetOrThrow_interactions_orderBy
      cursor: $customerCommunication_findFirstWidgetOrThrow_interactions_cursor
      take: $customerCommunication_findFirstWidgetOrThrow_interactions_take
      skip: $customerCommunication_findFirstWidgetOrThrow_interactions_skip
      distinct: $customerCommunication_findFirstWidgetOrThrow_interactions_distinct
    ) {
      id
      interactionType
      content
      timestamp
      userId
      widgetId
      user {
        id
        name
        email
        emailVerified
        image
        createdAt
        updatedAt
        userType
        stripeCustomerId
        stripeSubscriptionId
        stripePriceId
        stripeCurrentPeriodEnd
        accounts(
          where: $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_where
          orderBy: $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_orderBy
          cursor: $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_cursor
          take: $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_take
          skip: $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_skip
          distinct: $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_distinct
        ) {
          id
          userId
          type
          provider
          providerAccountId
          refresh_token
          access_token
          expires_at
          token_type
          scope
          id_token
          session_state
          createdAt
          updatedAt
        }
        sessions(
          where: $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_where
          orderBy: $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_orderBy
          cursor: $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_cursor
          take: $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_take
          skip: $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_skip
          distinct: $customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_distinct
        ) {
          id
          sessionToken
          userId
          expires
        }
        _count {
          interactions
          accounts
          sessions
        }
      }
    }
    _count {
      interactions
    }
  }
}