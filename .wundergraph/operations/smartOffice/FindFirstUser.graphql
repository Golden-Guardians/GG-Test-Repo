# This file is auto generated.
# Remove/modify this header if you want to customize the operation.
query smartOffice_findFirstUser_query($where: smartOffice_UserWhereInput, $orderBy: [smartOffice_UserOrderByWithRelationInput], $cursor: smartOffice_UserWhereUniqueInput, $take: Int, $skip: Int, $distinct: [smartOffice_UserScalarFieldEnum], $smartOffice_findFirstUser_clients_where: smartOffice_ClientWhereInput, $smartOffice_findFirstUser_clients_orderBy: [smartOffice_ClientOrderByWithRelationInput], $smartOffice_findFirstUser_clients_cursor: smartOffice_ClientWhereUniqueInput, $smartOffice_findFirstUser_clients_take: Int, $smartOffice_findFirstUser_clients_skip: Int, $smartOffice_findFirstUser_clients_distinct: [smartOffice_ClientScalarFieldEnum], $smartOffice_findFirstUser_tasks_where: smartOffice_TaskWhereInput, $smartOffice_findFirstUser_tasks_orderBy: [smartOffice_TaskOrderByWithRelationInput], $smartOffice_findFirstUser_tasks_cursor: smartOffice_TaskWhereUniqueInput, $smartOffice_findFirstUser_tasks_take: Int, $smartOffice_findFirstUser_tasks_skip: Int, $smartOffice_findFirstUser_tasks_distinct: [smartOffice_TaskScalarFieldEnum], $smartOffice_findFirstUser_sales_where: smartOffice_SaleWhereInput, $smartOffice_findFirstUser_sales_orderBy: [smartOffice_SaleOrderByWithRelationInput], $smartOffice_findFirstUser_sales_cursor: smartOffice_SaleWhereUniqueInput, $smartOffice_findFirstUser_sales_take: Int, $smartOffice_findFirstUser_sales_skip: Int, $smartOffice_findFirstUser_sales_distinct: [smartOffice_SaleScalarFieldEnum]) {
  smartOffice_findFirstUser(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    take: $take
    skip: $skip
    distinct: $distinct
  ) {
    id
    username
    password
    role
    clients(
      where: $smartOffice_findFirstUser_clients_where
      orderBy: $smartOffice_findFirstUser_clients_orderBy
      cursor: $smartOffice_findFirstUser_clients_cursor
      take: $smartOffice_findFirstUser_clients_take
      skip: $smartOffice_findFirstUser_clients_skip
      distinct: $smartOffice_findFirstUser_clients_distinct
    ) {
      id
      name
      email
      phone
      userId
    }
    tasks(
      where: $smartOffice_findFirstUser_tasks_where
      orderBy: $smartOffice_findFirstUser_tasks_orderBy
      cursor: $smartOffice_findFirstUser_tasks_cursor
      take: $smartOffice_findFirstUser_tasks_take
      skip: $smartOffice_findFirstUser_tasks_skip
      distinct: $smartOffice_findFirstUser_tasks_distinct
    ) {
      id
      taskType
      status
      details
      userId
    }
    sales(
      where: $smartOffice_findFirstUser_sales_where
      orderBy: $smartOffice_findFirstUser_sales_orderBy
      cursor: $smartOffice_findFirstUser_sales_cursor
      take: $smartOffice_findFirstUser_sales_take
      skip: $smartOffice_findFirstUser_sales_skip
      distinct: $smartOffice_findFirstUser_sales_distinct
    ) {
      id
      saleType
      amount
      timestamp
      userId
    }
    _count {
      clients
      tasks
      sales
    }
  }
}