// Code generated by wunderctl. DO NOT EDIT.

// @ts-ignore: no-types available
import type { JSONSchema7 } from "json-schema";

// @ts-ignore: module unavailable
declare module "json-schema" {
	export interface JSONSchema7 {
		"x-graphql-enum-name"?: string;
	}
}

export interface Queries {
	"clientPortal/AggregateActivity": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/AggregateClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/AggregateService": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/FindFirstActivity": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/FindFirstActivityOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/FindFirstClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/FindFirstClientOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/FindFirstService": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/FindFirstServiceOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/FindManyActivity": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/FindManyClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/FindManyService": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/FindUniqueActivity": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/FindUniqueActivityOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/FindUniqueClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/FindUniqueClientOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/FindUniqueService": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/FindUniqueServiceOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/GroupByActivity": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/GroupByClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/GroupByService": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/QueryRaw": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/QueryRawJSON": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"countries/Continent": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"countries/Continents": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"countries/Countries": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"countries/Country": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"countries/CountryByCode": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"countries/Language": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"countries/Languages": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/AggregateAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/AggregateFilter": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/AggregateInteraction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/AggregateSession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/AggregateUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/AggregateVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/AggregateWidget": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindFirstAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindFirstAccountOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindFirstFilter": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindFirstFilterOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindFirstInteraction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindFirstInteractionOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindFirstSession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindFirstSessionOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindFirstUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindFirstUserOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindFirstVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindFirstVerificationTokenOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindFirstWidget": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindFirstWidgetOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindManyAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindManyFilter": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindManyInteraction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindManySession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindManyVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindManyWidget": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindUniqueAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindUniqueAccountOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindUniqueFilter": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindUniqueFilterOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindUniqueInteraction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindUniqueInteractionOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindUniqueSession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindUniqueSessionOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindUniqueUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindUniqueUserOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindUniqueVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindUniqueVerificationTokenOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindUniqueWidget": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/FindUniqueWidgetOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/GroupByAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/GroupByFilter": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/GroupByInteraction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/GroupBySession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/GroupByUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/GroupByVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/GroupByWidget": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/QueryRaw": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/QueryRawJSON": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/AggregateAdminAction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/AggregatePolicy": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/AggregateUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/FindFirstAdminAction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/FindFirstAdminActionOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/FindFirstPolicy": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/FindFirstPolicyOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/FindFirstUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/FindFirstUserOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/FindManyAdminAction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/FindManyPolicy": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/FindManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/FindUniqueAdminAction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/FindUniqueAdminActionOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/FindUniquePolicy": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/FindUniquePolicyOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/FindUniqueUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/FindUniqueUserOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/GroupByAdminAction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/GroupByPolicy": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/GroupByUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/QueryRaw": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/QueryRawJSON": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/AggregateFeature": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/AggregateUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/AggregateUserLog": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/FindFirstFeature": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/FindFirstFeatureOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/FindFirstUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/FindFirstUserLog": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/FindFirstUserLogOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/FindFirstUserOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/FindManyFeature": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/FindManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/FindManyUserLog": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/FindUniqueFeature": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/FindUniqueFeatureOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/FindUniqueUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/FindUniqueUserLog": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/FindUniqueUserLogOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/FindUniqueUserOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/GroupByFeature": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/GroupByUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/GroupByUserLog": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/QueryRaw": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/QueryRawJSON": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/AggregateAsset": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/AggregateFinancialGoal": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/AggregateLiability": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/AggregateUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindFirstAsset": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindFirstAssetOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindFirstFinancialGoal": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindFirstFinancialGoalOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindFirstLiability": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindFirstLiabilityOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindFirstUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindFirstUserOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindManyAsset": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindManyFinancialGoal": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindManyLiability": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindUniqueAsset": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindUniqueAssetOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindUniqueFinancialGoal": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindUniqueFinancialGoalOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindUniqueLiability": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindUniqueLiabilityOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindUniqueUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/FindUniqueUserOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/GroupByAsset": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/GroupByFinancialGoal": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/GroupByLiability": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/GroupByUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/QueryRaw": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/QueryRawJSON": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/AggregateClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/AggregateSale": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/AggregateTask": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/AggregateUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindFirstClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindFirstClientOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindFirstSale": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindFirstSaleOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindFirstTask": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindFirstTaskOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindFirstUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindFirstUserOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindManyClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindManySale": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindManyTask": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindUniqueClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindUniqueClientOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindUniqueSale": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindUniqueSaleOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindUniqueTask": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindUniqueTaskOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindUniqueUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/FindUniqueUserOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/GroupByClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/GroupBySale": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/GroupByTask": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/GroupByUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/QueryRaw": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/QueryRawJSON": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"users/CountUsers": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"users/GetAllUsers": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"weather/GetCityById": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"weather/GetCityByName": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"openai/extract-website-metadata": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"openai/load-url": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"openai/summarize-url-content": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"openai/summary": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"openai/weather": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"users/get": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
}

export interface Mutations {
	"clientPortal/CreateManyActivity": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/CreateManyClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/CreateManyService": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/CreateOneActivity": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/CreateOneClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/CreateOneService": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/DeleteManyActivity": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/DeleteManyClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/DeleteManyService": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/DeleteOneActivity": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/DeleteOneClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/DeleteOneService": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/ExecuteRaw": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/UpdateManyActivity": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/UpdateManyClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/UpdateManyService": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/UpdateOneActivity": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/UpdateOneClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/UpdateOneService": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/UpsertOneActivity": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/UpsertOneClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"clientPortal/UpsertOneService": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/CreateManyAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/CreateManyFilter": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/CreateManyInteraction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/CreateManySession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/CreateManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/CreateManyVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/CreateManyWidget": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/CreateOneAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/CreateOneFilter": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/CreateOneInteraction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/CreateOneSession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/CreateOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/CreateOneVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/CreateOneWidget": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/DeleteManyAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/DeleteManyFilter": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/DeleteManyInteraction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/DeleteManySession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/DeleteManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/DeleteManyVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/DeleteManyWidget": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/DeleteOneAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/DeleteOneFilter": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/DeleteOneInteraction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/DeleteOneSession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/DeleteOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/DeleteOneVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/DeleteOneWidget": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/ExecuteRaw": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpdateManyAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpdateManyFilter": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpdateManyInteraction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpdateManySession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpdateManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpdateManyVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpdateManyWidget": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpdateOneAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpdateOneFilter": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpdateOneInteraction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpdateOneSession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpdateOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpdateOneVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpdateOneWidget": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpsertOneAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpsertOneFilter": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpsertOneInteraction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpsertOneSession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpsertOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpsertOneVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"customerCommunication/UpsertOneWidget": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/CreateManyAdminAction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/CreateManyPolicy": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/CreateManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/CreateOneAdminAction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/CreateOnePolicy": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/CreateOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/DeleteManyAdminAction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/DeleteManyPolicy": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/DeleteManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/DeleteOneAdminAction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/DeleteOnePolicy": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/DeleteOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/ExecuteRaw": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/UpdateManyAdminAction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/UpdateManyPolicy": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/UpdateManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/UpdateOneAdminAction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/UpdateOnePolicy": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/UpdateOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/UpsertOneAdminAction": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/UpsertOnePolicy": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"gpac/UpsertOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/CreateManyFeature": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/CreateManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/CreateManyUserLog": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/CreateOneFeature": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/CreateOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/CreateOneUserLog": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/DeleteManyFeature": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/DeleteManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/DeleteManyUserLog": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/DeleteOneFeature": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/DeleteOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/DeleteOneUserLog": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/ExecuteRaw": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/UpdateManyFeature": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/UpdateManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/UpdateManyUserLog": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/UpdateOneFeature": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/UpdateOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/UpdateOneUserLog": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/UpsertOneFeature": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/UpsertOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"guardianOnline/UpsertOneUserLog": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/CreateManyAsset": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/CreateManyFinancialGoal": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/CreateManyLiability": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/CreateManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/CreateOneAsset": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/CreateOneFinancialGoal": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/CreateOneLiability": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/CreateOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/DeleteManyAsset": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/DeleteManyFinancialGoal": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/DeleteManyLiability": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/DeleteManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/DeleteOneAsset": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/DeleteOneFinancialGoal": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/DeleteOneLiability": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/DeleteOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/ExecuteRaw": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/UpdateManyAsset": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/UpdateManyFinancialGoal": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/UpdateManyLiability": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/UpdateManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/UpdateOneAsset": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/UpdateOneFinancialGoal": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/UpdateOneLiability": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/UpdateOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/UpsertOneAsset": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/UpsertOneFinancialGoal": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/UpsertOneLiability": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"livingBalanceSheet/UpsertOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/CreateManyClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/CreateManySale": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/CreateManyTask": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/CreateManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/CreateOneClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/CreateOneSale": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/CreateOneTask": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/CreateOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/DeleteManyClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/DeleteManySale": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/DeleteManyTask": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/DeleteManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/DeleteOneClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/DeleteOneSale": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/DeleteOneTask": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/DeleteOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/ExecuteRaw": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/UpdateManyClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/UpdateManySale": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/UpdateManyTask": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/UpdateManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/UpdateOneClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/UpdateOneSale": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/UpdateOneTask": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/UpdateOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/UpsertOneClient": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/UpsertOneSale": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/UpsertOneTask": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"smartOffice/UpsertOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"users/update": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
}

export interface Subscriptions {
	"users/subscribe": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
}

export type Schema = Queries & Mutations & Subscriptions;

const jsonSchema: Schema = {
	"clientPortal/AggregateActivity": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/clientPortal_ActivityOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/clientPortal_ActivityWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				clientPortal_ActivityWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ActivityWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						activityType: { $ref: "#/definitions/clientPortal_EnumActivity_activityTypeFilter" },
						timestamp: { $ref: "#/definitions/clientPortal_DateTimeFilter" },
						details: { $ref: "#/definitions/clientPortal_JsonFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_EnumActivity_activityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
					},
				},
				clientPortal_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				clientPortal_ActivityOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						activityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ActivityWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_aggregateActivity: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										activityType: { type: "integer" },
										timestamp: { type: "integer" },
										details: { type: "integer" },
										clientId: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "activityType", "timestamp", "details", "clientId", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										activityType: {
											type: "string",
											enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
										},
										timestamp: { type: "string" },
										clientId: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										activityType: {
											type: "string",
											enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
										},
										timestamp: { type: "string" },
										clientId: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["clientPortal_aggregateActivity"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/AggregateClient": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/clientPortal_ClientOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/clientPortal_ClientWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				clientPortal_ClientWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ClientWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						username: { $ref: "#/definitions/clientPortal_StringFilter" },
						password: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_ClientOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_aggregateClient: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										username: { type: "integer" },
										password: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "username", "password", "_all"],
								},
								_min: {
									type: "object",
									properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["clientPortal_aggregateClient"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/AggregateService": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/clientPortal_ServiceOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/clientPortal_ServiceWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				clientPortal_ServiceWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ServiceWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						serviceType: { $ref: "#/definitions/clientPortal_EnumService_serviceTypeFilter" },
						content: { $ref: "#/definitions/clientPortal_JsonFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_EnumService_serviceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
					},
				},
				clientPortal_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				clientPortal_ServiceOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						serviceType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ServiceWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_aggregateService: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										serviceType: { type: "integer" },
										content: { type: "integer" },
										clientId: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "serviceType", "content", "clientId", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										serviceType: { type: "string", enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"] },
										clientId: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										serviceType: { type: "string", enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"] },
										clientId: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["clientPortal_aggregateService"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/FindFirstActivity": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/clientPortal_ActivityOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/clientPortal_ActivityWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "clientPortal_ActivityScalarFieldEnum",
						enum: ["id", "activityType", "timestamp", "details", "clientId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				clientPortal_ActivityWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ActivityWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						activityType: { $ref: "#/definitions/clientPortal_EnumActivity_activityTypeFilter" },
						timestamp: { $ref: "#/definitions/clientPortal_DateTimeFilter" },
						details: { $ref: "#/definitions/clientPortal_JsonFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_EnumActivity_activityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
					},
				},
				clientPortal_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				clientPortal_ActivityOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						activityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ActivityWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_findFirstActivity: {
							type: "object",
							properties: {
								id: { type: "string" },
								activityType: {
									type: "string",
									enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
								},
								timestamp: { type: "string" },
								details: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "activityType", "timestamp", "details", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/FindFirstActivityOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/clientPortal_ActivityOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/clientPortal_ActivityWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "clientPortal_ActivityScalarFieldEnum",
						enum: ["id", "activityType", "timestamp", "details", "clientId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				clientPortal_ActivityWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ActivityWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						activityType: { $ref: "#/definitions/clientPortal_EnumActivity_activityTypeFilter" },
						timestamp: { $ref: "#/definitions/clientPortal_DateTimeFilter" },
						details: { $ref: "#/definitions/clientPortal_JsonFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_EnumActivity_activityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
					},
				},
				clientPortal_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				clientPortal_ActivityOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						activityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ActivityWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_findFirstActivityOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								activityType: {
									type: "string",
									enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
								},
								timestamp: { type: "string" },
								details: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "activityType", "timestamp", "details", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/FindFirstClient": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/clientPortal_ClientOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/clientPortal_ClientWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "clientPortal_ClientScalarFieldEnum",
						enum: ["id", "username", "password"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				clientPortal_ClientWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ClientWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						username: { $ref: "#/definitions/clientPortal_StringFilter" },
						password: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_ClientOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_findFirstClient: {
							type: "object",
							properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
							additionalProperties: false,
							required: ["id", "username", "password"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/FindFirstClientOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/clientPortal_ClientOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/clientPortal_ClientWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "clientPortal_ClientScalarFieldEnum",
						enum: ["id", "username", "password"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				clientPortal_ClientWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ClientWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						username: { $ref: "#/definitions/clientPortal_StringFilter" },
						password: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_ClientOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_findFirstClientOrThrow: {
							type: "object",
							properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
							additionalProperties: false,
							required: ["id", "username", "password"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/FindFirstService": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/clientPortal_ServiceOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/clientPortal_ServiceWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "clientPortal_ServiceScalarFieldEnum",
						enum: ["id", "serviceType", "content", "clientId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				clientPortal_ServiceWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ServiceWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						serviceType: { $ref: "#/definitions/clientPortal_EnumService_serviceTypeFilter" },
						content: { $ref: "#/definitions/clientPortal_JsonFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_EnumService_serviceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
					},
				},
				clientPortal_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				clientPortal_ServiceOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						serviceType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ServiceWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_findFirstService: {
							type: "object",
							properties: {
								id: { type: "string" },
								serviceType: { type: "string", enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"] },
								content: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "serviceType", "content", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/FindFirstServiceOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/clientPortal_ServiceOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/clientPortal_ServiceWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "clientPortal_ServiceScalarFieldEnum",
						enum: ["id", "serviceType", "content", "clientId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				clientPortal_ServiceWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ServiceWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						serviceType: { $ref: "#/definitions/clientPortal_EnumService_serviceTypeFilter" },
						content: { $ref: "#/definitions/clientPortal_JsonFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_EnumService_serviceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
					},
				},
				clientPortal_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				clientPortal_ServiceOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						serviceType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ServiceWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_findFirstServiceOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								serviceType: { type: "string", enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"] },
								content: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "serviceType", "content", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/FindManyActivity": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/clientPortal_ActivityOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/clientPortal_ActivityWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "clientPortal_ActivityScalarFieldEnum",
						enum: ["id", "activityType", "timestamp", "details", "clientId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				clientPortal_ActivityWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ActivityWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						activityType: { $ref: "#/definitions/clientPortal_EnumActivity_activityTypeFilter" },
						timestamp: { $ref: "#/definitions/clientPortal_DateTimeFilter" },
						details: { $ref: "#/definitions/clientPortal_JsonFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_EnumActivity_activityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
					},
				},
				clientPortal_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				clientPortal_ActivityOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						activityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ActivityWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_findManyActivity: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									activityType: {
										type: "string",
										enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
									},
									timestamp: { type: "string" },
									details: {},
									clientId: { type: "string" },
								},
								additionalProperties: false,
								required: ["id", "activityType", "timestamp", "details", "clientId"],
							},
						},
					},
					additionalProperties: false,
					required: ["clientPortal_findManyActivity"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/FindManyClient": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/clientPortal_ClientOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/clientPortal_ClientWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "clientPortal_ClientScalarFieldEnum",
						enum: ["id", "username", "password"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				clientPortal_ClientWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ClientWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						username: { $ref: "#/definitions/clientPortal_StringFilter" },
						password: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_ClientOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_findManyClient: {
							type: "array",
							items: {
								type: "object",
								properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
								additionalProperties: false,
								required: ["id", "username", "password"],
							},
						},
					},
					additionalProperties: false,
					required: ["clientPortal_findManyClient"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/FindManyService": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/clientPortal_ServiceOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/clientPortal_ServiceWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "clientPortal_ServiceScalarFieldEnum",
						enum: ["id", "serviceType", "content", "clientId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				clientPortal_ServiceWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ServiceWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						serviceType: { $ref: "#/definitions/clientPortal_EnumService_serviceTypeFilter" },
						content: { $ref: "#/definitions/clientPortal_JsonFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_EnumService_serviceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
					},
				},
				clientPortal_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				clientPortal_ServiceOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						serviceType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ServiceWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_findManyService: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									serviceType: { type: "string", enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"] },
									content: {},
									clientId: { type: "string" },
								},
								additionalProperties: false,
								required: ["id", "serviceType", "content", "clientId"],
							},
						},
					},
					additionalProperties: false,
					required: ["clientPortal_findManyService"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/FindUniqueActivity": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/clientPortal_ActivityWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				clientPortal_ActivityWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_findUniqueActivity: {
							type: "object",
							properties: {
								id: { type: "string" },
								activityType: {
									type: "string",
									enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
								},
								timestamp: { type: "string" },
								details: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "activityType", "timestamp", "details", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/FindUniqueActivityOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/clientPortal_ActivityWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				clientPortal_ActivityWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_findUniqueActivityOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								activityType: {
									type: "string",
									enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
								},
								timestamp: { type: "string" },
								details: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "activityType", "timestamp", "details", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/FindUniqueClient": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/clientPortal_ClientWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				clientPortal_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_findUniqueClient: {
							type: "object",
							properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
							additionalProperties: false,
							required: ["id", "username", "password"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/FindUniqueClientOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/clientPortal_ClientWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				clientPortal_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_findUniqueClientOrThrow: {
							type: "object",
							properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
							additionalProperties: false,
							required: ["id", "username", "password"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/FindUniqueService": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/clientPortal_ServiceWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				clientPortal_ServiceWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_findUniqueService: {
							type: "object",
							properties: {
								id: { type: "string" },
								serviceType: { type: "string", enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"] },
								content: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "serviceType", "content", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/FindUniqueServiceOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/clientPortal_ServiceWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				clientPortal_ServiceWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_findUniqueServiceOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								serviceType: { type: "string", enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"] },
								content: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "serviceType", "content", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/GroupByActivity": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/clientPortal_ActivityOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "clientPortal_ActivityScalarFieldEnum",
						enum: ["id", "activityType", "timestamp", "details", "clientId"],
					},
				},
				having: { $ref: "#/definitions/clientPortal_ActivityScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				clientPortal_ActivityWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ActivityWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						activityType: { $ref: "#/definitions/clientPortal_EnumActivity_activityTypeFilter" },
						timestamp: { $ref: "#/definitions/clientPortal_DateTimeFilter" },
						details: { $ref: "#/definitions/clientPortal_JsonFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_EnumActivity_activityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
					},
				},
				clientPortal_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				clientPortal_ActivityOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						activityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/clientPortal_ActivityCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/clientPortal_ActivityMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/clientPortal_ActivityMinOrderByAggregateInput" },
					},
				},
				clientPortal_ActivityCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						activityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ActivityMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						activityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ActivityMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						activityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ActivityScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ActivityScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/clientPortal_ActivityScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/clientPortal_ActivityScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/clientPortal_StringWithAggregatesFilter" },
						activityType: { $ref: "#/definitions/clientPortal_EnumActivity_activityTypeWithAggregatesFilter" },
						timestamp: { $ref: "#/definitions/clientPortal_DateTimeWithAggregatesFilter" },
						details: { $ref: "#/definitions/clientPortal_JsonWithAggregatesFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringWithAggregatesFilter" },
					},
				},
				clientPortal_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/clientPortal_NestedIntFilter" },
						_min: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
						_max: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/clientPortal_NestedIntFilter" },
						_min: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
						_max: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedIntFilter" },
					},
				},
				clientPortal_EnumActivity_activityTypeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						_count: { $ref: "#/definitions/clientPortal_NestedIntFilter" },
						_min: { $ref: "#/definitions/clientPortal_NestedEnumActivity_activityTypeFilter" },
						_max: { $ref: "#/definitions/clientPortal_NestedEnumActivity_activityTypeFilter" },
					},
				},
				clientPortal_NestedEnumActivity_activityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
					},
				},
				clientPortal_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/clientPortal_NestedIntFilter" },
						_min: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/clientPortal_NestedIntFilter" },
						_min: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_JsonWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
						_count: { $ref: "#/definitions/clientPortal_NestedIntFilter" },
						_min: { $ref: "#/definitions/clientPortal_NestedJsonFilter" },
						_max: { $ref: "#/definitions/clientPortal_NestedJsonFilter" },
					},
				},
				clientPortal_NestedJsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_groupByActivity: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									activityType: {
										type: "string",
										enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
									},
									timestamp: { type: "string" },
									details: {},
									clientId: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											activityType: { type: "integer" },
											timestamp: { type: "integer" },
											details: { type: "integer" },
											clientId: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "activityType", "timestamp", "details", "clientId", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											activityType: {
												type: "string",
												enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
											},
											timestamp: { type: "string" },
											clientId: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											activityType: {
												type: "string",
												enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
											},
											timestamp: { type: "string" },
											clientId: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "activityType", "timestamp", "details", "clientId"],
							},
						},
					},
					additionalProperties: false,
					required: ["clientPortal_groupByActivity"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/GroupByClient": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/clientPortal_ClientOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "clientPortal_ClientScalarFieldEnum",
						enum: ["id", "username", "password"],
					},
				},
				having: { $ref: "#/definitions/clientPortal_ClientScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				clientPortal_ClientWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ClientWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						username: { $ref: "#/definitions/clientPortal_StringFilter" },
						password: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_ClientOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/clientPortal_ClientCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/clientPortal_ClientMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/clientPortal_ClientMinOrderByAggregateInput" },
					},
				},
				clientPortal_ClientCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ClientMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ClientMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ClientScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ClientScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/clientPortal_ClientScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/clientPortal_ClientScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/clientPortal_StringWithAggregatesFilter" },
						username: { $ref: "#/definitions/clientPortal_StringWithAggregatesFilter" },
						password: { $ref: "#/definitions/clientPortal_StringWithAggregatesFilter" },
					},
				},
				clientPortal_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/clientPortal_NestedIntFilter" },
						_min: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
						_max: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/clientPortal_NestedIntFilter" },
						_min: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
						_max: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedIntFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_groupByClient: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									username: { type: "string" },
									password: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											username: { type: "integer" },
											password: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "username", "password", "_all"],
									},
									_min: {
										type: "object",
										properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "username", "password"],
							},
						},
					},
					additionalProperties: false,
					required: ["clientPortal_groupByClient"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/GroupByService": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/clientPortal_ServiceOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "clientPortal_ServiceScalarFieldEnum",
						enum: ["id", "serviceType", "content", "clientId"],
					},
				},
				having: { $ref: "#/definitions/clientPortal_ServiceScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				clientPortal_ServiceWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ServiceWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						serviceType: { $ref: "#/definitions/clientPortal_EnumService_serviceTypeFilter" },
						content: { $ref: "#/definitions/clientPortal_JsonFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_EnumService_serviceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
					},
				},
				clientPortal_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				clientPortal_ServiceOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						serviceType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/clientPortal_ServiceCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/clientPortal_ServiceMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/clientPortal_ServiceMinOrderByAggregateInput" },
					},
				},
				clientPortal_ServiceCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						serviceType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ServiceMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						serviceType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ServiceMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "clientPortal_SortOrder", enum: ["asc", "desc"] },
						serviceType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
						clientId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				clientPortal_ServiceScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ServiceScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/clientPortal_ServiceScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/clientPortal_ServiceScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/clientPortal_StringWithAggregatesFilter" },
						serviceType: { $ref: "#/definitions/clientPortal_EnumService_serviceTypeWithAggregatesFilter" },
						content: { $ref: "#/definitions/clientPortal_JsonWithAggregatesFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringWithAggregatesFilter" },
					},
				},
				clientPortal_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/clientPortal_NestedIntFilter" },
						_min: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
						_max: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/clientPortal_NestedIntFilter" },
						_min: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
						_max: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedIntFilter" },
					},
				},
				clientPortal_EnumService_serviceTypeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						_count: { $ref: "#/definitions/clientPortal_NestedIntFilter" },
						_min: { $ref: "#/definitions/clientPortal_NestedEnumService_serviceTypeFilter" },
						_max: { $ref: "#/definitions/clientPortal_NestedEnumService_serviceTypeFilter" },
					},
				},
				clientPortal_NestedEnumService_serviceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
					},
				},
				clientPortal_JsonWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
						_count: { $ref: "#/definitions/clientPortal_NestedIntFilter" },
						_min: { $ref: "#/definitions/clientPortal_NestedJsonFilter" },
						_max: { $ref: "#/definitions/clientPortal_NestedJsonFilter" },
					},
				},
				clientPortal_NestedJsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_groupByService: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									serviceType: { type: "string", enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"] },
									content: {},
									clientId: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											serviceType: { type: "integer" },
											content: { type: "integer" },
											clientId: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "serviceType", "content", "clientId", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											serviceType: { type: "string", enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"] },
											clientId: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											serviceType: { type: "string", enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"] },
											clientId: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "serviceType", "content", "clientId"],
							},
						},
					},
					additionalProperties: false,
					required: ["clientPortal_groupByService"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/QueryRaw": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_queryRaw: {
							type: "array",
							items: {
								type: "object",
								properties: {
									ID: { type: "string" },
									Int: { type: "integer" },
									Float: { type: "number" },
									String: { type: "string" },
									Boolean: { type: "boolean" },
									DateTime: { type: "string" },
									JSON: {},
									Object: {
										type: "object",
										properties: {
											ID: { type: "string" },
											Int: { type: "integer" },
											Float: { type: "number" },
											String: { type: "string" },
											Boolean: { type: "boolean" },
											DateTime: { type: "string" },
											JSON: {},
											OptionalID: { type: "string" },
											OptionalInt: { type: "integer" },
											OptionalFloat: { type: "number" },
											OptionalString: { type: "string" },
											OptionalBoolean: { type: "boolean" },
											OptionalDateTime: { type: "string" },
											OptionalJSON: {},
										},
										additionalProperties: false,
										required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
									},
									Array: {
										type: "array",
										items: {
											type: "object",
											properties: {
												ID: { type: "string" },
												Int: { type: "integer" },
												Float: { type: "number" },
												String: { type: "string" },
												Boolean: { type: "boolean" },
												DateTime: { type: "string" },
												JSON: {},
												OptionalID: { type: "string" },
												OptionalInt: { type: "integer" },
												OptionalFloat: { type: "number" },
												OptionalString: { type: "string" },
												OptionalBoolean: { type: "boolean" },
												OptionalDateTime: { type: "string" },
												OptionalJSON: {},
											},
											additionalProperties: false,
											required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
										},
									},
									OptionalID: { type: "string" },
									OptionalInt: { type: "integer" },
									OptionalFloat: { type: "number" },
									OptionalString: { type: "string" },
									OptionalBoolean: { type: "boolean" },
									OptionalDateTime: { type: "string" },
									OptionalJSON: {},
									OptionalObject: {
										type: "object",
										properties: {
											ID: { type: "string" },
											Int: { type: "integer" },
											Float: { type: "number" },
											String: { type: "string" },
											Boolean: { type: "boolean" },
											DateTime: { type: "string" },
											JSON: {},
											OptionalID: { type: "string" },
											OptionalInt: { type: "integer" },
											OptionalFloat: { type: "number" },
											OptionalString: { type: "string" },
											OptionalBoolean: { type: "boolean" },
											OptionalDateTime: { type: "string" },
											OptionalJSON: {},
										},
										additionalProperties: false,
										required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
									},
									OptionalArray: {
										type: "array",
										items: {
											type: "object",
											properties: {
												ID: { type: "string" },
												Int: { type: "integer" },
												Float: { type: "number" },
												String: { type: "string" },
												Boolean: { type: "boolean" },
												DateTime: { type: "string" },
												JSON: {},
												OptionalID: { type: "string" },
												OptionalInt: { type: "integer" },
												OptionalFloat: { type: "number" },
												OptionalString: { type: "string" },
												OptionalBoolean: { type: "boolean" },
												OptionalDateTime: { type: "string" },
												OptionalJSON: {},
											},
											additionalProperties: false,
											required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
										},
									},
								},
								additionalProperties: false,
								required: [
									"ID",
									"Int",
									"Float",
									"String",
									"Boolean",
									"DateTime",
									"JSON",
									"Object",
									"Array",
									"OptionalArray",
								],
							},
						},
					},
					additionalProperties: false,
					required: ["clientPortal_queryRaw"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"clientPortal/QueryRawJSON": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: { type: "object", properties: { clientPortal_queryRawJSON: {} }, additionalProperties: false },
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"countries/Continent": {
		input: {
			type: "object",
			properties: {
				code: { type: "string" },
				countries_continent_countries_countries_name_lang: { type: ["string", "null"] },
			},
			additionalProperties: false,
			required: ["code"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						countries_continent: {
							type: "object",
							properties: {
								code: { type: "string" },
								countries: {
									type: "array",
									items: {
										type: "object",
										properties: {
											awsRegion: { type: "string" },
											capital: { type: "string" },
											code: { type: "string" },
											currencies: { type: "array", items: { type: "string" } },
											currency: { type: "string" },
											emoji: { type: "string" },
											emojiU: { type: "string" },
											languages: {
												type: "array",
												items: {
													type: "object",
													properties: {
														code: { type: "string" },
														name: { type: "string" },
														native: { type: "string" },
														rtl: { type: "boolean" },
													},
													additionalProperties: false,
													required: ["code", "name", "native", "rtl"],
												},
											},
											name: { type: "string" },
											native: { type: "string" },
											phone: { type: "string" },
											phones: { type: "array", items: { type: "string" } },
											states: {
												type: "array",
												items: {
													type: "object",
													properties: { code: { type: "string" }, name: { type: "string" } },
													additionalProperties: false,
													required: ["name"],
												},
											},
											subdivisions: {
												type: "array",
												items: {
													type: "object",
													properties: { code: { type: "string" }, emoji: { type: "string" }, name: { type: "string" } },
													additionalProperties: false,
													required: ["code", "name"],
												},
											},
										},
										additionalProperties: false,
										required: [
											"awsRegion",
											"code",
											"currencies",
											"emoji",
											"emojiU",
											"languages",
											"name",
											"native",
											"phone",
											"phones",
											"states",
											"subdivisions",
										],
									},
								},
								name: { type: "string" },
							},
							additionalProperties: false,
							required: ["code", "countries", "name"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"countries/Continents": {
		input: {
			type: "object",
			properties: {
				filter: { $ref: "#/definitions/countries_ContinentFilterInput" },
				countries_continents_countries_countries_name_lang: { type: ["string", "null"] },
			},
			additionalProperties: false,
			definitions: {
				countries_ContinentFilterInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { code: { $ref: "#/definitions/countries_StringQueryOperatorInput" } },
				},
				countries_StringQueryOperatorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						eq: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: "string" } },
						ne: { type: ["string", "null"] },
						nin: { type: ["array", "null"], items: { type: "string" } },
						regex: { type: ["string", "null"] },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						countries_continents: {
							type: "array",
							items: {
								type: "object",
								properties: {
									code: { type: "string" },
									countries: {
										type: "array",
										items: {
											type: "object",
											properties: {
												awsRegion: { type: "string" },
												capital: { type: "string" },
												code: { type: "string" },
												currencies: { type: "array", items: { type: "string" } },
												currency: { type: "string" },
												emoji: { type: "string" },
												emojiU: { type: "string" },
												languages: {
													type: "array",
													items: {
														type: "object",
														properties: {
															code: { type: "string" },
															name: { type: "string" },
															native: { type: "string" },
															rtl: { type: "boolean" },
														},
														additionalProperties: false,
														required: ["code", "name", "native", "rtl"],
													},
												},
												name: { type: "string" },
												native: { type: "string" },
												phone: { type: "string" },
												phones: { type: "array", items: { type: "string" } },
												states: {
													type: "array",
													items: {
														type: "object",
														properties: { code: { type: "string" }, name: { type: "string" } },
														additionalProperties: false,
														required: ["name"],
													},
												},
												subdivisions: {
													type: "array",
													items: {
														type: "object",
														properties: {
															code: { type: "string" },
															emoji: { type: "string" },
															name: { type: "string" },
														},
														additionalProperties: false,
														required: ["code", "name"],
													},
												},
											},
											additionalProperties: false,
											required: [
												"awsRegion",
												"code",
												"currencies",
												"emoji",
												"emojiU",
												"languages",
												"name",
												"native",
												"phone",
												"phones",
												"states",
												"subdivisions",
											],
										},
									},
									name: { type: "string" },
								},
								additionalProperties: false,
								required: ["code", "countries", "name"],
							},
						},
					},
					additionalProperties: false,
					required: ["countries_continents"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"countries/Countries": {
		input: {
			type: "object",
			properties: {
				filter: { $ref: "#/definitions/countries_CountryFilterInput" },
				countries_countries_name_lang: { type: ["string", "null"] },
			},
			additionalProperties: false,
			definitions: {
				countries_CountryFilterInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						code: { $ref: "#/definitions/countries_StringQueryOperatorInput" },
						continent: { $ref: "#/definitions/countries_StringQueryOperatorInput" },
						currency: { $ref: "#/definitions/countries_StringQueryOperatorInput" },
						name: { $ref: "#/definitions/countries_StringQueryOperatorInput" },
					},
				},
				countries_StringQueryOperatorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						eq: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: "string" } },
						ne: { type: ["string", "null"] },
						nin: { type: ["array", "null"], items: { type: "string" } },
						regex: { type: ["string", "null"] },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						countries_countries: {
							type: "array",
							items: {
								type: "object",
								properties: {
									awsRegion: { type: "string" },
									capital: { type: "string" },
									code: { type: "string" },
									continent: {
										type: "object",
										properties: { code: { type: "string" }, name: { type: "string" } },
										additionalProperties: false,
										required: ["code", "name"],
									},
									currencies: { type: "array", items: { type: "string" } },
									currency: { type: "string" },
									emoji: { type: "string" },
									emojiU: { type: "string" },
									languages: {
										type: "array",
										items: {
											type: "object",
											properties: {
												code: { type: "string" },
												name: { type: "string" },
												native: { type: "string" },
												rtl: { type: "boolean" },
											},
											additionalProperties: false,
											required: ["code", "name", "native", "rtl"],
										},
									},
									name: { type: "string" },
									native: { type: "string" },
									phone: { type: "string" },
									phones: { type: "array", items: { type: "string" } },
									states: {
										type: "array",
										items: {
											type: "object",
											properties: { code: { type: "string" }, name: { type: "string" } },
											additionalProperties: false,
											required: ["name"],
										},
									},
									subdivisions: {
										type: "array",
										items: {
											type: "object",
											properties: { code: { type: "string" }, emoji: { type: "string" }, name: { type: "string" } },
											additionalProperties: false,
											required: ["code", "name"],
										},
									},
								},
								additionalProperties: false,
								required: [
									"awsRegion",
									"code",
									"continent",
									"currencies",
									"emoji",
									"emojiU",
									"languages",
									"name",
									"native",
									"phone",
									"phones",
									"states",
									"subdivisions",
								],
							},
						},
					},
					additionalProperties: false,
					required: ["countries_countries"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"countries/Country": {
		input: {
			type: "object",
			properties: { code: { type: "string" }, countries_country_name_lang: { type: ["string", "null"] } },
			additionalProperties: false,
			required: ["code"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						countries_country: {
							type: "object",
							properties: {
								awsRegion: { type: "string" },
								capital: { type: "string" },
								code: { type: "string" },
								continent: {
									type: "object",
									properties: { code: { type: "string" }, name: { type: "string" } },
									additionalProperties: false,
									required: ["code", "name"],
								},
								currencies: { type: "array", items: { type: "string" } },
								currency: { type: "string" },
								emoji: { type: "string" },
								emojiU: { type: "string" },
								languages: {
									type: "array",
									items: {
										type: "object",
										properties: {
											code: { type: "string" },
											name: { type: "string" },
											native: { type: "string" },
											rtl: { type: "boolean" },
										},
										additionalProperties: false,
										required: ["code", "name", "native", "rtl"],
									},
								},
								name: { type: "string" },
								native: { type: "string" },
								phone: { type: "string" },
								phones: { type: "array", items: { type: "string" } },
								states: {
									type: "array",
									items: {
										type: "object",
										properties: { code: { type: "string" }, name: { type: "string" } },
										additionalProperties: false,
										required: ["name"],
									},
								},
								subdivisions: {
									type: "array",
									items: {
										type: "object",
										properties: { code: { type: "string" }, emoji: { type: "string" }, name: { type: "string" } },
										additionalProperties: false,
										required: ["code", "name"],
									},
								},
							},
							additionalProperties: false,
							required: [
								"awsRegion",
								"code",
								"continent",
								"currencies",
								"emoji",
								"emojiU",
								"languages",
								"name",
								"native",
								"phone",
								"phones",
								"states",
								"subdivisions",
							],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"countries/CountryByCode": {
		input: {
			type: "object",
			properties: { code: { type: "string" } },
			additionalProperties: false,
			required: ["code"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						countries_country: {
							type: "object",
							properties: {
								code: { type: "string" },
								name: { type: "string" },
								currencies: { type: "array", items: { type: "string" } },
								capital: { type: "string" },
							},
							additionalProperties: false,
							required: ["code", "name", "currencies"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"countries/Language": {
		input: {
			type: "object",
			properties: { code: { type: "string" } },
			additionalProperties: false,
			required: ["code"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						countries_language: {
							type: "object",
							properties: {
								code: { type: "string" },
								name: { type: "string" },
								native: { type: "string" },
								rtl: { type: "boolean" },
							},
							additionalProperties: false,
							required: ["code", "name", "native", "rtl"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"countries/Languages": {
		input: {
			type: "object",
			properties: { filter: { $ref: "#/definitions/countries_LanguageFilterInput" } },
			additionalProperties: false,
			definitions: {
				countries_LanguageFilterInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { code: { $ref: "#/definitions/countries_StringQueryOperatorInput" } },
				},
				countries_StringQueryOperatorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						eq: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: "string" } },
						ne: { type: ["string", "null"] },
						nin: { type: ["array", "null"], items: { type: "string" } },
						regex: { type: ["string", "null"] },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						countries_languages: {
							type: "array",
							items: {
								type: "object",
								properties: {
									code: { type: "string" },
									name: { type: "string" },
									native: { type: "string" },
									rtl: { type: "boolean" },
								},
								additionalProperties: false,
								required: ["code", "name", "native", "rtl"],
							},
						},
					},
					additionalProperties: false,
					required: ["countries_languages"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/AggregateAccount": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_aggregateAccount: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										userId: { type: "integer" },
										type: { type: "integer" },
										provider: { type: "integer" },
										providerAccountId: { type: "integer" },
										refresh_token: { type: "integer" },
										access_token: { type: "integer" },
										expires_at: { type: "integer" },
										token_type: { type: "integer" },
										scope: { type: "integer" },
										id_token: { type: "integer" },
										session_state: { type: "integer" },
										createdAt: { type: "integer" },
										updatedAt: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: [
										"id",
										"userId",
										"type",
										"provider",
										"providerAccountId",
										"refresh_token",
										"access_token",
										"expires_at",
										"token_type",
										"scope",
										"id_token",
										"session_state",
										"createdAt",
										"updatedAt",
										"_all",
									],
								},
								_avg: { type: "object", properties: { expires_at: { type: "number" } }, additionalProperties: false },
								_sum: { type: "object", properties: { expires_at: { type: "integer" } }, additionalProperties: false },
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										userId: { type: "string" },
										type: { type: "string" },
										provider: { type: "string" },
										providerAccountId: { type: "string" },
										refresh_token: { type: "string" },
										access_token: { type: "string" },
										expires_at: { type: "integer" },
										token_type: { type: "string" },
										scope: { type: "string" },
										id_token: { type: "string" },
										session_state: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										userId: { type: "string" },
										type: { type: "string" },
										provider: { type: "string" },
										providerAccountId: { type: "string" },
										refresh_token: { type: "string" },
										access_token: { type: "string" },
										expires_at: { type: "integer" },
										token_type: { type: "string" },
										scope: { type: "string" },
										id_token: { type: "string" },
										session_state: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_aggregateAccount"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/AggregateFilter": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_FilterOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_FilterWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_FilterWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_FilterWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						audience: { $ref: "#/definitions/customerCommunication_EnumAudienceTypeFilter" },
						output: { $ref: "#/definitions/customerCommunication_EnumOutputTypeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumAudienceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
					},
				},
				customerCommunication_EnumOutputTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
					},
				},
				customerCommunication_FilterOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						audience: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						output: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_FilterWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_aggregateFilter: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										audience: { type: "integer" },
										output: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "audience", "output", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										audience: {
											type: "string",
											enum: [
												"CALL_CENTER",
												"CLIENT_PORTAL",
												"GUARDIAN_ONLINE",
												"GPAC",
												"SMART_OFFICE",
												"LIVING_BALANCE_SHEET",
											],
										},
										output: {
											type: "string",
											enum: [
												"CALLS",
												"CHATS",
												"EMAILS",
												"WEB_USAGE",
												"IVR_HUGO_USAGE",
												"OUTBOUND_CORRESPONDENCE",
												"MARKETING_MATERIALS",
												"TEXTS",
											],
										},
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										audience: {
											type: "string",
											enum: [
												"CALL_CENTER",
												"CLIENT_PORTAL",
												"GUARDIAN_ONLINE",
												"GPAC",
												"SMART_OFFICE",
												"LIVING_BALANCE_SHEET",
											],
										},
										output: {
											type: "string",
											enum: [
												"CALLS",
												"CHATS",
												"EMAILS",
												"WEB_USAGE",
												"IVR_HUGO_USAGE",
												"OUTBOUND_CORRESPONDENCE",
												"MARKETING_MATERIALS",
												"TEXTS",
											],
										},
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_aggregateFilter"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/AggregateInteraction": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_aggregateInteraction: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										interactionType: { type: "integer" },
										content: { type: "integer" },
										timestamp: { type: "integer" },
										userId: { type: "integer" },
										widgetId: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "interactionType", "content", "timestamp", "userId", "widgetId", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										interactionType: {
											type: "string",
											enum: [
												"CALL",
												"CHAT",
												"EMAIL",
												"WEB_USAGE",
												"IVR_HUGO_USAGE",
												"OUTBOUND_CORRESPONDENCE",
												"MARKETING_MATERIAL",
												"TEXT",
											],
										},
										content: { type: "string" },
										timestamp: { type: "string" },
										userId: { type: "string" },
										widgetId: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										interactionType: {
											type: "string",
											enum: [
												"CALL",
												"CHAT",
												"EMAIL",
												"WEB_USAGE",
												"IVR_HUGO_USAGE",
												"OUTBOUND_CORRESPONDENCE",
												"MARKETING_MATERIAL",
												"TEXT",
											],
										},
										content: { type: "string" },
										timestamp: { type: "string" },
										userId: { type: "string" },
										widgetId: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_aggregateInteraction"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/AggregateSession": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_aggregateSession: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										sessionToken: { type: "integer" },
										userId: { type: "integer" },
										expires: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "sessionToken", "userId", "expires", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										sessionToken: { type: "string" },
										userId: { type: "string" },
										expires: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										sessionToken: { type: "string" },
										userId: { type: "string" },
										expires: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_aggregateSession"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/AggregateUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_aggregateUser: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										name: { type: "integer" },
										email: { type: "integer" },
										emailVerified: { type: "integer" },
										image: { type: "integer" },
										createdAt: { type: "integer" },
										updatedAt: { type: "integer" },
										userType: { type: "integer" },
										stripeCustomerId: { type: "integer" },
										stripeSubscriptionId: { type: "integer" },
										stripePriceId: { type: "integer" },
										stripeCurrentPeriodEnd: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: [
										"id",
										"name",
										"email",
										"emailVerified",
										"image",
										"createdAt",
										"updatedAt",
										"userType",
										"stripeCustomerId",
										"stripeSubscriptionId",
										"stripePriceId",
										"stripeCurrentPeriodEnd",
										"_all",
									],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_aggregateUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/AggregateVerificationToken": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_VerificationTokenOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_VerificationTokenWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						identifier: { $ref: "#/definitions/customerCommunication_StringFilter" },
						token: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_VerificationTokenOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: {
							$ref: "#/definitions/customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput",
						},
					},
				},
				customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_aggregateVerificationToken: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										identifier: { type: "integer" },
										token: { type: "integer" },
										expires: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["identifier", "token", "expires", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										identifier: { type: "string" },
										token: { type: "string" },
										expires: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										identifier: { type: "string" },
										token: { type: "string" },
										expires: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_aggregateVerificationToken"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/AggregateWidget": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_aggregateWidget: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: { id: { type: "integer" }, embeddedIn: { type: "integer" }, _all: { type: "integer" } },
									additionalProperties: false,
									required: ["id", "embeddedIn", "_all"],
								},
								_min: {
									type: "object",
									properties: { id: { type: "string" }, embeddedIn: { type: "string" } },
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: { id: { type: "string" }, embeddedIn: { type: "string" } },
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_aggregateWidget"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindFirstAccount": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findFirstAccount_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findFirstAccount_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstAccount_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findFirstAccount_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findFirstAccount_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstAccount_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findFirstAccount_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findFirstAccount_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstAccount_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findFirstAccount_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_findFirstAccount_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstAccount_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findFirstAccount: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindFirstAccountOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findFirstAccountOrThrow_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findFirstAccountOrThrow_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstAccountOrThrow_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findFirstAccountOrThrow_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findFirstAccountOrThrow_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstAccountOrThrow_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findFirstAccountOrThrow_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findFirstAccountOrThrow_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstAccountOrThrow_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findFirstAccountOrThrow_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_findFirstAccountOrThrow_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstAccountOrThrow_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findFirstAccountOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindFirstFilter": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_FilterOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_FilterWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_FilterScalarFieldEnum",
						enum: ["id", "audience", "output"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_FilterWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_FilterWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						audience: { $ref: "#/definitions/customerCommunication_EnumAudienceTypeFilter" },
						output: { $ref: "#/definitions/customerCommunication_EnumOutputTypeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumAudienceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
					},
				},
				customerCommunication_EnumOutputTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
					},
				},
				customerCommunication_FilterOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						audience: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						output: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_FilterWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findFirstFilter: {
							type: "object",
							properties: {
								id: { type: "string" },
								audience: {
									type: "string",
									enum: [
										"CALL_CENTER",
										"CLIENT_PORTAL",
										"GUARDIAN_ONLINE",
										"GPAC",
										"SMART_OFFICE",
										"LIVING_BALANCE_SHEET",
									],
								},
								output: {
									type: "string",
									enum: [
										"CALLS",
										"CHATS",
										"EMAILS",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIALS",
										"TEXTS",
									],
								},
							},
							additionalProperties: false,
							required: ["id", "audience", "output"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindFirstFilterOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_FilterOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_FilterWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_FilterScalarFieldEnum",
						enum: ["id", "audience", "output"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_FilterWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_FilterWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						audience: { $ref: "#/definitions/customerCommunication_EnumAudienceTypeFilter" },
						output: { $ref: "#/definitions/customerCommunication_EnumOutputTypeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumAudienceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
					},
				},
				customerCommunication_EnumOutputTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
					},
				},
				customerCommunication_FilterOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						audience: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						output: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_FilterWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findFirstFilterOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								audience: {
									type: "string",
									enum: [
										"CALL_CENTER",
										"CLIENT_PORTAL",
										"GUARDIAN_ONLINE",
										"GPAC",
										"SMART_OFFICE",
										"LIVING_BALANCE_SHEET",
									],
								},
								output: {
									type: "string",
									enum: [
										"CALLS",
										"CHATS",
										"EMAILS",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIALS",
										"TEXTS",
									],
								},
							},
							additionalProperties: false,
							required: ["id", "audience", "output"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindFirstInteraction": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findFirstInteraction_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findFirstInteraction_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findFirstInteraction_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findFirstInteraction_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_findFirstInteraction_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstInteraction_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findFirstInteraction_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findFirstInteraction_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstInteraction_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findFirstInteraction_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_findFirstInteraction_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstInteraction_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findFirstInteraction: {
							type: "object",
							properties: {
								id: { type: "string" },
								interactionType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								content: { type: "string" },
								timestamp: { type: "string" },
								userId: { type: "string" },
								widgetId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
								Widget: {
									type: "object",
									properties: {
										id: { type: "string" },
										embeddedIn: { type: "string" },
										_count: {
											type: "object",
											properties: { interactions: { type: "integer" } },
											additionalProperties: false,
											required: ["interactions"],
										},
									},
									additionalProperties: false,
									required: ["id", "embeddedIn", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindFirstInteractionOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findFirstInteractionOrThrow_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findFirstInteractionOrThrow_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findFirstInteractionOrThrow_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findFirstInteractionOrThrow_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_findFirstInteractionOrThrow_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstInteractionOrThrow_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findFirstInteractionOrThrow_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findFirstInteractionOrThrow_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstInteractionOrThrow_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findFirstInteractionOrThrow_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_findFirstInteractionOrThrow_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstInteractionOrThrow_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findFirstInteractionOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								interactionType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								content: { type: "string" },
								timestamp: { type: "string" },
								userId: { type: "string" },
								widgetId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
								Widget: {
									type: "object",
									properties: {
										id: { type: "string" },
										embeddedIn: { type: "string" },
										_count: {
											type: "object",
											properties: { interactions: { type: "integer" } },
											additionalProperties: false,
											required: ["interactions"],
										},
									},
									additionalProperties: false,
									required: ["id", "embeddedIn", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindFirstSession": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				customerCommunication_findFirstSession_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findFirstSession_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstSession_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findFirstSession_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findFirstSession_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstSession_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findFirstSession_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findFirstSession_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findFirstSession_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findFirstSession_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_findFirstSession_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstSession_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findFirstSession: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindFirstSessionOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				customerCommunication_findFirstSessionOrThrow_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findFirstSessionOrThrow_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstSessionOrThrow_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findFirstSessionOrThrow_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findFirstSessionOrThrow_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstSessionOrThrow_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findFirstSessionOrThrow_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findFirstSessionOrThrow_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findFirstSessionOrThrow_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findFirstSessionOrThrow_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_findFirstSessionOrThrow_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstSessionOrThrow_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findFirstSessionOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindFirstUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_UserScalarFieldEnum",
						enum: [
							"id",
							"name",
							"email",
							"emailVerified",
							"image",
							"createdAt",
							"updatedAt",
							"userType",
							"stripeCustomerId",
							"stripeSubscriptionId",
							"stripePriceId",
							"stripeCurrentPeriodEnd",
						],
					},
				},
				customerCommunication_findFirstUser_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findFirstUser_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstUser_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findFirstUser_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findFirstUser_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstUser_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findFirstUser_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findFirstUser_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findFirstUser_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findFirstUser_accounts_take: { type: ["integer", "null"] },
				customerCommunication_findFirstUser_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstUser_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findFirstUser_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findFirstUser_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstUser_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findFirstUser_sessions_take: { type: ["integer", "null"] },
				customerCommunication_findFirstUser_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstUser_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findFirstUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											Widget: {
												type: "object",
												properties: {
													id: { type: "string" },
													embeddedIn: { type: "string" },
													_count: {
														type: "object",
														properties: { interactions: { type: "integer" } },
														additionalProperties: false,
														required: ["interactions"],
													},
												},
												additionalProperties: false,
												required: ["id", "embeddedIn", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId"],
									},
								},
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								_count: {
									type: "object",
									properties: {
										interactions: { type: "integer" },
										accounts: { type: "integer" },
										sessions: { type: "integer" },
									},
									additionalProperties: false,
									required: ["interactions", "accounts", "sessions"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindFirstUserOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_UserScalarFieldEnum",
						enum: [
							"id",
							"name",
							"email",
							"emailVerified",
							"image",
							"createdAt",
							"updatedAt",
							"userType",
							"stripeCustomerId",
							"stripeSubscriptionId",
							"stripePriceId",
							"stripeCurrentPeriodEnd",
						],
					},
				},
				customerCommunication_findFirstUserOrThrow_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findFirstUserOrThrow_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstUserOrThrow_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findFirstUserOrThrow_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findFirstUserOrThrow_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstUserOrThrow_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findFirstUserOrThrow_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findFirstUserOrThrow_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findFirstUserOrThrow_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findFirstUserOrThrow_accounts_take: { type: ["integer", "null"] },
				customerCommunication_findFirstUserOrThrow_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstUserOrThrow_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findFirstUserOrThrow_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findFirstUserOrThrow_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstUserOrThrow_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findFirstUserOrThrow_sessions_take: { type: ["integer", "null"] },
				customerCommunication_findFirstUserOrThrow_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstUserOrThrow_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findFirstUserOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											Widget: {
												type: "object",
												properties: {
													id: { type: "string" },
													embeddedIn: { type: "string" },
													_count: {
														type: "object",
														properties: { interactions: { type: "integer" } },
														additionalProperties: false,
														required: ["interactions"],
													},
												},
												additionalProperties: false,
												required: ["id", "embeddedIn", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId"],
									},
								},
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								_count: {
									type: "object",
									properties: {
										interactions: { type: "integer" },
										accounts: { type: "integer" },
										sessions: { type: "integer" },
									},
									additionalProperties: false,
									required: ["interactions", "accounts", "sessions"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindFirstVerificationToken": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_VerificationTokenOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_VerificationTokenScalarFieldEnum",
						enum: ["identifier", "token", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_VerificationTokenWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						identifier: { $ref: "#/definitions/customerCommunication_StringFilter" },
						token: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_VerificationTokenOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: {
							$ref: "#/definitions/customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput",
						},
					},
				},
				customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findFirstVerificationToken: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindFirstVerificationTokenOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_VerificationTokenOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_VerificationTokenScalarFieldEnum",
						enum: ["identifier", "token", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_VerificationTokenWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						identifier: { $ref: "#/definitions/customerCommunication_StringFilter" },
						token: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_VerificationTokenOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: {
							$ref: "#/definitions/customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput",
						},
					},
				},
				customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findFirstVerificationTokenOrThrow: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindFirstWidget": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_WidgetScalarFieldEnum",
						enum: ["id", "embeddedIn"],
					},
				},
				customerCommunication_findFirstWidget_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findFirstWidget_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstWidget_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findFirstWidget_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findFirstWidget_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstWidget_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findFirstWidget_interactions_interactions_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findFirstWidget_interactions_interactions_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findFirstWidget_interactions_interactions_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findFirstWidget_interactions_interactions_user_user_accounts_take: {
					type: ["integer", "null"],
				},
				customerCommunication_findFirstWidget_interactions_interactions_user_user_accounts_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_findFirstWidget_interactions_interactions_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findFirstWidget_interactions_interactions_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findFirstWidget_interactions_interactions_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstWidget_interactions_interactions_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findFirstWidget_interactions_interactions_user_user_sessions_take: {
					type: ["integer", "null"],
				},
				customerCommunication_findFirstWidget_interactions_interactions_user_user_sessions_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_findFirstWidget_interactions_interactions_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findFirstWidget: {
							type: "object",
							properties: {
								id: { type: "string" },
								embeddedIn: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											user: {
												type: "object",
												properties: {
													id: { type: "string" },
													name: { type: "string" },
													email: { type: "string" },
													emailVerified: { type: "string" },
													image: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
													stripeCustomerId: { type: "string" },
													stripeSubscriptionId: { type: "string" },
													stripePriceId: { type: "string" },
													stripeCurrentPeriodEnd: { type: "string" },
													accounts: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																userId: { type: "string" },
																type: { type: "string" },
																provider: { type: "string" },
																providerAccountId: { type: "string" },
																refresh_token: { type: "string" },
																access_token: { type: "string" },
																expires_at: { type: "integer" },
																token_type: { type: "string" },
																scope: { type: "string" },
																id_token: { type: "string" },
																session_state: { type: "string" },
																createdAt: { type: "string" },
																updatedAt: { type: "string" },
															},
															additionalProperties: false,
															required: [
																"id",
																"userId",
																"type",
																"provider",
																"providerAccountId",
																"createdAt",
																"updatedAt",
															],
														},
													},
													sessions: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																sessionToken: { type: "string" },
																userId: { type: "string" },
																expires: { type: "string" },
															},
															additionalProperties: false,
															required: ["id", "sessionToken", "userId", "expires"],
														},
													},
													_count: {
														type: "object",
														properties: {
															interactions: { type: "integer" },
															accounts: { type: "integer" },
															sessions: { type: "integer" },
														},
														additionalProperties: false,
														required: ["interactions", "accounts", "sessions"],
													},
												},
												additionalProperties: false,
												required: ["id", "createdAt", "updatedAt", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
									},
								},
								_count: {
									type: "object",
									properties: { interactions: { type: "integer" } },
									additionalProperties: false,
									required: ["interactions"],
								},
							},
							additionalProperties: false,
							required: ["id", "embeddedIn", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindFirstWidgetOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_WidgetScalarFieldEnum",
						enum: ["id", "embeddedIn"],
					},
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findFirstWidgetOrThrow_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findFirstWidgetOrThrow_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_take: {
					type: ["integer", "null"],
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_take: {
					type: ["integer", "null"],
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findFirstWidgetOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								embeddedIn: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											user: {
												type: "object",
												properties: {
													id: { type: "string" },
													name: { type: "string" },
													email: { type: "string" },
													emailVerified: { type: "string" },
													image: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
													stripeCustomerId: { type: "string" },
													stripeSubscriptionId: { type: "string" },
													stripePriceId: { type: "string" },
													stripeCurrentPeriodEnd: { type: "string" },
													accounts: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																userId: { type: "string" },
																type: { type: "string" },
																provider: { type: "string" },
																providerAccountId: { type: "string" },
																refresh_token: { type: "string" },
																access_token: { type: "string" },
																expires_at: { type: "integer" },
																token_type: { type: "string" },
																scope: { type: "string" },
																id_token: { type: "string" },
																session_state: { type: "string" },
																createdAt: { type: "string" },
																updatedAt: { type: "string" },
															},
															additionalProperties: false,
															required: [
																"id",
																"userId",
																"type",
																"provider",
																"providerAccountId",
																"createdAt",
																"updatedAt",
															],
														},
													},
													sessions: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																sessionToken: { type: "string" },
																userId: { type: "string" },
																expires: { type: "string" },
															},
															additionalProperties: false,
															required: ["id", "sessionToken", "userId", "expires"],
														},
													},
													_count: {
														type: "object",
														properties: {
															interactions: { type: "integer" },
															accounts: { type: "integer" },
															sessions: { type: "integer" },
														},
														additionalProperties: false,
														required: ["interactions", "accounts", "sessions"],
													},
												},
												additionalProperties: false,
												required: ["id", "createdAt", "updatedAt", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
									},
								},
								_count: {
									type: "object",
									properties: { interactions: { type: "integer" } },
									additionalProperties: false,
									required: ["interactions"],
								},
							},
							additionalProperties: false,
							required: ["id", "embeddedIn", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindManyAccount": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findManyAccount_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findManyAccount_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findManyAccount_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findManyAccount_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findManyAccount_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findManyAccount_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findManyAccount_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findManyAccount_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findManyAccount_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findManyAccount_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_findManyAccount_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_findManyAccount_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findManyAccount: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									userId: { type: "string" },
									type: { type: "string" },
									provider: { type: "string" },
									providerAccountId: { type: "string" },
									refresh_token: { type: "string" },
									access_token: { type: "string" },
									expires_at: { type: "integer" },
									token_type: { type: "string" },
									scope: { type: "string" },
									id_token: { type: "string" },
									session_state: { type: "string" },
									createdAt: { type: "string" },
									updatedAt: { type: "string" },
									user: {
										type: "object",
										properties: {
											id: { type: "string" },
											name: { type: "string" },
											email: { type: "string" },
											emailVerified: { type: "string" },
											image: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
											stripeCustomerId: { type: "string" },
											stripeSubscriptionId: { type: "string" },
											stripePriceId: { type: "string" },
											stripeCurrentPeriodEnd: { type: "string" },
											interactions: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														interactionType: {
															type: "string",
															enum: [
																"CALL",
																"CHAT",
																"EMAIL",
																"WEB_USAGE",
																"IVR_HUGO_USAGE",
																"OUTBOUND_CORRESPONDENCE",
																"MARKETING_MATERIAL",
																"TEXT",
															],
														},
														content: { type: "string" },
														timestamp: { type: "string" },
														userId: { type: "string" },
														widgetId: { type: "string" },
														Widget: {
															type: "object",
															properties: {
																id: { type: "string" },
																embeddedIn: { type: "string" },
																_count: {
																	type: "object",
																	properties: { interactions: { type: "integer" } },
																	additionalProperties: false,
																	required: ["interactions"],
																},
															},
															additionalProperties: false,
															required: ["id", "embeddedIn", "_count"],
														},
													},
													additionalProperties: false,
													required: ["id", "interactionType", "content", "timestamp", "userId"],
												},
											},
											sessions: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														sessionToken: { type: "string" },
														userId: { type: "string" },
														expires: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "sessionToken", "userId", "expires"],
												},
											},
											_count: {
												type: "object",
												properties: {
													interactions: { type: "integer" },
													accounts: { type: "integer" },
													sessions: { type: "integer" },
												},
												additionalProperties: false,
												required: ["interactions", "accounts", "sessions"],
											},
										},
										additionalProperties: false,
										required: ["id", "createdAt", "updatedAt", "_count"],
									},
								},
								additionalProperties: false,
								required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_findManyAccount"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindManyFilter": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_FilterOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_FilterWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_FilterScalarFieldEnum",
						enum: ["id", "audience", "output"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_FilterWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_FilterWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						audience: { $ref: "#/definitions/customerCommunication_EnumAudienceTypeFilter" },
						output: { $ref: "#/definitions/customerCommunication_EnumOutputTypeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumAudienceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
					},
				},
				customerCommunication_EnumOutputTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
					},
				},
				customerCommunication_FilterOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						audience: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						output: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_FilterWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findManyFilter: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									audience: {
										type: "string",
										enum: [
											"CALL_CENTER",
											"CLIENT_PORTAL",
											"GUARDIAN_ONLINE",
											"GPAC",
											"SMART_OFFICE",
											"LIVING_BALANCE_SHEET",
										],
									},
									output: {
										type: "string",
										enum: [
											"CALLS",
											"CHATS",
											"EMAILS",
											"WEB_USAGE",
											"IVR_HUGO_USAGE",
											"OUTBOUND_CORRESPONDENCE",
											"MARKETING_MATERIALS",
											"TEXTS",
										],
									},
								},
								additionalProperties: false,
								required: ["id", "audience", "output"],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_findManyFilter"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindManyInteraction": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findManyInteraction_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findManyInteraction_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findManyInteraction_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findManyInteraction_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_findManyInteraction_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_findManyInteraction_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findManyInteraction_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findManyInteraction_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findManyInteraction_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findManyInteraction_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_findManyInteraction_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_findManyInteraction_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findManyInteraction: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									interactionType: {
										type: "string",
										enum: [
											"CALL",
											"CHAT",
											"EMAIL",
											"WEB_USAGE",
											"IVR_HUGO_USAGE",
											"OUTBOUND_CORRESPONDENCE",
											"MARKETING_MATERIAL",
											"TEXT",
										],
									},
									content: { type: "string" },
									timestamp: { type: "string" },
									userId: { type: "string" },
									widgetId: { type: "string" },
									user: {
										type: "object",
										properties: {
											id: { type: "string" },
											name: { type: "string" },
											email: { type: "string" },
											emailVerified: { type: "string" },
											image: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
											stripeCustomerId: { type: "string" },
											stripeSubscriptionId: { type: "string" },
											stripePriceId: { type: "string" },
											stripeCurrentPeriodEnd: { type: "string" },
											accounts: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														userId: { type: "string" },
														type: { type: "string" },
														provider: { type: "string" },
														providerAccountId: { type: "string" },
														refresh_token: { type: "string" },
														access_token: { type: "string" },
														expires_at: { type: "integer" },
														token_type: { type: "string" },
														scope: { type: "string" },
														id_token: { type: "string" },
														session_state: { type: "string" },
														createdAt: { type: "string" },
														updatedAt: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
												},
											},
											sessions: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														sessionToken: { type: "string" },
														userId: { type: "string" },
														expires: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "sessionToken", "userId", "expires"],
												},
											},
											_count: {
												type: "object",
												properties: {
													interactions: { type: "integer" },
													accounts: { type: "integer" },
													sessions: { type: "integer" },
												},
												additionalProperties: false,
												required: ["interactions", "accounts", "sessions"],
											},
										},
										additionalProperties: false,
										required: ["id", "createdAt", "updatedAt", "_count"],
									},
									Widget: {
										type: "object",
										properties: {
											id: { type: "string" },
											embeddedIn: { type: "string" },
											_count: {
												type: "object",
												properties: { interactions: { type: "integer" } },
												additionalProperties: false,
												required: ["interactions"],
											},
										},
										additionalProperties: false,
										required: ["id", "embeddedIn", "_count"],
									},
								},
								additionalProperties: false,
								required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_findManyInteraction"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindManySession": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				customerCommunication_findManySession_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findManySession_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findManySession_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findManySession_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findManySession_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findManySession_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findManySession_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findManySession_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findManySession_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findManySession_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_findManySession_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_findManySession_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findManySession: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									sessionToken: { type: "string" },
									userId: { type: "string" },
									expires: { type: "string" },
									user: {
										type: "object",
										properties: {
											id: { type: "string" },
											name: { type: "string" },
											email: { type: "string" },
											emailVerified: { type: "string" },
											image: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
											stripeCustomerId: { type: "string" },
											stripeSubscriptionId: { type: "string" },
											stripePriceId: { type: "string" },
											stripeCurrentPeriodEnd: { type: "string" },
											interactions: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														interactionType: {
															type: "string",
															enum: [
																"CALL",
																"CHAT",
																"EMAIL",
																"WEB_USAGE",
																"IVR_HUGO_USAGE",
																"OUTBOUND_CORRESPONDENCE",
																"MARKETING_MATERIAL",
																"TEXT",
															],
														},
														content: { type: "string" },
														timestamp: { type: "string" },
														userId: { type: "string" },
														widgetId: { type: "string" },
														Widget: {
															type: "object",
															properties: {
																id: { type: "string" },
																embeddedIn: { type: "string" },
																_count: {
																	type: "object",
																	properties: { interactions: { type: "integer" } },
																	additionalProperties: false,
																	required: ["interactions"],
																},
															},
															additionalProperties: false,
															required: ["id", "embeddedIn", "_count"],
														},
													},
													additionalProperties: false,
													required: ["id", "interactionType", "content", "timestamp", "userId"],
												},
											},
											accounts: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														userId: { type: "string" },
														type: { type: "string" },
														provider: { type: "string" },
														providerAccountId: { type: "string" },
														refresh_token: { type: "string" },
														access_token: { type: "string" },
														expires_at: { type: "integer" },
														token_type: { type: "string" },
														scope: { type: "string" },
														id_token: { type: "string" },
														session_state: { type: "string" },
														createdAt: { type: "string" },
														updatedAt: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
												},
											},
											_count: {
												type: "object",
												properties: {
													interactions: { type: "integer" },
													accounts: { type: "integer" },
													sessions: { type: "integer" },
												},
												additionalProperties: false,
												required: ["interactions", "accounts", "sessions"],
											},
										},
										additionalProperties: false,
										required: ["id", "createdAt", "updatedAt", "_count"],
									},
								},
								additionalProperties: false,
								required: ["id", "sessionToken", "userId", "expires", "user"],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_findManySession"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindManyUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_UserScalarFieldEnum",
						enum: [
							"id",
							"name",
							"email",
							"emailVerified",
							"image",
							"createdAt",
							"updatedAt",
							"userType",
							"stripeCustomerId",
							"stripeSubscriptionId",
							"stripePriceId",
							"stripeCurrentPeriodEnd",
						],
					},
				},
				customerCommunication_findManyUser_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findManyUser_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findManyUser_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findManyUser_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findManyUser_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findManyUser_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findManyUser_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findManyUser_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findManyUser_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findManyUser_accounts_take: { type: ["integer", "null"] },
				customerCommunication_findManyUser_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_findManyUser_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findManyUser_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findManyUser_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findManyUser_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findManyUser_sessions_take: { type: ["integer", "null"] },
				customerCommunication_findManyUser_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_findManyUser_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findManyUser: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									name: { type: "string" },
									email: { type: "string" },
									emailVerified: { type: "string" },
									image: { type: "string" },
									createdAt: { type: "string" },
									updatedAt: { type: "string" },
									userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
									stripeCustomerId: { type: "string" },
									stripeSubscriptionId: { type: "string" },
									stripePriceId: { type: "string" },
									stripeCurrentPeriodEnd: { type: "string" },
									interactions: {
										type: "array",
										items: {
											type: "object",
											properties: {
												id: { type: "string" },
												interactionType: {
													type: "string",
													enum: [
														"CALL",
														"CHAT",
														"EMAIL",
														"WEB_USAGE",
														"IVR_HUGO_USAGE",
														"OUTBOUND_CORRESPONDENCE",
														"MARKETING_MATERIAL",
														"TEXT",
													],
												},
												content: { type: "string" },
												timestamp: { type: "string" },
												userId: { type: "string" },
												widgetId: { type: "string" },
												Widget: {
													type: "object",
													properties: {
														id: { type: "string" },
														embeddedIn: { type: "string" },
														_count: {
															type: "object",
															properties: { interactions: { type: "integer" } },
															additionalProperties: false,
															required: ["interactions"],
														},
													},
													additionalProperties: false,
													required: ["id", "embeddedIn", "_count"],
												},
											},
											additionalProperties: false,
											required: ["id", "interactionType", "content", "timestamp", "userId"],
										},
									},
									accounts: {
										type: "array",
										items: {
											type: "object",
											properties: {
												id: { type: "string" },
												userId: { type: "string" },
												type: { type: "string" },
												provider: { type: "string" },
												providerAccountId: { type: "string" },
												refresh_token: { type: "string" },
												access_token: { type: "string" },
												expires_at: { type: "integer" },
												token_type: { type: "string" },
												scope: { type: "string" },
												id_token: { type: "string" },
												session_state: { type: "string" },
												createdAt: { type: "string" },
												updatedAt: { type: "string" },
											},
											additionalProperties: false,
											required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
										},
									},
									sessions: {
										type: "array",
										items: {
											type: "object",
											properties: {
												id: { type: "string" },
												sessionToken: { type: "string" },
												userId: { type: "string" },
												expires: { type: "string" },
											},
											additionalProperties: false,
											required: ["id", "sessionToken", "userId", "expires"],
										},
									},
									_count: {
										type: "object",
										properties: {
											interactions: { type: "integer" },
											accounts: { type: "integer" },
											sessions: { type: "integer" },
										},
										additionalProperties: false,
										required: ["interactions", "accounts", "sessions"],
									},
								},
								additionalProperties: false,
								required: ["id", "createdAt", "updatedAt", "_count"],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_findManyUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindManyVerificationToken": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_VerificationTokenOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_VerificationTokenScalarFieldEnum",
						enum: ["identifier", "token", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_VerificationTokenWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						identifier: { $ref: "#/definitions/customerCommunication_StringFilter" },
						token: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_VerificationTokenOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: {
							$ref: "#/definitions/customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput",
						},
					},
				},
				customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findManyVerificationToken: {
							type: "array",
							items: {
								type: "object",
								properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
								additionalProperties: false,
								required: ["identifier", "token", "expires"],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_findManyVerificationToken"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindManyWidget": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_WidgetScalarFieldEnum",
						enum: ["id", "embeddedIn"],
					},
				},
				customerCommunication_findManyWidget_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findManyWidget_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findManyWidget_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findManyWidget_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findManyWidget_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findManyWidget_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findManyWidget_interactions_interactions_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findManyWidget_interactions_interactions_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findManyWidget_interactions_interactions_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findManyWidget_interactions_interactions_user_user_accounts_take: {
					type: ["integer", "null"],
				},
				customerCommunication_findManyWidget_interactions_interactions_user_user_accounts_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_findManyWidget_interactions_interactions_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findManyWidget_interactions_interactions_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findManyWidget_interactions_interactions_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findManyWidget_interactions_interactions_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findManyWidget_interactions_interactions_user_user_sessions_take: {
					type: ["integer", "null"],
				},
				customerCommunication_findManyWidget_interactions_interactions_user_user_sessions_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_findManyWidget_interactions_interactions_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findManyWidget: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									embeddedIn: { type: "string" },
									interactions: {
										type: "array",
										items: {
											type: "object",
											properties: {
												id: { type: "string" },
												interactionType: {
													type: "string",
													enum: [
														"CALL",
														"CHAT",
														"EMAIL",
														"WEB_USAGE",
														"IVR_HUGO_USAGE",
														"OUTBOUND_CORRESPONDENCE",
														"MARKETING_MATERIAL",
														"TEXT",
													],
												},
												content: { type: "string" },
												timestamp: { type: "string" },
												userId: { type: "string" },
												widgetId: { type: "string" },
												user: {
													type: "object",
													properties: {
														id: { type: "string" },
														name: { type: "string" },
														email: { type: "string" },
														emailVerified: { type: "string" },
														image: { type: "string" },
														createdAt: { type: "string" },
														updatedAt: { type: "string" },
														userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
														stripeCustomerId: { type: "string" },
														stripeSubscriptionId: { type: "string" },
														stripePriceId: { type: "string" },
														stripeCurrentPeriodEnd: { type: "string" },
														accounts: {
															type: "array",
															items: {
																type: "object",
																properties: {
																	id: { type: "string" },
																	userId: { type: "string" },
																	type: { type: "string" },
																	provider: { type: "string" },
																	providerAccountId: { type: "string" },
																	refresh_token: { type: "string" },
																	access_token: { type: "string" },
																	expires_at: { type: "integer" },
																	token_type: { type: "string" },
																	scope: { type: "string" },
																	id_token: { type: "string" },
																	session_state: { type: "string" },
																	createdAt: { type: "string" },
																	updatedAt: { type: "string" },
																},
																additionalProperties: false,
																required: [
																	"id",
																	"userId",
																	"type",
																	"provider",
																	"providerAccountId",
																	"createdAt",
																	"updatedAt",
																],
															},
														},
														sessions: {
															type: "array",
															items: {
																type: "object",
																properties: {
																	id: { type: "string" },
																	sessionToken: { type: "string" },
																	userId: { type: "string" },
																	expires: { type: "string" },
																},
																additionalProperties: false,
																required: ["id", "sessionToken", "userId", "expires"],
															},
														},
														_count: {
															type: "object",
															properties: {
																interactions: { type: "integer" },
																accounts: { type: "integer" },
																sessions: { type: "integer" },
															},
															additionalProperties: false,
															required: ["interactions", "accounts", "sessions"],
														},
													},
													additionalProperties: false,
													required: ["id", "createdAt", "updatedAt", "_count"],
												},
											},
											additionalProperties: false,
											required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
										},
									},
									_count: {
										type: "object",
										properties: { interactions: { type: "integer" } },
										additionalProperties: false,
										required: ["interactions"],
									},
								},
								additionalProperties: false,
								required: ["id", "embeddedIn", "_count"],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_findManyWidget"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindUniqueAccount": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
				customerCommunication_findUniqueAccount_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findUniqueAccount_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueAccount_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findUniqueAccount_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueAccount_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueAccount_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findUniqueAccount_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findUniqueAccount_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueAccount_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findUniqueAccount_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueAccount_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueAccount_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findUniqueAccount: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindUniqueAccountOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
				customerCommunication_findUniqueAccountOrThrow_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findUniqueAccountOrThrow_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueAccountOrThrow_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findUniqueAccountOrThrow_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueAccountOrThrow_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueAccountOrThrow_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findUniqueAccountOrThrow_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findUniqueAccountOrThrow_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueAccountOrThrow_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findUniqueAccountOrThrow_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueAccountOrThrow_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueAccountOrThrow_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findUniqueAccountOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindUniqueFilter": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/customerCommunication_FilterWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_FilterWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findUniqueFilter: {
							type: "object",
							properties: {
								id: { type: "string" },
								audience: {
									type: "string",
									enum: [
										"CALL_CENTER",
										"CLIENT_PORTAL",
										"GUARDIAN_ONLINE",
										"GPAC",
										"SMART_OFFICE",
										"LIVING_BALANCE_SHEET",
									],
								},
								output: {
									type: "string",
									enum: [
										"CALLS",
										"CHATS",
										"EMAILS",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIALS",
										"TEXTS",
									],
								},
							},
							additionalProperties: false,
							required: ["id", "audience", "output"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindUniqueFilterOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/customerCommunication_FilterWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_FilterWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findUniqueFilterOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								audience: {
									type: "string",
									enum: [
										"CALL_CENTER",
										"CLIENT_PORTAL",
										"GUARDIAN_ONLINE",
										"GPAC",
										"SMART_OFFICE",
										"LIVING_BALANCE_SHEET",
									],
								},
								output: {
									type: "string",
									enum: [
										"CALLS",
										"CHATS",
										"EMAILS",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIALS",
										"TEXTS",
									],
								},
							},
							additionalProperties: false,
							required: ["id", "audience", "output"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindUniqueInteraction": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
				customerCommunication_findUniqueInteraction_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findUniqueInteraction_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueInteraction_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findUniqueInteraction_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueInteraction_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueInteraction_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findUniqueInteraction_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findUniqueInteraction_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueInteraction_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findUniqueInteraction_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueInteraction_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueInteraction_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findUniqueInteraction: {
							type: "object",
							properties: {
								id: { type: "string" },
								interactionType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								content: { type: "string" },
								timestamp: { type: "string" },
								userId: { type: "string" },
								widgetId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
								Widget: {
									type: "object",
									properties: {
										id: { type: "string" },
										embeddedIn: { type: "string" },
										_count: {
											type: "object",
											properties: { interactions: { type: "integer" } },
											additionalProperties: false,
											required: ["interactions"],
										},
									},
									additionalProperties: false,
									required: ["id", "embeddedIn", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindUniqueInteractionOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
				customerCommunication_findUniqueInteractionOrThrow_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findUniqueInteractionOrThrow_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueInteractionOrThrow_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findUniqueInteractionOrThrow_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueInteractionOrThrow_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueInteractionOrThrow_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findUniqueInteractionOrThrow_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findUniqueInteractionOrThrow_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueInteractionOrThrow_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findUniqueInteractionOrThrow_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueInteractionOrThrow_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueInteractionOrThrow_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findUniqueInteractionOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								interactionType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								content: { type: "string" },
								timestamp: { type: "string" },
								userId: { type: "string" },
								widgetId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
								Widget: {
									type: "object",
									properties: {
										id: { type: "string" },
										embeddedIn: { type: "string" },
										_count: {
											type: "object",
											properties: { interactions: { type: "integer" } },
											additionalProperties: false,
											required: ["interactions"],
										},
									},
									additionalProperties: false,
									required: ["id", "embeddedIn", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindUniqueSession": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
				customerCommunication_findUniqueSession_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findUniqueSession_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueSession_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findUniqueSession_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueSession_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueSession_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findUniqueSession_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findUniqueSession_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueSession_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findUniqueSession_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueSession_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueSession_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findUniqueSession: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindUniqueSessionOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
				customerCommunication_findUniqueSessionOrThrow_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findUniqueSessionOrThrow_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueSessionOrThrow_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findUniqueSessionOrThrow_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueSessionOrThrow_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueSessionOrThrow_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findUniqueSessionOrThrow_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findUniqueSessionOrThrow_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueSessionOrThrow_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findUniqueSessionOrThrow_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueSessionOrThrow_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueSessionOrThrow_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findUniqueSessionOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindUniqueUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
				customerCommunication_findUniqueUser_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findUniqueUser_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueUser_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findUniqueUser_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueUser_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueUser_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findUniqueUser_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findUniqueUser_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueUser_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findUniqueUser_accounts_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueUser_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueUser_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findUniqueUser_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findUniqueUser_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueUser_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findUniqueUser_sessions_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueUser_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueUser_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findUniqueUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											Widget: {
												type: "object",
												properties: {
													id: { type: "string" },
													embeddedIn: { type: "string" },
													_count: {
														type: "object",
														properties: { interactions: { type: "integer" } },
														additionalProperties: false,
														required: ["interactions"],
													},
												},
												additionalProperties: false,
												required: ["id", "embeddedIn", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId"],
									},
								},
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								_count: {
									type: "object",
									properties: {
										interactions: { type: "integer" },
										accounts: { type: "integer" },
										sessions: { type: "integer" },
									},
									additionalProperties: false,
									required: ["interactions", "accounts", "sessions"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindUniqueUserOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
				customerCommunication_findUniqueUserOrThrow_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findUniqueUserOrThrow_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueUserOrThrow_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findUniqueUserOrThrow_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueUserOrThrow_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueUserOrThrow_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findUniqueUserOrThrow_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findUniqueUserOrThrow_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueUserOrThrow_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findUniqueUserOrThrow_accounts_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueUserOrThrow_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueUserOrThrow_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findUniqueUserOrThrow_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findUniqueUserOrThrow_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueUserOrThrow_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findUniqueUserOrThrow_sessions_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueUserOrThrow_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueUserOrThrow_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findUniqueUserOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											Widget: {
												type: "object",
												properties: {
													id: { type: "string" },
													embeddedIn: { type: "string" },
													_count: {
														type: "object",
														properties: { interactions: { type: "integer" } },
														additionalProperties: false,
														required: ["interactions"],
													},
												},
												additionalProperties: false,
												required: ["id", "embeddedIn", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId"],
									},
								},
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								_count: {
									type: "object",
									properties: {
										interactions: { type: "integer" },
										accounts: { type: "integer" },
										sessions: { type: "integer" },
									},
									additionalProperties: false,
									required: ["interactions", "accounts", "sessions"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindUniqueVerificationToken": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: {
							$ref: "#/definitions/customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput",
						},
					},
				},
				customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findUniqueVerificationToken: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindUniqueVerificationTokenOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: {
							$ref: "#/definitions/customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput",
						},
					},
				},
				customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findUniqueVerificationTokenOrThrow: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindUniqueWidget": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
				customerCommunication_findUniqueWidget_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findUniqueWidget_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueWidget_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findUniqueWidget_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueWidget_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueWidget_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findUniqueWidget_interactions_interactions_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findUniqueWidget_interactions_interactions_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueWidget_interactions_interactions_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findUniqueWidget_interactions_interactions_user_user_accounts_take: {
					type: ["integer", "null"],
				},
				customerCommunication_findUniqueWidget_interactions_interactions_user_user_accounts_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_findUniqueWidget_interactions_interactions_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findUniqueWidget_interactions_interactions_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findUniqueWidget_interactions_interactions_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueWidget_interactions_interactions_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findUniqueWidget_interactions_interactions_user_user_sessions_take: {
					type: ["integer", "null"],
				},
				customerCommunication_findUniqueWidget_interactions_interactions_user_user_sessions_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_findUniqueWidget_interactions_interactions_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findUniqueWidget: {
							type: "object",
							properties: {
								id: { type: "string" },
								embeddedIn: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											user: {
												type: "object",
												properties: {
													id: { type: "string" },
													name: { type: "string" },
													email: { type: "string" },
													emailVerified: { type: "string" },
													image: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
													stripeCustomerId: { type: "string" },
													stripeSubscriptionId: { type: "string" },
													stripePriceId: { type: "string" },
													stripeCurrentPeriodEnd: { type: "string" },
													accounts: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																userId: { type: "string" },
																type: { type: "string" },
																provider: { type: "string" },
																providerAccountId: { type: "string" },
																refresh_token: { type: "string" },
																access_token: { type: "string" },
																expires_at: { type: "integer" },
																token_type: { type: "string" },
																scope: { type: "string" },
																id_token: { type: "string" },
																session_state: { type: "string" },
																createdAt: { type: "string" },
																updatedAt: { type: "string" },
															},
															additionalProperties: false,
															required: [
																"id",
																"userId",
																"type",
																"provider",
																"providerAccountId",
																"createdAt",
																"updatedAt",
															],
														},
													},
													sessions: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																sessionToken: { type: "string" },
																userId: { type: "string" },
																expires: { type: "string" },
															},
															additionalProperties: false,
															required: ["id", "sessionToken", "userId", "expires"],
														},
													},
													_count: {
														type: "object",
														properties: {
															interactions: { type: "integer" },
															accounts: { type: "integer" },
															sessions: { type: "integer" },
														},
														additionalProperties: false,
														required: ["interactions", "accounts", "sessions"],
													},
												},
												additionalProperties: false,
												required: ["id", "createdAt", "updatedAt", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
									},
								},
								_count: {
									type: "object",
									properties: { interactions: { type: "integer" } },
									additionalProperties: false,
									required: ["interactions"],
								},
							},
							additionalProperties: false,
							required: ["id", "embeddedIn", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/FindUniqueWidgetOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
				customerCommunication_findUniqueWidgetOrThrow_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_findUniqueWidgetOrThrow_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueWidgetOrThrow_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_findUniqueWidgetOrThrow_interactions_take: { type: ["integer", "null"] },
				customerCommunication_findUniqueWidgetOrThrow_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_findUniqueWidgetOrThrow_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_accounts_take: {
					type: ["integer", "null"],
				},
				customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_accounts_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_sessions_take: {
					type: ["integer", "null"],
				},
				customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_sessions_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findUniqueWidgetOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								embeddedIn: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											user: {
												type: "object",
												properties: {
													id: { type: "string" },
													name: { type: "string" },
													email: { type: "string" },
													emailVerified: { type: "string" },
													image: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
													stripeCustomerId: { type: "string" },
													stripeSubscriptionId: { type: "string" },
													stripePriceId: { type: "string" },
													stripeCurrentPeriodEnd: { type: "string" },
													accounts: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																userId: { type: "string" },
																type: { type: "string" },
																provider: { type: "string" },
																providerAccountId: { type: "string" },
																refresh_token: { type: "string" },
																access_token: { type: "string" },
																expires_at: { type: "integer" },
																token_type: { type: "string" },
																scope: { type: "string" },
																id_token: { type: "string" },
																session_state: { type: "string" },
																createdAt: { type: "string" },
																updatedAt: { type: "string" },
															},
															additionalProperties: false,
															required: [
																"id",
																"userId",
																"type",
																"provider",
																"providerAccountId",
																"createdAt",
																"updatedAt",
															],
														},
													},
													sessions: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																sessionToken: { type: "string" },
																userId: { type: "string" },
																expires: { type: "string" },
															},
															additionalProperties: false,
															required: ["id", "sessionToken", "userId", "expires"],
														},
													},
													_count: {
														type: "object",
														properties: {
															interactions: { type: "integer" },
															accounts: { type: "integer" },
															sessions: { type: "integer" },
														},
														additionalProperties: false,
														required: ["interactions", "accounts", "sessions"],
													},
												},
												additionalProperties: false,
												required: ["id", "createdAt", "updatedAt", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
									},
								},
								_count: {
									type: "object",
									properties: { interactions: { type: "integer" } },
									additionalProperties: false,
									required: ["interactions"],
								},
							},
							additionalProperties: false,
							required: ["id", "embeddedIn", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/GroupByAccount": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				having: { $ref: "#/definitions/customerCommunication_AccountScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_AccountOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/customerCommunication_AccountCountOrderByAggregateInput" },
						_avg: { $ref: "#/definitions/customerCommunication_AccountAvgOrderByAggregateInput" },
						_max: { $ref: "#/definitions/customerCommunication_AccountMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/customerCommunication_AccountMinOrderByAggregateInput" },
						_sum: { $ref: "#/definitions/customerCommunication_AccountSumOrderByAggregateInput" },
					},
				},
				customerCommunication_AccountCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountAvgOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountSumOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_AccountScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_AccountScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableWithAggregatesFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableWithAggregatesFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableWithAggregatesFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableWithAggregatesFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableWithAggregatesFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableWithAggregatesFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableWithAggregatesFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeWithAggregatesFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeWithAggregatesFilter" },
					},
				},
				customerCommunication_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
					},
				},
				customerCommunication_StringNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
						_avg: { $ref: "#/definitions/customerCommunication_NestedFloatNullableFilter" },
						_sum: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
						_avg: { $ref: "#/definitions/customerCommunication_NestedFloatNullableFilter" },
						_sum: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedFloatNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedFloatNullableFilter" },
					},
				},
				customerCommunication_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_groupByAccount: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									userId: { type: "string" },
									type: { type: "string" },
									provider: { type: "string" },
									providerAccountId: { type: "string" },
									refresh_token: { type: "string" },
									access_token: { type: "string" },
									expires_at: { type: "integer" },
									token_type: { type: "string" },
									scope: { type: "string" },
									id_token: { type: "string" },
									session_state: { type: "string" },
									createdAt: { type: "string" },
									updatedAt: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											userId: { type: "integer" },
											type: { type: "integer" },
											provider: { type: "integer" },
											providerAccountId: { type: "integer" },
											refresh_token: { type: "integer" },
											access_token: { type: "integer" },
											expires_at: { type: "integer" },
											token_type: { type: "integer" },
											scope: { type: "integer" },
											id_token: { type: "integer" },
											session_state: { type: "integer" },
											createdAt: { type: "integer" },
											updatedAt: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: [
											"id",
											"userId",
											"type",
											"provider",
											"providerAccountId",
											"refresh_token",
											"access_token",
											"expires_at",
											"token_type",
											"scope",
											"id_token",
											"session_state",
											"createdAt",
											"updatedAt",
											"_all",
										],
									},
									_avg: { type: "object", properties: { expires_at: { type: "number" } }, additionalProperties: false },
									_sum: {
										type: "object",
										properties: { expires_at: { type: "integer" } },
										additionalProperties: false,
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_groupByAccount"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/GroupByFilter": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_FilterOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_FilterScalarFieldEnum",
						enum: ["id", "audience", "output"],
					},
				},
				having: { $ref: "#/definitions/customerCommunication_FilterScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_FilterWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_FilterWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						audience: { $ref: "#/definitions/customerCommunication_EnumAudienceTypeFilter" },
						output: { $ref: "#/definitions/customerCommunication_EnumOutputTypeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumAudienceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
					},
				},
				customerCommunication_EnumOutputTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
					},
				},
				customerCommunication_FilterOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						audience: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						output: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/customerCommunication_FilterCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/customerCommunication_FilterMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/customerCommunication_FilterMinOrderByAggregateInput" },
					},
				},
				customerCommunication_FilterCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						audience: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						output: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_FilterMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						audience: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						output: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_FilterMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						audience: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						output: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_FilterScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_FilterScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_FilterScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_FilterScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						audience: { $ref: "#/definitions/customerCommunication_EnumAudienceTypeWithAggregatesFilter" },
						output: { $ref: "#/definitions/customerCommunication_EnumOutputTypeWithAggregatesFilter" },
					},
				},
				customerCommunication_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
					},
				},
				customerCommunication_EnumAudienceTypeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedEnumAudienceTypeFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedEnumAudienceTypeFilter" },
					},
				},
				customerCommunication_NestedEnumAudienceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
					},
				},
				customerCommunication_EnumOutputTypeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedEnumOutputTypeFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedEnumOutputTypeFilter" },
					},
				},
				customerCommunication_NestedEnumOutputTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_groupByFilter: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									audience: {
										type: "string",
										enum: [
											"CALL_CENTER",
											"CLIENT_PORTAL",
											"GUARDIAN_ONLINE",
											"GPAC",
											"SMART_OFFICE",
											"LIVING_BALANCE_SHEET",
										],
									},
									output: {
										type: "string",
										enum: [
											"CALLS",
											"CHATS",
											"EMAILS",
											"WEB_USAGE",
											"IVR_HUGO_USAGE",
											"OUTBOUND_CORRESPONDENCE",
											"MARKETING_MATERIALS",
											"TEXTS",
										],
									},
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											audience: { type: "integer" },
											output: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "audience", "output", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											audience: {
												type: "string",
												enum: [
													"CALL_CENTER",
													"CLIENT_PORTAL",
													"GUARDIAN_ONLINE",
													"GPAC",
													"SMART_OFFICE",
													"LIVING_BALANCE_SHEET",
												],
											},
											output: {
												type: "string",
												enum: [
													"CALLS",
													"CHATS",
													"EMAILS",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIALS",
													"TEXTS",
												],
											},
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											audience: {
												type: "string",
												enum: [
													"CALL_CENTER",
													"CLIENT_PORTAL",
													"GUARDIAN_ONLINE",
													"GPAC",
													"SMART_OFFICE",
													"LIVING_BALANCE_SHEET",
												],
											},
											output: {
												type: "string",
												enum: [
													"CALLS",
													"CHATS",
													"EMAILS",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIALS",
													"TEXTS",
												],
											},
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "audience", "output"],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_groupByFilter"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/GroupByInteraction": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				having: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/customerCommunication_InteractionCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/customerCommunication_InteractionMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/customerCommunication_InteractionMinOrderByAggregateInput" },
					},
				},
				customerCommunication_InteractionCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_InteractionMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_InteractionMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_InteractionScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeWithAggregatesFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeWithAggregatesFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableWithAggregatesFilter" },
					},
				},
				customerCommunication_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedEnumInteractionTypeFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedEnumInteractionTypeFilter" },
					},
				},
				customerCommunication_NestedEnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_groupByInteraction: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									interactionType: {
										type: "string",
										enum: [
											"CALL",
											"CHAT",
											"EMAIL",
											"WEB_USAGE",
											"IVR_HUGO_USAGE",
											"OUTBOUND_CORRESPONDENCE",
											"MARKETING_MATERIAL",
											"TEXT",
										],
									},
									content: { type: "string" },
									timestamp: { type: "string" },
									userId: { type: "string" },
									widgetId: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											interactionType: { type: "integer" },
											content: { type: "integer" },
											timestamp: { type: "integer" },
											userId: { type: "integer" },
											widgetId: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId", "widgetId", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "interactionType", "content", "timestamp", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_groupByInteraction"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/GroupBySession": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				having: { $ref: "#/definitions/customerCommunication_SessionScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/customerCommunication_SessionCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/customerCommunication_SessionMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/customerCommunication_SessionMinOrderByAggregateInput" },
					},
				},
				customerCommunication_SessionCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_SessionScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_SessionScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeWithAggregatesFilter" },
					},
				},
				customerCommunication_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
					},
				},
				customerCommunication_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_groupBySession: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									sessionToken: { type: "string" },
									userId: { type: "string" },
									expires: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											sessionToken: { type: "integer" },
											userId: { type: "integer" },
											expires: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "sessionToken", "userId", "expires"],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_groupBySession"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/GroupByUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_UserOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_UserScalarFieldEnum",
						enum: [
							"id",
							"name",
							"email",
							"emailVerified",
							"image",
							"createdAt",
							"updatedAt",
							"userType",
							"stripeCustomerId",
							"stripeSubscriptionId",
							"stripePriceId",
							"stripeCurrentPeriodEnd",
						],
					},
				},
				having: { $ref: "#/definitions/customerCommunication_UserScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_UserOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/customerCommunication_UserCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/customerCommunication_UserMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/customerCommunication_UserMinOrderByAggregateInput" },
					},
				},
				customerCommunication_UserCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_UserMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_UserMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_UserScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_UserScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_UserScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableWithAggregatesFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableWithAggregatesFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableWithAggregatesFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableWithAggregatesFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeWithAggregatesFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeWithAggregatesFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableWithAggregatesFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableWithAggregatesFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableWithAggregatesFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableWithAggregatesFilter" },
						stripeCurrentPeriodEnd: {
							$ref: "#/definitions/customerCommunication_DateTimeNullableWithAggregatesFilter",
						},
					},
				},
				customerCommunication_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
					},
				},
				customerCommunication_StringNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_DateTimeNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						_count: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedEnumUserTypeNullableFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedEnumUserTypeNullableFilter" },
					},
				},
				customerCommunication_NestedEnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_groupByUser: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									name: { type: "string" },
									email: { type: "string" },
									emailVerified: { type: "string" },
									image: { type: "string" },
									createdAt: { type: "string" },
									updatedAt: { type: "string" },
									userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
									stripeCustomerId: { type: "string" },
									stripeSubscriptionId: { type: "string" },
									stripePriceId: { type: "string" },
									stripeCurrentPeriodEnd: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											name: { type: "integer" },
											email: { type: "integer" },
											emailVerified: { type: "integer" },
											image: { type: "integer" },
											createdAt: { type: "integer" },
											updatedAt: { type: "integer" },
											userType: { type: "integer" },
											stripeCustomerId: { type: "integer" },
											stripeSubscriptionId: { type: "integer" },
											stripePriceId: { type: "integer" },
											stripeCurrentPeriodEnd: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: [
											"id",
											"name",
											"email",
											"emailVerified",
											"image",
											"createdAt",
											"updatedAt",
											"userType",
											"stripeCustomerId",
											"stripeSubscriptionId",
											"stripePriceId",
											"stripeCurrentPeriodEnd",
											"_all",
										],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											name: { type: "string" },
											email: { type: "string" },
											emailVerified: { type: "string" },
											image: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
											stripeCustomerId: { type: "string" },
											stripeSubscriptionId: { type: "string" },
											stripePriceId: { type: "string" },
											stripeCurrentPeriodEnd: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											name: { type: "string" },
											email: { type: "string" },
											emailVerified: { type: "string" },
											image: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
											stripeCustomerId: { type: "string" },
											stripeSubscriptionId: { type: "string" },
											stripePriceId: { type: "string" },
											stripeCurrentPeriodEnd: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "createdAt", "updatedAt"],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_groupByUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/GroupByVerificationToken": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_VerificationTokenOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_VerificationTokenScalarFieldEnum",
						enum: ["identifier", "token", "expires"],
					},
				},
				having: { $ref: "#/definitions/customerCommunication_VerificationTokenScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_VerificationTokenWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						identifier: { $ref: "#/definitions/customerCommunication_StringFilter" },
						token: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_VerificationTokenOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/customerCommunication_VerificationTokenCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/customerCommunication_VerificationTokenMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/customerCommunication_VerificationTokenMinOrderByAggregateInput" },
					},
				},
				customerCommunication_VerificationTokenCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_VerificationTokenMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_VerificationTokenMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_VerificationTokenScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_VerificationTokenScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_VerificationTokenScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_VerificationTokenScalarWhereWithAggregatesInput" },
						identifier: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						token: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeWithAggregatesFilter" },
					},
				},
				customerCommunication_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
					},
				},
				customerCommunication_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_groupByVerificationToken: {
							type: "array",
							items: {
								type: "object",
								properties: {
									identifier: { type: "string" },
									token: { type: "string" },
									expires: { type: "string" },
									_count: {
										type: "object",
										properties: {
											identifier: { type: "integer" },
											token: { type: "integer" },
											expires: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["identifier", "token", "expires", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											identifier: { type: "string" },
											token: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											identifier: { type: "string" },
											token: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["identifier", "token", "expires"],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_groupByVerificationToken"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/GroupByWidget": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_WidgetScalarFieldEnum",
						enum: ["id", "embeddedIn"],
					},
				},
				having: { $ref: "#/definitions/customerCommunication_WidgetScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/customerCommunication_WidgetCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/customerCommunication_WidgetMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/customerCommunication_WidgetMinOrderByAggregateInput" },
					},
				},
				customerCommunication_WidgetCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_WidgetScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_WidgetScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringWithAggregatesFilter" },
					},
				},
				customerCommunication_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
						_min: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
						_max: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_groupByWidget: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									embeddedIn: { type: "string" },
									_count: {
										type: "object",
										properties: { id: { type: "integer" }, embeddedIn: { type: "integer" }, _all: { type: "integer" } },
										additionalProperties: false,
										required: ["id", "embeddedIn", "_all"],
									},
									_min: {
										type: "object",
										properties: { id: { type: "string" }, embeddedIn: { type: "string" } },
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: { id: { type: "string" }, embeddedIn: { type: "string" } },
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "embeddedIn"],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_groupByWidget"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/QueryRaw": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_queryRaw: {
							type: "array",
							items: {
								type: "object",
								properties: {
									ID: { type: "string" },
									Int: { type: "integer" },
									Float: { type: "number" },
									String: { type: "string" },
									Boolean: { type: "boolean" },
									DateTime: { type: "string" },
									JSON: {},
									Object: {
										type: "object",
										properties: {
											ID: { type: "string" },
											Int: { type: "integer" },
											Float: { type: "number" },
											String: { type: "string" },
											Boolean: { type: "boolean" },
											DateTime: { type: "string" },
											JSON: {},
											OptionalID: { type: "string" },
											OptionalInt: { type: "integer" },
											OptionalFloat: { type: "number" },
											OptionalString: { type: "string" },
											OptionalBoolean: { type: "boolean" },
											OptionalDateTime: { type: "string" },
											OptionalJSON: {},
										},
										additionalProperties: false,
										required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
									},
									Array: {
										type: "array",
										items: {
											type: "object",
											properties: {
												ID: { type: "string" },
												Int: { type: "integer" },
												Float: { type: "number" },
												String: { type: "string" },
												Boolean: { type: "boolean" },
												DateTime: { type: "string" },
												JSON: {},
												OptionalID: { type: "string" },
												OptionalInt: { type: "integer" },
												OptionalFloat: { type: "number" },
												OptionalString: { type: "string" },
												OptionalBoolean: { type: "boolean" },
												OptionalDateTime: { type: "string" },
												OptionalJSON: {},
											},
											additionalProperties: false,
											required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
										},
									},
									OptionalID: { type: "string" },
									OptionalInt: { type: "integer" },
									OptionalFloat: { type: "number" },
									OptionalString: { type: "string" },
									OptionalBoolean: { type: "boolean" },
									OptionalDateTime: { type: "string" },
									OptionalJSON: {},
									OptionalObject: {
										type: "object",
										properties: {
											ID: { type: "string" },
											Int: { type: "integer" },
											Float: { type: "number" },
											String: { type: "string" },
											Boolean: { type: "boolean" },
											DateTime: { type: "string" },
											JSON: {},
											OptionalID: { type: "string" },
											OptionalInt: { type: "integer" },
											OptionalFloat: { type: "number" },
											OptionalString: { type: "string" },
											OptionalBoolean: { type: "boolean" },
											OptionalDateTime: { type: "string" },
											OptionalJSON: {},
										},
										additionalProperties: false,
										required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
									},
									OptionalArray: {
										type: "array",
										items: {
											type: "object",
											properties: {
												ID: { type: "string" },
												Int: { type: "integer" },
												Float: { type: "number" },
												String: { type: "string" },
												Boolean: { type: "boolean" },
												DateTime: { type: "string" },
												JSON: {},
												OptionalID: { type: "string" },
												OptionalInt: { type: "integer" },
												OptionalFloat: { type: "number" },
												OptionalString: { type: "string" },
												OptionalBoolean: { type: "boolean" },
												OptionalDateTime: { type: "string" },
												OptionalJSON: {},
											},
											additionalProperties: false,
											required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
										},
									},
								},
								additionalProperties: false,
								required: [
									"ID",
									"Int",
									"Float",
									"String",
									"Boolean",
									"DateTime",
									"JSON",
									"Object",
									"Array",
									"OptionalArray",
								],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_queryRaw"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"customerCommunication/QueryRawJSON": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: { type: "object", properties: { customerCommunication_queryRawJSON: {} }, additionalProperties: false },
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/AggregateAdminAction": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_AdminActionOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/gpac_AdminActionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				gpac_AdminActionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_AdminActionWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						actionType: { $ref: "#/definitions/gpac_EnumAdminAction_actionTypeFilter" },
						timestamp: { $ref: "#/definitions/gpac_DateTimeFilter" },
						details: { $ref: "#/definitions/gpac_JsonFilter" },
						userId: { $ref: "#/definitions/gpac_StringFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumAdminAction_actionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
					},
				},
				gpac_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				gpac_AdminActionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						actionType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						timestamp: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						details: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_AdminActionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_aggregateAdminAction: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										actionType: { type: "integer" },
										timestamp: { type: "integer" },
										details: { type: "integer" },
										userId: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "actionType", "timestamp", "details", "userId", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										actionType: {
											type: "string",
											enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
										},
										timestamp: { type: "string" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										actionType: {
											type: "string",
											enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
										},
										timestamp: { type: "string" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["gpac_aggregateAdminAction"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/AggregatePolicy": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_PolicyWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_PolicyOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/gpac_PolicyWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				gpac_PolicyWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_PolicyWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_PolicyWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_PolicyWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						policyType: { $ref: "#/definitions/gpac_EnumPolicy_policyTypeFilter" },
						status: { $ref: "#/definitions/gpac_EnumPolicy_statusFilter" },
						details: { $ref: "#/definitions/gpac_JsonFilter" },
						userId: { $ref: "#/definitions/gpac_StringFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumPolicy_policyTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
					},
				},
				gpac_EnumPolicy_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
					},
				},
				gpac_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				gpac_PolicyOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						policyType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						status: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						details: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_PolicyWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_aggregatePolicy: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										policyType: { type: "integer" },
										status: { type: "integer" },
										details: { type: "integer" },
										userId: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "policyType", "status", "details", "userId", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										policyType: { type: "string", enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"] },
										status: { type: "string", enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"] },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										policyType: { type: "string", enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"] },
										status: { type: "string", enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"] },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["gpac_aggregatePolicy"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/AggregateUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_UserWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_UserOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/gpac_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				gpac_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_UserWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_UserWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						username: { $ref: "#/definitions/gpac_StringFilter" },
						password: { $ref: "#/definitions/gpac_StringFilter" },
						role: { $ref: "#/definitions/gpac_EnumUser_roleFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
					},
				},
				gpac_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						username: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						password: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						role: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_aggregateUser: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										username: { type: "integer" },
										password: { type: "integer" },
										role: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "username", "password", "role", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										username: { type: "string" },
										password: { type: "string" },
										role: { type: "string", enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"] },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										username: { type: "string" },
										password: { type: "string" },
										role: { type: "string", enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"] },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["gpac_aggregateUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/FindFirstAdminAction": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_AdminActionOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/gpac_AdminActionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "gpac_AdminActionScalarFieldEnum",
						enum: ["id", "actionType", "timestamp", "details", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				gpac_AdminActionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_AdminActionWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						actionType: { $ref: "#/definitions/gpac_EnumAdminAction_actionTypeFilter" },
						timestamp: { $ref: "#/definitions/gpac_DateTimeFilter" },
						details: { $ref: "#/definitions/gpac_JsonFilter" },
						userId: { $ref: "#/definitions/gpac_StringFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumAdminAction_actionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
					},
				},
				gpac_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				gpac_AdminActionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						actionType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						timestamp: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						details: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_AdminActionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_findFirstAdminAction: {
							type: "object",
							properties: {
								id: { type: "string" },
								actionType: {
									type: "string",
									enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "actionType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/FindFirstAdminActionOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_AdminActionOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/gpac_AdminActionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "gpac_AdminActionScalarFieldEnum",
						enum: ["id", "actionType", "timestamp", "details", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				gpac_AdminActionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_AdminActionWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						actionType: { $ref: "#/definitions/gpac_EnumAdminAction_actionTypeFilter" },
						timestamp: { $ref: "#/definitions/gpac_DateTimeFilter" },
						details: { $ref: "#/definitions/gpac_JsonFilter" },
						userId: { $ref: "#/definitions/gpac_StringFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumAdminAction_actionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
					},
				},
				gpac_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				gpac_AdminActionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						actionType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						timestamp: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						details: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_AdminActionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_findFirstAdminActionOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								actionType: {
									type: "string",
									enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "actionType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/FindFirstPolicy": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_PolicyWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_PolicyOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/gpac_PolicyWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "gpac_PolicyScalarFieldEnum",
						enum: ["id", "policyType", "status", "details", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				gpac_PolicyWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_PolicyWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_PolicyWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_PolicyWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						policyType: { $ref: "#/definitions/gpac_EnumPolicy_policyTypeFilter" },
						status: { $ref: "#/definitions/gpac_EnumPolicy_statusFilter" },
						details: { $ref: "#/definitions/gpac_JsonFilter" },
						userId: { $ref: "#/definitions/gpac_StringFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumPolicy_policyTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
					},
				},
				gpac_EnumPolicy_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
					},
				},
				gpac_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				gpac_PolicyOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						policyType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						status: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						details: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_PolicyWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_findFirstPolicy: {
							type: "object",
							properties: {
								id: { type: "string" },
								policyType: { type: "string", enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"] },
								status: { type: "string", enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "policyType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/FindFirstPolicyOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_PolicyWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_PolicyOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/gpac_PolicyWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "gpac_PolicyScalarFieldEnum",
						enum: ["id", "policyType", "status", "details", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				gpac_PolicyWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_PolicyWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_PolicyWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_PolicyWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						policyType: { $ref: "#/definitions/gpac_EnumPolicy_policyTypeFilter" },
						status: { $ref: "#/definitions/gpac_EnumPolicy_statusFilter" },
						details: { $ref: "#/definitions/gpac_JsonFilter" },
						userId: { $ref: "#/definitions/gpac_StringFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumPolicy_policyTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
					},
				},
				gpac_EnumPolicy_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
					},
				},
				gpac_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				gpac_PolicyOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						policyType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						status: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						details: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_PolicyWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_findFirstPolicyOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								policyType: { type: "string", enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"] },
								status: { type: "string", enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "policyType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/FindFirstUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_UserWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_UserOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/gpac_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "gpac_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				gpac_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_UserWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_UserWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						username: { $ref: "#/definitions/gpac_StringFilter" },
						password: { $ref: "#/definitions/gpac_StringFilter" },
						role: { $ref: "#/definitions/gpac_EnumUser_roleFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
					},
				},
				gpac_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						username: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						password: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						role: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_findFirstUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/FindFirstUserOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_UserWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_UserOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/gpac_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "gpac_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				gpac_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_UserWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_UserWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						username: { $ref: "#/definitions/gpac_StringFilter" },
						password: { $ref: "#/definitions/gpac_StringFilter" },
						role: { $ref: "#/definitions/gpac_EnumUser_roleFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
					},
				},
				gpac_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						username: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						password: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						role: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_findFirstUserOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/FindManyAdminAction": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_AdminActionOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/gpac_AdminActionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "gpac_AdminActionScalarFieldEnum",
						enum: ["id", "actionType", "timestamp", "details", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				gpac_AdminActionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_AdminActionWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						actionType: { $ref: "#/definitions/gpac_EnumAdminAction_actionTypeFilter" },
						timestamp: { $ref: "#/definitions/gpac_DateTimeFilter" },
						details: { $ref: "#/definitions/gpac_JsonFilter" },
						userId: { $ref: "#/definitions/gpac_StringFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumAdminAction_actionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
					},
				},
				gpac_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				gpac_AdminActionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						actionType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						timestamp: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						details: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_AdminActionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_findManyAdminAction: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									actionType: {
										type: "string",
										enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
									},
									timestamp: { type: "string" },
									details: {},
									userId: { type: "string" },
								},
								additionalProperties: false,
								required: ["id", "actionType", "timestamp", "details", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["gpac_findManyAdminAction"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/FindManyPolicy": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_PolicyWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_PolicyOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/gpac_PolicyWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "gpac_PolicyScalarFieldEnum",
						enum: ["id", "policyType", "status", "details", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				gpac_PolicyWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_PolicyWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_PolicyWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_PolicyWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						policyType: { $ref: "#/definitions/gpac_EnumPolicy_policyTypeFilter" },
						status: { $ref: "#/definitions/gpac_EnumPolicy_statusFilter" },
						details: { $ref: "#/definitions/gpac_JsonFilter" },
						userId: { $ref: "#/definitions/gpac_StringFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumPolicy_policyTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
					},
				},
				gpac_EnumPolicy_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
					},
				},
				gpac_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				gpac_PolicyOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						policyType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						status: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						details: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_PolicyWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_findManyPolicy: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									policyType: { type: "string", enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"] },
									status: { type: "string", enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"] },
									details: {},
									userId: { type: "string" },
								},
								additionalProperties: false,
								required: ["id", "policyType", "status", "details", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["gpac_findManyPolicy"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/FindManyUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_UserWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_UserOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/gpac_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "gpac_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				gpac_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_UserWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_UserWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						username: { $ref: "#/definitions/gpac_StringFilter" },
						password: { $ref: "#/definitions/gpac_StringFilter" },
						role: { $ref: "#/definitions/gpac_EnumUser_roleFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
					},
				},
				gpac_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						username: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						password: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						role: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_findManyUser: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									username: { type: "string" },
									password: { type: "string" },
									role: { type: "string", enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"] },
								},
								additionalProperties: false,
								required: ["id", "username", "password", "role"],
							},
						},
					},
					additionalProperties: false,
					required: ["gpac_findManyUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/FindUniqueAdminAction": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/gpac_AdminActionWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				gpac_AdminActionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_findUniqueAdminAction: {
							type: "object",
							properties: {
								id: { type: "string" },
								actionType: {
									type: "string",
									enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "actionType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/FindUniqueAdminActionOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/gpac_AdminActionWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				gpac_AdminActionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_findUniqueAdminActionOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								actionType: {
									type: "string",
									enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "actionType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/FindUniquePolicy": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/gpac_PolicyWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				gpac_PolicyWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_findUniquePolicy: {
							type: "object",
							properties: {
								id: { type: "string" },
								policyType: { type: "string", enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"] },
								status: { type: "string", enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "policyType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/FindUniquePolicyOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/gpac_PolicyWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				gpac_PolicyWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_findUniquePolicyOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								policyType: { type: "string", enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"] },
								status: { type: "string", enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "policyType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/FindUniqueUser": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/gpac_UserWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				gpac_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_findUniqueUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/FindUniqueUserOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/gpac_UserWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				gpac_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_findUniqueUserOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/GroupByAdminAction": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/gpac_AdminActionOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "gpac_AdminActionScalarFieldEnum",
						enum: ["id", "actionType", "timestamp", "details", "userId"],
					},
				},
				having: { $ref: "#/definitions/gpac_AdminActionScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				gpac_AdminActionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_AdminActionWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						actionType: { $ref: "#/definitions/gpac_EnumAdminAction_actionTypeFilter" },
						timestamp: { $ref: "#/definitions/gpac_DateTimeFilter" },
						details: { $ref: "#/definitions/gpac_JsonFilter" },
						userId: { $ref: "#/definitions/gpac_StringFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumAdminAction_actionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
					},
				},
				gpac_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				gpac_AdminActionOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						actionType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						timestamp: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						details: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						_count: { $ref: "#/definitions/gpac_AdminActionCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/gpac_AdminActionMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/gpac_AdminActionMinOrderByAggregateInput" },
					},
				},
				gpac_AdminActionCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						actionType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						timestamp: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						details: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_AdminActionMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						actionType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						timestamp: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_AdminActionMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						actionType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						timestamp: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_AdminActionScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_AdminActionScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/gpac_AdminActionScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/gpac_AdminActionScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/gpac_StringWithAggregatesFilter" },
						actionType: { $ref: "#/definitions/gpac_EnumAdminAction_actionTypeWithAggregatesFilter" },
						timestamp: { $ref: "#/definitions/gpac_DateTimeWithAggregatesFilter" },
						details: { $ref: "#/definitions/gpac_JsonWithAggregatesFilter" },
						userId: { $ref: "#/definitions/gpac_StringWithAggregatesFilter" },
					},
				},
				gpac_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/gpac_NestedIntFilter" },
						_min: { $ref: "#/definitions/gpac_NestedStringFilter" },
						_max: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/gpac_NestedIntFilter" },
						_min: { $ref: "#/definitions/gpac_NestedStringFilter" },
						_max: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/gpac_NestedIntFilter" },
					},
				},
				gpac_EnumAdminAction_actionTypeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						_count: { $ref: "#/definitions/gpac_NestedIntFilter" },
						_min: { $ref: "#/definitions/gpac_NestedEnumAdminAction_actionTypeFilter" },
						_max: { $ref: "#/definitions/gpac_NestedEnumAdminAction_actionTypeFilter" },
					},
				},
				gpac_NestedEnumAdminAction_actionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
					},
				},
				gpac_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/gpac_NestedIntFilter" },
						_min: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/gpac_NestedIntFilter" },
						_min: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_JsonWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
						_count: { $ref: "#/definitions/gpac_NestedIntFilter" },
						_min: { $ref: "#/definitions/gpac_NestedJsonFilter" },
						_max: { $ref: "#/definitions/gpac_NestedJsonFilter" },
					},
				},
				gpac_NestedJsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_groupByAdminAction: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									actionType: {
										type: "string",
										enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
									},
									timestamp: { type: "string" },
									details: {},
									userId: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											actionType: { type: "integer" },
											timestamp: { type: "integer" },
											details: { type: "integer" },
											userId: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "actionType", "timestamp", "details", "userId", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											actionType: {
												type: "string",
												enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
											},
											timestamp: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											actionType: {
												type: "string",
												enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
											},
											timestamp: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "actionType", "timestamp", "details", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["gpac_groupByAdminAction"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/GroupByPolicy": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_PolicyWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_PolicyOrderByWithAggregationInput" } },
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "gpac_PolicyScalarFieldEnum",
						enum: ["id", "policyType", "status", "details", "userId"],
					},
				},
				having: { $ref: "#/definitions/gpac_PolicyScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				gpac_PolicyWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_PolicyWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_PolicyWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_PolicyWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						policyType: { $ref: "#/definitions/gpac_EnumPolicy_policyTypeFilter" },
						status: { $ref: "#/definitions/gpac_EnumPolicy_statusFilter" },
						details: { $ref: "#/definitions/gpac_JsonFilter" },
						userId: { $ref: "#/definitions/gpac_StringFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumPolicy_policyTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
					},
				},
				gpac_EnumPolicy_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
					},
				},
				gpac_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				gpac_PolicyOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						policyType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						status: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						details: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						_count: { $ref: "#/definitions/gpac_PolicyCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/gpac_PolicyMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/gpac_PolicyMinOrderByAggregateInput" },
					},
				},
				gpac_PolicyCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						policyType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						status: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						details: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_PolicyMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						policyType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						status: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_PolicyMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						policyType: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						status: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_PolicyScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_PolicyScalarWhereWithAggregatesInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_PolicyScalarWhereWithAggregatesInput" } },
						NOT: { $ref: "#/definitions/gpac_PolicyScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/gpac_StringWithAggregatesFilter" },
						policyType: { $ref: "#/definitions/gpac_EnumPolicy_policyTypeWithAggregatesFilter" },
						status: { $ref: "#/definitions/gpac_EnumPolicy_statusWithAggregatesFilter" },
						details: { $ref: "#/definitions/gpac_JsonWithAggregatesFilter" },
						userId: { $ref: "#/definitions/gpac_StringWithAggregatesFilter" },
					},
				},
				gpac_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/gpac_NestedIntFilter" },
						_min: { $ref: "#/definitions/gpac_NestedStringFilter" },
						_max: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/gpac_NestedIntFilter" },
						_min: { $ref: "#/definitions/gpac_NestedStringFilter" },
						_max: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/gpac_NestedIntFilter" },
					},
				},
				gpac_EnumPolicy_policyTypeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						_count: { $ref: "#/definitions/gpac_NestedIntFilter" },
						_min: { $ref: "#/definitions/gpac_NestedEnumPolicy_policyTypeFilter" },
						_max: { $ref: "#/definitions/gpac_NestedEnumPolicy_policyTypeFilter" },
					},
				},
				gpac_NestedEnumPolicy_policyTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
					},
				},
				gpac_EnumPolicy_statusWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						_count: { $ref: "#/definitions/gpac_NestedIntFilter" },
						_min: { $ref: "#/definitions/gpac_NestedEnumPolicy_statusFilter" },
						_max: { $ref: "#/definitions/gpac_NestedEnumPolicy_statusFilter" },
					},
				},
				gpac_NestedEnumPolicy_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
					},
				},
				gpac_JsonWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
						_count: { $ref: "#/definitions/gpac_NestedIntFilter" },
						_min: { $ref: "#/definitions/gpac_NestedJsonFilter" },
						_max: { $ref: "#/definitions/gpac_NestedJsonFilter" },
					},
				},
				gpac_NestedJsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_groupByPolicy: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									policyType: { type: "string", enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"] },
									status: { type: "string", enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"] },
									details: {},
									userId: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											policyType: { type: "integer" },
											status: { type: "integer" },
											details: { type: "integer" },
											userId: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "policyType", "status", "details", "userId", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											policyType: { type: "string", enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"] },
											status: { type: "string", enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"] },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											policyType: { type: "string", enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"] },
											status: { type: "string", enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"] },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "policyType", "status", "details", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["gpac_groupByPolicy"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/GroupByUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_UserWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_UserOrderByWithAggregationInput" } },
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "gpac_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
				having: { $ref: "#/definitions/gpac_UserScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				gpac_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_UserWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_UserWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						username: { $ref: "#/definitions/gpac_StringFilter" },
						password: { $ref: "#/definitions/gpac_StringFilter" },
						role: { $ref: "#/definitions/gpac_EnumUser_roleFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
					},
				},
				gpac_UserOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						username: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						password: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						role: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						_count: { $ref: "#/definitions/gpac_UserCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/gpac_UserMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/gpac_UserMinOrderByAggregateInput" },
					},
				},
				gpac_UserCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						username: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						password: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						role: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_UserMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						username: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						password: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						role: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_UserMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						username: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						password: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
						role: { type: ["string", "null"], "x-graphql-enum-name": "gpac_SortOrder", enum: ["asc", "desc"] },
					},
				},
				gpac_UserScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_UserScalarWhereWithAggregatesInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_UserScalarWhereWithAggregatesInput" } },
						NOT: { $ref: "#/definitions/gpac_UserScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/gpac_StringWithAggregatesFilter" },
						username: { $ref: "#/definitions/gpac_StringWithAggregatesFilter" },
						password: { $ref: "#/definitions/gpac_StringWithAggregatesFilter" },
						role: { $ref: "#/definitions/gpac_EnumUser_roleWithAggregatesFilter" },
					},
				},
				gpac_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/gpac_NestedIntFilter" },
						_min: { $ref: "#/definitions/gpac_NestedStringFilter" },
						_max: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/gpac_NestedIntFilter" },
						_min: { $ref: "#/definitions/gpac_NestedStringFilter" },
						_max: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/gpac_NestedIntFilter" },
					},
				},
				gpac_EnumUser_roleWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
						_count: { $ref: "#/definitions/gpac_NestedIntFilter" },
						_min: { $ref: "#/definitions/gpac_NestedEnumUser_roleFilter" },
						_max: { $ref: "#/definitions/gpac_NestedEnumUser_roleFilter" },
					},
				},
				gpac_NestedEnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_groupByUser: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									username: { type: "string" },
									password: { type: "string" },
									role: { type: "string", enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"] },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											username: { type: "integer" },
											password: { type: "integer" },
											role: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "username", "password", "role", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											username: { type: "string" },
											password: { type: "string" },
											role: { type: "string", enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"] },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											username: { type: "string" },
											password: { type: "string" },
											role: { type: "string", enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"] },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "username", "password", "role"],
							},
						},
					},
					additionalProperties: false,
					required: ["gpac_groupByUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/QueryRaw": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_queryRaw: {
							type: "array",
							items: {
								type: "object",
								properties: {
									ID: { type: "string" },
									Int: { type: "integer" },
									Float: { type: "number" },
									String: { type: "string" },
									Boolean: { type: "boolean" },
									DateTime: { type: "string" },
									JSON: {},
									Object: {
										type: "object",
										properties: {
											ID: { type: "string" },
											Int: { type: "integer" },
											Float: { type: "number" },
											String: { type: "string" },
											Boolean: { type: "boolean" },
											DateTime: { type: "string" },
											JSON: {},
											OptionalID: { type: "string" },
											OptionalInt: { type: "integer" },
											OptionalFloat: { type: "number" },
											OptionalString: { type: "string" },
											OptionalBoolean: { type: "boolean" },
											OptionalDateTime: { type: "string" },
											OptionalJSON: {},
										},
										additionalProperties: false,
										required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
									},
									Array: {
										type: "array",
										items: {
											type: "object",
											properties: {
												ID: { type: "string" },
												Int: { type: "integer" },
												Float: { type: "number" },
												String: { type: "string" },
												Boolean: { type: "boolean" },
												DateTime: { type: "string" },
												JSON: {},
												OptionalID: { type: "string" },
												OptionalInt: { type: "integer" },
												OptionalFloat: { type: "number" },
												OptionalString: { type: "string" },
												OptionalBoolean: { type: "boolean" },
												OptionalDateTime: { type: "string" },
												OptionalJSON: {},
											},
											additionalProperties: false,
											required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
										},
									},
									OptionalID: { type: "string" },
									OptionalInt: { type: "integer" },
									OptionalFloat: { type: "number" },
									OptionalString: { type: "string" },
									OptionalBoolean: { type: "boolean" },
									OptionalDateTime: { type: "string" },
									OptionalJSON: {},
									OptionalObject: {
										type: "object",
										properties: {
											ID: { type: "string" },
											Int: { type: "integer" },
											Float: { type: "number" },
											String: { type: "string" },
											Boolean: { type: "boolean" },
											DateTime: { type: "string" },
											JSON: {},
											OptionalID: { type: "string" },
											OptionalInt: { type: "integer" },
											OptionalFloat: { type: "number" },
											OptionalString: { type: "string" },
											OptionalBoolean: { type: "boolean" },
											OptionalDateTime: { type: "string" },
											OptionalJSON: {},
										},
										additionalProperties: false,
										required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
									},
									OptionalArray: {
										type: "array",
										items: {
											type: "object",
											properties: {
												ID: { type: "string" },
												Int: { type: "integer" },
												Float: { type: "number" },
												String: { type: "string" },
												Boolean: { type: "boolean" },
												DateTime: { type: "string" },
												JSON: {},
												OptionalID: { type: "string" },
												OptionalInt: { type: "integer" },
												OptionalFloat: { type: "number" },
												OptionalString: { type: "string" },
												OptionalBoolean: { type: "boolean" },
												OptionalDateTime: { type: "string" },
												OptionalJSON: {},
											},
											additionalProperties: false,
											required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
										},
									},
								},
								additionalProperties: false,
								required: [
									"ID",
									"Int",
									"Float",
									"String",
									"Boolean",
									"DateTime",
									"JSON",
									"Object",
									"Array",
									"OptionalArray",
								],
							},
						},
					},
					additionalProperties: false,
					required: ["gpac_queryRaw"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"gpac/QueryRawJSON": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: { data: { type: "object", properties: { gpac_queryRawJSON: {} }, additionalProperties: false } },
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/AggregateFeature": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/guardianOnline_FeatureOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/guardianOnline_FeatureWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				guardianOnline_FeatureWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						featureType: { $ref: "#/definitions/guardianOnline_EnumFeature_featureTypeFilter" },
						content: { $ref: "#/definitions/guardianOnline_JsonFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumFeature_featureTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
					},
				},
				guardianOnline_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				guardianOnline_FeatureOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						featureType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_FeatureWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_aggregateFeature: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										featureType: { type: "integer" },
										content: { type: "integer" },
										userId: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "featureType", "content", "userId", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										featureType: {
											type: "string",
											enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
										},
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										featureType: {
											type: "string",
											enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
										},
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["guardianOnline_aggregateFeature"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/AggregateUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/guardianOnline_UserOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/guardianOnline_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				guardianOnline_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_UserWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						username: { $ref: "#/definitions/guardianOnline_StringFilter" },
						password: { $ref: "#/definitions/guardianOnline_StringFilter" },
						role: { $ref: "#/definitions/guardianOnline_EnumUser_roleFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				guardianOnline_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_aggregateUser: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										username: { type: "integer" },
										password: { type: "integer" },
										role: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "username", "password", "role", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										username: { type: "string" },
										password: { type: "string" },
										role: { type: "string", enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"] },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										username: { type: "string" },
										password: { type: "string" },
										role: { type: "string", enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"] },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["guardianOnline_aggregateUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/AggregateUserLog": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/guardianOnline_UserLogOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/guardianOnline_UserLogWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				guardianOnline_UserLogWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						logType: { $ref: "#/definitions/guardianOnline_EnumUserLog_logTypeFilter" },
						contentType: { $ref: "#/definitions/guardianOnline_EnumUserLog_contentTypeFilter" },
						timestamp: { $ref: "#/definitions/guardianOnline_DateTimeFilter" },
						details: { $ref: "#/definitions/guardianOnline_JsonFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumUserLog_logTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
					},
				},
				guardianOnline_EnumUserLog_contentTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				guardianOnline_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				guardianOnline_UserLogOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						logType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						contentType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_UserLogWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_aggregateUserLog: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										logType: { type: "integer" },
										contentType: { type: "integer" },
										timestamp: { type: "integer" },
										details: { type: "integer" },
										userId: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "logType", "contentType", "timestamp", "details", "userId", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										logType: { type: "string", enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"] },
										contentType: {
											type: "string",
											enum: [
												"CALL",
												"CHAT",
												"EMAIL",
												"WEB_USAGE",
												"IVR_HUGO_USAGE",
												"OUTBOUND_CORRESPONDENCE",
												"MARKETING_MATERIAL",
												"TEXT",
											],
										},
										timestamp: { type: "string" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										logType: { type: "string", enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"] },
										contentType: {
											type: "string",
											enum: [
												"CALL",
												"CHAT",
												"EMAIL",
												"WEB_USAGE",
												"IVR_HUGO_USAGE",
												"OUTBOUND_CORRESPONDENCE",
												"MARKETING_MATERIAL",
												"TEXT",
											],
										},
										timestamp: { type: "string" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["guardianOnline_aggregateUserLog"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/FindFirstFeature": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/guardianOnline_FeatureOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/guardianOnline_FeatureWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "guardianOnline_FeatureScalarFieldEnum",
						enum: ["id", "featureType", "content", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				guardianOnline_FeatureWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						featureType: { $ref: "#/definitions/guardianOnline_EnumFeature_featureTypeFilter" },
						content: { $ref: "#/definitions/guardianOnline_JsonFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumFeature_featureTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
					},
				},
				guardianOnline_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				guardianOnline_FeatureOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						featureType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_FeatureWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_findFirstFeature: {
							type: "object",
							properties: {
								id: { type: "string" },
								featureType: { type: "string", enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"] },
								content: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "featureType", "content", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/FindFirstFeatureOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/guardianOnline_FeatureOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/guardianOnline_FeatureWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "guardianOnline_FeatureScalarFieldEnum",
						enum: ["id", "featureType", "content", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				guardianOnline_FeatureWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						featureType: { $ref: "#/definitions/guardianOnline_EnumFeature_featureTypeFilter" },
						content: { $ref: "#/definitions/guardianOnline_JsonFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumFeature_featureTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
					},
				},
				guardianOnline_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				guardianOnline_FeatureOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						featureType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_FeatureWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_findFirstFeatureOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								featureType: { type: "string", enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"] },
								content: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "featureType", "content", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/FindFirstUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/guardianOnline_UserOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/guardianOnline_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "guardianOnline_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				guardianOnline_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_UserWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						username: { $ref: "#/definitions/guardianOnline_StringFilter" },
						password: { $ref: "#/definitions/guardianOnline_StringFilter" },
						role: { $ref: "#/definitions/guardianOnline_EnumUser_roleFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				guardianOnline_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_findFirstUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/FindFirstUserLog": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/guardianOnline_UserLogOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/guardianOnline_UserLogWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "guardianOnline_UserLogScalarFieldEnum",
						enum: ["id", "logType", "contentType", "timestamp", "details", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				guardianOnline_UserLogWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						logType: { $ref: "#/definitions/guardianOnline_EnumUserLog_logTypeFilter" },
						contentType: { $ref: "#/definitions/guardianOnline_EnumUserLog_contentTypeFilter" },
						timestamp: { $ref: "#/definitions/guardianOnline_DateTimeFilter" },
						details: { $ref: "#/definitions/guardianOnline_JsonFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumUserLog_logTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
					},
				},
				guardianOnline_EnumUserLog_contentTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				guardianOnline_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				guardianOnline_UserLogOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						logType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						contentType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_UserLogWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_findFirstUserLog: {
							type: "object",
							properties: {
								id: { type: "string" },
								logType: { type: "string", enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"] },
								contentType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "logType", "contentType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/FindFirstUserLogOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/guardianOnline_UserLogOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/guardianOnline_UserLogWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "guardianOnline_UserLogScalarFieldEnum",
						enum: ["id", "logType", "contentType", "timestamp", "details", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				guardianOnline_UserLogWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						logType: { $ref: "#/definitions/guardianOnline_EnumUserLog_logTypeFilter" },
						contentType: { $ref: "#/definitions/guardianOnline_EnumUserLog_contentTypeFilter" },
						timestamp: { $ref: "#/definitions/guardianOnline_DateTimeFilter" },
						details: { $ref: "#/definitions/guardianOnline_JsonFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumUserLog_logTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
					},
				},
				guardianOnline_EnumUserLog_contentTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				guardianOnline_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				guardianOnline_UserLogOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						logType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						contentType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_UserLogWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_findFirstUserLogOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								logType: { type: "string", enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"] },
								contentType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "logType", "contentType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/FindFirstUserOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/guardianOnline_UserOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/guardianOnline_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "guardianOnline_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				guardianOnline_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_UserWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						username: { $ref: "#/definitions/guardianOnline_StringFilter" },
						password: { $ref: "#/definitions/guardianOnline_StringFilter" },
						role: { $ref: "#/definitions/guardianOnline_EnumUser_roleFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				guardianOnline_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_findFirstUserOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/FindManyFeature": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/guardianOnline_FeatureOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/guardianOnline_FeatureWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "guardianOnline_FeatureScalarFieldEnum",
						enum: ["id", "featureType", "content", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				guardianOnline_FeatureWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						featureType: { $ref: "#/definitions/guardianOnline_EnumFeature_featureTypeFilter" },
						content: { $ref: "#/definitions/guardianOnline_JsonFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumFeature_featureTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
					},
				},
				guardianOnline_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				guardianOnline_FeatureOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						featureType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_FeatureWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_findManyFeature: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									featureType: { type: "string", enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"] },
									content: {},
									userId: { type: "string" },
								},
								additionalProperties: false,
								required: ["id", "featureType", "content", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["guardianOnline_findManyFeature"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/FindManyUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/guardianOnline_UserOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/guardianOnline_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "guardianOnline_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				guardianOnline_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_UserWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						username: { $ref: "#/definitions/guardianOnline_StringFilter" },
						password: { $ref: "#/definitions/guardianOnline_StringFilter" },
						role: { $ref: "#/definitions/guardianOnline_EnumUser_roleFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				guardianOnline_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_findManyUser: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									username: { type: "string" },
									password: { type: "string" },
									role: { type: "string", enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"] },
								},
								additionalProperties: false,
								required: ["id", "username", "password", "role"],
							},
						},
					},
					additionalProperties: false,
					required: ["guardianOnline_findManyUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/FindManyUserLog": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/guardianOnline_UserLogOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/guardianOnline_UserLogWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "guardianOnline_UserLogScalarFieldEnum",
						enum: ["id", "logType", "contentType", "timestamp", "details", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				guardianOnline_UserLogWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						logType: { $ref: "#/definitions/guardianOnline_EnumUserLog_logTypeFilter" },
						contentType: { $ref: "#/definitions/guardianOnline_EnumUserLog_contentTypeFilter" },
						timestamp: { $ref: "#/definitions/guardianOnline_DateTimeFilter" },
						details: { $ref: "#/definitions/guardianOnline_JsonFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumUserLog_logTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
					},
				},
				guardianOnline_EnumUserLog_contentTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				guardianOnline_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				guardianOnline_UserLogOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						logType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						contentType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_UserLogWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_findManyUserLog: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									logType: { type: "string", enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"] },
									contentType: {
										type: "string",
										enum: [
											"CALL",
											"CHAT",
											"EMAIL",
											"WEB_USAGE",
											"IVR_HUGO_USAGE",
											"OUTBOUND_CORRESPONDENCE",
											"MARKETING_MATERIAL",
											"TEXT",
										],
									},
									timestamp: { type: "string" },
									details: {},
									userId: { type: "string" },
								},
								additionalProperties: false,
								required: ["id", "logType", "contentType", "timestamp", "details", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["guardianOnline_findManyUserLog"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/FindUniqueFeature": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/guardianOnline_FeatureWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				guardianOnline_FeatureWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_findUniqueFeature: {
							type: "object",
							properties: {
								id: { type: "string" },
								featureType: { type: "string", enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"] },
								content: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "featureType", "content", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/FindUniqueFeatureOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/guardianOnline_FeatureWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				guardianOnline_FeatureWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_findUniqueFeatureOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								featureType: { type: "string", enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"] },
								content: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "featureType", "content", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/FindUniqueUser": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/guardianOnline_UserWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				guardianOnline_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_findUniqueUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/FindUniqueUserLog": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/guardianOnline_UserLogWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				guardianOnline_UserLogWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_findUniqueUserLog: {
							type: "object",
							properties: {
								id: { type: "string" },
								logType: { type: "string", enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"] },
								contentType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "logType", "contentType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/FindUniqueUserLogOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/guardianOnline_UserLogWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				guardianOnline_UserLogWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_findUniqueUserLogOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								logType: { type: "string", enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"] },
								contentType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "logType", "contentType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/FindUniqueUserOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/guardianOnline_UserWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				guardianOnline_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_findUniqueUserOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/GroupByFeature": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/guardianOnline_FeatureOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "guardianOnline_FeatureScalarFieldEnum",
						enum: ["id", "featureType", "content", "userId"],
					},
				},
				having: { $ref: "#/definitions/guardianOnline_FeatureScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				guardianOnline_FeatureWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						featureType: { $ref: "#/definitions/guardianOnline_EnumFeature_featureTypeFilter" },
						content: { $ref: "#/definitions/guardianOnline_JsonFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumFeature_featureTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
					},
				},
				guardianOnline_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				guardianOnline_FeatureOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						featureType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/guardianOnline_FeatureCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/guardianOnline_FeatureMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/guardianOnline_FeatureMinOrderByAggregateInput" },
					},
				},
				guardianOnline_FeatureCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						featureType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_FeatureMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						featureType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_FeatureMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						featureType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_FeatureScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_FeatureScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/guardianOnline_FeatureScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/guardianOnline_FeatureScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/guardianOnline_StringWithAggregatesFilter" },
						featureType: { $ref: "#/definitions/guardianOnline_EnumFeature_featureTypeWithAggregatesFilter" },
						content: { $ref: "#/definitions/guardianOnline_JsonWithAggregatesFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringWithAggregatesFilter" },
					},
				},
				guardianOnline_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
						_min: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
						_max: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
						_min: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
						_max: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
					},
				},
				guardianOnline_EnumFeature_featureTypeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						_count: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
						_min: { $ref: "#/definitions/guardianOnline_NestedEnumFeature_featureTypeFilter" },
						_max: { $ref: "#/definitions/guardianOnline_NestedEnumFeature_featureTypeFilter" },
					},
				},
				guardianOnline_NestedEnumFeature_featureTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
					},
				},
				guardianOnline_JsonWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
						_count: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
						_min: { $ref: "#/definitions/guardianOnline_NestedJsonFilter" },
						_max: { $ref: "#/definitions/guardianOnline_NestedJsonFilter" },
					},
				},
				guardianOnline_NestedJsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_groupByFeature: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									featureType: { type: "string", enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"] },
									content: {},
									userId: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											featureType: { type: "integer" },
											content: { type: "integer" },
											userId: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "featureType", "content", "userId", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											featureType: {
												type: "string",
												enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
											},
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											featureType: {
												type: "string",
												enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
											},
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "featureType", "content", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["guardianOnline_groupByFeature"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/GroupByUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/guardianOnline_UserOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "guardianOnline_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
				having: { $ref: "#/definitions/guardianOnline_UserScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				guardianOnline_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_UserWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						username: { $ref: "#/definitions/guardianOnline_StringFilter" },
						password: { $ref: "#/definitions/guardianOnline_StringFilter" },
						role: { $ref: "#/definitions/guardianOnline_EnumUser_roleFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				guardianOnline_UserOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/guardianOnline_UserCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/guardianOnline_UserMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/guardianOnline_UserMinOrderByAggregateInput" },
					},
				},
				guardianOnline_UserCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_UserMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_UserMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_UserScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/guardianOnline_UserScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/guardianOnline_UserScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/guardianOnline_StringWithAggregatesFilter" },
						username: { $ref: "#/definitions/guardianOnline_StringWithAggregatesFilter" },
						password: { $ref: "#/definitions/guardianOnline_StringWithAggregatesFilter" },
						role: { $ref: "#/definitions/guardianOnline_EnumUser_roleWithAggregatesFilter" },
					},
				},
				guardianOnline_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
						_min: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
						_max: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
						_min: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
						_max: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
					},
				},
				guardianOnline_EnumUser_roleWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
						_count: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
						_min: { $ref: "#/definitions/guardianOnline_NestedEnumUser_roleFilter" },
						_max: { $ref: "#/definitions/guardianOnline_NestedEnumUser_roleFilter" },
					},
				},
				guardianOnline_NestedEnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_groupByUser: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									username: { type: "string" },
									password: { type: "string" },
									role: { type: "string", enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"] },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											username: { type: "integer" },
											password: { type: "integer" },
											role: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "username", "password", "role", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											username: { type: "string" },
											password: { type: "string" },
											role: { type: "string", enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"] },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											username: { type: "string" },
											password: { type: "string" },
											role: { type: "string", enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"] },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "username", "password", "role"],
							},
						},
					},
					additionalProperties: false,
					required: ["guardianOnline_groupByUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/GroupByUserLog": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/guardianOnline_UserLogOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "guardianOnline_UserLogScalarFieldEnum",
						enum: ["id", "logType", "contentType", "timestamp", "details", "userId"],
					},
				},
				having: { $ref: "#/definitions/guardianOnline_UserLogScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				guardianOnline_UserLogWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						logType: { $ref: "#/definitions/guardianOnline_EnumUserLog_logTypeFilter" },
						contentType: { $ref: "#/definitions/guardianOnline_EnumUserLog_contentTypeFilter" },
						timestamp: { $ref: "#/definitions/guardianOnline_DateTimeFilter" },
						details: { $ref: "#/definitions/guardianOnline_JsonFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumUserLog_logTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
					},
				},
				guardianOnline_EnumUserLog_contentTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				guardianOnline_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				guardianOnline_UserLogOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						logType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						contentType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/guardianOnline_UserLogCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/guardianOnline_UserLogMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/guardianOnline_UserLogMinOrderByAggregateInput" },
					},
				},
				guardianOnline_UserLogCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						logType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						contentType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_UserLogMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						logType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						contentType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_UserLogMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "guardianOnline_SortOrder", enum: ["asc", "desc"] },
						logType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						contentType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				guardianOnline_UserLogScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserLogScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/guardianOnline_UserLogScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/guardianOnline_UserLogScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/guardianOnline_StringWithAggregatesFilter" },
						logType: { $ref: "#/definitions/guardianOnline_EnumUserLog_logTypeWithAggregatesFilter" },
						contentType: { $ref: "#/definitions/guardianOnline_EnumUserLog_contentTypeWithAggregatesFilter" },
						timestamp: { $ref: "#/definitions/guardianOnline_DateTimeWithAggregatesFilter" },
						details: { $ref: "#/definitions/guardianOnline_JsonWithAggregatesFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringWithAggregatesFilter" },
					},
				},
				guardianOnline_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
						_min: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
						_max: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
						_min: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
						_max: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
					},
				},
				guardianOnline_EnumUserLog_logTypeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						_count: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
						_min: { $ref: "#/definitions/guardianOnline_NestedEnumUserLog_logTypeFilter" },
						_max: { $ref: "#/definitions/guardianOnline_NestedEnumUserLog_logTypeFilter" },
					},
				},
				guardianOnline_NestedEnumUserLog_logTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
					},
				},
				guardianOnline_EnumUserLog_contentTypeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						_count: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
						_min: { $ref: "#/definitions/guardianOnline_NestedEnumUserLog_contentTypeFilter" },
						_max: { $ref: "#/definitions/guardianOnline_NestedEnumUserLog_contentTypeFilter" },
					},
				},
				guardianOnline_NestedEnumUserLog_contentTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				guardianOnline_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
						_min: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
						_min: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_JsonWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
						_count: { $ref: "#/definitions/guardianOnline_NestedIntFilter" },
						_min: { $ref: "#/definitions/guardianOnline_NestedJsonFilter" },
						_max: { $ref: "#/definitions/guardianOnline_NestedJsonFilter" },
					},
				},
				guardianOnline_NestedJsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_groupByUserLog: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									logType: { type: "string", enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"] },
									contentType: {
										type: "string",
										enum: [
											"CALL",
											"CHAT",
											"EMAIL",
											"WEB_USAGE",
											"IVR_HUGO_USAGE",
											"OUTBOUND_CORRESPONDENCE",
											"MARKETING_MATERIAL",
											"TEXT",
										],
									},
									timestamp: { type: "string" },
									details: {},
									userId: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											logType: { type: "integer" },
											contentType: { type: "integer" },
											timestamp: { type: "integer" },
											details: { type: "integer" },
											userId: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "logType", "contentType", "timestamp", "details", "userId", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											logType: { type: "string", enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"] },
											contentType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											timestamp: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											logType: { type: "string", enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"] },
											contentType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											timestamp: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "logType", "contentType", "timestamp", "details", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["guardianOnline_groupByUserLog"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/QueryRaw": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_queryRaw: {
							type: "array",
							items: {
								type: "object",
								properties: {
									ID: { type: "string" },
									Int: { type: "integer" },
									Float: { type: "number" },
									String: { type: "string" },
									Boolean: { type: "boolean" },
									DateTime: { type: "string" },
									JSON: {},
									Object: {
										type: "object",
										properties: {
											ID: { type: "string" },
											Int: { type: "integer" },
											Float: { type: "number" },
											String: { type: "string" },
											Boolean: { type: "boolean" },
											DateTime: { type: "string" },
											JSON: {},
											OptionalID: { type: "string" },
											OptionalInt: { type: "integer" },
											OptionalFloat: { type: "number" },
											OptionalString: { type: "string" },
											OptionalBoolean: { type: "boolean" },
											OptionalDateTime: { type: "string" },
											OptionalJSON: {},
										},
										additionalProperties: false,
										required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
									},
									Array: {
										type: "array",
										items: {
											type: "object",
											properties: {
												ID: { type: "string" },
												Int: { type: "integer" },
												Float: { type: "number" },
												String: { type: "string" },
												Boolean: { type: "boolean" },
												DateTime: { type: "string" },
												JSON: {},
												OptionalID: { type: "string" },
												OptionalInt: { type: "integer" },
												OptionalFloat: { type: "number" },
												OptionalString: { type: "string" },
												OptionalBoolean: { type: "boolean" },
												OptionalDateTime: { type: "string" },
												OptionalJSON: {},
											},
											additionalProperties: false,
											required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
										},
									},
									OptionalID: { type: "string" },
									OptionalInt: { type: "integer" },
									OptionalFloat: { type: "number" },
									OptionalString: { type: "string" },
									OptionalBoolean: { type: "boolean" },
									OptionalDateTime: { type: "string" },
									OptionalJSON: {},
									OptionalObject: {
										type: "object",
										properties: {
											ID: { type: "string" },
											Int: { type: "integer" },
											Float: { type: "number" },
											String: { type: "string" },
											Boolean: { type: "boolean" },
											DateTime: { type: "string" },
											JSON: {},
											OptionalID: { type: "string" },
											OptionalInt: { type: "integer" },
											OptionalFloat: { type: "number" },
											OptionalString: { type: "string" },
											OptionalBoolean: { type: "boolean" },
											OptionalDateTime: { type: "string" },
											OptionalJSON: {},
										},
										additionalProperties: false,
										required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
									},
									OptionalArray: {
										type: "array",
										items: {
											type: "object",
											properties: {
												ID: { type: "string" },
												Int: { type: "integer" },
												Float: { type: "number" },
												String: { type: "string" },
												Boolean: { type: "boolean" },
												DateTime: { type: "string" },
												JSON: {},
												OptionalID: { type: "string" },
												OptionalInt: { type: "integer" },
												OptionalFloat: { type: "number" },
												OptionalString: { type: "string" },
												OptionalBoolean: { type: "boolean" },
												OptionalDateTime: { type: "string" },
												OptionalJSON: {},
											},
											additionalProperties: false,
											required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
										},
									},
								},
								additionalProperties: false,
								required: [
									"ID",
									"Int",
									"Float",
									"String",
									"Boolean",
									"DateTime",
									"JSON",
									"Object",
									"Array",
									"OptionalArray",
								],
							},
						},
					},
					additionalProperties: false,
					required: ["guardianOnline_queryRaw"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"guardianOnline/QueryRawJSON": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: { type: "object", properties: { guardianOnline_queryRawJSON: {} }, additionalProperties: false },
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/AggregateAsset": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_AssetOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_AssetWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_AssetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						assetType: { $ref: "#/definitions/livingBalanceSheet_EnumAsset_assetTypeFilter" },
						value: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumAsset_assetTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_AssetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						assetType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						value: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_AssetWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_aggregateAsset: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										assetType: { type: "integer" },
										value: { type: "integer" },
										userId: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "assetType", "value", "userId", "_all"],
								},
								_avg: { type: "object", properties: { value: { type: "number" } }, additionalProperties: false },
								_sum: { type: "object", properties: { value: { type: "number" } }, additionalProperties: false },
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										assetType: { type: "string", enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"] },
										value: { type: "number" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										assetType: { type: "string", enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"] },
										value: { type: "number" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["livingBalanceSheet_aggregateAsset"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/AggregateFinancialGoal": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_FinancialGoalWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						},
						NOT: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						goalType: { $ref: "#/definitions/livingBalanceSheet_EnumFinancialGoal_goalTypeFilter" },
						target: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						deadline: { $ref: "#/definitions/livingBalanceSheet_DateTimeFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumFinancialGoal_goalTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
				livingBalanceSheet_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
				livingBalanceSheet_FinancialGoalOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						goalType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						target: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						deadline: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_FinancialGoalWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_aggregateFinancialGoal: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										goalType: { type: "integer" },
										target: { type: "integer" },
										deadline: { type: "integer" },
										userId: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "goalType", "target", "deadline", "userId", "_all"],
								},
								_avg: { type: "object", properties: { target: { type: "number" } }, additionalProperties: false },
								_sum: { type: "object", properties: { target: { type: "number" } }, additionalProperties: false },
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										goalType: { type: "string", enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"] },
										target: { type: "number" },
										deadline: { type: "string" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										goalType: { type: "string", enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"] },
										target: { type: "number" },
										deadline: { type: "string" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["livingBalanceSheet_aggregateFinancialGoal"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/AggregateLiability": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_LiabilityOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_LiabilityWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						liabilityType: { $ref: "#/definitions/livingBalanceSheet_EnumLiability_liabilityTypeFilter" },
						amount: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumLiability_liabilityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_LiabilityOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						liabilityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_LiabilityWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_aggregateLiability: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										liabilityType: { type: "integer" },
										amount: { type: "integer" },
										userId: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "liabilityType", "amount", "userId", "_all"],
								},
								_avg: { type: "object", properties: { amount: { type: "number" } }, additionalProperties: false },
								_sum: { type: "object", properties: { amount: { type: "number" } }, additionalProperties: false },
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										liabilityType: { type: "string", enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"] },
										amount: { type: "number" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										liabilityType: { type: "string", enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"] },
										amount: { type: "number" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["livingBalanceSheet_aggregateLiability"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/AggregateUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_UserOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						username: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						password: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						role: { $ref: "#/definitions/livingBalanceSheet_EnumUser_roleFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
					},
				},
				livingBalanceSheet_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_aggregateUser: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										username: { type: "integer" },
										password: { type: "integer" },
										role: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "username", "password", "role", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										username: { type: "string" },
										password: { type: "string" },
										role: { type: "string", enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"] },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										username: { type: "string" },
										password: { type: "string" },
										role: { type: "string", enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"] },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["livingBalanceSheet_aggregateUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindFirstAsset": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_AssetOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_AssetWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_AssetScalarFieldEnum",
						enum: ["id", "assetType", "value", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_AssetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						assetType: { $ref: "#/definitions/livingBalanceSheet_EnumAsset_assetTypeFilter" },
						value: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumAsset_assetTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_AssetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						assetType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						value: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_AssetWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findFirstAsset: {
							type: "object",
							properties: {
								id: { type: "string" },
								assetType: { type: "string", enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"] },
								value: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "assetType", "value", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindFirstAssetOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_AssetOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_AssetWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_AssetScalarFieldEnum",
						enum: ["id", "assetType", "value", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_AssetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						assetType: { $ref: "#/definitions/livingBalanceSheet_EnumAsset_assetTypeFilter" },
						value: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumAsset_assetTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_AssetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						assetType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						value: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_AssetWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findFirstAssetOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								assetType: { type: "string", enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"] },
								value: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "assetType", "value", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindFirstFinancialGoal": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_FinancialGoalScalarFieldEnum",
						enum: ["id", "goalType", "target", "deadline", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_FinancialGoalWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						},
						NOT: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						goalType: { $ref: "#/definitions/livingBalanceSheet_EnumFinancialGoal_goalTypeFilter" },
						target: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						deadline: { $ref: "#/definitions/livingBalanceSheet_DateTimeFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumFinancialGoal_goalTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
				livingBalanceSheet_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
				livingBalanceSheet_FinancialGoalOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						goalType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						target: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						deadline: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_FinancialGoalWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findFirstFinancialGoal: {
							type: "object",
							properties: {
								id: { type: "string" },
								goalType: { type: "string", enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"] },
								target: { type: "number" },
								deadline: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "goalType", "target", "deadline", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindFirstFinancialGoalOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_FinancialGoalScalarFieldEnum",
						enum: ["id", "goalType", "target", "deadline", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_FinancialGoalWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						},
						NOT: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						goalType: { $ref: "#/definitions/livingBalanceSheet_EnumFinancialGoal_goalTypeFilter" },
						target: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						deadline: { $ref: "#/definitions/livingBalanceSheet_DateTimeFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumFinancialGoal_goalTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
				livingBalanceSheet_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
				livingBalanceSheet_FinancialGoalOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						goalType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						target: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						deadline: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_FinancialGoalWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findFirstFinancialGoalOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								goalType: { type: "string", enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"] },
								target: { type: "number" },
								deadline: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "goalType", "target", "deadline", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindFirstLiability": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_LiabilityOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_LiabilityScalarFieldEnum",
						enum: ["id", "liabilityType", "amount", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_LiabilityWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						liabilityType: { $ref: "#/definitions/livingBalanceSheet_EnumLiability_liabilityTypeFilter" },
						amount: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumLiability_liabilityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_LiabilityOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						liabilityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_LiabilityWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findFirstLiability: {
							type: "object",
							properties: {
								id: { type: "string" },
								liabilityType: { type: "string", enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"] },
								amount: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "liabilityType", "amount", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindFirstLiabilityOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_LiabilityOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_LiabilityScalarFieldEnum",
						enum: ["id", "liabilityType", "amount", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_LiabilityWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						liabilityType: { $ref: "#/definitions/livingBalanceSheet_EnumLiability_liabilityTypeFilter" },
						amount: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumLiability_liabilityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_LiabilityOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						liabilityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_LiabilityWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findFirstLiabilityOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								liabilityType: { type: "string", enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"] },
								amount: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "liabilityType", "amount", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindFirstUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_UserOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						username: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						password: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						role: { $ref: "#/definitions/livingBalanceSheet_EnumUser_roleFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
					},
				},
				livingBalanceSheet_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findFirstUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindFirstUserOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_UserOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						username: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						password: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						role: { $ref: "#/definitions/livingBalanceSheet_EnumUser_roleFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
					},
				},
				livingBalanceSheet_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findFirstUserOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindManyAsset": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_AssetOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_AssetWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_AssetScalarFieldEnum",
						enum: ["id", "assetType", "value", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_AssetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						assetType: { $ref: "#/definitions/livingBalanceSheet_EnumAsset_assetTypeFilter" },
						value: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumAsset_assetTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_AssetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						assetType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						value: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_AssetWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findManyAsset: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									assetType: { type: "string", enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"] },
									value: { type: "number" },
									userId: { type: "string" },
								},
								additionalProperties: false,
								required: ["id", "assetType", "value", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["livingBalanceSheet_findManyAsset"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindManyFinancialGoal": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_FinancialGoalScalarFieldEnum",
						enum: ["id", "goalType", "target", "deadline", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_FinancialGoalWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						},
						NOT: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						goalType: { $ref: "#/definitions/livingBalanceSheet_EnumFinancialGoal_goalTypeFilter" },
						target: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						deadline: { $ref: "#/definitions/livingBalanceSheet_DateTimeFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumFinancialGoal_goalTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
				livingBalanceSheet_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
				livingBalanceSheet_FinancialGoalOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						goalType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						target: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						deadline: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_FinancialGoalWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findManyFinancialGoal: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									goalType: { type: "string", enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"] },
									target: { type: "number" },
									deadline: { type: "string" },
									userId: { type: "string" },
								},
								additionalProperties: false,
								required: ["id", "goalType", "target", "deadline", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["livingBalanceSheet_findManyFinancialGoal"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindManyLiability": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_LiabilityOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_LiabilityScalarFieldEnum",
						enum: ["id", "liabilityType", "amount", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_LiabilityWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						liabilityType: { $ref: "#/definitions/livingBalanceSheet_EnumLiability_liabilityTypeFilter" },
						amount: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumLiability_liabilityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_LiabilityOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						liabilityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_LiabilityWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findManyLiability: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									liabilityType: { type: "string", enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"] },
									amount: { type: "number" },
									userId: { type: "string" },
								},
								additionalProperties: false,
								required: ["id", "liabilityType", "amount", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["livingBalanceSheet_findManyLiability"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindManyUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_UserOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/livingBalanceSheet_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						username: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						password: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						role: { $ref: "#/definitions/livingBalanceSheet_EnumUser_roleFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
					},
				},
				livingBalanceSheet_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findManyUser: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									username: { type: "string" },
									password: { type: "string" },
									role: { type: "string", enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"] },
								},
								additionalProperties: false,
								required: ["id", "username", "password", "role"],
							},
						},
					},
					additionalProperties: false,
					required: ["livingBalanceSheet_findManyUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindUniqueAsset": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_AssetWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				livingBalanceSheet_AssetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findUniqueAsset: {
							type: "object",
							properties: {
								id: { type: "string" },
								assetType: { type: "string", enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"] },
								value: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "assetType", "value", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindUniqueAssetOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_AssetWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				livingBalanceSheet_AssetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findUniqueAssetOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								assetType: { type: "string", enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"] },
								value: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "assetType", "value", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindUniqueFinancialGoal": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				livingBalanceSheet_FinancialGoalWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findUniqueFinancialGoal: {
							type: "object",
							properties: {
								id: { type: "string" },
								goalType: { type: "string", enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"] },
								target: { type: "number" },
								deadline: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "goalType", "target", "deadline", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindUniqueFinancialGoalOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				livingBalanceSheet_FinancialGoalWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findUniqueFinancialGoalOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								goalType: { type: "string", enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"] },
								target: { type: "number" },
								deadline: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "goalType", "target", "deadline", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindUniqueLiability": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				livingBalanceSheet_LiabilityWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findUniqueLiability: {
							type: "object",
							properties: {
								id: { type: "string" },
								liabilityType: { type: "string", enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"] },
								amount: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "liabilityType", "amount", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindUniqueLiabilityOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				livingBalanceSheet_LiabilityWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findUniqueLiabilityOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								liabilityType: { type: "string", enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"] },
								amount: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "liabilityType", "amount", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindUniqueUser": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_UserWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				livingBalanceSheet_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findUniqueUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/FindUniqueUserOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_UserWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				livingBalanceSheet_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_findUniqueUserOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/GroupByAsset": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_AssetOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_AssetScalarFieldEnum",
						enum: ["id", "assetType", "value", "userId"],
					},
				},
				having: { $ref: "#/definitions/livingBalanceSheet_AssetScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_AssetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						assetType: { $ref: "#/definitions/livingBalanceSheet_EnumAsset_assetTypeFilter" },
						value: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumAsset_assetTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_AssetOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						assetType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						value: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/livingBalanceSheet_AssetCountOrderByAggregateInput" },
						_avg: { $ref: "#/definitions/livingBalanceSheet_AssetAvgOrderByAggregateInput" },
						_max: { $ref: "#/definitions/livingBalanceSheet_AssetMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/livingBalanceSheet_AssetMinOrderByAggregateInput" },
						_sum: { $ref: "#/definitions/livingBalanceSheet_AssetSumOrderByAggregateInput" },
					},
				},
				livingBalanceSheet_AssetCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						assetType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						value: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_AssetAvgOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						value: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_AssetMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						assetType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						value: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_AssetMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						assetType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						value: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_AssetSumOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						value: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_AssetScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_AssetScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/livingBalanceSheet_AssetScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/livingBalanceSheet_AssetScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringWithAggregatesFilter" },
						assetType: { $ref: "#/definitions/livingBalanceSheet_EnumAsset_assetTypeWithAggregatesFilter" },
						value: { $ref: "#/definitions/livingBalanceSheet_FloatWithAggregatesFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringWithAggregatesFilter" },
					},
				},
				livingBalanceSheet_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
					},
				},
				livingBalanceSheet_EnumAsset_assetTypeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedEnumAsset_assetTypeFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedEnumAsset_assetTypeFilter" },
					},
				},
				livingBalanceSheet_NestedEnumAsset_assetTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
					},
				},
				livingBalanceSheet_FloatWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_avg: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_sum: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_avg: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_sum: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_groupByAsset: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									assetType: { type: "string", enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"] },
									value: { type: "number" },
									userId: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											assetType: { type: "integer" },
											value: { type: "integer" },
											userId: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "assetType", "value", "userId", "_all"],
									},
									_avg: { type: "object", properties: { value: { type: "number" } }, additionalProperties: false },
									_sum: { type: "object", properties: { value: { type: "number" } }, additionalProperties: false },
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											assetType: { type: "string", enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"] },
											value: { type: "number" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											assetType: { type: "string", enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"] },
											value: { type: "number" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "assetType", "value", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["livingBalanceSheet_groupByAsset"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/GroupByFinancialGoal": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_FinancialGoalScalarFieldEnum",
						enum: ["id", "goalType", "target", "deadline", "userId"],
					},
				},
				having: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_FinancialGoalWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						},
						NOT: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						goalType: { $ref: "#/definitions/livingBalanceSheet_EnumFinancialGoal_goalTypeFilter" },
						target: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						deadline: { $ref: "#/definitions/livingBalanceSheet_DateTimeFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumFinancialGoal_goalTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
				livingBalanceSheet_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
				livingBalanceSheet_FinancialGoalOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						goalType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						target: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						deadline: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalCountOrderByAggregateInput" },
						_avg: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalAvgOrderByAggregateInput" },
						_max: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalMinOrderByAggregateInput" },
						_sum: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalSumOrderByAggregateInput" },
					},
				},
				livingBalanceSheet_FinancialGoalCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						goalType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						target: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						deadline: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_FinancialGoalAvgOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						target: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_FinancialGoalMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						goalType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						target: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						deadline: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_FinancialGoalMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						goalType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						target: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						deadline: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_FinancialGoalSumOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						target: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_FinancialGoalScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringWithAggregatesFilter" },
						goalType: { $ref: "#/definitions/livingBalanceSheet_EnumFinancialGoal_goalTypeWithAggregatesFilter" },
						target: { $ref: "#/definitions/livingBalanceSheet_FloatWithAggregatesFilter" },
						deadline: { $ref: "#/definitions/livingBalanceSheet_DateTimeWithAggregatesFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringWithAggregatesFilter" },
					},
				},
				livingBalanceSheet_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
					},
				},
				livingBalanceSheet_EnumFinancialGoal_goalTypeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedEnumFinancialGoal_goalTypeFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedEnumFinancialGoal_goalTypeFilter" },
					},
				},
				livingBalanceSheet_NestedEnumFinancialGoal_goalTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
					},
				},
				livingBalanceSheet_FloatWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_avg: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_sum: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_avg: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_sum: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
				livingBalanceSheet_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_groupByFinancialGoal: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									goalType: { type: "string", enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"] },
									target: { type: "number" },
									deadline: { type: "string" },
									userId: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											goalType: { type: "integer" },
											target: { type: "integer" },
											deadline: { type: "integer" },
											userId: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "goalType", "target", "deadline", "userId", "_all"],
									},
									_avg: { type: "object", properties: { target: { type: "number" } }, additionalProperties: false },
									_sum: { type: "object", properties: { target: { type: "number" } }, additionalProperties: false },
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											goalType: { type: "string", enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"] },
											target: { type: "number" },
											deadline: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											goalType: { type: "string", enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"] },
											target: { type: "number" },
											deadline: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "goalType", "target", "deadline", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["livingBalanceSheet_groupByFinancialGoal"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/GroupByLiability": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_LiabilityOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_LiabilityScalarFieldEnum",
						enum: ["id", "liabilityType", "amount", "userId"],
					},
				},
				having: { $ref: "#/definitions/livingBalanceSheet_LiabilityScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_LiabilityWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						liabilityType: { $ref: "#/definitions/livingBalanceSheet_EnumLiability_liabilityTypeFilter" },
						amount: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumLiability_liabilityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_LiabilityOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						liabilityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/livingBalanceSheet_LiabilityCountOrderByAggregateInput" },
						_avg: { $ref: "#/definitions/livingBalanceSheet_LiabilityAvgOrderByAggregateInput" },
						_max: { $ref: "#/definitions/livingBalanceSheet_LiabilityMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/livingBalanceSheet_LiabilityMinOrderByAggregateInput" },
						_sum: { $ref: "#/definitions/livingBalanceSheet_LiabilitySumOrderByAggregateInput" },
					},
				},
				livingBalanceSheet_LiabilityCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						liabilityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_LiabilityAvgOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						amount: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_LiabilityMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						liabilityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_LiabilityMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						liabilityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_LiabilitySumOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						amount: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_LiabilityScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_LiabilityScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/livingBalanceSheet_LiabilityScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/livingBalanceSheet_LiabilityScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringWithAggregatesFilter" },
						liabilityType: { $ref: "#/definitions/livingBalanceSheet_EnumLiability_liabilityTypeWithAggregatesFilter" },
						amount: { $ref: "#/definitions/livingBalanceSheet_FloatWithAggregatesFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringWithAggregatesFilter" },
					},
				},
				livingBalanceSheet_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
					},
				},
				livingBalanceSheet_EnumLiability_liabilityTypeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedEnumLiability_liabilityTypeFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedEnumLiability_liabilityTypeFilter" },
					},
				},
				livingBalanceSheet_NestedEnumLiability_liabilityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
					},
				},
				livingBalanceSheet_FloatWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_avg: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_sum: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_avg: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_sum: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_groupByLiability: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									liabilityType: { type: "string", enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"] },
									amount: { type: "number" },
									userId: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											liabilityType: { type: "integer" },
											amount: { type: "integer" },
											userId: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "liabilityType", "amount", "userId", "_all"],
									},
									_avg: { type: "object", properties: { amount: { type: "number" } }, additionalProperties: false },
									_sum: { type: "object", properties: { amount: { type: "number" } }, additionalProperties: false },
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											liabilityType: { type: "string", enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"] },
											amount: { type: "number" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											liabilityType: { type: "string", enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"] },
											amount: { type: "number" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "liabilityType", "amount", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["livingBalanceSheet_groupByLiability"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/GroupByUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/livingBalanceSheet_UserOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "livingBalanceSheet_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
				having: { $ref: "#/definitions/livingBalanceSheet_UserScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						username: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						password: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						role: { $ref: "#/definitions/livingBalanceSheet_EnumUser_roleFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
					},
				},
				livingBalanceSheet_UserOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/livingBalanceSheet_UserCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/livingBalanceSheet_UserMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/livingBalanceSheet_UserMinOrderByAggregateInput" },
					},
				},
				livingBalanceSheet_UserCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_UserMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_UserMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				livingBalanceSheet_UserScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_UserScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/livingBalanceSheet_UserScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/livingBalanceSheet_UserScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringWithAggregatesFilter" },
						username: { $ref: "#/definitions/livingBalanceSheet_StringWithAggregatesFilter" },
						password: { $ref: "#/definitions/livingBalanceSheet_StringWithAggregatesFilter" },
						role: { $ref: "#/definitions/livingBalanceSheet_EnumUser_roleWithAggregatesFilter" },
					},
				},
				livingBalanceSheet_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
					},
				},
				livingBalanceSheet_EnumUser_roleWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
						_count: { $ref: "#/definitions/livingBalanceSheet_NestedIntFilter" },
						_min: { $ref: "#/definitions/livingBalanceSheet_NestedEnumUser_roleFilter" },
						_max: { $ref: "#/definitions/livingBalanceSheet_NestedEnumUser_roleFilter" },
					},
				},
				livingBalanceSheet_NestedEnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_groupByUser: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									username: { type: "string" },
									password: { type: "string" },
									role: { type: "string", enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"] },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											username: { type: "integer" },
											password: { type: "integer" },
											role: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "username", "password", "role", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											username: { type: "string" },
											password: { type: "string" },
											role: { type: "string", enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"] },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											username: { type: "string" },
											password: { type: "string" },
											role: { type: "string", enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"] },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "username", "password", "role"],
							},
						},
					},
					additionalProperties: false,
					required: ["livingBalanceSheet_groupByUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/QueryRaw": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_queryRaw: {
							type: "array",
							items: {
								type: "object",
								properties: {
									ID: { type: "string" },
									Int: { type: "integer" },
									Float: { type: "number" },
									String: { type: "string" },
									Boolean: { type: "boolean" },
									DateTime: { type: "string" },
									JSON: {},
									Object: {
										type: "object",
										properties: {
											ID: { type: "string" },
											Int: { type: "integer" },
											Float: { type: "number" },
											String: { type: "string" },
											Boolean: { type: "boolean" },
											DateTime: { type: "string" },
											JSON: {},
											OptionalID: { type: "string" },
											OptionalInt: { type: "integer" },
											OptionalFloat: { type: "number" },
											OptionalString: { type: "string" },
											OptionalBoolean: { type: "boolean" },
											OptionalDateTime: { type: "string" },
											OptionalJSON: {},
										},
										additionalProperties: false,
										required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
									},
									Array: {
										type: "array",
										items: {
											type: "object",
											properties: {
												ID: { type: "string" },
												Int: { type: "integer" },
												Float: { type: "number" },
												String: { type: "string" },
												Boolean: { type: "boolean" },
												DateTime: { type: "string" },
												JSON: {},
												OptionalID: { type: "string" },
												OptionalInt: { type: "integer" },
												OptionalFloat: { type: "number" },
												OptionalString: { type: "string" },
												OptionalBoolean: { type: "boolean" },
												OptionalDateTime: { type: "string" },
												OptionalJSON: {},
											},
											additionalProperties: false,
											required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
										},
									},
									OptionalID: { type: "string" },
									OptionalInt: { type: "integer" },
									OptionalFloat: { type: "number" },
									OptionalString: { type: "string" },
									OptionalBoolean: { type: "boolean" },
									OptionalDateTime: { type: "string" },
									OptionalJSON: {},
									OptionalObject: {
										type: "object",
										properties: {
											ID: { type: "string" },
											Int: { type: "integer" },
											Float: { type: "number" },
											String: { type: "string" },
											Boolean: { type: "boolean" },
											DateTime: { type: "string" },
											JSON: {},
											OptionalID: { type: "string" },
											OptionalInt: { type: "integer" },
											OptionalFloat: { type: "number" },
											OptionalString: { type: "string" },
											OptionalBoolean: { type: "boolean" },
											OptionalDateTime: { type: "string" },
											OptionalJSON: {},
										},
										additionalProperties: false,
										required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
									},
									OptionalArray: {
										type: "array",
										items: {
											type: "object",
											properties: {
												ID: { type: "string" },
												Int: { type: "integer" },
												Float: { type: "number" },
												String: { type: "string" },
												Boolean: { type: "boolean" },
												DateTime: { type: "string" },
												JSON: {},
												OptionalID: { type: "string" },
												OptionalInt: { type: "integer" },
												OptionalFloat: { type: "number" },
												OptionalString: { type: "string" },
												OptionalBoolean: { type: "boolean" },
												OptionalDateTime: { type: "string" },
												OptionalJSON: {},
											},
											additionalProperties: false,
											required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
										},
									},
								},
								additionalProperties: false,
								required: [
									"ID",
									"Int",
									"Float",
									"String",
									"Boolean",
									"DateTime",
									"JSON",
									"Object",
									"Array",
									"OptionalArray",
								],
							},
						},
					},
					additionalProperties: false,
					required: ["livingBalanceSheet_queryRaw"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"livingBalanceSheet/QueryRawJSON": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: { type: "object", properties: { livingBalanceSheet_queryRawJSON: {} }, additionalProperties: false },
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/AggregateClient": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/smartOffice_ClientOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/smartOffice_ClientWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				smartOffice_ClientWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_ClientWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						name: { $ref: "#/definitions/smartOffice_StringFilter" },
						email: { $ref: "#/definitions/smartOffice_StringFilter" },
						phone: { $ref: "#/definitions/smartOffice_StringFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_ClientOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						phone: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_aggregateClient: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										name: { type: "integer" },
										email: { type: "integer" },
										phone: { type: "integer" },
										userId: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "name", "email", "phone", "userId", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										phone: { type: "string" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										phone: { type: "string" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["smartOffice_aggregateClient"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/AggregateSale": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_SaleOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/smartOffice_SaleWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				smartOffice_SaleWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_SaleWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						saleType: { $ref: "#/definitions/smartOffice_EnumSale_saleTypeFilter" },
						amount: { $ref: "#/definitions/smartOffice_FloatFilter" },
						timestamp: { $ref: "#/definitions/smartOffice_DateTimeFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumSale_saleTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
					},
				},
				smartOffice_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
				smartOffice_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
				smartOffice_SaleOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						saleType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_SaleWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_aggregateSale: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										saleType: { type: "integer" },
										amount: { type: "integer" },
										timestamp: { type: "integer" },
										userId: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "saleType", "amount", "timestamp", "userId", "_all"],
								},
								_avg: { type: "object", properties: { amount: { type: "number" } }, additionalProperties: false },
								_sum: { type: "object", properties: { amount: { type: "number" } }, additionalProperties: false },
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										saleType: { type: "string", enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"] },
										amount: { type: "number" },
										timestamp: { type: "string" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										saleType: { type: "string", enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"] },
										amount: { type: "number" },
										timestamp: { type: "string" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["smartOffice_aggregateSale"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/AggregateTask": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_TaskOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/smartOffice_TaskWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				smartOffice_TaskWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_TaskWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						taskType: { $ref: "#/definitions/smartOffice_EnumTask_taskTypeFilter" },
						status: { $ref: "#/definitions/smartOffice_EnumTask_statusFilter" },
						details: { $ref: "#/definitions/smartOffice_JsonFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumTask_taskTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
					},
				},
				smartOffice_EnumTask_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
					},
				},
				smartOffice_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				smartOffice_TaskOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						taskType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						status: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_TaskWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_aggregateTask: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										taskType: { type: "integer" },
										status: { type: "integer" },
										details: { type: "integer" },
										userId: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "taskType", "status", "details", "userId", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										taskType: { type: "string", enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"] },
										status: { type: "string", enum: ["PENDING", "COMPLETED", "CANCELLED"] },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										taskType: { type: "string", enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"] },
										status: { type: "string", enum: ["PENDING", "COMPLETED", "CANCELLED"] },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["smartOffice_aggregateTask"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/AggregateUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_UserWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_UserOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/smartOffice_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				smartOffice_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_UserWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_UserWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						username: { $ref: "#/definitions/smartOffice_StringFilter" },
						password: { $ref: "#/definitions/smartOffice_StringFilter" },
						role: { $ref: "#/definitions/smartOffice_EnumUser_roleFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
					},
				},
				smartOffice_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						role: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_aggregateUser: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										username: { type: "integer" },
										password: { type: "integer" },
										role: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "username", "password", "role", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										username: { type: "string" },
										password: { type: "string" },
										role: { type: "string", enum: ["ADMIN", "AGENT", "SALES_REP"] },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										username: { type: "string" },
										password: { type: "string" },
										role: { type: "string", enum: ["ADMIN", "AGENT", "SALES_REP"] },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["smartOffice_aggregateUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindFirstClient": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/smartOffice_ClientOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/smartOffice_ClientWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_ClientScalarFieldEnum",
						enum: ["id", "name", "email", "phone", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				smartOffice_ClientWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_ClientWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						name: { $ref: "#/definitions/smartOffice_StringFilter" },
						email: { $ref: "#/definitions/smartOffice_StringFilter" },
						phone: { $ref: "#/definitions/smartOffice_StringFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_ClientOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						phone: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findFirstClient: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								phone: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "name", "email", "phone", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindFirstClientOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/smartOffice_ClientOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/smartOffice_ClientWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_ClientScalarFieldEnum",
						enum: ["id", "name", "email", "phone", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				smartOffice_ClientWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_ClientWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						name: { $ref: "#/definitions/smartOffice_StringFilter" },
						email: { $ref: "#/definitions/smartOffice_StringFilter" },
						phone: { $ref: "#/definitions/smartOffice_StringFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_ClientOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						phone: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findFirstClientOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								phone: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "name", "email", "phone", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindFirstSale": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_SaleOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/smartOffice_SaleWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_SaleScalarFieldEnum",
						enum: ["id", "saleType", "amount", "timestamp", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				smartOffice_SaleWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_SaleWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						saleType: { $ref: "#/definitions/smartOffice_EnumSale_saleTypeFilter" },
						amount: { $ref: "#/definitions/smartOffice_FloatFilter" },
						timestamp: { $ref: "#/definitions/smartOffice_DateTimeFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumSale_saleTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
					},
				},
				smartOffice_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
				smartOffice_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
				smartOffice_SaleOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						saleType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_SaleWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findFirstSale: {
							type: "object",
							properties: {
								id: { type: "string" },
								saleType: { type: "string", enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"] },
								amount: { type: "number" },
								timestamp: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "saleType", "amount", "timestamp", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindFirstSaleOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_SaleOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/smartOffice_SaleWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_SaleScalarFieldEnum",
						enum: ["id", "saleType", "amount", "timestamp", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				smartOffice_SaleWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_SaleWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						saleType: { $ref: "#/definitions/smartOffice_EnumSale_saleTypeFilter" },
						amount: { $ref: "#/definitions/smartOffice_FloatFilter" },
						timestamp: { $ref: "#/definitions/smartOffice_DateTimeFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumSale_saleTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
					},
				},
				smartOffice_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
				smartOffice_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
				smartOffice_SaleOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						saleType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_SaleWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findFirstSaleOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								saleType: { type: "string", enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"] },
								amount: { type: "number" },
								timestamp: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "saleType", "amount", "timestamp", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindFirstTask": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_TaskOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/smartOffice_TaskWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_TaskScalarFieldEnum",
						enum: ["id", "taskType", "status", "details", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				smartOffice_TaskWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_TaskWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						taskType: { $ref: "#/definitions/smartOffice_EnumTask_taskTypeFilter" },
						status: { $ref: "#/definitions/smartOffice_EnumTask_statusFilter" },
						details: { $ref: "#/definitions/smartOffice_JsonFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumTask_taskTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
					},
				},
				smartOffice_EnumTask_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
					},
				},
				smartOffice_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				smartOffice_TaskOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						taskType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						status: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_TaskWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findFirstTask: {
							type: "object",
							properties: {
								id: { type: "string" },
								taskType: { type: "string", enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"] },
								status: { type: "string", enum: ["PENDING", "COMPLETED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "taskType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindFirstTaskOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_TaskOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/smartOffice_TaskWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_TaskScalarFieldEnum",
						enum: ["id", "taskType", "status", "details", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				smartOffice_TaskWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_TaskWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						taskType: { $ref: "#/definitions/smartOffice_EnumTask_taskTypeFilter" },
						status: { $ref: "#/definitions/smartOffice_EnumTask_statusFilter" },
						details: { $ref: "#/definitions/smartOffice_JsonFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumTask_taskTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
					},
				},
				smartOffice_EnumTask_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
					},
				},
				smartOffice_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				smartOffice_TaskOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						taskType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						status: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_TaskWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findFirstTaskOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								taskType: { type: "string", enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"] },
								status: { type: "string", enum: ["PENDING", "COMPLETED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "taskType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindFirstUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_UserWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_UserOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/smartOffice_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				smartOffice_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_UserWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_UserWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						username: { $ref: "#/definitions/smartOffice_StringFilter" },
						password: { $ref: "#/definitions/smartOffice_StringFilter" },
						role: { $ref: "#/definitions/smartOffice_EnumUser_roleFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
					},
				},
				smartOffice_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						role: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findFirstUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "SALES_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindFirstUserOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_UserWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_UserOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/smartOffice_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				smartOffice_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_UserWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_UserWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						username: { $ref: "#/definitions/smartOffice_StringFilter" },
						password: { $ref: "#/definitions/smartOffice_StringFilter" },
						role: { $ref: "#/definitions/smartOffice_EnumUser_roleFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
					},
				},
				smartOffice_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						role: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findFirstUserOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "SALES_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindManyClient": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/smartOffice_ClientOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/smartOffice_ClientWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_ClientScalarFieldEnum",
						enum: ["id", "name", "email", "phone", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				smartOffice_ClientWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_ClientWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						name: { $ref: "#/definitions/smartOffice_StringFilter" },
						email: { $ref: "#/definitions/smartOffice_StringFilter" },
						phone: { $ref: "#/definitions/smartOffice_StringFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_ClientOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						phone: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findManyClient: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									name: { type: "string" },
									email: { type: "string" },
									phone: { type: "string" },
									userId: { type: "string" },
								},
								additionalProperties: false,
								required: ["id", "name", "email", "phone", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["smartOffice_findManyClient"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindManySale": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_SaleOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/smartOffice_SaleWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_SaleScalarFieldEnum",
						enum: ["id", "saleType", "amount", "timestamp", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				smartOffice_SaleWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_SaleWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						saleType: { $ref: "#/definitions/smartOffice_EnumSale_saleTypeFilter" },
						amount: { $ref: "#/definitions/smartOffice_FloatFilter" },
						timestamp: { $ref: "#/definitions/smartOffice_DateTimeFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumSale_saleTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
					},
				},
				smartOffice_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
				smartOffice_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
				smartOffice_SaleOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						saleType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_SaleWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findManySale: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									saleType: { type: "string", enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"] },
									amount: { type: "number" },
									timestamp: { type: "string" },
									userId: { type: "string" },
								},
								additionalProperties: false,
								required: ["id", "saleType", "amount", "timestamp", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["smartOffice_findManySale"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindManyTask": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_TaskOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/smartOffice_TaskWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_TaskScalarFieldEnum",
						enum: ["id", "taskType", "status", "details", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				smartOffice_TaskWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_TaskWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						taskType: { $ref: "#/definitions/smartOffice_EnumTask_taskTypeFilter" },
						status: { $ref: "#/definitions/smartOffice_EnumTask_statusFilter" },
						details: { $ref: "#/definitions/smartOffice_JsonFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumTask_taskTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
					},
				},
				smartOffice_EnumTask_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
					},
				},
				smartOffice_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				smartOffice_TaskOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						taskType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						status: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_TaskWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findManyTask: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									taskType: { type: "string", enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"] },
									status: { type: "string", enum: ["PENDING", "COMPLETED", "CANCELLED"] },
									details: {},
									userId: { type: "string" },
								},
								additionalProperties: false,
								required: ["id", "taskType", "status", "details", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["smartOffice_findManyTask"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindManyUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_UserWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_UserOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/smartOffice_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				smartOffice_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_UserWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_UserWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						username: { $ref: "#/definitions/smartOffice_StringFilter" },
						password: { $ref: "#/definitions/smartOffice_StringFilter" },
						role: { $ref: "#/definitions/smartOffice_EnumUser_roleFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
					},
				},
				smartOffice_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						role: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findManyUser: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									username: { type: "string" },
									password: { type: "string" },
									role: { type: "string", enum: ["ADMIN", "AGENT", "SALES_REP"] },
								},
								additionalProperties: false,
								required: ["id", "username", "password", "role"],
							},
						},
					},
					additionalProperties: false,
					required: ["smartOffice_findManyUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindUniqueClient": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_ClientWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				smartOffice_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findUniqueClient: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								phone: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "name", "email", "phone", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindUniqueClientOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_ClientWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				smartOffice_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findUniqueClientOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								phone: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "name", "email", "phone", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindUniqueSale": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_SaleWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				smartOffice_SaleWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findUniqueSale: {
							type: "object",
							properties: {
								id: { type: "string" },
								saleType: { type: "string", enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"] },
								amount: { type: "number" },
								timestamp: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "saleType", "amount", "timestamp", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindUniqueSaleOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_SaleWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				smartOffice_SaleWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findUniqueSaleOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								saleType: { type: "string", enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"] },
								amount: { type: "number" },
								timestamp: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "saleType", "amount", "timestamp", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindUniqueTask": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_TaskWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				smartOffice_TaskWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findUniqueTask: {
							type: "object",
							properties: {
								id: { type: "string" },
								taskType: { type: "string", enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"] },
								status: { type: "string", enum: ["PENDING", "COMPLETED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "taskType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindUniqueTaskOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_TaskWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				smartOffice_TaskWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findUniqueTaskOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								taskType: { type: "string", enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"] },
								status: { type: "string", enum: ["PENDING", "COMPLETED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "taskType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindUniqueUser": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_UserWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				smartOffice_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findUniqueUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "SALES_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/FindUniqueUserOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_UserWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				smartOffice_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_findUniqueUserOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "SALES_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/GroupByClient": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/smartOffice_ClientOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_ClientScalarFieldEnum",
						enum: ["id", "name", "email", "phone", "userId"],
					},
				},
				having: { $ref: "#/definitions/smartOffice_ClientScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				smartOffice_ClientWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_ClientWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						name: { $ref: "#/definitions/smartOffice_StringFilter" },
						email: { $ref: "#/definitions/smartOffice_StringFilter" },
						phone: { $ref: "#/definitions/smartOffice_StringFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_ClientOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						phone: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						_count: { $ref: "#/definitions/smartOffice_ClientCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/smartOffice_ClientMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/smartOffice_ClientMinOrderByAggregateInput" },
					},
				},
				smartOffice_ClientCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						phone: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_ClientMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						phone: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_ClientMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						phone: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_ClientScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_ClientScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/smartOffice_ClientScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/smartOffice_ClientScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/smartOffice_StringWithAggregatesFilter" },
						name: { $ref: "#/definitions/smartOffice_StringWithAggregatesFilter" },
						email: { $ref: "#/definitions/smartOffice_StringWithAggregatesFilter" },
						phone: { $ref: "#/definitions/smartOffice_StringWithAggregatesFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringWithAggregatesFilter" },
					},
				},
				smartOffice_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_groupByClient: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									name: { type: "string" },
									email: { type: "string" },
									phone: { type: "string" },
									userId: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											name: { type: "integer" },
											email: { type: "integer" },
											phone: { type: "integer" },
											userId: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "name", "email", "phone", "userId", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											name: { type: "string" },
											email: { type: "string" },
											phone: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											name: { type: "string" },
											email: { type: "string" },
											phone: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "name", "email", "phone", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["smartOffice_groupByClient"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/GroupBySale": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/smartOffice_SaleOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_SaleScalarFieldEnum",
						enum: ["id", "saleType", "amount", "timestamp", "userId"],
					},
				},
				having: { $ref: "#/definitions/smartOffice_SaleScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				smartOffice_SaleWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_SaleWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						saleType: { $ref: "#/definitions/smartOffice_EnumSale_saleTypeFilter" },
						amount: { $ref: "#/definitions/smartOffice_FloatFilter" },
						timestamp: { $ref: "#/definitions/smartOffice_DateTimeFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumSale_saleTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
					},
				},
				smartOffice_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
				smartOffice_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
				smartOffice_SaleOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						saleType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						_count: { $ref: "#/definitions/smartOffice_SaleCountOrderByAggregateInput" },
						_avg: { $ref: "#/definitions/smartOffice_SaleAvgOrderByAggregateInput" },
						_max: { $ref: "#/definitions/smartOffice_SaleMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/smartOffice_SaleMinOrderByAggregateInput" },
						_sum: { $ref: "#/definitions/smartOffice_SaleSumOrderByAggregateInput" },
					},
				},
				smartOffice_SaleCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						saleType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_SaleAvgOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						amount: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_SaleMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						saleType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_SaleMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						saleType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						amount: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_SaleSumOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						amount: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_SaleScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_SaleScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/smartOffice_SaleScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/smartOffice_SaleScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/smartOffice_StringWithAggregatesFilter" },
						saleType: { $ref: "#/definitions/smartOffice_EnumSale_saleTypeWithAggregatesFilter" },
						amount: { $ref: "#/definitions/smartOffice_FloatWithAggregatesFilter" },
						timestamp: { $ref: "#/definitions/smartOffice_DateTimeWithAggregatesFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringWithAggregatesFilter" },
					},
				},
				smartOffice_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
					},
				},
				smartOffice_EnumSale_saleTypeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedEnumSale_saleTypeFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedEnumSale_saleTypeFilter" },
					},
				},
				smartOffice_NestedEnumSale_saleTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
					},
				},
				smartOffice_FloatWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatWithAggregatesFilter" },
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_avg: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
						_sum: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_NestedFloatWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatWithAggregatesFilter" },
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_avg: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
						_sum: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
				smartOffice_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_groupBySale: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									saleType: { type: "string", enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"] },
									amount: { type: "number" },
									timestamp: { type: "string" },
									userId: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											saleType: { type: "integer" },
											amount: { type: "integer" },
											timestamp: { type: "integer" },
											userId: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "saleType", "amount", "timestamp", "userId", "_all"],
									},
									_avg: { type: "object", properties: { amount: { type: "number" } }, additionalProperties: false },
									_sum: { type: "object", properties: { amount: { type: "number" } }, additionalProperties: false },
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											saleType: { type: "string", enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"] },
											amount: { type: "number" },
											timestamp: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											saleType: { type: "string", enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"] },
											amount: { type: "number" },
											timestamp: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "saleType", "amount", "timestamp", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["smartOffice_groupBySale"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/GroupByTask": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/smartOffice_TaskOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_TaskScalarFieldEnum",
						enum: ["id", "taskType", "status", "details", "userId"],
					},
				},
				having: { $ref: "#/definitions/smartOffice_TaskScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				smartOffice_TaskWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_TaskWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						taskType: { $ref: "#/definitions/smartOffice_EnumTask_taskTypeFilter" },
						status: { $ref: "#/definitions/smartOffice_EnumTask_statusFilter" },
						details: { $ref: "#/definitions/smartOffice_JsonFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumTask_taskTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
					},
				},
				smartOffice_EnumTask_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
					},
				},
				smartOffice_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				smartOffice_TaskOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						taskType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						status: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						_count: { $ref: "#/definitions/smartOffice_TaskCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/smartOffice_TaskMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/smartOffice_TaskMinOrderByAggregateInput" },
					},
				},
				smartOffice_TaskCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						taskType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						status: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						details: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_TaskMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						taskType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						status: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_TaskMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						taskType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						status: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_TaskScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_TaskScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/smartOffice_TaskScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/smartOffice_TaskScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/smartOffice_StringWithAggregatesFilter" },
						taskType: { $ref: "#/definitions/smartOffice_EnumTask_taskTypeWithAggregatesFilter" },
						status: { $ref: "#/definitions/smartOffice_EnumTask_statusWithAggregatesFilter" },
						details: { $ref: "#/definitions/smartOffice_JsonWithAggregatesFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringWithAggregatesFilter" },
					},
				},
				smartOffice_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
					},
				},
				smartOffice_EnumTask_taskTypeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedEnumTask_taskTypeFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedEnumTask_taskTypeFilter" },
					},
				},
				smartOffice_NestedEnumTask_taskTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
					},
				},
				smartOffice_EnumTask_statusWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedEnumTask_statusFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedEnumTask_statusFilter" },
					},
				},
				smartOffice_NestedEnumTask_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
					},
				},
				smartOffice_JsonWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedJsonFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedJsonFilter" },
					},
				},
				smartOffice_NestedJsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_groupByTask: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									taskType: { type: "string", enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"] },
									status: { type: "string", enum: ["PENDING", "COMPLETED", "CANCELLED"] },
									details: {},
									userId: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											taskType: { type: "integer" },
											status: { type: "integer" },
											details: { type: "integer" },
											userId: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "taskType", "status", "details", "userId", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											taskType: { type: "string", enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"] },
											status: { type: "string", enum: ["PENDING", "COMPLETED", "CANCELLED"] },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											taskType: { type: "string", enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"] },
											status: { type: "string", enum: ["PENDING", "COMPLETED", "CANCELLED"] },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "taskType", "status", "details", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["smartOffice_groupByTask"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/GroupByUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_UserWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/smartOffice_UserOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "smartOffice_UserScalarFieldEnum",
						enum: ["id", "username", "password", "role"],
					},
				},
				having: { $ref: "#/definitions/smartOffice_UserScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				smartOffice_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_UserWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_UserWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						username: { $ref: "#/definitions/smartOffice_StringFilter" },
						password: { $ref: "#/definitions/smartOffice_StringFilter" },
						role: { $ref: "#/definitions/smartOffice_EnumUser_roleFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
					},
				},
				smartOffice_UserOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						role: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						_count: { $ref: "#/definitions/smartOffice_UserCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/smartOffice_UserMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/smartOffice_UserMinOrderByAggregateInput" },
					},
				},
				smartOffice_UserCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						role: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_UserMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						role: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_UserMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
						username: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						password: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_SortOrder",
							enum: ["asc", "desc"],
						},
						role: { type: ["string", "null"], "x-graphql-enum-name": "smartOffice_SortOrder", enum: ["asc", "desc"] },
					},
				},
				smartOffice_UserScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_UserScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/smartOffice_UserScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/smartOffice_UserScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/smartOffice_StringWithAggregatesFilter" },
						username: { $ref: "#/definitions/smartOffice_StringWithAggregatesFilter" },
						password: { $ref: "#/definitions/smartOffice_StringWithAggregatesFilter" },
						role: { $ref: "#/definitions/smartOffice_EnumUser_roleWithAggregatesFilter" },
					},
				},
				smartOffice_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
					},
				},
				smartOffice_EnumUser_roleWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
						_count: { $ref: "#/definitions/smartOffice_NestedIntFilter" },
						_min: { $ref: "#/definitions/smartOffice_NestedEnumUser_roleFilter" },
						_max: { $ref: "#/definitions/smartOffice_NestedEnumUser_roleFilter" },
					},
				},
				smartOffice_NestedEnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_groupByUser: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									username: { type: "string" },
									password: { type: "string" },
									role: { type: "string", enum: ["ADMIN", "AGENT", "SALES_REP"] },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											username: { type: "integer" },
											password: { type: "integer" },
											role: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "username", "password", "role", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											username: { type: "string" },
											password: { type: "string" },
											role: { type: "string", enum: ["ADMIN", "AGENT", "SALES_REP"] },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											username: { type: "string" },
											password: { type: "string" },
											role: { type: "string", enum: ["ADMIN", "AGENT", "SALES_REP"] },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "username", "password", "role"],
							},
						},
					},
					additionalProperties: false,
					required: ["smartOffice_groupByUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/QueryRaw": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_queryRaw: {
							type: "array",
							items: {
								type: "object",
								properties: {
									ID: { type: "string" },
									Int: { type: "integer" },
									Float: { type: "number" },
									String: { type: "string" },
									Boolean: { type: "boolean" },
									DateTime: { type: "string" },
									JSON: {},
									Object: {
										type: "object",
										properties: {
											ID: { type: "string" },
											Int: { type: "integer" },
											Float: { type: "number" },
											String: { type: "string" },
											Boolean: { type: "boolean" },
											DateTime: { type: "string" },
											JSON: {},
											OptionalID: { type: "string" },
											OptionalInt: { type: "integer" },
											OptionalFloat: { type: "number" },
											OptionalString: { type: "string" },
											OptionalBoolean: { type: "boolean" },
											OptionalDateTime: { type: "string" },
											OptionalJSON: {},
										},
										additionalProperties: false,
										required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
									},
									Array: {
										type: "array",
										items: {
											type: "object",
											properties: {
												ID: { type: "string" },
												Int: { type: "integer" },
												Float: { type: "number" },
												String: { type: "string" },
												Boolean: { type: "boolean" },
												DateTime: { type: "string" },
												JSON: {},
												OptionalID: { type: "string" },
												OptionalInt: { type: "integer" },
												OptionalFloat: { type: "number" },
												OptionalString: { type: "string" },
												OptionalBoolean: { type: "boolean" },
												OptionalDateTime: { type: "string" },
												OptionalJSON: {},
											},
											additionalProperties: false,
											required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
										},
									},
									OptionalID: { type: "string" },
									OptionalInt: { type: "integer" },
									OptionalFloat: { type: "number" },
									OptionalString: { type: "string" },
									OptionalBoolean: { type: "boolean" },
									OptionalDateTime: { type: "string" },
									OptionalJSON: {},
									OptionalObject: {
										type: "object",
										properties: {
											ID: { type: "string" },
											Int: { type: "integer" },
											Float: { type: "number" },
											String: { type: "string" },
											Boolean: { type: "boolean" },
											DateTime: { type: "string" },
											JSON: {},
											OptionalID: { type: "string" },
											OptionalInt: { type: "integer" },
											OptionalFloat: { type: "number" },
											OptionalString: { type: "string" },
											OptionalBoolean: { type: "boolean" },
											OptionalDateTime: { type: "string" },
											OptionalJSON: {},
										},
										additionalProperties: false,
										required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
									},
									OptionalArray: {
										type: "array",
										items: {
											type: "object",
											properties: {
												ID: { type: "string" },
												Int: { type: "integer" },
												Float: { type: "number" },
												String: { type: "string" },
												Boolean: { type: "boolean" },
												DateTime: { type: "string" },
												JSON: {},
												OptionalID: { type: "string" },
												OptionalInt: { type: "integer" },
												OptionalFloat: { type: "number" },
												OptionalString: { type: "string" },
												OptionalBoolean: { type: "boolean" },
												OptionalDateTime: { type: "string" },
												OptionalJSON: {},
											},
											additionalProperties: false,
											required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
										},
									},
								},
								additionalProperties: false,
								required: [
									"ID",
									"Int",
									"Float",
									"String",
									"Boolean",
									"DateTime",
									"JSON",
									"Object",
									"Array",
									"OptionalArray",
								],
							},
						},
					},
					additionalProperties: false,
					required: ["smartOffice_queryRaw"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"smartOffice/QueryRawJSON": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: { type: "object", properties: { smartOffice_queryRawJSON: {} }, additionalProperties: false },
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"users/CountUsers": {
		input: { type: "object", properties: {}, additionalProperties: false },
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_aggregateUser: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: { _all: { type: "integer" } },
									additionalProperties: false,
									required: ["_all"],
								},
								_min: { type: "object", properties: { id: { type: "string" } }, additionalProperties: false },
								_max: { type: "object", properties: { id: { type: "string" } }, additionalProperties: false },
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_aggregateUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"users/GetAllUsers": {
		input: { type: "object", properties: {}, additionalProperties: false },
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_findManyUser: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									name: { type: "string" },
									email: { type: "string" },
									emailVerified: { type: "string" },
									image: { type: "string" },
									createdAt: { type: "string" },
									updatedAt: { type: "string" },
									stripeCustomerId: { type: "string" },
									stripeSubscriptionId: { type: "string" },
									stripePriceId: { type: "string" },
									stripeCurrentPeriodEnd: { type: "string" },
								},
								additionalProperties: false,
								required: ["id", "createdAt", "updatedAt"],
							},
						},
					},
					additionalProperties: false,
					required: ["customerCommunication_findManyUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"weather/GetCityById": {
		input: {
			type: "object",
			properties: {
				config: { $ref: "#/definitions/weather_ConfigInput" },
				id: { type: ["array", "null"], items: { type: "string" } },
			},
			additionalProperties: false,
			definitions: {
				weather_ConfigInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						lang: {
							type: ["string", "null"],
							"x-graphql-enum-name": "weather_Language",
							enum: [
								"af",
								"al",
								"ar",
								"az",
								"bg",
								"ca",
								"cz",
								"da",
								"de",
								"el",
								"en",
								"es",
								"eu",
								"fa",
								"fi",
								"fr",
								"gl",
								"he",
								"hi",
								"hr",
								"hu",
								"id",
								"it",
								"ja",
								"kr",
								"la",
								"lt",
								"mk",
								"nl",
								"no",
								"pl",
								"pt",
								"pt_br",
								"ro",
								"ru",
								"se",
								"sk",
								"sl",
								"sp",
								"sr",
								"sv",
								"th",
								"tr",
								"ua",
								"uk",
								"vi",
								"zh_cn",
								"zh_tw",
								"zu",
							],
						},
						units: {
							type: ["string", "null"],
							"x-graphql-enum-name": "weather_Unit",
							enum: ["imperial", "kelvin", "metric"],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						weather_getCityById: {
							type: "array",
							items: {
								type: "object",
								properties: {
									coord: {
										type: "object",
										properties: { lat: { type: "number" }, lon: { type: "number" } },
										additionalProperties: false,
									},
									country: { type: "string" },
									id: { type: "string" },
									name: { type: "string" },
									weather: {
										type: "object",
										properties: {
											clouds: {
												type: "object",
												properties: {
													all: { type: "integer" },
													humidity: { type: "integer" },
													visibility: { type: "integer" },
												},
												additionalProperties: false,
											},
											summary: {
												type: "object",
												properties: {
													description: { type: "string" },
													icon: { type: "string" },
													title: { type: "string" },
												},
												additionalProperties: false,
											},
											temperature: {
												type: "object",
												properties: {
													actual: { type: "number" },
													feelsLike: { type: "number" },
													max: { type: "number" },
													min: { type: "number" },
												},
												additionalProperties: false,
											},
											timestamp: { type: "integer" },
											wind: {
												type: "object",
												properties: { deg: { type: "integer" }, speed: { type: "number" } },
												additionalProperties: false,
											},
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
							},
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"weather/GetCityByName": {
		input: {
			type: "object",
			properties: {
				config: { $ref: "#/definitions/weather_ConfigInput" },
				country: { type: ["string", "null"] },
				name: { type: "string" },
			},
			additionalProperties: false,
			definitions: {
				weather_ConfigInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						lang: {
							type: ["string", "null"],
							"x-graphql-enum-name": "weather_Language",
							enum: [
								"af",
								"al",
								"ar",
								"az",
								"bg",
								"ca",
								"cz",
								"da",
								"de",
								"el",
								"en",
								"es",
								"eu",
								"fa",
								"fi",
								"fr",
								"gl",
								"he",
								"hi",
								"hr",
								"hu",
								"id",
								"it",
								"ja",
								"kr",
								"la",
								"lt",
								"mk",
								"nl",
								"no",
								"pl",
								"pt",
								"pt_br",
								"ro",
								"ru",
								"se",
								"sk",
								"sl",
								"sp",
								"sr",
								"sv",
								"th",
								"tr",
								"ua",
								"uk",
								"vi",
								"zh_cn",
								"zh_tw",
								"zu",
							],
						},
						units: {
							type: ["string", "null"],
							"x-graphql-enum-name": "weather_Unit",
							enum: ["imperial", "kelvin", "metric"],
						},
					},
				},
			},
			required: ["name"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						weather_getCityByName: {
							type: "object",
							properties: {
								coord: {
									type: "object",
									properties: { lat: { type: "number" }, lon: { type: "number" } },
									additionalProperties: false,
								},
								country: { type: "string" },
								id: { type: "string" },
								name: { type: "string" },
								weather: {
									type: "object",
									properties: {
										clouds: {
											type: "object",
											properties: {
												all: { type: "integer" },
												humidity: { type: "integer" },
												visibility: { type: "integer" },
											},
											additionalProperties: false,
										},
										summary: {
											type: "object",
											properties: {
												description: { type: "string" },
												icon: { type: "string" },
												title: { type: "string" },
											},
											additionalProperties: false,
										},
										temperature: {
											type: "object",
											properties: {
												actual: { type: "number" },
												feelsLike: { type: "number" },
												max: { type: "number" },
												min: { type: "number" },
											},
											additionalProperties: false,
										},
										timestamp: { type: "integer" },
										wind: {
											type: "object",
											properties: { deg: { type: "integer" }, speed: { type: "number" } },
											additionalProperties: false,
										},
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"openai/extract-website-metadata": {
		input: {
			type: "object",
			properties: { url: { type: "string" } },
			required: ["url"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: {
			type: "object",
			properties: {
				title: { type: "string" },
				h1: { type: "string" },
				summary: { type: "string" },
				description: { type: "string" },
				links: { type: "array", items: { type: "string" } },
			},
			required: ["description", "h1", "links", "summary", "title"],
		},
		operationType: "QUERY",
		description: "Load metadata like title, description, social media images, headlines, and summary from a website",
	},
	"openai/load-url": {
		input: {
			type: "object",
			properties: { url: { type: "string" } },
			required: ["url"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: { type: "object", properties: { content: { type: "string" } }, required: ["content"] },
		operationType: "QUERY",
		description: "Load the content of a url",
	},
	"openai/summarize-url-content": {
		input: {
			type: "object",
			properties: { url: { type: "string" } },
			required: ["url"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: { type: "object", properties: { summary: { type: "string" } }, required: ["summary"] },
		operationType: "QUERY",
		description: "Summarize the content of a URL",
	},
	"openai/summary": {
		input: {
			type: "object",
			properties: { url: { type: "string" } },
			required: ["url"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: { type: "object", properties: { summary: { type: "string" } }, required: ["summary"] },
		operationType: "QUERY",
		description: "Summarize the content of a URL",
	},
	"openai/weather": {
		input: {
			type: "object",
			properties: { country: { type: "string" } },
			required: ["country"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: {
			type: "object",
			properties: {
				structuredOutput: { $ref: "#/definitions/{country:string;city:string;temperature:number;}" },
				messages: { type: "array", items: { $ref: "#/definitions/ChatCompletionRequestMessage" } },
			},
			required: ["messages", "structuredOutput"],
			definitions: {
				"{country:string;city:string;temperature:number;}": {
					type: "object",
					properties: { country: { type: "string" }, city: { type: "string" }, temperature: { type: "number" } },
					required: ["city", "country", "temperature"],
				},
				ChatCompletionRequestMessage: {
					type: "object",
					properties: {
						role: {
							description: "The role of the messages author. One of `system`, `user`, `assistant`, or `function`.",
							type: "{string}",
						},
						content: {
							description:
								"The contents of the message. `content` is required for all messages except assistant messages with function calls.",
							type: "{string}",
						},
						name: {
							description:
								"The name of the author of this message. `name` is required if role is `function`, and it should be the name of the function whose response is in the `content`. May contain a-z, A-Z, 0-9, and underscores, with a maximum length of 64 characters.",
							type: "{string}",
						},
						function_call: { type: "{ChatCompletionRequestMessageFunctionCall}" },
					},
					required: ["role"],
				},
			},
		},
		operationType: "QUERY",
		description: "This operation returns the weather of the capital of the given country",
	},
	"users/get": {
		input: {
			type: "object",
			properties: { id: { type: "string" } },
			required: ["id"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: {
			type: "object",
			properties: {
				id: { type: "string" },
				name: { type: "string", default: "Jens" },
				bio: { type: "string", default: "Founder of WunderGraph" },
			},
			required: ["bio", "id", "name"],
		},
		operationType: "QUERY",
		description: "generated/bundle/operations/users/get",
	},
	"clientPortal/CreateManyActivity": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/clientPortal_ActivityCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				clientPortal_ActivityCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						activityType: {
							type: "string",
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						timestamp: { type: "string" },
						details: {},
						clientId: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_createManyActivity: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/CreateManyClient": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/clientPortal_ClientCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				clientPortal_ClientCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_createManyClient: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/CreateManyService": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/clientPortal_ServiceCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				clientPortal_ServiceCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						serviceType: {
							type: "string",
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						content: {},
						clientId: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_createManyService: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/CreateOneActivity": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/clientPortal_ActivityCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				clientPortal_ActivityCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						activityType: {
							type: "string",
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						timestamp: { type: "string" },
						details: {},
						clientId: { type: "string" },
					},
					required: ["id", "activityType", "timestamp", "details", "clientId"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_createOneActivity: {
							type: "object",
							properties: {
								id: { type: "string" },
								activityType: {
									type: "string",
									enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
								},
								timestamp: { type: "string" },
								details: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "activityType", "timestamp", "details", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/CreateOneClient": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/clientPortal_ClientCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				clientPortal_ClientCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
					required: ["id", "username", "password"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_createOneClient: {
							type: "object",
							properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
							additionalProperties: false,
							required: ["id", "username", "password"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/CreateOneService": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/clientPortal_ServiceCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				clientPortal_ServiceCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						serviceType: {
							type: "string",
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						content: {},
						clientId: { type: "string" },
					},
					required: ["id", "serviceType", "content", "clientId"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_createOneService: {
							type: "object",
							properties: {
								id: { type: "string" },
								serviceType: { type: "string", enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"] },
								content: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "serviceType", "content", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/DeleteManyActivity": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/clientPortal_ActivityWhereInput" } },
			additionalProperties: false,
			definitions: {
				clientPortal_ActivityWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ActivityWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						activityType: { $ref: "#/definitions/clientPortal_EnumActivity_activityTypeFilter" },
						timestamp: { $ref: "#/definitions/clientPortal_DateTimeFilter" },
						details: { $ref: "#/definitions/clientPortal_JsonFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_EnumActivity_activityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
					},
				},
				clientPortal_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_deleteManyActivity: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/DeleteManyClient": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/clientPortal_ClientWhereInput" } },
			additionalProperties: false,
			definitions: {
				clientPortal_ClientWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ClientWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						username: { $ref: "#/definitions/clientPortal_StringFilter" },
						password: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_deleteManyClient: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/DeleteManyService": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/clientPortal_ServiceWhereInput" } },
			additionalProperties: false,
			definitions: {
				clientPortal_ServiceWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ServiceWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						serviceType: { $ref: "#/definitions/clientPortal_EnumService_serviceTypeFilter" },
						content: { $ref: "#/definitions/clientPortal_JsonFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_EnumService_serviceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
					},
				},
				clientPortal_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_deleteManyService: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/DeleteOneActivity": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/clientPortal_ActivityWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				clientPortal_ActivityWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_deleteOneActivity: {
							type: "object",
							properties: {
								id: { type: "string" },
								activityType: {
									type: "string",
									enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
								},
								timestamp: { type: "string" },
								details: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "activityType", "timestamp", "details", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/DeleteOneClient": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/clientPortal_ClientWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				clientPortal_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_deleteOneClient: {
							type: "object",
							properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
							additionalProperties: false,
							required: ["id", "username", "password"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/DeleteOneService": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/clientPortal_ServiceWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				clientPortal_ServiceWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_deleteOneService: {
							type: "object",
							properties: {
								id: { type: "string" },
								serviceType: { type: "string", enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"] },
								content: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "serviceType", "content", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/ExecuteRaw": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: { clientPortal_executeRaw: { type: "integer" } },
					additionalProperties: false,
					required: ["clientPortal_executeRaw"],
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/UpdateManyActivity": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/clientPortal_ActivityUpdateManyMutationInput" },
				where: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				clientPortal_ActivityUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
						activityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						timestamp: { $ref: "#/definitions/clientPortal_DateTimeFieldUpdateOperationsInput" },
						details: {},
						clientId: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
					},
				},
				clientPortal_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				clientPortal_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				clientPortal_ActivityWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ActivityWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ActivityWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						activityType: { $ref: "#/definitions/clientPortal_EnumActivity_activityTypeFilter" },
						timestamp: { $ref: "#/definitions/clientPortal_DateTimeFilter" },
						details: { $ref: "#/definitions/clientPortal_JsonFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_EnumActivity_activityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Activity_activityType",
								enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
					},
				},
				clientPortal_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedDateTimeFilter" },
					},
				},
				clientPortal_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_updateManyActivity: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/UpdateManyClient": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/clientPortal_ClientUpdateManyMutationInput" },
				where: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				clientPortal_ClientUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
						username: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
						password: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
					},
				},
				clientPortal_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				clientPortal_ClientWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ClientWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ClientWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						username: { $ref: "#/definitions/clientPortal_StringFilter" },
						password: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_updateManyClient: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/UpdateManyService": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/clientPortal_ServiceUpdateManyMutationInput" },
				where: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				clientPortal_ServiceUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
						serviceType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						content: {},
						clientId: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
					},
				},
				clientPortal_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				clientPortal_ServiceWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/clientPortal_ServiceWhereInput" } },
						NOT: { $ref: "#/definitions/clientPortal_ServiceWhereInput" },
						id: { $ref: "#/definitions/clientPortal_StringFilter" },
						serviceType: { $ref: "#/definitions/clientPortal_EnumService_serviceTypeFilter" },
						content: { $ref: "#/definitions/clientPortal_JsonFilter" },
						clientId: { $ref: "#/definitions/clientPortal_StringFilter" },
					},
				},
				clientPortal_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/clientPortal_NestedStringFilter" },
					},
				},
				clientPortal_EnumService_serviceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "clientPortal_Service_serviceType",
								enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
					},
				},
				clientPortal_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_updateManyService: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/UpdateOneActivity": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/clientPortal_ActivityUpdateInput" },
				where: { $ref: "#/definitions/clientPortal_ActivityWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				clientPortal_ActivityUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
						activityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						timestamp: { $ref: "#/definitions/clientPortal_DateTimeFieldUpdateOperationsInput" },
						details: {},
						clientId: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
					},
				},
				clientPortal_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				clientPortal_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				clientPortal_ActivityWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_updateOneActivity: {
							type: "object",
							properties: {
								id: { type: "string" },
								activityType: {
									type: "string",
									enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
								},
								timestamp: { type: "string" },
								details: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "activityType", "timestamp", "details", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/UpdateOneClient": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/clientPortal_ClientUpdateInput" },
				where: { $ref: "#/definitions/clientPortal_ClientWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				clientPortal_ClientUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
						username: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
						password: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
					},
				},
				clientPortal_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				clientPortal_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_updateOneClient: {
							type: "object",
							properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
							additionalProperties: false,
							required: ["id", "username", "password"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/UpdateOneService": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/clientPortal_ServiceUpdateInput" },
				where: { $ref: "#/definitions/clientPortal_ServiceWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				clientPortal_ServiceUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
						serviceType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						content: {},
						clientId: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
					},
				},
				clientPortal_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				clientPortal_ServiceWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_updateOneService: {
							type: "object",
							properties: {
								id: { type: "string" },
								serviceType: { type: "string", enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"] },
								content: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "serviceType", "content", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/UpsertOneActivity": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ActivityWhereUniqueInput" },
				create: { $ref: "#/definitions/clientPortal_ActivityCreateInput" },
				update: { $ref: "#/definitions/clientPortal_ActivityUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				clientPortal_ActivityWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				clientPortal_ActivityCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						activityType: {
							type: "string",
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						timestamp: { type: "string" },
						details: {},
						clientId: { type: "string" },
					},
					required: ["id", "activityType", "timestamp", "details", "clientId"],
				},
				clientPortal_ActivityUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
						activityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Activity_activityType",
							enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
						},
						timestamp: { $ref: "#/definitions/clientPortal_DateTimeFieldUpdateOperationsInput" },
						details: {},
						clientId: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
					},
				},
				clientPortal_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				clientPortal_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_upsertOneActivity: {
							type: "object",
							properties: {
								id: { type: "string" },
								activityType: {
									type: "string",
									enum: ["LOGIN", "LOGOUT", "SERVICE_ACCESS", "QUOTE_REQUEST", "TRANSACTION"],
								},
								timestamp: { type: "string" },
								details: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "activityType", "timestamp", "details", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/UpsertOneClient": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ClientWhereUniqueInput" },
				create: { $ref: "#/definitions/clientPortal_ClientCreateInput" },
				update: { $ref: "#/definitions/clientPortal_ClientUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				clientPortal_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				clientPortal_ClientCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
					required: ["id", "username", "password"],
				},
				clientPortal_ClientUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
						username: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
						password: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
					},
				},
				clientPortal_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_upsertOneClient: {
							type: "object",
							properties: { id: { type: "string" }, username: { type: "string" }, password: { type: "string" } },
							additionalProperties: false,
							required: ["id", "username", "password"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"clientPortal/UpsertOneService": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/clientPortal_ServiceWhereUniqueInput" },
				create: { $ref: "#/definitions/clientPortal_ServiceCreateInput" },
				update: { $ref: "#/definitions/clientPortal_ServiceUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				clientPortal_ServiceWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				clientPortal_ServiceCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						serviceType: {
							type: "string",
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						content: {},
						clientId: { type: "string" },
					},
					required: ["id", "serviceType", "content", "clientId"],
				},
				clientPortal_ServiceUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
						serviceType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "clientPortal_Service_serviceType",
							enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"],
						},
						content: {},
						clientId: { $ref: "#/definitions/clientPortal_StringFieldUpdateOperationsInput" },
					},
				},
				clientPortal_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						clientPortal_upsertOneService: {
							type: "object",
							properties: {
								id: { type: "string" },
								serviceType: { type: "string", enum: ["GENERAL_ACCESS", "QUOTES", "TRANSACTIONS"] },
								content: {},
								clientId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "serviceType", "content", "clientId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/CreateManyAccount": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/customerCommunication_AccountCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_AccountCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						userId: { type: "string" },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_createManyAccount: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/CreateManyFilter": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/customerCommunication_FilterCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_FilterCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						audience: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						output: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_createManyFilter: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/CreateManyInteraction": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/customerCommunication_InteractionCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_InteractionCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						userId: { type: "string" },
						widgetId: { type: ["string", "null"] },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_createManyInteraction: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/CreateManySession": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/customerCommunication_SessionCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_SessionCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						userId: { type: "string" },
						expires: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_createManySession: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/CreateManyUser": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/customerCommunication_UserCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_UserCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_createManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/CreateManyVerificationToken": {
		input: {
			type: "object",
			properties: {
				data: {
					type: "array",
					items: { $ref: "#/definitions/customerCommunication_VerificationTokenCreateManyInput" },
				},
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_VerificationTokenCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_createManyVerificationToken: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/CreateManyWidget": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/customerCommunication_WidgetCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_WidgetCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, embeddedIn: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_createManyWidget: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/CreateOneAccount": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_AccountCreateInput" },
				customerCommunication_createOneAccount_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_createOneAccount_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_createOneAccount_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_createOneAccount_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_createOneAccount_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_createOneAccount_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_createOneAccount_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_createOneAccount_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_createOneAccount_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_createOneAccount_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_createOneAccount_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_createOneAccount_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_AccountCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						user: { $ref: "#/definitions/customerCommunication_UserCreateNestedOneWithoutAccountsInput" },
					},
					required: ["type", "provider", "providerAccountId", "user"],
				},
				customerCommunication_UserCreateNestedOneWithoutAccountsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutAccountsInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutAccountsInput" },
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
					},
				},
				customerCommunication_UserCreateWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionCreateNestedManyWithoutUserInput" },
					},
				},
				customerCommunication_InteractionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
					},
				},
				customerCommunication_InteractionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
					},
				},
				customerCommunication_WidgetCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, embeddedIn: { type: "string" } },
				},
				customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_InteractionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						widgetId: { type: ["string", "null"] },
					},
					required: ["interactionType", "content", "timestamp"],
				},
				customerCommunication_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
					},
				},
				customerCommunication_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				customerCommunication_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				customerCommunication_UserCreateOrConnectWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutAccountsInput" },
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_createOneAccount: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/CreateOneFilter": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/customerCommunication_FilterCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_FilterCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						audience: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						output: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
					},
					required: ["audience", "output"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_createOneFilter: {
							type: "object",
							properties: {
								id: { type: "string" },
								audience: {
									type: "string",
									enum: [
										"CALL_CENTER",
										"CLIENT_PORTAL",
										"GUARDIAN_ONLINE",
										"GPAC",
										"SMART_OFFICE",
										"LIVING_BALANCE_SHEET",
									],
								},
								output: {
									type: "string",
									enum: [
										"CALLS",
										"CHATS",
										"EMAILS",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIALS",
										"TEXTS",
									],
								},
							},
							additionalProperties: false,
							required: ["id", "audience", "output"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/CreateOneInteraction": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_InteractionCreateInput" },
				customerCommunication_createOneInteraction_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_createOneInteraction_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_createOneInteraction_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_createOneInteraction_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_createOneInteraction_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_createOneInteraction_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_createOneInteraction_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_createOneInteraction_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_createOneInteraction_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_createOneInteraction_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_createOneInteraction_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_createOneInteraction_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_InteractionCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						user: { $ref: "#/definitions/customerCommunication_UserCreateNestedOneWithoutInteractionsInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput" },
					},
					required: ["interactionType", "content", "timestamp", "user"],
				},
				customerCommunication_UserCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
					},
				},
				customerCommunication_UserCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/customerCommunication_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionCreateNestedManyWithoutUserInput" },
					},
				},
				customerCommunication_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
					},
				},
				customerCommunication_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				customerCommunication_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				customerCommunication_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
					},
				},
				customerCommunication_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				customerCommunication_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				customerCommunication_UserCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
					},
				},
				customerCommunication_WidgetCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, embeddedIn: { type: "string" } },
				},
				customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_createOneInteraction: {
							type: "object",
							properties: {
								id: { type: "string" },
								interactionType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								content: { type: "string" },
								timestamp: { type: "string" },
								userId: { type: "string" },
								widgetId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
								Widget: {
									type: "object",
									properties: {
										id: { type: "string" },
										embeddedIn: { type: "string" },
										_count: {
											type: "object",
											properties: { interactions: { type: "integer" } },
											additionalProperties: false,
											required: ["interactions"],
										},
									},
									additionalProperties: false,
									required: ["id", "embeddedIn", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/CreateOneSession": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_SessionCreateInput" },
				customerCommunication_createOneSession_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_createOneSession_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_createOneSession_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_createOneSession_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_createOneSession_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_createOneSession_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_createOneSession_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_createOneSession_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_createOneSession_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_createOneSession_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_createOneSession_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_createOneSession_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_SessionCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
						user: { $ref: "#/definitions/customerCommunication_UserCreateNestedOneWithoutSessionsInput" },
					},
					required: ["sessionToken", "expires", "user"],
				},
				customerCommunication_UserCreateNestedOneWithoutSessionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutSessionsInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutSessionsInput" },
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
					},
				},
				customerCommunication_UserCreateWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionCreateNestedManyWithoutUserInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountCreateNestedManyWithoutUserInput" },
					},
				},
				customerCommunication_InteractionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
					},
				},
				customerCommunication_InteractionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
					},
				},
				customerCommunication_WidgetCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, embeddedIn: { type: "string" } },
				},
				customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_InteractionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						widgetId: { type: ["string", "null"] },
					},
					required: ["interactionType", "content", "timestamp"],
				},
				customerCommunication_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
					},
				},
				customerCommunication_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				customerCommunication_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				customerCommunication_UserCreateOrConnectWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutSessionsInput" },
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_createOneSession: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/CreateOneUser": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_UserCreateInput" },
				customerCommunication_createOneUser_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_createOneUser_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_createOneUser_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_createOneUser_interactions_take: { type: ["integer", "null"] },
				customerCommunication_createOneUser_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_createOneUser_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_createOneUser_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_createOneUser_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_createOneUser_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_createOneUser_accounts_take: { type: ["integer", "null"] },
				customerCommunication_createOneUser_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_createOneUser_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_createOneUser_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_createOneUser_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_createOneUser_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_createOneUser_sessions_take: { type: ["integer", "null"] },
				customerCommunication_createOneUser_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_createOneUser_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_UserCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionCreateNestedManyWithoutUserInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionCreateNestedManyWithoutUserInput" },
					},
				},
				customerCommunication_InteractionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
					},
				},
				customerCommunication_InteractionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
					},
				},
				customerCommunication_WidgetCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, embeddedIn: { type: "string" } },
				},
				customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_InteractionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						widgetId: { type: ["string", "null"] },
					},
					required: ["interactionType", "content", "timestamp"],
				},
				customerCommunication_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
					},
				},
				customerCommunication_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				customerCommunication_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				customerCommunication_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
					},
				},
				customerCommunication_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				customerCommunication_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_createOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											Widget: {
												type: "object",
												properties: {
													id: { type: "string" },
													embeddedIn: { type: "string" },
													_count: {
														type: "object",
														properties: { interactions: { type: "integer" } },
														additionalProperties: false,
														required: ["interactions"],
													},
												},
												additionalProperties: false,
												required: ["id", "embeddedIn", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId"],
									},
								},
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								_count: {
									type: "object",
									properties: {
										interactions: { type: "integer" },
										accounts: { type: "integer" },
										sessions: { type: "integer" },
									},
									additionalProperties: false,
									required: ["interactions", "accounts", "sessions"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/CreateOneVerificationToken": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/customerCommunication_VerificationTokenCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_VerificationTokenCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
					required: ["identifier", "token", "expires"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_createOneVerificationToken: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/CreateOneWidget": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_WidgetCreateInput" },
				customerCommunication_createOneWidget_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_createOneWidget_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_createOneWidget_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_createOneWidget_interactions_take: { type: ["integer", "null"] },
				customerCommunication_createOneWidget_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_createOneWidget_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_createOneWidget_interactions_interactions_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_createOneWidget_interactions_interactions_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_createOneWidget_interactions_interactions_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_createOneWidget_interactions_interactions_user_user_accounts_take: {
					type: ["integer", "null"],
				},
				customerCommunication_createOneWidget_interactions_interactions_user_user_accounts_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_createOneWidget_interactions_interactions_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_createOneWidget_interactions_interactions_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_createOneWidget_interactions_interactions_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_createOneWidget_interactions_interactions_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_createOneWidget_interactions_interactions_user_user_sessions_take: {
					type: ["integer", "null"],
				},
				customerCommunication_createOneWidget_interactions_interactions_user_user_sessions_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_createOneWidget_interactions_interactions_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_WidgetCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						embeddedIn: { type: "string" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionCreateNestedManyWithoutWidgetInput" },
					},
					required: ["embeddedIn"],
				},
				customerCommunication_InteractionCreateNestedManyWithoutWidgetInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutWidgetInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutWidgetInput",
						},
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyWidgetInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
					},
				},
				customerCommunication_InteractionCreateWithoutWidgetInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						user: { $ref: "#/definitions/customerCommunication_UserCreateNestedOneWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
					},
				},
				customerCommunication_UserCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/customerCommunication_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionCreateNestedManyWithoutUserInput" },
					},
				},
				customerCommunication_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
					},
				},
				customerCommunication_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				customerCommunication_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				customerCommunication_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
					},
				},
				customerCommunication_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				customerCommunication_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				customerCommunication_UserCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_InteractionCreateOrConnectWithoutWidgetInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutWidgetInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateManyWidgetInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_InteractionCreateManyWidgetInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_InteractionCreateManyWidgetInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						userId: { type: "string" },
					},
					required: ["interactionType", "content", "timestamp", "userId"],
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_createOneWidget: {
							type: "object",
							properties: {
								id: { type: "string" },
								embeddedIn: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											user: {
												type: "object",
												properties: {
													id: { type: "string" },
													name: { type: "string" },
													email: { type: "string" },
													emailVerified: { type: "string" },
													image: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
													stripeCustomerId: { type: "string" },
													stripeSubscriptionId: { type: "string" },
													stripePriceId: { type: "string" },
													stripeCurrentPeriodEnd: { type: "string" },
													accounts: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																userId: { type: "string" },
																type: { type: "string" },
																provider: { type: "string" },
																providerAccountId: { type: "string" },
																refresh_token: { type: "string" },
																access_token: { type: "string" },
																expires_at: { type: "integer" },
																token_type: { type: "string" },
																scope: { type: "string" },
																id_token: { type: "string" },
																session_state: { type: "string" },
																createdAt: { type: "string" },
																updatedAt: { type: "string" },
															},
															additionalProperties: false,
															required: [
																"id",
																"userId",
																"type",
																"provider",
																"providerAccountId",
																"createdAt",
																"updatedAt",
															],
														},
													},
													sessions: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																sessionToken: { type: "string" },
																userId: { type: "string" },
																expires: { type: "string" },
															},
															additionalProperties: false,
															required: ["id", "sessionToken", "userId", "expires"],
														},
													},
													_count: {
														type: "object",
														properties: {
															interactions: { type: "integer" },
															accounts: { type: "integer" },
															sessions: { type: "integer" },
														},
														additionalProperties: false,
														required: ["interactions", "accounts", "sessions"],
													},
												},
												additionalProperties: false,
												required: ["id", "createdAt", "updatedAt", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
									},
								},
								_count: {
									type: "object",
									properties: { interactions: { type: "integer" } },
									additionalProperties: false,
									required: ["interactions"],
								},
							},
							additionalProperties: false,
							required: ["id", "embeddedIn", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/DeleteManyAccount": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
			additionalProperties: false,
			definitions: {
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_deleteManyAccount: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/DeleteManyFilter": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/customerCommunication_FilterWhereInput" } },
			additionalProperties: false,
			definitions: {
				customerCommunication_FilterWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_FilterWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						audience: { $ref: "#/definitions/customerCommunication_EnumAudienceTypeFilter" },
						output: { $ref: "#/definitions/customerCommunication_EnumOutputTypeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumAudienceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
					},
				},
				customerCommunication_EnumOutputTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_deleteManyFilter: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/DeleteManyInteraction": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" } },
			additionalProperties: false,
			definitions: {
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_deleteManyInteraction: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/DeleteManySession": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
			additionalProperties: false,
			definitions: {
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_deleteManySession: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/DeleteManyUser": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
			additionalProperties: false,
			definitions: {
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_deleteManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/DeleteManyVerificationToken": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" } },
			additionalProperties: false,
			definitions: {
				customerCommunication_VerificationTokenWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						identifier: { $ref: "#/definitions/customerCommunication_StringFilter" },
						token: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_deleteManyVerificationToken: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/DeleteManyWidget": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
			additionalProperties: false,
			definitions: {
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_deleteManyWidget: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/DeleteOneAccount": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
				customerCommunication_deleteOneAccount_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_deleteOneAccount_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_deleteOneAccount_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_deleteOneAccount_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_deleteOneAccount_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_deleteOneAccount_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_deleteOneAccount_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_deleteOneAccount_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_deleteOneAccount_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_deleteOneAccount_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_deleteOneAccount_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_deleteOneAccount_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_deleteOneAccount: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/DeleteOneFilter": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/customerCommunication_FilterWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_FilterWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_deleteOneFilter: {
							type: "object",
							properties: {
								id: { type: "string" },
								audience: {
									type: "string",
									enum: [
										"CALL_CENTER",
										"CLIENT_PORTAL",
										"GUARDIAN_ONLINE",
										"GPAC",
										"SMART_OFFICE",
										"LIVING_BALANCE_SHEET",
									],
								},
								output: {
									type: "string",
									enum: [
										"CALLS",
										"CHATS",
										"EMAILS",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIALS",
										"TEXTS",
									],
								},
							},
							additionalProperties: false,
							required: ["id", "audience", "output"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/DeleteOneInteraction": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
				customerCommunication_deleteOneInteraction_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_deleteOneInteraction_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_deleteOneInteraction_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_deleteOneInteraction_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_deleteOneInteraction_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_deleteOneInteraction_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_deleteOneInteraction_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_deleteOneInteraction_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_deleteOneInteraction_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_deleteOneInteraction_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_deleteOneInteraction_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_deleteOneInteraction_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_deleteOneInteraction: {
							type: "object",
							properties: {
								id: { type: "string" },
								interactionType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								content: { type: "string" },
								timestamp: { type: "string" },
								userId: { type: "string" },
								widgetId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
								Widget: {
									type: "object",
									properties: {
										id: { type: "string" },
										embeddedIn: { type: "string" },
										_count: {
											type: "object",
											properties: { interactions: { type: "integer" } },
											additionalProperties: false,
											required: ["interactions"],
										},
									},
									additionalProperties: false,
									required: ["id", "embeddedIn", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/DeleteOneSession": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
				customerCommunication_deleteOneSession_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_deleteOneSession_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_deleteOneSession_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_deleteOneSession_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_deleteOneSession_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_deleteOneSession_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_deleteOneSession_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_deleteOneSession_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_deleteOneSession_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_deleteOneSession_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_deleteOneSession_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_deleteOneSession_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_deleteOneSession: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/DeleteOneUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
				customerCommunication_deleteOneUser_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_deleteOneUser_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_deleteOneUser_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_deleteOneUser_interactions_take: { type: ["integer", "null"] },
				customerCommunication_deleteOneUser_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_deleteOneUser_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_deleteOneUser_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_deleteOneUser_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_deleteOneUser_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_deleteOneUser_accounts_take: { type: ["integer", "null"] },
				customerCommunication_deleteOneUser_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_deleteOneUser_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_deleteOneUser_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_deleteOneUser_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_deleteOneUser_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_deleteOneUser_sessions_take: { type: ["integer", "null"] },
				customerCommunication_deleteOneUser_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_deleteOneUser_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_deleteOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											Widget: {
												type: "object",
												properties: {
													id: { type: "string" },
													embeddedIn: { type: "string" },
													_count: {
														type: "object",
														properties: { interactions: { type: "integer" } },
														additionalProperties: false,
														required: ["interactions"],
													},
												},
												additionalProperties: false,
												required: ["id", "embeddedIn", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId"],
									},
								},
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								_count: {
									type: "object",
									properties: {
										interactions: { type: "integer" },
										accounts: { type: "integer" },
										sessions: { type: "integer" },
									},
									additionalProperties: false,
									required: ["interactions", "accounts", "sessions"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/DeleteOneVerificationToken": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: {
							$ref: "#/definitions/customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput",
						},
					},
				},
				customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_deleteOneVerificationToken: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/DeleteOneWidget": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
				customerCommunication_deleteOneWidget_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_deleteOneWidget_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_deleteOneWidget_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_deleteOneWidget_interactions_take: { type: ["integer", "null"] },
				customerCommunication_deleteOneWidget_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_deleteOneWidget_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_deleteOneWidget_interactions_interactions_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_deleteOneWidget_interactions_interactions_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_deleteOneWidget_interactions_interactions_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_deleteOneWidget_interactions_interactions_user_user_accounts_take: {
					type: ["integer", "null"],
				},
				customerCommunication_deleteOneWidget_interactions_interactions_user_user_accounts_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_deleteOneWidget_interactions_interactions_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_deleteOneWidget_interactions_interactions_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_deleteOneWidget_interactions_interactions_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_deleteOneWidget_interactions_interactions_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_deleteOneWidget_interactions_interactions_user_user_sessions_take: {
					type: ["integer", "null"],
				},
				customerCommunication_deleteOneWidget_interactions_interactions_user_user_sessions_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_deleteOneWidget_interactions_interactions_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_deleteOneWidget: {
							type: "object",
							properties: {
								id: { type: "string" },
								embeddedIn: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											user: {
												type: "object",
												properties: {
													id: { type: "string" },
													name: { type: "string" },
													email: { type: "string" },
													emailVerified: { type: "string" },
													image: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
													stripeCustomerId: { type: "string" },
													stripeSubscriptionId: { type: "string" },
													stripePriceId: { type: "string" },
													stripeCurrentPeriodEnd: { type: "string" },
													accounts: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																userId: { type: "string" },
																type: { type: "string" },
																provider: { type: "string" },
																providerAccountId: { type: "string" },
																refresh_token: { type: "string" },
																access_token: { type: "string" },
																expires_at: { type: "integer" },
																token_type: { type: "string" },
																scope: { type: "string" },
																id_token: { type: "string" },
																session_state: { type: "string" },
																createdAt: { type: "string" },
																updatedAt: { type: "string" },
															},
															additionalProperties: false,
															required: [
																"id",
																"userId",
																"type",
																"provider",
																"providerAccountId",
																"createdAt",
																"updatedAt",
															],
														},
													},
													sessions: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																sessionToken: { type: "string" },
																userId: { type: "string" },
																expires: { type: "string" },
															},
															additionalProperties: false,
															required: ["id", "sessionToken", "userId", "expires"],
														},
													},
													_count: {
														type: "object",
														properties: {
															interactions: { type: "integer" },
															accounts: { type: "integer" },
															sessions: { type: "integer" },
														},
														additionalProperties: false,
														required: ["interactions", "accounts", "sessions"],
													},
												},
												additionalProperties: false,
												required: ["id", "createdAt", "updatedAt", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
									},
								},
								_count: {
									type: "object",
									properties: { interactions: { type: "integer" } },
									additionalProperties: false,
									required: ["interactions"],
								},
							},
							additionalProperties: false,
							required: ["id", "embeddedIn", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/ExecuteRaw": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: { customerCommunication_executeRaw: { type: "integer" } },
					additionalProperties: false,
					required: ["customerCommunication_executeRaw"],
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpdateManyAccount": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_AccountUpdateManyMutationInput" },
				where: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_updateManyAccount: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpdateManyFilter": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_FilterUpdateManyMutationInput" },
				where: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_FilterUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						audience: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						output: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_FilterWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_FilterWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_FilterWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						audience: { $ref: "#/definitions/customerCommunication_EnumAudienceTypeFilter" },
						output: { $ref: "#/definitions/customerCommunication_EnumOutputTypeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumAudienceTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_AudienceType",
								enum: [
									"CALL_CENTER",
									"CLIENT_PORTAL",
									"GUARDIAN_ONLINE",
									"GPAC",
									"SMART_OFFICE",
									"LIVING_BALANCE_SHEET",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
					},
				},
				customerCommunication_EnumOutputTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_OutputType",
								enum: [
									"CALLS",
									"CHATS",
									"EMAILS",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIALS",
									"TEXTS",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_updateManyFilter: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpdateManyInteraction": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyMutationInput" },
				where: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_InteractionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_updateManyInteraction: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpdateManySession": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_SessionUpdateManyMutationInput" },
				where: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_updateManySession: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpdateManyUser": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_UserUpdateManyMutationInput" },
				where: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_UserUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: {
							$ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput",
						},
						stripePriceId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: {
							$ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput",
						},
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_updateManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpdateManyVerificationToken": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_VerificationTokenUpdateManyMutationInput" },
				where: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_VerificationTokenUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						identifier: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						token: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_VerificationTokenWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereInput" },
						identifier: { $ref: "#/definitions/customerCommunication_StringFilter" },
						token: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_updateManyVerificationToken: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpdateManyWidget": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_WidgetUpdateManyMutationInput" },
				where: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				customerCommunication_WidgetUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_updateManyWidget: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpdateOneAccount": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_AccountUpdateInput" },
				where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
				customerCommunication_updateOneAccount_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_updateOneAccount_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_updateOneAccount_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_updateOneAccount_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_updateOneAccount_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_updateOneAccount_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_updateOneAccount_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_updateOneAccount_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_updateOneAccount_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_updateOneAccount_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_updateOneAccount_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_updateOneAccount_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				customerCommunication_AccountUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						user: { $ref: "#/definitions/customerCommunication_UserUpdateOneRequiredWithoutAccountsNestedInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_UserUpdateOneRequiredWithoutAccountsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutAccountsInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutAccountsInput" },
						upsert: { $ref: "#/definitions/customerCommunication_UserUpsertWithoutAccountsInput" },
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutAccountsInput" },
					},
				},
				customerCommunication_UserCreateWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionCreateNestedManyWithoutUserInput" },
					},
				},
				customerCommunication_InteractionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
					},
				},
				customerCommunication_InteractionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
					},
				},
				customerCommunication_WidgetCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, embeddedIn: { type: "string" } },
				},
				customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_InteractionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						widgetId: { type: ["string", "null"] },
					},
					required: ["interactionType", "content", "timestamp"],
				},
				customerCommunication_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
					},
				},
				customerCommunication_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				customerCommunication_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				customerCommunication_UserCreateOrConnectWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutAccountsInput" },
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_UserUpsertWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutAccountsInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutAccountsInput" },
					},
				},
				customerCommunication_UserUpdateWithoutAccountsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: {
							$ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput",
						},
						stripePriceId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: {
							$ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput",
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyWithoutUserNestedInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithoutUserNestedInput" },
					},
				},
				customerCommunication_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
					},
				},
				customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput" },
					},
				},
				customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						upsert: { $ref: "#/definitions/customerCommunication_WidgetUpsertWithoutInteractionsInput" },
						disconnect: { type: ["boolean", "null"] },
						delete: { type: ["boolean", "null"] },
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetUpsertWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetUpdateWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyMutationInput" },
					},
				},
				customerCommunication_InteractionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_InteractionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
					},
				},
				customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateManyMutationInput" },
					},
				},
				customerCommunication_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_updateOneAccount: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpdateOneFilter": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_FilterUpdateInput" },
				where: { $ref: "#/definitions/customerCommunication_FilterWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				customerCommunication_FilterUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						audience: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						output: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_FilterWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_updateOneFilter: {
							type: "object",
							properties: {
								id: { type: "string" },
								audience: {
									type: "string",
									enum: [
										"CALL_CENTER",
										"CLIENT_PORTAL",
										"GUARDIAN_ONLINE",
										"GPAC",
										"SMART_OFFICE",
										"LIVING_BALANCE_SHEET",
									],
								},
								output: {
									type: "string",
									enum: [
										"CALLS",
										"CHATS",
										"EMAILS",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIALS",
										"TEXTS",
									],
								},
							},
							additionalProperties: false,
							required: ["id", "audience", "output"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpdateOneInteraction": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_InteractionUpdateInput" },
				where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
				customerCommunication_updateOneInteraction_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_updateOneInteraction_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_updateOneInteraction_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_updateOneInteraction_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_updateOneInteraction_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_updateOneInteraction_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_updateOneInteraction_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_updateOneInteraction_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_updateOneInteraction_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_updateOneInteraction_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_updateOneInteraction_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_updateOneInteraction_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				customerCommunication_InteractionUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						user: { $ref: "#/definitions/customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutInteractionsInput",
						},
						upsert: { $ref: "#/definitions/customerCommunication_UserUpsertWithoutInteractionsInput" },
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/customerCommunication_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionCreateNestedManyWithoutUserInput" },
					},
				},
				customerCommunication_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
					},
				},
				customerCommunication_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				customerCommunication_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				customerCommunication_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
					},
				},
				customerCommunication_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				customerCommunication_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				customerCommunication_UserCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_UserUpsertWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutInteractionsInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserUpdateWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: {
							$ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput",
						},
						stripePriceId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: {
							$ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput",
						},
						accounts: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithoutUserNestedInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithoutUserNestedInput" },
					},
				},
				customerCommunication_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
					},
				},
				customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateManyMutationInput" },
					},
				},
				customerCommunication_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
					},
				},
				customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateManyMutationInput" },
					},
				},
				customerCommunication_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						upsert: { $ref: "#/definitions/customerCommunication_WidgetUpsertWithoutInteractionsInput" },
						disconnect: { type: ["boolean", "null"] },
						delete: { type: ["boolean", "null"] },
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, embeddedIn: { type: "string" } },
				},
				customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_WidgetUpsertWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetUpdateWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_updateOneInteraction: {
							type: "object",
							properties: {
								id: { type: "string" },
								interactionType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								content: { type: "string" },
								timestamp: { type: "string" },
								userId: { type: "string" },
								widgetId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
								Widget: {
									type: "object",
									properties: {
										id: { type: "string" },
										embeddedIn: { type: "string" },
										_count: {
											type: "object",
											properties: { interactions: { type: "integer" } },
											additionalProperties: false,
											required: ["interactions"],
										},
									},
									additionalProperties: false,
									required: ["id", "embeddedIn", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpdateOneSession": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_SessionUpdateInput" },
				where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
				customerCommunication_updateOneSession_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_updateOneSession_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_updateOneSession_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_updateOneSession_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_updateOneSession_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_updateOneSession_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_updateOneSession_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_updateOneSession_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_updateOneSession_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_updateOneSession_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_updateOneSession_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_updateOneSession_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				customerCommunication_SessionUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						user: { $ref: "#/definitions/customerCommunication_UserUpdateOneRequiredWithoutSessionsNestedInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_UserUpdateOneRequiredWithoutSessionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutSessionsInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutSessionsInput" },
						upsert: { $ref: "#/definitions/customerCommunication_UserUpsertWithoutSessionsInput" },
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutSessionsInput" },
					},
				},
				customerCommunication_UserCreateWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionCreateNestedManyWithoutUserInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountCreateNestedManyWithoutUserInput" },
					},
				},
				customerCommunication_InteractionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
					},
				},
				customerCommunication_InteractionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
					},
				},
				customerCommunication_WidgetCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, embeddedIn: { type: "string" } },
				},
				customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_InteractionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						widgetId: { type: ["string", "null"] },
					},
					required: ["interactionType", "content", "timestamp"],
				},
				customerCommunication_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
					},
				},
				customerCommunication_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				customerCommunication_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				customerCommunication_UserCreateOrConnectWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutSessionsInput" },
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_UserUpsertWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutSessionsInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutSessionsInput" },
					},
				},
				customerCommunication_UserUpdateWithoutSessionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: {
							$ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput",
						},
						stripePriceId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: {
							$ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput",
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyWithoutUserNestedInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithoutUserNestedInput" },
					},
				},
				customerCommunication_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
					},
				},
				customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput" },
					},
				},
				customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						upsert: { $ref: "#/definitions/customerCommunication_WidgetUpsertWithoutInteractionsInput" },
						disconnect: { type: ["boolean", "null"] },
						delete: { type: ["boolean", "null"] },
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetUpsertWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetUpdateWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyMutationInput" },
					},
				},
				customerCommunication_InteractionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_InteractionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
					},
				},
				customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateManyMutationInput" },
					},
				},
				customerCommunication_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_updateOneSession: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpdateOneUser": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_UserUpdateInput" },
				where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
				customerCommunication_updateOneUser_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_updateOneUser_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_updateOneUser_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_updateOneUser_interactions_take: { type: ["integer", "null"] },
				customerCommunication_updateOneUser_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_updateOneUser_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_updateOneUser_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_updateOneUser_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_updateOneUser_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_updateOneUser_accounts_take: { type: ["integer", "null"] },
				customerCommunication_updateOneUser_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_updateOneUser_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_updateOneUser_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_updateOneUser_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_updateOneUser_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_updateOneUser_sessions_take: { type: ["integer", "null"] },
				customerCommunication_updateOneUser_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_updateOneUser_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				customerCommunication_UserUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: {
							$ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput",
						},
						stripePriceId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: {
							$ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput",
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyWithoutUserNestedInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithoutUserNestedInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithoutUserNestedInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
					},
				},
				customerCommunication_InteractionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
					},
				},
				customerCommunication_WidgetCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, embeddedIn: { type: "string" } },
				},
				customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput" },
					},
				},
				customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						upsert: { $ref: "#/definitions/customerCommunication_WidgetUpsertWithoutInteractionsInput" },
						disconnect: { type: ["boolean", "null"] },
						delete: { type: ["boolean", "null"] },
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetUpsertWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetUpdateWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_InteractionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_InteractionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						widgetId: { type: ["string", "null"] },
					},
					required: ["interactionType", "content", "timestamp"],
				},
				customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyMutationInput" },
					},
				},
				customerCommunication_InteractionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_InteractionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
					},
				},
				customerCommunication_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				customerCommunication_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				customerCommunication_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateManyMutationInput" },
					},
				},
				customerCommunication_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
					},
				},
				customerCommunication_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				customerCommunication_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateManyMutationInput" },
					},
				},
				customerCommunication_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_updateOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											Widget: {
												type: "object",
												properties: {
													id: { type: "string" },
													embeddedIn: { type: "string" },
													_count: {
														type: "object",
														properties: { interactions: { type: "integer" } },
														additionalProperties: false,
														required: ["interactions"],
													},
												},
												additionalProperties: false,
												required: ["id", "embeddedIn", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId"],
									},
								},
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								_count: {
									type: "object",
									properties: {
										interactions: { type: "integer" },
										accounts: { type: "integer" },
										sessions: { type: "integer" },
									},
									additionalProperties: false,
									required: ["interactions", "accounts", "sessions"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpdateOneVerificationToken": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_VerificationTokenUpdateInput" },
				where: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				customerCommunication_VerificationTokenUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						identifier: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						token: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: {
							$ref: "#/definitions/customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput",
						},
					},
				},
				customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_updateOneVerificationToken: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpdateOneWidget": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/customerCommunication_WidgetUpdateInput" },
				where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
				customerCommunication_updateOneWidget_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_updateOneWidget_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_updateOneWidget_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_updateOneWidget_interactions_take: { type: ["integer", "null"] },
				customerCommunication_updateOneWidget_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_updateOneWidget_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_updateOneWidget_interactions_interactions_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_updateOneWidget_interactions_interactions_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_updateOneWidget_interactions_interactions_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_updateOneWidget_interactions_interactions_user_user_accounts_take: {
					type: ["integer", "null"],
				},
				customerCommunication_updateOneWidget_interactions_interactions_user_user_accounts_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_updateOneWidget_interactions_interactions_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_updateOneWidget_interactions_interactions_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_updateOneWidget_interactions_interactions_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_updateOneWidget_interactions_interactions_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_updateOneWidget_interactions_interactions_user_user_sessions_take: {
					type: ["integer", "null"],
				},
				customerCommunication_updateOneWidget_interactions_interactions_user_user_sessions_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_updateOneWidget_interactions_interactions_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				customerCommunication_WidgetUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyWithoutWidgetNestedInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionUpdateManyWithoutWidgetNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutWidgetInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutWidgetInput",
						},
						upsert: { $ref: "#/definitions/customerCommunication_InteractionUpsertWithWhereUniqueWithoutWidgetInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyWidgetInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithWhereUniqueWithoutWidgetInput" },
						updateMany: {
							$ref: "#/definitions/customerCommunication_InteractionUpdateManyWithWhereWithoutWidgetInput",
						},
						deleteMany: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
					},
				},
				customerCommunication_InteractionCreateWithoutWidgetInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						user: { $ref: "#/definitions/customerCommunication_UserCreateNestedOneWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
					},
				},
				customerCommunication_UserCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/customerCommunication_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionCreateNestedManyWithoutUserInput" },
					},
				},
				customerCommunication_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
					},
				},
				customerCommunication_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				customerCommunication_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				customerCommunication_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
					},
				},
				customerCommunication_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				customerCommunication_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				customerCommunication_UserCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_InteractionCreateOrConnectWithoutWidgetInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutWidgetInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionUpsertWithWhereUniqueWithoutWidgetInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutWidgetInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutWidgetInput" },
					},
				},
				customerCommunication_InteractionUpdateWithoutWidgetInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						user: { $ref: "#/definitions/customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput" },
					},
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutInteractionsInput",
						},
						upsert: { $ref: "#/definitions/customerCommunication_UserUpsertWithoutInteractionsInput" },
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserUpsertWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutInteractionsInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserUpdateWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: {
							$ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput",
						},
						stripePriceId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: {
							$ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput",
						},
						accounts: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithoutUserNestedInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithoutUserNestedInput" },
					},
				},
				customerCommunication_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
					},
				},
				customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateManyMutationInput" },
					},
				},
				customerCommunication_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
					},
				},
				customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateManyMutationInput" },
					},
				},
				customerCommunication_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_InteractionCreateManyWidgetInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_InteractionCreateManyWidgetInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_InteractionCreateManyWidgetInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						userId: { type: "string" },
					},
					required: ["interactionType", "content", "timestamp", "userId"],
				},
				customerCommunication_InteractionUpdateWithWhereUniqueWithoutWidgetInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutWidgetInput" },
					},
				},
				customerCommunication_InteractionUpdateManyWithWhereWithoutWidgetInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyMutationInput" },
					},
				},
				customerCommunication_InteractionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_InteractionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_updateOneWidget: {
							type: "object",
							properties: {
								id: { type: "string" },
								embeddedIn: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											user: {
												type: "object",
												properties: {
													id: { type: "string" },
													name: { type: "string" },
													email: { type: "string" },
													emailVerified: { type: "string" },
													image: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
													stripeCustomerId: { type: "string" },
													stripeSubscriptionId: { type: "string" },
													stripePriceId: { type: "string" },
													stripeCurrentPeriodEnd: { type: "string" },
													accounts: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																userId: { type: "string" },
																type: { type: "string" },
																provider: { type: "string" },
																providerAccountId: { type: "string" },
																refresh_token: { type: "string" },
																access_token: { type: "string" },
																expires_at: { type: "integer" },
																token_type: { type: "string" },
																scope: { type: "string" },
																id_token: { type: "string" },
																session_state: { type: "string" },
																createdAt: { type: "string" },
																updatedAt: { type: "string" },
															},
															additionalProperties: false,
															required: [
																"id",
																"userId",
																"type",
																"provider",
																"providerAccountId",
																"createdAt",
																"updatedAt",
															],
														},
													},
													sessions: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																sessionToken: { type: "string" },
																userId: { type: "string" },
																expires: { type: "string" },
															},
															additionalProperties: false,
															required: ["id", "sessionToken", "userId", "expires"],
														},
													},
													_count: {
														type: "object",
														properties: {
															interactions: { type: "integer" },
															accounts: { type: "integer" },
															sessions: { type: "integer" },
														},
														additionalProperties: false,
														required: ["interactions", "accounts", "sessions"],
													},
												},
												additionalProperties: false,
												required: ["id", "createdAt", "updatedAt", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
									},
								},
								_count: {
									type: "object",
									properties: { interactions: { type: "integer" } },
									additionalProperties: false,
									required: ["interactions"],
								},
							},
							additionalProperties: false,
							required: ["id", "embeddedIn", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpsertOneAccount": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
				create: { $ref: "#/definitions/customerCommunication_AccountCreateInput" },
				update: { $ref: "#/definitions/customerCommunication_AccountUpdateInput" },
				customerCommunication_upsertOneAccount_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_upsertOneAccount_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_upsertOneAccount_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_upsertOneAccount_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_upsertOneAccount_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_upsertOneAccount_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_upsertOneAccount_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_upsertOneAccount_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_upsertOneAccount_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_upsertOneAccount_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_upsertOneAccount_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_upsertOneAccount_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_AccountCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						user: { $ref: "#/definitions/customerCommunication_UserCreateNestedOneWithoutAccountsInput" },
					},
					required: ["type", "provider", "providerAccountId", "user"],
				},
				customerCommunication_UserCreateNestedOneWithoutAccountsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutAccountsInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutAccountsInput" },
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
					},
				},
				customerCommunication_UserCreateWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionCreateNestedManyWithoutUserInput" },
					},
				},
				customerCommunication_InteractionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
					},
				},
				customerCommunication_InteractionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
					},
				},
				customerCommunication_WidgetCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, embeddedIn: { type: "string" } },
				},
				customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_InteractionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						widgetId: { type: ["string", "null"] },
					},
					required: ["interactionType", "content", "timestamp"],
				},
				customerCommunication_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
					},
				},
				customerCommunication_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				customerCommunication_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				customerCommunication_UserCreateOrConnectWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutAccountsInput" },
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_AccountUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						user: { $ref: "#/definitions/customerCommunication_UserUpdateOneRequiredWithoutAccountsNestedInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_UserUpdateOneRequiredWithoutAccountsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutAccountsInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutAccountsInput" },
						upsert: { $ref: "#/definitions/customerCommunication_UserUpsertWithoutAccountsInput" },
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutAccountsInput" },
					},
				},
				customerCommunication_UserUpsertWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutAccountsInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutAccountsInput" },
					},
				},
				customerCommunication_UserUpdateWithoutAccountsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: {
							$ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput",
						},
						stripePriceId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: {
							$ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput",
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyWithoutUserNestedInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithoutUserNestedInput" },
					},
				},
				customerCommunication_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
					},
				},
				customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput" },
					},
				},
				customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						upsert: { $ref: "#/definitions/customerCommunication_WidgetUpsertWithoutInteractionsInput" },
						disconnect: { type: ["boolean", "null"] },
						delete: { type: ["boolean", "null"] },
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetUpsertWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetUpdateWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyMutationInput" },
					},
				},
				customerCommunication_InteractionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_InteractionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
					},
				},
				customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateManyMutationInput" },
					},
				},
				customerCommunication_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_upsertOneAccount: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpsertOneFilter": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_FilterWhereUniqueInput" },
				create: { $ref: "#/definitions/customerCommunication_FilterCreateInput" },
				update: { $ref: "#/definitions/customerCommunication_FilterUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				customerCommunication_FilterWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_FilterCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						audience: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						output: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
					},
					required: ["audience", "output"],
				},
				customerCommunication_FilterUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						audience: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_AudienceType",
							enum: ["CALL_CENTER", "CLIENT_PORTAL", "GUARDIAN_ONLINE", "GPAC", "SMART_OFFICE", "LIVING_BALANCE_SHEET"],
						},
						output: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_OutputType",
							enum: [
								"CALLS",
								"CHATS",
								"EMAILS",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIALS",
								"TEXTS",
							],
						},
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_upsertOneFilter: {
							type: "object",
							properties: {
								id: { type: "string" },
								audience: {
									type: "string",
									enum: [
										"CALL_CENTER",
										"CLIENT_PORTAL",
										"GUARDIAN_ONLINE",
										"GPAC",
										"SMART_OFFICE",
										"LIVING_BALANCE_SHEET",
									],
								},
								output: {
									type: "string",
									enum: [
										"CALLS",
										"CHATS",
										"EMAILS",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIALS",
										"TEXTS",
									],
								},
							},
							additionalProperties: false,
							required: ["id", "audience", "output"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpsertOneInteraction": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
				create: { $ref: "#/definitions/customerCommunication_InteractionCreateInput" },
				update: { $ref: "#/definitions/customerCommunication_InteractionUpdateInput" },
				customerCommunication_upsertOneInteraction_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_upsertOneInteraction_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_upsertOneInteraction_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_upsertOneInteraction_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_upsertOneInteraction_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_upsertOneInteraction_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_upsertOneInteraction_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_upsertOneInteraction_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_upsertOneInteraction_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_upsertOneInteraction_user_user_sessions_take: { type: ["integer", "null"] },
				customerCommunication_upsertOneInteraction_user_user_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_upsertOneInteraction_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						user: { $ref: "#/definitions/customerCommunication_UserCreateNestedOneWithoutInteractionsInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput" },
					},
					required: ["interactionType", "content", "timestamp", "user"],
				},
				customerCommunication_UserCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
					},
				},
				customerCommunication_UserCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/customerCommunication_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionCreateNestedManyWithoutUserInput" },
					},
				},
				customerCommunication_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
					},
				},
				customerCommunication_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				customerCommunication_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				customerCommunication_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
					},
				},
				customerCommunication_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				customerCommunication_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				customerCommunication_UserCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
					},
				},
				customerCommunication_WidgetCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, embeddedIn: { type: "string" } },
				},
				customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						user: { $ref: "#/definitions/customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutInteractionsInput",
						},
						upsert: { $ref: "#/definitions/customerCommunication_UserUpsertWithoutInteractionsInput" },
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserUpsertWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutInteractionsInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserUpdateWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: {
							$ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput",
						},
						stripePriceId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: {
							$ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput",
						},
						accounts: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithoutUserNestedInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithoutUserNestedInput" },
					},
				},
				customerCommunication_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
					},
				},
				customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateManyMutationInput" },
					},
				},
				customerCommunication_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
					},
				},
				customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateManyMutationInput" },
					},
				},
				customerCommunication_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						upsert: { $ref: "#/definitions/customerCommunication_WidgetUpsertWithoutInteractionsInput" },
						disconnect: { type: ["boolean", "null"] },
						delete: { type: ["boolean", "null"] },
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetUpsertWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetUpdateWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_upsertOneInteraction: {
							type: "object",
							properties: {
								id: { type: "string" },
								interactionType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								content: { type: "string" },
								timestamp: { type: "string" },
								userId: { type: "string" },
								widgetId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
								Widget: {
									type: "object",
									properties: {
										id: { type: "string" },
										embeddedIn: { type: "string" },
										_count: {
											type: "object",
											properties: { interactions: { type: "integer" } },
											additionalProperties: false,
											required: ["interactions"],
										},
									},
									additionalProperties: false,
									required: ["id", "embeddedIn", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpsertOneSession": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
				create: { $ref: "#/definitions/customerCommunication_SessionCreateInput" },
				update: { $ref: "#/definitions/customerCommunication_SessionUpdateInput" },
				customerCommunication_upsertOneSession_user_user_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_upsertOneSession_user_user_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_upsertOneSession_user_user_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_upsertOneSession_user_user_interactions_take: { type: ["integer", "null"] },
				customerCommunication_upsertOneSession_user_user_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_upsertOneSession_user_user_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_upsertOneSession_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_upsertOneSession_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_upsertOneSession_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_upsertOneSession_user_user_accounts_take: { type: ["integer", "null"] },
				customerCommunication_upsertOneSession_user_user_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_upsertOneSession_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_SessionCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
						user: { $ref: "#/definitions/customerCommunication_UserCreateNestedOneWithoutSessionsInput" },
					},
					required: ["sessionToken", "expires", "user"],
				},
				customerCommunication_UserCreateNestedOneWithoutSessionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutSessionsInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutSessionsInput" },
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
					},
				},
				customerCommunication_UserCreateWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionCreateNestedManyWithoutUserInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountCreateNestedManyWithoutUserInput" },
					},
				},
				customerCommunication_InteractionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
					},
				},
				customerCommunication_InteractionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
					},
				},
				customerCommunication_WidgetCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, embeddedIn: { type: "string" } },
				},
				customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_InteractionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						widgetId: { type: ["string", "null"] },
					},
					required: ["interactionType", "content", "timestamp"],
				},
				customerCommunication_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
					},
				},
				customerCommunication_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				customerCommunication_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				customerCommunication_UserCreateOrConnectWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutSessionsInput" },
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_SessionUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						user: { $ref: "#/definitions/customerCommunication_UserUpdateOneRequiredWithoutSessionsNestedInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_UserUpdateOneRequiredWithoutSessionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutSessionsInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutSessionsInput" },
						upsert: { $ref: "#/definitions/customerCommunication_UserUpsertWithoutSessionsInput" },
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutSessionsInput" },
					},
				},
				customerCommunication_UserUpsertWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutSessionsInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutSessionsInput" },
					},
				},
				customerCommunication_UserUpdateWithoutSessionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: {
							$ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput",
						},
						stripePriceId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: {
							$ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput",
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyWithoutUserNestedInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithoutUserNestedInput" },
					},
				},
				customerCommunication_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
					},
				},
				customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput" },
					},
				},
				customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						upsert: { $ref: "#/definitions/customerCommunication_WidgetUpsertWithoutInteractionsInput" },
						disconnect: { type: ["boolean", "null"] },
						delete: { type: ["boolean", "null"] },
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetUpsertWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetUpdateWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyMutationInput" },
					},
				},
				customerCommunication_InteractionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_InteractionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
					},
				},
				customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateManyMutationInput" },
					},
				},
				customerCommunication_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_upsertOneSession: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										interactions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													interactionType: {
														type: "string",
														enum: [
															"CALL",
															"CHAT",
															"EMAIL",
															"WEB_USAGE",
															"IVR_HUGO_USAGE",
															"OUTBOUND_CORRESPONDENCE",
															"MARKETING_MATERIAL",
															"TEXT",
														],
													},
													content: { type: "string" },
													timestamp: { type: "string" },
													userId: { type: "string" },
													widgetId: { type: "string" },
													Widget: {
														type: "object",
														properties: {
															id: { type: "string" },
															embeddedIn: { type: "string" },
															_count: {
																type: "object",
																properties: { interactions: { type: "integer" } },
																additionalProperties: false,
																required: ["interactions"],
															},
														},
														additionalProperties: false,
														required: ["id", "embeddedIn", "_count"],
													},
												},
												additionalProperties: false,
												required: ["id", "interactionType", "content", "timestamp", "userId"],
											},
										},
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										_count: {
											type: "object",
											properties: {
												interactions: { type: "integer" },
												accounts: { type: "integer" },
												sessions: { type: "integer" },
											},
											additionalProperties: false,
											required: ["interactions", "accounts", "sessions"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpsertOneUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
				create: { $ref: "#/definitions/customerCommunication_UserCreateInput" },
				update: { $ref: "#/definitions/customerCommunication_UserUpdateInput" },
				customerCommunication_upsertOneUser_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_upsertOneUser_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_upsertOneUser_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_upsertOneUser_interactions_take: { type: ["integer", "null"] },
				customerCommunication_upsertOneUser_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_upsertOneUser_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_upsertOneUser_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_upsertOneUser_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_upsertOneUser_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_upsertOneUser_accounts_take: { type: ["integer", "null"] },
				customerCommunication_upsertOneUser_accounts_skip: { type: ["integer", "null"] },
				customerCommunication_upsertOneUser_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_upsertOneUser_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_upsertOneUser_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_upsertOneUser_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_upsertOneUser_sessions_take: { type: ["integer", "null"] },
				customerCommunication_upsertOneUser_sessions_skip: { type: ["integer", "null"] },
				customerCommunication_upsertOneUser_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_UserCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionCreateNestedManyWithoutUserInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionCreateNestedManyWithoutUserInput" },
					},
				},
				customerCommunication_InteractionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
					},
				},
				customerCommunication_InteractionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
					},
				},
				customerCommunication_WidgetCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, embeddedIn: { type: "string" } },
				},
				customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_InteractionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						widgetId: { type: ["string", "null"] },
					},
					required: ["interactionType", "content", "timestamp"],
				},
				customerCommunication_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
					},
				},
				customerCommunication_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				customerCommunication_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				customerCommunication_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
					},
				},
				customerCommunication_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				customerCommunication_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				customerCommunication_UserUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: {
							$ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput",
						},
						stripePriceId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: {
							$ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput",
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyWithoutUserNestedInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithoutUserNestedInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithoutUserNestedInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
					},
				},
				customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput" },
					},
				},
				customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput",
						},
						upsert: { $ref: "#/definitions/customerCommunication_WidgetUpsertWithoutInteractionsInput" },
						disconnect: { type: ["boolean", "null"] },
						delete: { type: ["boolean", "null"] },
						connect: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetUpsertWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_WidgetUpdateWithoutInteractionsInput" },
						create: { $ref: "#/definitions/customerCommunication_WidgetCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_WidgetUpdateWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutUserInput" },
					},
				},
				customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyMutationInput" },
					},
				},
				customerCommunication_InteractionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_InteractionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
					},
				},
				customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateManyMutationInput" },
					},
				},
				customerCommunication_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
					},
				},
				customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateManyMutationInput" },
					},
				},
				customerCommunication_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_upsertOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											Widget: {
												type: "object",
												properties: {
													id: { type: "string" },
													embeddedIn: { type: "string" },
													_count: {
														type: "object",
														properties: { interactions: { type: "integer" } },
														additionalProperties: false,
														required: ["interactions"],
													},
												},
												additionalProperties: false,
												required: ["id", "embeddedIn", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId"],
									},
								},
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								_count: {
									type: "object",
									properties: {
										interactions: { type: "integer" },
										accounts: { type: "integer" },
										sessions: { type: "integer" },
									},
									additionalProperties: false,
									required: ["interactions", "accounts", "sessions"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpsertOneVerificationToken": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_VerificationTokenWhereUniqueInput" },
				create: { $ref: "#/definitions/customerCommunication_VerificationTokenCreateInput" },
				update: { $ref: "#/definitions/customerCommunication_VerificationTokenUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				customerCommunication_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: {
							$ref: "#/definitions/customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput",
						},
					},
				},
				customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
				customerCommunication_VerificationTokenCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
					required: ["identifier", "token", "expires"],
				},
				customerCommunication_VerificationTokenUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						identifier: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						token: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_upsertOneVerificationToken: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"customerCommunication/UpsertOneWidget": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/customerCommunication_WidgetWhereUniqueInput" },
				create: { $ref: "#/definitions/customerCommunication_WidgetCreateInput" },
				update: { $ref: "#/definitions/customerCommunication_WidgetUpdateInput" },
				customerCommunication_upsertOneWidget_interactions_where: {
					$ref: "#/definitions/customerCommunication_InteractionWhereInput",
				},
				customerCommunication_upsertOneWidget_interactions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_InteractionOrderByWithRelationInput" },
				},
				customerCommunication_upsertOneWidget_interactions_cursor: {
					$ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput",
				},
				customerCommunication_upsertOneWidget_interactions_take: { type: ["integer", "null"] },
				customerCommunication_upsertOneWidget_interactions_skip: { type: ["integer", "null"] },
				customerCommunication_upsertOneWidget_interactions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
						enum: ["id", "interactionType", "content", "timestamp", "userId", "widgetId"],
					},
				},
				customerCommunication_upsertOneWidget_interactions_interactions_user_user_accounts_where: {
					$ref: "#/definitions/customerCommunication_AccountWhereInput",
				},
				customerCommunication_upsertOneWidget_interactions_interactions_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_AccountOrderByWithRelationInput" },
				},
				customerCommunication_upsertOneWidget_interactions_interactions_user_user_accounts_cursor: {
					$ref: "#/definitions/customerCommunication_AccountWhereUniqueInput",
				},
				customerCommunication_upsertOneWidget_interactions_interactions_user_user_accounts_take: {
					type: ["integer", "null"],
				},
				customerCommunication_upsertOneWidget_interactions_interactions_user_user_accounts_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_upsertOneWidget_interactions_interactions_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				customerCommunication_upsertOneWidget_interactions_interactions_user_user_sessions_where: {
					$ref: "#/definitions/customerCommunication_SessionWhereInput",
				},
				customerCommunication_upsertOneWidget_interactions_interactions_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/customerCommunication_SessionOrderByWithRelationInput" },
				},
				customerCommunication_upsertOneWidget_interactions_interactions_user_user_sessions_cursor: {
					$ref: "#/definitions/customerCommunication_SessionWhereUniqueInput",
				},
				customerCommunication_upsertOneWidget_interactions_interactions_user_user_sessions_take: {
					type: ["integer", "null"],
				},
				customerCommunication_upsertOneWidget_interactions_interactions_user_user_sessions_skip: {
					type: ["integer", "null"],
				},
				customerCommunication_upsertOneWidget_interactions_interactions_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				customerCommunication_WidgetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_WidgetCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						embeddedIn: { type: "string" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionCreateNestedManyWithoutWidgetInput" },
					},
					required: ["embeddedIn"],
				},
				customerCommunication_InteractionCreateNestedManyWithoutWidgetInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutWidgetInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutWidgetInput",
						},
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyWidgetInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
					},
				},
				customerCommunication_InteractionCreateWithoutWidgetInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						user: { $ref: "#/definitions/customerCommunication_UserCreateNestedOneWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserCreateNestedOneWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutInteractionsInput",
						},
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
					},
				},
				customerCommunication_UserCreateWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/customerCommunication_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionCreateNestedManyWithoutUserInput" },
					},
				},
				customerCommunication_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
					},
				},
				customerCommunication_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				customerCommunication_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				customerCommunication_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				customerCommunication_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
					},
				},
				customerCommunication_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				customerCommunication_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				customerCommunication_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				customerCommunication_UserCreateOrConnectWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				customerCommunication_InteractionCreateOrConnectWithoutWidgetInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutWidgetInput" },
					},
				},
				customerCommunication_InteractionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionCreateManyWidgetInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/customerCommunication_InteractionCreateManyWidgetInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				customerCommunication_InteractionCreateManyWidgetInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						interactionType: {
							type: "string",
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { type: "string" },
						timestamp: { type: "string" },
						userId: { type: "string" },
					},
					required: ["interactionType", "content", "timestamp", "userId"],
				},
				customerCommunication_WidgetUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyWithoutWidgetNestedInput" },
					},
				},
				customerCommunication_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_InteractionUpdateManyWithoutWidgetNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutWidgetInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_InteractionCreateOrConnectWithoutWidgetInput",
						},
						upsert: { $ref: "#/definitions/customerCommunication_InteractionUpsertWithWhereUniqueWithoutWidgetInput" },
						createMany: { $ref: "#/definitions/customerCommunication_InteractionCreateManyWidgetInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithWhereUniqueWithoutWidgetInput" },
						updateMany: {
							$ref: "#/definitions/customerCommunication_InteractionUpdateManyWithWhereWithoutWidgetInput",
						},
						deleteMany: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
					},
				},
				customerCommunication_InteractionUpsertWithWhereUniqueWithoutWidgetInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutWidgetInput" },
						create: { $ref: "#/definitions/customerCommunication_InteractionCreateWithoutWidgetInput" },
					},
				},
				customerCommunication_InteractionUpdateWithoutWidgetInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						user: { $ref: "#/definitions/customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput" },
					},
				},
				customerCommunication_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
						connectOrCreate: {
							$ref: "#/definitions/customerCommunication_UserCreateOrConnectWithoutInteractionsInput",
						},
						upsert: { $ref: "#/definitions/customerCommunication_UserUpsertWithoutInteractionsInput" },
						connect: { $ref: "#/definitions/customerCommunication_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserUpsertWithoutInteractionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/customerCommunication_UserUpdateWithoutInteractionsInput" },
						create: { $ref: "#/definitions/customerCommunication_UserCreateWithoutInteractionsInput" },
					},
				},
				customerCommunication_UserUpdateWithoutInteractionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: {
							$ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput",
						},
						stripePriceId: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: {
							$ref: "#/definitions/customerCommunication_NullableDateTimeFieldUpdateOperationsInput",
						},
						accounts: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithoutUserNestedInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithoutUserNestedInput" },
					},
				},
				customerCommunication_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				customerCommunication_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
					},
				},
				customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_AccountCreateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateWithoutUserInput" },
					},
				},
				customerCommunication_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_AccountUpdateManyMutationInput" },
					},
				},
				customerCommunication_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringFilter" },
					},
				},
				customerCommunication_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedStringNullableFilter" },
					},
				},
				customerCommunication_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedIntNullableFilter" },
					},
				},
				customerCommunication_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeFilter" },
					},
				},
				customerCommunication_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/customerCommunication_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/customerCommunication_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/customerCommunication_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/customerCommunication_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
					},
				},
				customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/customerCommunication_SessionCreateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateWithoutUserInput" },
					},
				},
				customerCommunication_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_SessionUpdateManyMutationInput" },
					},
				},
				customerCommunication_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
					},
				},
				customerCommunication_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_InteractionUpdateWithWhereUniqueWithoutWidgetInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionWhereUniqueInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateWithoutWidgetInput" },
					},
				},
				customerCommunication_InteractionUpdateManyWithWhereWithoutWidgetInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						data: { $ref: "#/definitions/customerCommunication_InteractionUpdateManyMutationInput" },
					},
				},
				customerCommunication_InteractionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionScalarWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
					},
				},
				customerCommunication_EnumInteractionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_InteractionType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				customerCommunication_InteractionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_InteractionType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						content: { $ref: "#/definitions/customerCommunication_StringFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFieldUpdateOperationsInput" },
					},
				},
				customerCommunication_InteractionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						},
						NOT: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactionType: { $ref: "#/definitions/customerCommunication_EnumInteractionTypeFilter" },
						content: { $ref: "#/definitions/customerCommunication_StringFilter" },
						timestamp: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						widgetId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetRelationFilter" },
					},
				},
				customerCommunication_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
					},
				},
				customerCommunication_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_UserWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_UserWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						name: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						email: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						userType: { $ref: "#/definitions/customerCommunication_EnumUserTypeNullableFilter" },
						stripeCustomerId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/customerCommunication_DateTimeNullableFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionListRelationFilter" },
					},
				},
				customerCommunication_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/customerCommunication_NestedDateTimeNullableFilter" },
					},
				},
				customerCommunication_EnumUserTypeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "customerCommunication_UserType",
								enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_UserType",
							enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				customerCommunication_InteractionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_InteractionWhereInput" },
					},
				},
				customerCommunication_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
					},
				},
				customerCommunication_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_AccountWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						type: { $ref: "#/definitions/customerCommunication_StringFilter" },
						provider: { $ref: "#/definitions/customerCommunication_StringFilter" },
						providerAccountId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						refresh_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						access_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/customerCommunication_IntNullableFilter" },
						token_type: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						scope: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						id_token: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						session_state: { $ref: "#/definitions/customerCommunication_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						some: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						none: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
					},
				},
				customerCommunication_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_SessionWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						sessionToken: { $ref: "#/definitions/customerCommunication_StringFilter" },
						userId: { $ref: "#/definitions/customerCommunication_StringFilter" },
						expires: { $ref: "#/definitions/customerCommunication_DateTimeFilter" },
						user: { $ref: "#/definitions/customerCommunication_UserRelationFilter" },
					},
				},
				customerCommunication_WidgetRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						isNot: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
					},
				},
				customerCommunication_WidgetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" } },
						NOT: { $ref: "#/definitions/customerCommunication_WidgetWhereInput" },
						id: { $ref: "#/definitions/customerCommunication_StringFilter" },
						embeddedIn: { $ref: "#/definitions/customerCommunication_StringFilter" },
						interactions: { $ref: "#/definitions/customerCommunication_InteractionListRelationFilter" },
					},
				},
				customerCommunication_InteractionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						timestamp: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						widgetId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
						Widget: { $ref: "#/definitions/customerCommunication_WidgetOrderByWithRelationInput" },
					},
				},
				customerCommunication_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						name: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						email: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						emailVerified: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						image: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
						accounts: { $ref: "#/definitions/customerCommunication_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/customerCommunication_SessionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_InteractionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				customerCommunication_WidgetOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						embeddedIn: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						interactions: { $ref: "#/definitions/customerCommunication_InteractionOrderByRelationAggregateInput" },
					},
				},
				customerCommunication_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						provider: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						access_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires_at: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						token_type: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						scope: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						id_token: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						session_state: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						createdAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						updatedAt: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
				customerCommunication_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						sessionToken: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						userId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						expires: {
							type: ["string", "null"],
							"x-graphql-enum-name": "customerCommunication_SortOrder",
							enum: ["asc", "desc"],
						},
						user: { $ref: "#/definitions/customerCommunication_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						customerCommunication_upsertOneWidget: {
							type: "object",
							properties: {
								id: { type: "string" },
								embeddedIn: { type: "string" },
								interactions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											interactionType: {
												type: "string",
												enum: [
													"CALL",
													"CHAT",
													"EMAIL",
													"WEB_USAGE",
													"IVR_HUGO_USAGE",
													"OUTBOUND_CORRESPONDENCE",
													"MARKETING_MATERIAL",
													"TEXT",
												],
											},
											content: { type: "string" },
											timestamp: { type: "string" },
											userId: { type: "string" },
											widgetId: { type: "string" },
											user: {
												type: "object",
												properties: {
													id: { type: "string" },
													name: { type: "string" },
													email: { type: "string" },
													emailVerified: { type: "string" },
													image: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userType: { type: "string", enum: ["CALL_CENTER_REP", "CUSTOMER", "FINANCIAL_REP"] },
													stripeCustomerId: { type: "string" },
													stripeSubscriptionId: { type: "string" },
													stripePriceId: { type: "string" },
													stripeCurrentPeriodEnd: { type: "string" },
													accounts: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																userId: { type: "string" },
																type: { type: "string" },
																provider: { type: "string" },
																providerAccountId: { type: "string" },
																refresh_token: { type: "string" },
																access_token: { type: "string" },
																expires_at: { type: "integer" },
																token_type: { type: "string" },
																scope: { type: "string" },
																id_token: { type: "string" },
																session_state: { type: "string" },
																createdAt: { type: "string" },
																updatedAt: { type: "string" },
															},
															additionalProperties: false,
															required: [
																"id",
																"userId",
																"type",
																"provider",
																"providerAccountId",
																"createdAt",
																"updatedAt",
															],
														},
													},
													sessions: {
														type: "array",
														items: {
															type: "object",
															properties: {
																id: { type: "string" },
																sessionToken: { type: "string" },
																userId: { type: "string" },
																expires: { type: "string" },
															},
															additionalProperties: false,
															required: ["id", "sessionToken", "userId", "expires"],
														},
													},
													_count: {
														type: "object",
														properties: {
															interactions: { type: "integer" },
															accounts: { type: "integer" },
															sessions: { type: "integer" },
														},
														additionalProperties: false,
														required: ["interactions", "accounts", "sessions"],
													},
												},
												additionalProperties: false,
												required: ["id", "createdAt", "updatedAt", "_count"],
											},
										},
										additionalProperties: false,
										required: ["id", "interactionType", "content", "timestamp", "userId", "user"],
									},
								},
								_count: {
									type: "object",
									properties: { interactions: { type: "integer" } },
									additionalProperties: false,
									required: ["interactions"],
								},
							},
							additionalProperties: false,
							required: ["id", "embeddedIn", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/CreateManyAdminAction": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/gpac_AdminActionCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				gpac_AdminActionCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						actionType: {
							type: "string",
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						timestamp: { type: "string" },
						details: {},
						userId: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_createManyAdminAction: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/CreateManyPolicy": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/gpac_PolicyCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				gpac_PolicyCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						policyType: {
							type: "string",
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						status: {
							type: "string",
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						details: {},
						userId: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_createManyPolicy: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/CreateManyUser": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/gpac_UserCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				gpac_UserCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						username: { type: "string" },
						password: { type: "string" },
						role: {
							type: "string",
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_createManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/CreateOneAdminAction": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/gpac_AdminActionCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				gpac_AdminActionCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						actionType: {
							type: "string",
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						timestamp: { type: "string" },
						details: {},
						userId: { type: "string" },
					},
					required: ["id", "actionType", "timestamp", "details", "userId"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_createOneAdminAction: {
							type: "object",
							properties: {
								id: { type: "string" },
								actionType: {
									type: "string",
									enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "actionType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/CreateOnePolicy": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/gpac_PolicyCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				gpac_PolicyCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						policyType: {
							type: "string",
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						status: {
							type: "string",
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						details: {},
						userId: { type: "string" },
					},
					required: ["id", "policyType", "status", "details", "userId"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_createOnePolicy: {
							type: "object",
							properties: {
								id: { type: "string" },
								policyType: { type: "string", enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"] },
								status: { type: "string", enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "policyType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/CreateOneUser": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/gpac_UserCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				gpac_UserCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						username: { type: "string" },
						password: { type: "string" },
						role: {
							type: "string",
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
					},
					required: ["id", "username", "password", "role"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_createOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/DeleteManyAdminAction": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/gpac_AdminActionWhereInput" } },
			additionalProperties: false,
			definitions: {
				gpac_AdminActionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_AdminActionWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						actionType: { $ref: "#/definitions/gpac_EnumAdminAction_actionTypeFilter" },
						timestamp: { $ref: "#/definitions/gpac_DateTimeFilter" },
						details: { $ref: "#/definitions/gpac_JsonFilter" },
						userId: { $ref: "#/definitions/gpac_StringFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumAdminAction_actionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
					},
				},
				gpac_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_deleteManyAdminAction: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/DeleteManyPolicy": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/gpac_PolicyWhereInput" } },
			additionalProperties: false,
			definitions: {
				gpac_PolicyWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_PolicyWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_PolicyWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_PolicyWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						policyType: { $ref: "#/definitions/gpac_EnumPolicy_policyTypeFilter" },
						status: { $ref: "#/definitions/gpac_EnumPolicy_statusFilter" },
						details: { $ref: "#/definitions/gpac_JsonFilter" },
						userId: { $ref: "#/definitions/gpac_StringFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumPolicy_policyTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
					},
				},
				gpac_EnumPolicy_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
					},
				},
				gpac_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_deleteManyPolicy: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/DeleteManyUser": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/gpac_UserWhereInput" } },
			additionalProperties: false,
			definitions: {
				gpac_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_UserWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_UserWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						username: { $ref: "#/definitions/gpac_StringFilter" },
						password: { $ref: "#/definitions/gpac_StringFilter" },
						role: { $ref: "#/definitions/gpac_EnumUser_roleFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_deleteManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/DeleteOneAdminAction": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/gpac_AdminActionWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				gpac_AdminActionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_deleteOneAdminAction: {
							type: "object",
							properties: {
								id: { type: "string" },
								actionType: {
									type: "string",
									enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "actionType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/DeleteOnePolicy": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/gpac_PolicyWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				gpac_PolicyWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_deleteOnePolicy: {
							type: "object",
							properties: {
								id: { type: "string" },
								policyType: { type: "string", enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"] },
								status: { type: "string", enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "policyType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/DeleteOneUser": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/gpac_UserWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				gpac_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_deleteOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/ExecuteRaw": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: { gpac_executeRaw: { type: "integer" } },
					additionalProperties: false,
					required: ["gpac_executeRaw"],
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/UpdateManyAdminAction": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/gpac_AdminActionUpdateManyMutationInput" },
				where: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				gpac_AdminActionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
						actionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						timestamp: { $ref: "#/definitions/gpac_DateTimeFieldUpdateOperationsInput" },
						details: {},
						userId: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
					},
				},
				gpac_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				gpac_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				gpac_AdminActionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_AdminActionWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_AdminActionWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						actionType: { $ref: "#/definitions/gpac_EnumAdminAction_actionTypeFilter" },
						timestamp: { $ref: "#/definitions/gpac_DateTimeFilter" },
						details: { $ref: "#/definitions/gpac_JsonFilter" },
						userId: { $ref: "#/definitions/gpac_StringFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumAdminAction_actionTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_AdminAction_actionType",
								enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
					},
				},
				gpac_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedDateTimeFilter" },
					},
				},
				gpac_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_updateManyAdminAction: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/UpdateManyPolicy": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/gpac_PolicyUpdateManyMutationInput" },
				where: { $ref: "#/definitions/gpac_PolicyWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				gpac_PolicyUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
						policyType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						status: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						details: {},
						userId: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
					},
				},
				gpac_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				gpac_PolicyWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_PolicyWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_PolicyWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_PolicyWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						policyType: { $ref: "#/definitions/gpac_EnumPolicy_policyTypeFilter" },
						status: { $ref: "#/definitions/gpac_EnumPolicy_statusFilter" },
						details: { $ref: "#/definitions/gpac_JsonFilter" },
						userId: { $ref: "#/definitions/gpac_StringFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumPolicy_policyTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_policyType",
								enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
					},
				},
				gpac_EnumPolicy_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_Policy_status",
								enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
					},
				},
				gpac_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_updateManyPolicy: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/UpdateManyUser": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/gpac_UserUpdateManyMutationInput" },
				where: { $ref: "#/definitions/gpac_UserWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				gpac_UserUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
						username: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
						password: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
					},
				},
				gpac_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				gpac_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/gpac_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/gpac_UserWhereInput" } },
						NOT: { $ref: "#/definitions/gpac_UserWhereInput" },
						id: { $ref: "#/definitions/gpac_StringFilter" },
						username: { $ref: "#/definitions/gpac_StringFilter" },
						password: { $ref: "#/definitions/gpac_StringFilter" },
						role: { $ref: "#/definitions/gpac_EnumUser_roleFilter" },
					},
				},
				gpac_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/gpac_NestedStringFilter" },
					},
				},
				gpac_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "gpac_User_role",
								enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_updateManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/UpdateOneAdminAction": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/gpac_AdminActionUpdateInput" },
				where: { $ref: "#/definitions/gpac_AdminActionWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				gpac_AdminActionUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
						actionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						timestamp: { $ref: "#/definitions/gpac_DateTimeFieldUpdateOperationsInput" },
						details: {},
						userId: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
					},
				},
				gpac_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				gpac_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				gpac_AdminActionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_updateOneAdminAction: {
							type: "object",
							properties: {
								id: { type: "string" },
								actionType: {
									type: "string",
									enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "actionType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/UpdateOnePolicy": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/gpac_PolicyUpdateInput" },
				where: { $ref: "#/definitions/gpac_PolicyWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				gpac_PolicyUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
						policyType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						status: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						details: {},
						userId: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
					},
				},
				gpac_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				gpac_PolicyWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_updateOnePolicy: {
							type: "object",
							properties: {
								id: { type: "string" },
								policyType: { type: "string", enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"] },
								status: { type: "string", enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "policyType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/UpdateOneUser": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/gpac_UserUpdateInput" },
				where: { $ref: "#/definitions/gpac_UserWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				gpac_UserUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
						username: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
						password: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
					},
				},
				gpac_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				gpac_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_updateOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/UpsertOneAdminAction": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_AdminActionWhereUniqueInput" },
				create: { $ref: "#/definitions/gpac_AdminActionCreateInput" },
				update: { $ref: "#/definitions/gpac_AdminActionUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				gpac_AdminActionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				gpac_AdminActionCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						actionType: {
							type: "string",
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						timestamp: { type: "string" },
						details: {},
						userId: { type: "string" },
					},
					required: ["id", "actionType", "timestamp", "details", "userId"],
				},
				gpac_AdminActionUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
						actionType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_AdminAction_actionType",
							enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
						},
						timestamp: { $ref: "#/definitions/gpac_DateTimeFieldUpdateOperationsInput" },
						details: {},
						userId: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
					},
				},
				gpac_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				gpac_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_upsertOneAdminAction: {
							type: "object",
							properties: {
								id: { type: "string" },
								actionType: {
									type: "string",
									enum: ["POLICY_CREATION", "POLICY_MODIFICATION", "POLICY_CANCELLATION", "USER_REGISTRATION"],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "actionType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/UpsertOnePolicy": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_PolicyWhereUniqueInput" },
				create: { $ref: "#/definitions/gpac_PolicyCreateInput" },
				update: { $ref: "#/definitions/gpac_PolicyUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				gpac_PolicyWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				gpac_PolicyCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						policyType: {
							type: "string",
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						status: {
							type: "string",
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						details: {},
						userId: { type: "string" },
					},
					required: ["id", "policyType", "status", "details", "userId"],
				},
				gpac_PolicyUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
						policyType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_policyType",
							enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"],
						},
						status: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_Policy_status",
							enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"],
						},
						details: {},
						userId: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
					},
				},
				gpac_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_upsertOnePolicy: {
							type: "object",
							properties: {
								id: { type: "string" },
								policyType: { type: "string", enum: ["LIFE_INSURANCE", "HEALTH_INSURANCE", "AUTO_INSURANCE"] },
								status: { type: "string", enum: ["ACTIVE", "PENDING", "LAPSED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "policyType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"gpac/UpsertOneUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/gpac_UserWhereUniqueInput" },
				create: { $ref: "#/definitions/gpac_UserCreateInput" },
				update: { $ref: "#/definitions/gpac_UserUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				gpac_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				gpac_UserCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						username: { type: "string" },
						password: { type: "string" },
						role: {
							type: "string",
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
					},
					required: ["id", "username", "password", "role"],
				},
				gpac_UserUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
						username: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
						password: { $ref: "#/definitions/gpac_StringFieldUpdateOperationsInput" },
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "gpac_User_role",
							enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"],
						},
					},
				},
				gpac_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						gpac_upsertOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "POLICY_HOLDER", "AGENT", "UNDERWRITER"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/CreateManyFeature": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/guardianOnline_FeatureCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				guardianOnline_FeatureCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						featureType: {
							type: "string",
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						content: {},
						userId: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_createManyFeature: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/CreateManyUser": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/guardianOnline_UserCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				guardianOnline_UserCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						username: { type: "string" },
						password: { type: "string" },
						role: {
							type: "string",
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_createManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/CreateManyUserLog": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/guardianOnline_UserLogCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				guardianOnline_UserLogCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						logType: {
							type: "string",
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						contentType: {
							type: "string",
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						timestamp: { type: "string" },
						details: {},
						userId: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_createManyUserLog: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/CreateOneFeature": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/guardianOnline_FeatureCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				guardianOnline_FeatureCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						featureType: {
							type: "string",
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						content: {},
						userId: { type: "string" },
					},
					required: ["id", "featureType", "content", "userId"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_createOneFeature: {
							type: "object",
							properties: {
								id: { type: "string" },
								featureType: { type: "string", enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"] },
								content: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "featureType", "content", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/CreateOneUser": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/guardianOnline_UserCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				guardianOnline_UserCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						username: { type: "string" },
						password: { type: "string" },
						role: {
							type: "string",
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
					required: ["id", "username", "password", "role"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_createOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/CreateOneUserLog": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/guardianOnline_UserLogCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				guardianOnline_UserLogCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						logType: {
							type: "string",
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						contentType: {
							type: "string",
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						timestamp: { type: "string" },
						details: {},
						userId: { type: "string" },
					},
					required: ["id", "logType", "contentType", "timestamp", "details", "userId"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_createOneUserLog: {
							type: "object",
							properties: {
								id: { type: "string" },
								logType: { type: "string", enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"] },
								contentType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "logType", "contentType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/DeleteManyFeature": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" } },
			additionalProperties: false,
			definitions: {
				guardianOnline_FeatureWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						featureType: { $ref: "#/definitions/guardianOnline_EnumFeature_featureTypeFilter" },
						content: { $ref: "#/definitions/guardianOnline_JsonFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumFeature_featureTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
					},
				},
				guardianOnline_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_deleteManyFeature: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/DeleteManyUser": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/guardianOnline_UserWhereInput" } },
			additionalProperties: false,
			definitions: {
				guardianOnline_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_UserWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						username: { $ref: "#/definitions/guardianOnline_StringFilter" },
						password: { $ref: "#/definitions/guardianOnline_StringFilter" },
						role: { $ref: "#/definitions/guardianOnline_EnumUser_roleFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_deleteManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/DeleteManyUserLog": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" } },
			additionalProperties: false,
			definitions: {
				guardianOnline_UserLogWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						logType: { $ref: "#/definitions/guardianOnline_EnumUserLog_logTypeFilter" },
						contentType: { $ref: "#/definitions/guardianOnline_EnumUserLog_contentTypeFilter" },
						timestamp: { $ref: "#/definitions/guardianOnline_DateTimeFilter" },
						details: { $ref: "#/definitions/guardianOnline_JsonFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumUserLog_logTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
					},
				},
				guardianOnline_EnumUserLog_contentTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				guardianOnline_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_deleteManyUserLog: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/DeleteOneFeature": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/guardianOnline_FeatureWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				guardianOnline_FeatureWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_deleteOneFeature: {
							type: "object",
							properties: {
								id: { type: "string" },
								featureType: { type: "string", enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"] },
								content: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "featureType", "content", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/DeleteOneUser": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/guardianOnline_UserWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				guardianOnline_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_deleteOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/DeleteOneUserLog": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/guardianOnline_UserLogWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				guardianOnline_UserLogWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_deleteOneUserLog: {
							type: "object",
							properties: {
								id: { type: "string" },
								logType: { type: "string", enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"] },
								contentType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "logType", "contentType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/ExecuteRaw": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: { guardianOnline_executeRaw: { type: "integer" } },
					additionalProperties: false,
					required: ["guardianOnline_executeRaw"],
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/UpdateManyFeature": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/guardianOnline_FeatureUpdateManyMutationInput" },
				where: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				guardianOnline_FeatureUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
						featureType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						content: {},
						userId: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
					},
				},
				guardianOnline_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				guardianOnline_FeatureWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_FeatureWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						featureType: { $ref: "#/definitions/guardianOnline_EnumFeature_featureTypeFilter" },
						content: { $ref: "#/definitions/guardianOnline_JsonFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumFeature_featureTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_Feature_featureType",
								enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
					},
				},
				guardianOnline_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_updateManyFeature: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/UpdateManyUser": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/guardianOnline_UserUpdateManyMutationInput" },
				where: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				guardianOnline_UserUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
						username: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
						password: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				guardianOnline_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				guardianOnline_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_UserWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_UserWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						username: { $ref: "#/definitions/guardianOnline_StringFilter" },
						password: { $ref: "#/definitions/guardianOnline_StringFilter" },
						role: { $ref: "#/definitions/guardianOnline_EnumUser_roleFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_User_role",
								enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_updateManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/UpdateManyUserLog": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/guardianOnline_UserLogUpdateManyMutationInput" },
				where: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				guardianOnline_UserLogUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
						logType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						contentType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						timestamp: { $ref: "#/definitions/guardianOnline_DateTimeFieldUpdateOperationsInput" },
						details: {},
						userId: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
					},
				},
				guardianOnline_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				guardianOnline_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				guardianOnline_UserLogWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" } },
						NOT: { $ref: "#/definitions/guardianOnline_UserLogWhereInput" },
						id: { $ref: "#/definitions/guardianOnline_StringFilter" },
						logType: { $ref: "#/definitions/guardianOnline_EnumUserLog_logTypeFilter" },
						contentType: { $ref: "#/definitions/guardianOnline_EnumUserLog_contentTypeFilter" },
						timestamp: { $ref: "#/definitions/guardianOnline_DateTimeFilter" },
						details: { $ref: "#/definitions/guardianOnline_JsonFilter" },
						userId: { $ref: "#/definitions/guardianOnline_StringFilter" },
					},
				},
				guardianOnline_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedStringFilter" },
					},
				},
				guardianOnline_EnumUserLog_logTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_logType",
								enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
					},
				},
				guardianOnline_EnumUserLog_contentTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
								enum: [
									"CALL",
									"CHAT",
									"EMAIL",
									"WEB_USAGE",
									"IVR_HUGO_USAGE",
									"OUTBOUND_CORRESPONDENCE",
									"MARKETING_MATERIAL",
									"TEXT",
								],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
					},
				},
				guardianOnline_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/guardianOnline_NestedDateTimeFilter" },
					},
				},
				guardianOnline_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_updateManyUserLog: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/UpdateOneFeature": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/guardianOnline_FeatureUpdateInput" },
				where: { $ref: "#/definitions/guardianOnline_FeatureWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				guardianOnline_FeatureUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
						featureType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						content: {},
						userId: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
					},
				},
				guardianOnline_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				guardianOnline_FeatureWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_updateOneFeature: {
							type: "object",
							properties: {
								id: { type: "string" },
								featureType: { type: "string", enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"] },
								content: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "featureType", "content", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/UpdateOneUser": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/guardianOnline_UserUpdateInput" },
				where: { $ref: "#/definitions/guardianOnline_UserWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				guardianOnline_UserUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
						username: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
						password: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				guardianOnline_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				guardianOnline_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_updateOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/UpdateOneUserLog": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/guardianOnline_UserLogUpdateInput" },
				where: { $ref: "#/definitions/guardianOnline_UserLogWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				guardianOnline_UserLogUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
						logType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						contentType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						timestamp: { $ref: "#/definitions/guardianOnline_DateTimeFieldUpdateOperationsInput" },
						details: {},
						userId: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
					},
				},
				guardianOnline_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				guardianOnline_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				guardianOnline_UserLogWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_updateOneUserLog: {
							type: "object",
							properties: {
								id: { type: "string" },
								logType: { type: "string", enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"] },
								contentType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "logType", "contentType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/UpsertOneFeature": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_FeatureWhereUniqueInput" },
				create: { $ref: "#/definitions/guardianOnline_FeatureCreateInput" },
				update: { $ref: "#/definitions/guardianOnline_FeatureUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				guardianOnline_FeatureWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				guardianOnline_FeatureCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						featureType: {
							type: "string",
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						content: {},
						userId: { type: "string" },
					},
					required: ["id", "featureType", "content", "userId"],
				},
				guardianOnline_FeatureUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
						featureType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_Feature_featureType",
							enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"],
						},
						content: {},
						userId: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
					},
				},
				guardianOnline_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_upsertOneFeature: {
							type: "object",
							properties: {
								id: { type: "string" },
								featureType: { type: "string", enum: ["DASHBOARD", "ACCOUNT_SUMMARY", "NOTIFICATIONS", "DOCUMENTS"] },
								content: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "featureType", "content", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/UpsertOneUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_UserWhereUniqueInput" },
				create: { $ref: "#/definitions/guardianOnline_UserCreateInput" },
				update: { $ref: "#/definitions/guardianOnline_UserUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				guardianOnline_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				guardianOnline_UserCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						username: { type: "string" },
						password: { type: "string" },
						role: {
							type: "string",
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
					required: ["id", "username", "password", "role"],
				},
				guardianOnline_UserUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
						username: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
						password: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_User_role",
							enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"],
						},
					},
				},
				guardianOnline_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_upsertOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "CUSTOMER", "FINANCIAL_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"guardianOnline/UpsertOneUserLog": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/guardianOnline_UserLogWhereUniqueInput" },
				create: { $ref: "#/definitions/guardianOnline_UserLogCreateInput" },
				update: { $ref: "#/definitions/guardianOnline_UserLogUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				guardianOnline_UserLogWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				guardianOnline_UserLogCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						logType: {
							type: "string",
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						contentType: {
							type: "string",
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						timestamp: { type: "string" },
						details: {},
						userId: { type: "string" },
					},
					required: ["id", "logType", "contentType", "timestamp", "details", "userId"],
				},
				guardianOnline_UserLogUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
						logType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_logType",
							enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"],
						},
						contentType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "guardianOnline_UserLog_contentType",
							enum: [
								"CALL",
								"CHAT",
								"EMAIL",
								"WEB_USAGE",
								"IVR_HUGO_USAGE",
								"OUTBOUND_CORRESPONDENCE",
								"MARKETING_MATERIAL",
								"TEXT",
							],
						},
						timestamp: { $ref: "#/definitions/guardianOnline_DateTimeFieldUpdateOperationsInput" },
						details: {},
						userId: { $ref: "#/definitions/guardianOnline_StringFieldUpdateOperationsInput" },
					},
				},
				guardianOnline_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				guardianOnline_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						guardianOnline_upsertOneUserLog: {
							type: "object",
							properties: {
								id: { type: "string" },
								logType: { type: "string", enum: ["LOGIN", "LOGOUT", "FEATURE_ACCESS", "DOCUMENT_DOWNLOAD"] },
								contentType: {
									type: "string",
									enum: [
										"CALL",
										"CHAT",
										"EMAIL",
										"WEB_USAGE",
										"IVR_HUGO_USAGE",
										"OUTBOUND_CORRESPONDENCE",
										"MARKETING_MATERIAL",
										"TEXT",
									],
								},
								timestamp: { type: "string" },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "logType", "contentType", "timestamp", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/CreateManyAsset": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/livingBalanceSheet_AssetCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				livingBalanceSheet_AssetCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						assetType: {
							type: "string",
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						value: { type: "number" },
						userId: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_createManyAsset: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/CreateManyFinancialGoal": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				livingBalanceSheet_FinancialGoalCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						goalType: {
							type: "string",
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						target: { type: "number" },
						deadline: { type: "string" },
						userId: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_createManyFinancialGoal: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/CreateManyLiability": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/livingBalanceSheet_LiabilityCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				livingBalanceSheet_LiabilityCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						liabilityType: {
							type: "string",
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						amount: { type: "number" },
						userId: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_createManyLiability: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/CreateManyUser": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/livingBalanceSheet_UserCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				livingBalanceSheet_UserCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						username: { type: "string" },
						password: { type: "string" },
						role: {
							type: "string",
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_createManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/CreateOneAsset": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/livingBalanceSheet_AssetCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				livingBalanceSheet_AssetCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						assetType: {
							type: "string",
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						value: { type: "number" },
						userId: { type: "string" },
					},
					required: ["id", "assetType", "value", "userId"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_createOneAsset: {
							type: "object",
							properties: {
								id: { type: "string" },
								assetType: { type: "string", enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"] },
								value: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "assetType", "value", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/CreateOneFinancialGoal": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				livingBalanceSheet_FinancialGoalCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						goalType: {
							type: "string",
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						target: { type: "number" },
						deadline: { type: "string" },
						userId: { type: "string" },
					},
					required: ["id", "goalType", "target", "deadline", "userId"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_createOneFinancialGoal: {
							type: "object",
							properties: {
								id: { type: "string" },
								goalType: { type: "string", enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"] },
								target: { type: "number" },
								deadline: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "goalType", "target", "deadline", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/CreateOneLiability": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/livingBalanceSheet_LiabilityCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				livingBalanceSheet_LiabilityCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						liabilityType: {
							type: "string",
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						amount: { type: "number" },
						userId: { type: "string" },
					},
					required: ["id", "liabilityType", "amount", "userId"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_createOneLiability: {
							type: "object",
							properties: {
								id: { type: "string" },
								liabilityType: { type: "string", enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"] },
								amount: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "liabilityType", "amount", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/CreateOneUser": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/livingBalanceSheet_UserCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				livingBalanceSheet_UserCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						username: { type: "string" },
						password: { type: "string" },
						role: {
							type: "string",
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
					},
					required: ["id", "username", "password", "role"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_createOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/DeleteManyAsset": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" } },
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_AssetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						assetType: { $ref: "#/definitions/livingBalanceSheet_EnumAsset_assetTypeFilter" },
						value: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumAsset_assetTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_deleteManyAsset: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/DeleteManyFinancialGoal": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" } },
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_FinancialGoalWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						},
						NOT: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						goalType: { $ref: "#/definitions/livingBalanceSheet_EnumFinancialGoal_goalTypeFilter" },
						target: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						deadline: { $ref: "#/definitions/livingBalanceSheet_DateTimeFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumFinancialGoal_goalTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
				livingBalanceSheet_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_deleteManyFinancialGoal: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/DeleteManyLiability": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" } },
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_LiabilityWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						liabilityType: { $ref: "#/definitions/livingBalanceSheet_EnumLiability_liabilityTypeFilter" },
						amount: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumLiability_liabilityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_deleteManyLiability: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/DeleteManyUser": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" } },
			additionalProperties: false,
			definitions: {
				livingBalanceSheet_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						username: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						password: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						role: { $ref: "#/definitions/livingBalanceSheet_EnumUser_roleFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_deleteManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/DeleteOneAsset": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_AssetWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				livingBalanceSheet_AssetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_deleteOneAsset: {
							type: "object",
							properties: {
								id: { type: "string" },
								assetType: { type: "string", enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"] },
								value: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "assetType", "value", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/DeleteOneFinancialGoal": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				livingBalanceSheet_FinancialGoalWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_deleteOneFinancialGoal: {
							type: "object",
							properties: {
								id: { type: "string" },
								goalType: { type: "string", enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"] },
								target: { type: "number" },
								deadline: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "goalType", "target", "deadline", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/DeleteOneLiability": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				livingBalanceSheet_LiabilityWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_deleteOneLiability: {
							type: "object",
							properties: {
								id: { type: "string" },
								liabilityType: { type: "string", enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"] },
								amount: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "liabilityType", "amount", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/DeleteOneUser": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/livingBalanceSheet_UserWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				livingBalanceSheet_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_deleteOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/ExecuteRaw": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: { livingBalanceSheet_executeRaw: { type: "integer" } },
					additionalProperties: false,
					required: ["livingBalanceSheet_executeRaw"],
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/UpdateManyAsset": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/livingBalanceSheet_AssetUpdateManyMutationInput" },
				where: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				livingBalanceSheet_AssetUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						assetType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						value: { $ref: "#/definitions/livingBalanceSheet_FloatFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
					},
				},
				livingBalanceSheet_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				livingBalanceSheet_FloatFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["number", "null"] },
						increment: { type: ["number", "null"] },
						decrement: { type: ["number", "null"] },
						multiply: { type: ["number", "null"] },
						divide: { type: ["number", "null"] },
					},
				},
				livingBalanceSheet_AssetWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_AssetWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						assetType: { $ref: "#/definitions/livingBalanceSheet_EnumAsset_assetTypeFilter" },
						value: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumAsset_assetTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
								enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_updateManyAsset: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/UpdateManyFinancialGoal": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalUpdateManyMutationInput" },
				where: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				livingBalanceSheet_FinancialGoalUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						goalType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						target: { $ref: "#/definitions/livingBalanceSheet_FloatFieldUpdateOperationsInput" },
						deadline: { $ref: "#/definitions/livingBalanceSheet_DateTimeFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
					},
				},
				livingBalanceSheet_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				livingBalanceSheet_FloatFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["number", "null"] },
						increment: { type: ["number", "null"] },
						decrement: { type: ["number", "null"] },
						multiply: { type: ["number", "null"] },
						divide: { type: ["number", "null"] },
					},
				},
				livingBalanceSheet_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				livingBalanceSheet_FinancialGoalWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						},
						NOT: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						goalType: { $ref: "#/definitions/livingBalanceSheet_EnumFinancialGoal_goalTypeFilter" },
						target: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						deadline: { $ref: "#/definitions/livingBalanceSheet_DateTimeFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumFinancialGoal_goalTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
								enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
				livingBalanceSheet_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedDateTimeFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_updateManyFinancialGoal: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/UpdateManyLiability": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/livingBalanceSheet_LiabilityUpdateManyMutationInput" },
				where: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				livingBalanceSheet_LiabilityUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						liabilityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						amount: { $ref: "#/definitions/livingBalanceSheet_FloatFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
					},
				},
				livingBalanceSheet_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				livingBalanceSheet_FloatFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["number", "null"] },
						increment: { type: ["number", "null"] },
						decrement: { type: ["number", "null"] },
						multiply: { type: ["number", "null"] },
						divide: { type: ["number", "null"] },
					},
				},
				livingBalanceSheet_LiabilityWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						liabilityType: { $ref: "#/definitions/livingBalanceSheet_EnumLiability_liabilityTypeFilter" },
						amount: { $ref: "#/definitions/livingBalanceSheet_FloatFilter" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumLiability_liabilityTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
								enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
					},
				},
				livingBalanceSheet_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
				livingBalanceSheet_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedFloatFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_updateManyLiability: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/UpdateManyUser": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/livingBalanceSheet_UserUpdateManyMutationInput" },
				where: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				livingBalanceSheet_UserUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						username: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						password: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
					},
				},
				livingBalanceSheet_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				livingBalanceSheet_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" } },
						NOT: { $ref: "#/definitions/livingBalanceSheet_UserWhereInput" },
						id: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						username: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						password: { $ref: "#/definitions/livingBalanceSheet_StringFilter" },
						role: { $ref: "#/definitions/livingBalanceSheet_EnumUser_roleFilter" },
					},
				},
				livingBalanceSheet_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/livingBalanceSheet_NestedStringFilter" },
					},
				},
				livingBalanceSheet_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "livingBalanceSheet_User_role",
								enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_updateManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/UpdateOneAsset": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/livingBalanceSheet_AssetUpdateInput" },
				where: { $ref: "#/definitions/livingBalanceSheet_AssetWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				livingBalanceSheet_AssetUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						assetType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						value: { $ref: "#/definitions/livingBalanceSheet_FloatFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
					},
				},
				livingBalanceSheet_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				livingBalanceSheet_FloatFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["number", "null"] },
						increment: { type: ["number", "null"] },
						decrement: { type: ["number", "null"] },
						multiply: { type: ["number", "null"] },
						divide: { type: ["number", "null"] },
					},
				},
				livingBalanceSheet_AssetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_updateOneAsset: {
							type: "object",
							properties: {
								id: { type: "string" },
								assetType: { type: "string", enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"] },
								value: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "assetType", "value", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/UpdateOneFinancialGoal": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalUpdateInput" },
				where: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				livingBalanceSheet_FinancialGoalUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						goalType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						target: { $ref: "#/definitions/livingBalanceSheet_FloatFieldUpdateOperationsInput" },
						deadline: { $ref: "#/definitions/livingBalanceSheet_DateTimeFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
					},
				},
				livingBalanceSheet_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				livingBalanceSheet_FloatFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["number", "null"] },
						increment: { type: ["number", "null"] },
						decrement: { type: ["number", "null"] },
						multiply: { type: ["number", "null"] },
						divide: { type: ["number", "null"] },
					},
				},
				livingBalanceSheet_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				livingBalanceSheet_FinancialGoalWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_updateOneFinancialGoal: {
							type: "object",
							properties: {
								id: { type: "string" },
								goalType: { type: "string", enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"] },
								target: { type: "number" },
								deadline: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "goalType", "target", "deadline", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/UpdateOneLiability": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/livingBalanceSheet_LiabilityUpdateInput" },
				where: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				livingBalanceSheet_LiabilityUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						liabilityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						amount: { $ref: "#/definitions/livingBalanceSheet_FloatFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
					},
				},
				livingBalanceSheet_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				livingBalanceSheet_FloatFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["number", "null"] },
						increment: { type: ["number", "null"] },
						decrement: { type: ["number", "null"] },
						multiply: { type: ["number", "null"] },
						divide: { type: ["number", "null"] },
					},
				},
				livingBalanceSheet_LiabilityWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_updateOneLiability: {
							type: "object",
							properties: {
								id: { type: "string" },
								liabilityType: { type: "string", enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"] },
								amount: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "liabilityType", "amount", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/UpdateOneUser": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/livingBalanceSheet_UserUpdateInput" },
				where: { $ref: "#/definitions/livingBalanceSheet_UserWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				livingBalanceSheet_UserUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						username: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						password: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
					},
				},
				livingBalanceSheet_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				livingBalanceSheet_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_updateOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/UpsertOneAsset": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_AssetWhereUniqueInput" },
				create: { $ref: "#/definitions/livingBalanceSheet_AssetCreateInput" },
				update: { $ref: "#/definitions/livingBalanceSheet_AssetUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				livingBalanceSheet_AssetWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				livingBalanceSheet_AssetCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						assetType: {
							type: "string",
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						value: { type: "number" },
						userId: { type: "string" },
					},
					required: ["id", "assetType", "value", "userId"],
				},
				livingBalanceSheet_AssetUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						assetType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
							enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"],
						},
						value: { $ref: "#/definitions/livingBalanceSheet_FloatFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
					},
				},
				livingBalanceSheet_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				livingBalanceSheet_FloatFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["number", "null"] },
						increment: { type: ["number", "null"] },
						decrement: { type: ["number", "null"] },
						multiply: { type: ["number", "null"] },
						divide: { type: ["number", "null"] },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_upsertOneAsset: {
							type: "object",
							properties: {
								id: { type: "string" },
								assetType: { type: "string", enum: ["REAL_ESTATE", "STOCKS", "BONDS", "CASH"] },
								value: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "assetType", "value", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/UpsertOneFinancialGoal": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalWhereUniqueInput" },
				create: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalCreateInput" },
				update: { $ref: "#/definitions/livingBalanceSheet_FinancialGoalUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				livingBalanceSheet_FinancialGoalWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				livingBalanceSheet_FinancialGoalCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						goalType: {
							type: "string",
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						target: { type: "number" },
						deadline: { type: "string" },
						userId: { type: "string" },
					},
					required: ["id", "goalType", "target", "deadline", "userId"],
				},
				livingBalanceSheet_FinancialGoalUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						goalType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
							enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"],
						},
						target: { $ref: "#/definitions/livingBalanceSheet_FloatFieldUpdateOperationsInput" },
						deadline: { $ref: "#/definitions/livingBalanceSheet_DateTimeFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
					},
				},
				livingBalanceSheet_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				livingBalanceSheet_FloatFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["number", "null"] },
						increment: { type: ["number", "null"] },
						decrement: { type: ["number", "null"] },
						multiply: { type: ["number", "null"] },
						divide: { type: ["number", "null"] },
					},
				},
				livingBalanceSheet_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_upsertOneFinancialGoal: {
							type: "object",
							properties: {
								id: { type: "string" },
								goalType: { type: "string", enum: ["RETIREMENT", "EDUCATION", "VACATION", "EMERGENCY_FUND"] },
								target: { type: "number" },
								deadline: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "goalType", "target", "deadline", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/UpsertOneLiability": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_LiabilityWhereUniqueInput" },
				create: { $ref: "#/definitions/livingBalanceSheet_LiabilityCreateInput" },
				update: { $ref: "#/definitions/livingBalanceSheet_LiabilityUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				livingBalanceSheet_LiabilityWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				livingBalanceSheet_LiabilityCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						liabilityType: {
							type: "string",
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						amount: { type: "number" },
						userId: { type: "string" },
					},
					required: ["id", "liabilityType", "amount", "userId"],
				},
				livingBalanceSheet_LiabilityUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						liabilityType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
							enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"],
						},
						amount: { $ref: "#/definitions/livingBalanceSheet_FloatFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
					},
				},
				livingBalanceSheet_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				livingBalanceSheet_FloatFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["number", "null"] },
						increment: { type: ["number", "null"] },
						decrement: { type: ["number", "null"] },
						multiply: { type: ["number", "null"] },
						divide: { type: ["number", "null"] },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_upsertOneLiability: {
							type: "object",
							properties: {
								id: { type: "string" },
								liabilityType: { type: "string", enum: ["MORTGAGE", "LOAN", "CREDIT_CARD_DEBT"] },
								amount: { type: "number" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "liabilityType", "amount", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"livingBalanceSheet/UpsertOneUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/livingBalanceSheet_UserWhereUniqueInput" },
				create: { $ref: "#/definitions/livingBalanceSheet_UserCreateInput" },
				update: { $ref: "#/definitions/livingBalanceSheet_UserUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				livingBalanceSheet_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				livingBalanceSheet_UserCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						username: { type: "string" },
						password: { type: "string" },
						role: {
							type: "string",
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
					},
					required: ["id", "username", "password", "role"],
				},
				livingBalanceSheet_UserUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						username: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						password: { $ref: "#/definitions/livingBalanceSheet_StringFieldUpdateOperationsInput" },
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "livingBalanceSheet_User_role",
							enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"],
						},
					},
				},
				livingBalanceSheet_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						livingBalanceSheet_upsertOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "FINANCIAL_ADVISOR", "CLIENT"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/CreateManyClient": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/smartOffice_ClientCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				smartOffice_ClientCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						name: { type: "string" },
						email: { type: "string" },
						phone: { type: "string" },
						userId: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_createManyClient: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/CreateManySale": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/smartOffice_SaleCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				smartOffice_SaleCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						saleType: {
							type: "string",
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						amount: { type: "number" },
						timestamp: { type: "string" },
						userId: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_createManySale: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/CreateManyTask": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/smartOffice_TaskCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				smartOffice_TaskCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						taskType: {
							type: "string",
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						status: {
							type: "string",
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						details: {},
						userId: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_createManyTask: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/CreateManyUser": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/smartOffice_UserCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				smartOffice_UserCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: "string" },
						username: { type: "string" },
						password: { type: "string" },
						role: {
							type: "string",
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_createManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/CreateOneClient": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/smartOffice_ClientCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				smartOffice_ClientCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						name: { type: "string" },
						email: { type: "string" },
						phone: { type: "string" },
						userId: { type: "string" },
					},
					required: ["id", "name", "email", "phone", "userId"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_createOneClient: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								phone: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "name", "email", "phone", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/CreateOneSale": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/smartOffice_SaleCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				smartOffice_SaleCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						saleType: {
							type: "string",
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						amount: { type: "number" },
						timestamp: { type: "string" },
						userId: { type: "string" },
					},
					required: ["id", "saleType", "amount", "timestamp", "userId"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_createOneSale: {
							type: "object",
							properties: {
								id: { type: "string" },
								saleType: { type: "string", enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"] },
								amount: { type: "number" },
								timestamp: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "saleType", "amount", "timestamp", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/CreateOneTask": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/smartOffice_TaskCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				smartOffice_TaskCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						taskType: {
							type: "string",
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						status: {
							type: "string",
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						details: {},
						userId: { type: "string" },
					},
					required: ["id", "taskType", "status", "details", "userId"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_createOneTask: {
							type: "object",
							properties: {
								id: { type: "string" },
								taskType: { type: "string", enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"] },
								status: { type: "string", enum: ["PENDING", "COMPLETED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "taskType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/CreateOneUser": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/smartOffice_UserCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				smartOffice_UserCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						username: { type: "string" },
						password: { type: "string" },
						role: {
							type: "string",
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
					},
					required: ["id", "username", "password", "role"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_createOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "SALES_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/DeleteManyClient": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_ClientWhereInput" } },
			additionalProperties: false,
			definitions: {
				smartOffice_ClientWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_ClientWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						name: { $ref: "#/definitions/smartOffice_StringFilter" },
						email: { $ref: "#/definitions/smartOffice_StringFilter" },
						phone: { $ref: "#/definitions/smartOffice_StringFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_deleteManyClient: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/DeleteManySale": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_SaleWhereInput" } },
			additionalProperties: false,
			definitions: {
				smartOffice_SaleWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_SaleWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						saleType: { $ref: "#/definitions/smartOffice_EnumSale_saleTypeFilter" },
						amount: { $ref: "#/definitions/smartOffice_FloatFilter" },
						timestamp: { $ref: "#/definitions/smartOffice_DateTimeFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumSale_saleTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
					},
				},
				smartOffice_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
				smartOffice_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_deleteManySale: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/DeleteManyTask": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_TaskWhereInput" } },
			additionalProperties: false,
			definitions: {
				smartOffice_TaskWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_TaskWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						taskType: { $ref: "#/definitions/smartOffice_EnumTask_taskTypeFilter" },
						status: { $ref: "#/definitions/smartOffice_EnumTask_statusFilter" },
						details: { $ref: "#/definitions/smartOffice_JsonFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumTask_taskTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
					},
				},
				smartOffice_EnumTask_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
					},
				},
				smartOffice_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_deleteManyTask: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/DeleteManyUser": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_UserWhereInput" } },
			additionalProperties: false,
			definitions: {
				smartOffice_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_UserWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_UserWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						username: { $ref: "#/definitions/smartOffice_StringFilter" },
						password: { $ref: "#/definitions/smartOffice_StringFilter" },
						role: { $ref: "#/definitions/smartOffice_EnumUser_roleFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_deleteManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/DeleteOneClient": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_ClientWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				smartOffice_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_deleteOneClient: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								phone: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "name", "email", "phone", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/DeleteOneSale": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_SaleWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				smartOffice_SaleWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_deleteOneSale: {
							type: "object",
							properties: {
								id: { type: "string" },
								saleType: { type: "string", enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"] },
								amount: { type: "number" },
								timestamp: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "saleType", "amount", "timestamp", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/DeleteOneTask": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_TaskWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				smartOffice_TaskWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_deleteOneTask: {
							type: "object",
							properties: {
								id: { type: "string" },
								taskType: { type: "string", enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"] },
								status: { type: "string", enum: ["PENDING", "COMPLETED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "taskType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/DeleteOneUser": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/smartOffice_UserWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				smartOffice_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_deleteOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "SALES_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/ExecuteRaw": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: { smartOffice_executeRaw: { type: "integer" } },
					additionalProperties: false,
					required: ["smartOffice_executeRaw"],
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/UpdateManyClient": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/smartOffice_ClientUpdateManyMutationInput" },
				where: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				smartOffice_ClientUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						phone: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
					},
				},
				smartOffice_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				smartOffice_ClientWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_ClientWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_ClientWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						name: { $ref: "#/definitions/smartOffice_StringFilter" },
						email: { $ref: "#/definitions/smartOffice_StringFilter" },
						phone: { $ref: "#/definitions/smartOffice_StringFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_updateManyClient: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/UpdateManySale": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/smartOffice_SaleUpdateManyMutationInput" },
				where: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				smartOffice_SaleUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						saleType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						amount: { $ref: "#/definitions/smartOffice_FloatFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/smartOffice_DateTimeFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
					},
				},
				smartOffice_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				smartOffice_FloatFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["number", "null"] },
						increment: { type: ["number", "null"] },
						decrement: { type: ["number", "null"] },
						multiply: { type: ["number", "null"] },
						divide: { type: ["number", "null"] },
					},
				},
				smartOffice_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				smartOffice_SaleWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_SaleWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_SaleWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						saleType: { $ref: "#/definitions/smartOffice_EnumSale_saleTypeFilter" },
						amount: { $ref: "#/definitions/smartOffice_FloatFilter" },
						timestamp: { $ref: "#/definitions/smartOffice_DateTimeFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumSale_saleTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Sale_saleType",
								enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
					},
				},
				smartOffice_FloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_NestedFloatFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedFloatFilter" },
					},
				},
				smartOffice_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
				smartOffice_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedDateTimeFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_updateManySale: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/UpdateManyTask": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/smartOffice_TaskUpdateManyMutationInput" },
				where: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				smartOffice_TaskUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						taskType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						status: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						details: {},
						userId: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
					},
				},
				smartOffice_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				smartOffice_TaskWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_TaskWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_TaskWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						taskType: { $ref: "#/definitions/smartOffice_EnumTask_taskTypeFilter" },
						status: { $ref: "#/definitions/smartOffice_EnumTask_statusFilter" },
						details: { $ref: "#/definitions/smartOffice_JsonFilter" },
						userId: { $ref: "#/definitions/smartOffice_StringFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumTask_taskTypeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_taskType",
								enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
					},
				},
				smartOffice_EnumTask_statusFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_Task_status",
								enum: ["PENDING", "COMPLETED", "CANCELLED"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
					},
				},
				smartOffice_JsonFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_updateManyTask: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/UpdateManyUser": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/smartOffice_UserUpdateManyMutationInput" },
				where: { $ref: "#/definitions/smartOffice_UserWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				smartOffice_UserUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						username: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						password: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
					},
				},
				smartOffice_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				smartOffice_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/smartOffice_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/smartOffice_UserWhereInput" } },
						NOT: { $ref: "#/definitions/smartOffice_UserWhereInput" },
						id: { $ref: "#/definitions/smartOffice_StringFilter" },
						username: { $ref: "#/definitions/smartOffice_StringFilter" },
						password: { $ref: "#/definitions/smartOffice_StringFilter" },
						role: { $ref: "#/definitions/smartOffice_EnumUser_roleFilter" },
					},
				},
				smartOffice_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/smartOffice_NestedStringFilter" },
					},
				},
				smartOffice_EnumUser_roleFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
						in: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						notIn: {
							type: ["array", "null"],
							items: {
								type: ["string", "null"],
								"x-graphql-enum-name": "smartOffice_User_role",
								enum: ["ADMIN", "AGENT", "SALES_REP"],
							},
						},
						not: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_updateManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/UpdateOneClient": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/smartOffice_ClientUpdateInput" },
				where: { $ref: "#/definitions/smartOffice_ClientWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				smartOffice_ClientUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						phone: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
					},
				},
				smartOffice_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				smartOffice_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_updateOneClient: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								phone: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "name", "email", "phone", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/UpdateOneSale": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/smartOffice_SaleUpdateInput" },
				where: { $ref: "#/definitions/smartOffice_SaleWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				smartOffice_SaleUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						saleType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						amount: { $ref: "#/definitions/smartOffice_FloatFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/smartOffice_DateTimeFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
					},
				},
				smartOffice_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				smartOffice_FloatFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["number", "null"] },
						increment: { type: ["number", "null"] },
						decrement: { type: ["number", "null"] },
						multiply: { type: ["number", "null"] },
						divide: { type: ["number", "null"] },
					},
				},
				smartOffice_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				smartOffice_SaleWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_updateOneSale: {
							type: "object",
							properties: {
								id: { type: "string" },
								saleType: { type: "string", enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"] },
								amount: { type: "number" },
								timestamp: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "saleType", "amount", "timestamp", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/UpdateOneTask": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/smartOffice_TaskUpdateInput" },
				where: { $ref: "#/definitions/smartOffice_TaskWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				smartOffice_TaskUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						taskType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						status: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						details: {},
						userId: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
					},
				},
				smartOffice_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				smartOffice_TaskWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_updateOneTask: {
							type: "object",
							properties: {
								id: { type: "string" },
								taskType: { type: "string", enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"] },
								status: { type: "string", enum: ["PENDING", "COMPLETED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "taskType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/UpdateOneUser": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/smartOffice_UserUpdateInput" },
				where: { $ref: "#/definitions/smartOffice_UserWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				smartOffice_UserUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						username: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						password: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
					},
				},
				smartOffice_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				smartOffice_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_updateOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "SALES_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/UpsertOneClient": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_ClientWhereUniqueInput" },
				create: { $ref: "#/definitions/smartOffice_ClientCreateInput" },
				update: { $ref: "#/definitions/smartOffice_ClientUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				smartOffice_ClientWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				smartOffice_ClientCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						name: { type: "string" },
						email: { type: "string" },
						phone: { type: "string" },
						userId: { type: "string" },
					},
					required: ["id", "name", "email", "phone", "userId"],
				},
				smartOffice_ClientUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						phone: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
					},
				},
				smartOffice_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_upsertOneClient: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								phone: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "name", "email", "phone", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/UpsertOneSale": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_SaleWhereUniqueInput" },
				create: { $ref: "#/definitions/smartOffice_SaleCreateInput" },
				update: { $ref: "#/definitions/smartOffice_SaleUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				smartOffice_SaleWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				smartOffice_SaleCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						saleType: {
							type: "string",
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						amount: { type: "number" },
						timestamp: { type: "string" },
						userId: { type: "string" },
					},
					required: ["id", "saleType", "amount", "timestamp", "userId"],
				},
				smartOffice_SaleUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						saleType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Sale_saleType",
							enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"],
						},
						amount: { $ref: "#/definitions/smartOffice_FloatFieldUpdateOperationsInput" },
						timestamp: { $ref: "#/definitions/smartOffice_DateTimeFieldUpdateOperationsInput" },
						userId: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
					},
				},
				smartOffice_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				smartOffice_FloatFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["number", "null"] },
						increment: { type: ["number", "null"] },
						decrement: { type: ["number", "null"] },
						multiply: { type: ["number", "null"] },
						divide: { type: ["number", "null"] },
					},
				},
				smartOffice_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_upsertOneSale: {
							type: "object",
							properties: {
								id: { type: "string" },
								saleType: { type: "string", enum: ["NEW_POLICY", "RENEWAL", "UPGRADE"] },
								amount: { type: "number" },
								timestamp: { type: "string" },
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "saleType", "amount", "timestamp", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/UpsertOneTask": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_TaskWhereUniqueInput" },
				create: { $ref: "#/definitions/smartOffice_TaskCreateInput" },
				update: { $ref: "#/definitions/smartOffice_TaskUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				smartOffice_TaskWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				smartOffice_TaskCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						taskType: {
							type: "string",
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						status: {
							type: "string",
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						details: {},
						userId: { type: "string" },
					},
					required: ["id", "taskType", "status", "details", "userId"],
				},
				smartOffice_TaskUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						taskType: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_taskType",
							enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"],
						},
						status: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_Task_status",
							enum: ["PENDING", "COMPLETED", "CANCELLED"],
						},
						details: {},
						userId: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
					},
				},
				smartOffice_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_upsertOneTask: {
							type: "object",
							properties: {
								id: { type: "string" },
								taskType: { type: "string", enum: ["MEETING", "CALL", "EMAIL", "FOLLOW_UP"] },
								status: { type: "string", enum: ["PENDING", "COMPLETED", "CANCELLED"] },
								details: {},
								userId: { type: "string" },
							},
							additionalProperties: false,
							required: ["id", "taskType", "status", "details", "userId"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"smartOffice/UpsertOneUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/smartOffice_UserWhereUniqueInput" },
				create: { $ref: "#/definitions/smartOffice_UserCreateInput" },
				update: { $ref: "#/definitions/smartOffice_UserUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				smartOffice_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				smartOffice_UserCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: "string" },
						username: { type: "string" },
						password: { type: "string" },
						role: {
							type: "string",
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
					},
					required: ["id", "username", "password", "role"],
				},
				smartOffice_UserUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						username: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						password: { $ref: "#/definitions/smartOffice_StringFieldUpdateOperationsInput" },
						role: {
							type: ["string", "null"],
							"x-graphql-enum-name": "smartOffice_User_role",
							enum: ["ADMIN", "AGENT", "SALES_REP"],
						},
					},
				},
				smartOffice_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						smartOffice_upsertOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								username: { type: "string" },
								password: { type: "string" },
								role: { type: "string", enum: ["ADMIN", "AGENT", "SALES_REP"] },
							},
							additionalProperties: false,
							required: ["id", "username", "password", "role"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"users/update": {
		input: {
			type: "object",
			properties: { id: { type: "string" }, name: { type: "string" }, bio: { type: "string" } },
			required: ["id", "name", "bio"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: {
			type: "object",
			properties: { name: { type: "string" }, id: { type: "string" }, bio: { type: "string" } },
			required: ["bio", "id", "name"],
		},
		operationType: "MUTATION",
		description: "generated/bundle/operations/users/update",
	},
	"users/subscribe": {
		input: {
			type: "object",
			properties: { id: { type: "string" } },
			required: ["id"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: {
			type: "object",
			properties: {
				id: { type: "string" },
				name: { type: "string", default: "Jens" },
				bio: { type: "string", default: "Founder of WunderGraph" },
				time: { type: "string" },
			},
			required: ["bio", "id", "name", "time"],
		},
		operationType: "SUBSCRIPTION",
		description: "generated/bundle/operations/users/subscribe",
	},
};

export type QueryNames =
	| "clientPortal/AggregateActivity"
	| "clientPortal/AggregateClient"
	| "clientPortal/AggregateService"
	| "clientPortal/FindFirstActivity"
	| "clientPortal/FindFirstActivityOrThrow"
	| "clientPortal/FindFirstClient"
	| "clientPortal/FindFirstClientOrThrow"
	| "clientPortal/FindFirstService"
	| "clientPortal/FindFirstServiceOrThrow"
	| "clientPortal/FindManyActivity"
	| "clientPortal/FindManyClient"
	| "clientPortal/FindManyService"
	| "clientPortal/FindUniqueActivity"
	| "clientPortal/FindUniqueActivityOrThrow"
	| "clientPortal/FindUniqueClient"
	| "clientPortal/FindUniqueClientOrThrow"
	| "clientPortal/FindUniqueService"
	| "clientPortal/FindUniqueServiceOrThrow"
	| "clientPortal/GroupByActivity"
	| "clientPortal/GroupByClient"
	| "clientPortal/GroupByService"
	| "clientPortal/QueryRaw"
	| "clientPortal/QueryRawJSON"
	| "countries/Continent"
	| "countries/Continents"
	| "countries/Countries"
	| "countries/Country"
	| "countries/CountryByCode"
	| "countries/Language"
	| "countries/Languages"
	| "customerCommunication/AggregateAccount"
	| "customerCommunication/AggregateFilter"
	| "customerCommunication/AggregateInteraction"
	| "customerCommunication/AggregateSession"
	| "customerCommunication/AggregateUser"
	| "customerCommunication/AggregateVerificationToken"
	| "customerCommunication/AggregateWidget"
	| "customerCommunication/FindFirstAccount"
	| "customerCommunication/FindFirstAccountOrThrow"
	| "customerCommunication/FindFirstFilter"
	| "customerCommunication/FindFirstFilterOrThrow"
	| "customerCommunication/FindFirstInteraction"
	| "customerCommunication/FindFirstInteractionOrThrow"
	| "customerCommunication/FindFirstSession"
	| "customerCommunication/FindFirstSessionOrThrow"
	| "customerCommunication/FindFirstUser"
	| "customerCommunication/FindFirstUserOrThrow"
	| "customerCommunication/FindFirstVerificationToken"
	| "customerCommunication/FindFirstVerificationTokenOrThrow"
	| "customerCommunication/FindFirstWidget"
	| "customerCommunication/FindFirstWidgetOrThrow"
	| "customerCommunication/FindManyAccount"
	| "customerCommunication/FindManyFilter"
	| "customerCommunication/FindManyInteraction"
	| "customerCommunication/FindManySession"
	| "customerCommunication/FindManyUser"
	| "customerCommunication/FindManyVerificationToken"
	| "customerCommunication/FindManyWidget"
	| "customerCommunication/FindUniqueAccount"
	| "customerCommunication/FindUniqueAccountOrThrow"
	| "customerCommunication/FindUniqueFilter"
	| "customerCommunication/FindUniqueFilterOrThrow"
	| "customerCommunication/FindUniqueInteraction"
	| "customerCommunication/FindUniqueInteractionOrThrow"
	| "customerCommunication/FindUniqueSession"
	| "customerCommunication/FindUniqueSessionOrThrow"
	| "customerCommunication/FindUniqueUser"
	| "customerCommunication/FindUniqueUserOrThrow"
	| "customerCommunication/FindUniqueVerificationToken"
	| "customerCommunication/FindUniqueVerificationTokenOrThrow"
	| "customerCommunication/FindUniqueWidget"
	| "customerCommunication/FindUniqueWidgetOrThrow"
	| "customerCommunication/GroupByAccount"
	| "customerCommunication/GroupByFilter"
	| "customerCommunication/GroupByInteraction"
	| "customerCommunication/GroupBySession"
	| "customerCommunication/GroupByUser"
	| "customerCommunication/GroupByVerificationToken"
	| "customerCommunication/GroupByWidget"
	| "customerCommunication/QueryRaw"
	| "customerCommunication/QueryRawJSON"
	| "gpac/AggregateAdminAction"
	| "gpac/AggregatePolicy"
	| "gpac/AggregateUser"
	| "gpac/FindFirstAdminAction"
	| "gpac/FindFirstAdminActionOrThrow"
	| "gpac/FindFirstPolicy"
	| "gpac/FindFirstPolicyOrThrow"
	| "gpac/FindFirstUser"
	| "gpac/FindFirstUserOrThrow"
	| "gpac/FindManyAdminAction"
	| "gpac/FindManyPolicy"
	| "gpac/FindManyUser"
	| "gpac/FindUniqueAdminAction"
	| "gpac/FindUniqueAdminActionOrThrow"
	| "gpac/FindUniquePolicy"
	| "gpac/FindUniquePolicyOrThrow"
	| "gpac/FindUniqueUser"
	| "gpac/FindUniqueUserOrThrow"
	| "gpac/GroupByAdminAction"
	| "gpac/GroupByPolicy"
	| "gpac/GroupByUser"
	| "gpac/QueryRaw"
	| "gpac/QueryRawJSON"
	| "guardianOnline/AggregateFeature"
	| "guardianOnline/AggregateUser"
	| "guardianOnline/AggregateUserLog"
	| "guardianOnline/FindFirstFeature"
	| "guardianOnline/FindFirstFeatureOrThrow"
	| "guardianOnline/FindFirstUser"
	| "guardianOnline/FindFirstUserLog"
	| "guardianOnline/FindFirstUserLogOrThrow"
	| "guardianOnline/FindFirstUserOrThrow"
	| "guardianOnline/FindManyFeature"
	| "guardianOnline/FindManyUser"
	| "guardianOnline/FindManyUserLog"
	| "guardianOnline/FindUniqueFeature"
	| "guardianOnline/FindUniqueFeatureOrThrow"
	| "guardianOnline/FindUniqueUser"
	| "guardianOnline/FindUniqueUserLog"
	| "guardianOnline/FindUniqueUserLogOrThrow"
	| "guardianOnline/FindUniqueUserOrThrow"
	| "guardianOnline/GroupByFeature"
	| "guardianOnline/GroupByUser"
	| "guardianOnline/GroupByUserLog"
	| "guardianOnline/QueryRaw"
	| "guardianOnline/QueryRawJSON"
	| "livingBalanceSheet/AggregateAsset"
	| "livingBalanceSheet/AggregateFinancialGoal"
	| "livingBalanceSheet/AggregateLiability"
	| "livingBalanceSheet/AggregateUser"
	| "livingBalanceSheet/FindFirstAsset"
	| "livingBalanceSheet/FindFirstAssetOrThrow"
	| "livingBalanceSheet/FindFirstFinancialGoal"
	| "livingBalanceSheet/FindFirstFinancialGoalOrThrow"
	| "livingBalanceSheet/FindFirstLiability"
	| "livingBalanceSheet/FindFirstLiabilityOrThrow"
	| "livingBalanceSheet/FindFirstUser"
	| "livingBalanceSheet/FindFirstUserOrThrow"
	| "livingBalanceSheet/FindManyAsset"
	| "livingBalanceSheet/FindManyFinancialGoal"
	| "livingBalanceSheet/FindManyLiability"
	| "livingBalanceSheet/FindManyUser"
	| "livingBalanceSheet/FindUniqueAsset"
	| "livingBalanceSheet/FindUniqueAssetOrThrow"
	| "livingBalanceSheet/FindUniqueFinancialGoal"
	| "livingBalanceSheet/FindUniqueFinancialGoalOrThrow"
	| "livingBalanceSheet/FindUniqueLiability"
	| "livingBalanceSheet/FindUniqueLiabilityOrThrow"
	| "livingBalanceSheet/FindUniqueUser"
	| "livingBalanceSheet/FindUniqueUserOrThrow"
	| "livingBalanceSheet/GroupByAsset"
	| "livingBalanceSheet/GroupByFinancialGoal"
	| "livingBalanceSheet/GroupByLiability"
	| "livingBalanceSheet/GroupByUser"
	| "livingBalanceSheet/QueryRaw"
	| "livingBalanceSheet/QueryRawJSON"
	| "smartOffice/AggregateClient"
	| "smartOffice/AggregateSale"
	| "smartOffice/AggregateTask"
	| "smartOffice/AggregateUser"
	| "smartOffice/FindFirstClient"
	| "smartOffice/FindFirstClientOrThrow"
	| "smartOffice/FindFirstSale"
	| "smartOffice/FindFirstSaleOrThrow"
	| "smartOffice/FindFirstTask"
	| "smartOffice/FindFirstTaskOrThrow"
	| "smartOffice/FindFirstUser"
	| "smartOffice/FindFirstUserOrThrow"
	| "smartOffice/FindManyClient"
	| "smartOffice/FindManySale"
	| "smartOffice/FindManyTask"
	| "smartOffice/FindManyUser"
	| "smartOffice/FindUniqueClient"
	| "smartOffice/FindUniqueClientOrThrow"
	| "smartOffice/FindUniqueSale"
	| "smartOffice/FindUniqueSaleOrThrow"
	| "smartOffice/FindUniqueTask"
	| "smartOffice/FindUniqueTaskOrThrow"
	| "smartOffice/FindUniqueUser"
	| "smartOffice/FindUniqueUserOrThrow"
	| "smartOffice/GroupByClient"
	| "smartOffice/GroupBySale"
	| "smartOffice/GroupByTask"
	| "smartOffice/GroupByUser"
	| "smartOffice/QueryRaw"
	| "smartOffice/QueryRawJSON"
	| "users/CountUsers"
	| "users/GetAllUsers"
	| "weather/GetCityById"
	| "weather/GetCityByName"
	| "openai/extract-website-metadata"
	| "openai/load-url"
	| "openai/summarize-url-content"
	| "openai/summary"
	| "openai/weather"
	| "users/get";

export type MutationNames =
	| "clientPortal/CreateManyActivity"
	| "clientPortal/CreateManyClient"
	| "clientPortal/CreateManyService"
	| "clientPortal/CreateOneActivity"
	| "clientPortal/CreateOneClient"
	| "clientPortal/CreateOneService"
	| "clientPortal/DeleteManyActivity"
	| "clientPortal/DeleteManyClient"
	| "clientPortal/DeleteManyService"
	| "clientPortal/DeleteOneActivity"
	| "clientPortal/DeleteOneClient"
	| "clientPortal/DeleteOneService"
	| "clientPortal/ExecuteRaw"
	| "clientPortal/UpdateManyActivity"
	| "clientPortal/UpdateManyClient"
	| "clientPortal/UpdateManyService"
	| "clientPortal/UpdateOneActivity"
	| "clientPortal/UpdateOneClient"
	| "clientPortal/UpdateOneService"
	| "clientPortal/UpsertOneActivity"
	| "clientPortal/UpsertOneClient"
	| "clientPortal/UpsertOneService"
	| "customerCommunication/CreateManyAccount"
	| "customerCommunication/CreateManyFilter"
	| "customerCommunication/CreateManyInteraction"
	| "customerCommunication/CreateManySession"
	| "customerCommunication/CreateManyUser"
	| "customerCommunication/CreateManyVerificationToken"
	| "customerCommunication/CreateManyWidget"
	| "customerCommunication/CreateOneAccount"
	| "customerCommunication/CreateOneFilter"
	| "customerCommunication/CreateOneInteraction"
	| "customerCommunication/CreateOneSession"
	| "customerCommunication/CreateOneUser"
	| "customerCommunication/CreateOneVerificationToken"
	| "customerCommunication/CreateOneWidget"
	| "customerCommunication/DeleteManyAccount"
	| "customerCommunication/DeleteManyFilter"
	| "customerCommunication/DeleteManyInteraction"
	| "customerCommunication/DeleteManySession"
	| "customerCommunication/DeleteManyUser"
	| "customerCommunication/DeleteManyVerificationToken"
	| "customerCommunication/DeleteManyWidget"
	| "customerCommunication/DeleteOneAccount"
	| "customerCommunication/DeleteOneFilter"
	| "customerCommunication/DeleteOneInteraction"
	| "customerCommunication/DeleteOneSession"
	| "customerCommunication/DeleteOneUser"
	| "customerCommunication/DeleteOneVerificationToken"
	| "customerCommunication/DeleteOneWidget"
	| "customerCommunication/ExecuteRaw"
	| "customerCommunication/UpdateManyAccount"
	| "customerCommunication/UpdateManyFilter"
	| "customerCommunication/UpdateManyInteraction"
	| "customerCommunication/UpdateManySession"
	| "customerCommunication/UpdateManyUser"
	| "customerCommunication/UpdateManyVerificationToken"
	| "customerCommunication/UpdateManyWidget"
	| "customerCommunication/UpdateOneAccount"
	| "customerCommunication/UpdateOneFilter"
	| "customerCommunication/UpdateOneInteraction"
	| "customerCommunication/UpdateOneSession"
	| "customerCommunication/UpdateOneUser"
	| "customerCommunication/UpdateOneVerificationToken"
	| "customerCommunication/UpdateOneWidget"
	| "customerCommunication/UpsertOneAccount"
	| "customerCommunication/UpsertOneFilter"
	| "customerCommunication/UpsertOneInteraction"
	| "customerCommunication/UpsertOneSession"
	| "customerCommunication/UpsertOneUser"
	| "customerCommunication/UpsertOneVerificationToken"
	| "customerCommunication/UpsertOneWidget"
	| "gpac/CreateManyAdminAction"
	| "gpac/CreateManyPolicy"
	| "gpac/CreateManyUser"
	| "gpac/CreateOneAdminAction"
	| "gpac/CreateOnePolicy"
	| "gpac/CreateOneUser"
	| "gpac/DeleteManyAdminAction"
	| "gpac/DeleteManyPolicy"
	| "gpac/DeleteManyUser"
	| "gpac/DeleteOneAdminAction"
	| "gpac/DeleteOnePolicy"
	| "gpac/DeleteOneUser"
	| "gpac/ExecuteRaw"
	| "gpac/UpdateManyAdminAction"
	| "gpac/UpdateManyPolicy"
	| "gpac/UpdateManyUser"
	| "gpac/UpdateOneAdminAction"
	| "gpac/UpdateOnePolicy"
	| "gpac/UpdateOneUser"
	| "gpac/UpsertOneAdminAction"
	| "gpac/UpsertOnePolicy"
	| "gpac/UpsertOneUser"
	| "guardianOnline/CreateManyFeature"
	| "guardianOnline/CreateManyUser"
	| "guardianOnline/CreateManyUserLog"
	| "guardianOnline/CreateOneFeature"
	| "guardianOnline/CreateOneUser"
	| "guardianOnline/CreateOneUserLog"
	| "guardianOnline/DeleteManyFeature"
	| "guardianOnline/DeleteManyUser"
	| "guardianOnline/DeleteManyUserLog"
	| "guardianOnline/DeleteOneFeature"
	| "guardianOnline/DeleteOneUser"
	| "guardianOnline/DeleteOneUserLog"
	| "guardianOnline/ExecuteRaw"
	| "guardianOnline/UpdateManyFeature"
	| "guardianOnline/UpdateManyUser"
	| "guardianOnline/UpdateManyUserLog"
	| "guardianOnline/UpdateOneFeature"
	| "guardianOnline/UpdateOneUser"
	| "guardianOnline/UpdateOneUserLog"
	| "guardianOnline/UpsertOneFeature"
	| "guardianOnline/UpsertOneUser"
	| "guardianOnline/UpsertOneUserLog"
	| "livingBalanceSheet/CreateManyAsset"
	| "livingBalanceSheet/CreateManyFinancialGoal"
	| "livingBalanceSheet/CreateManyLiability"
	| "livingBalanceSheet/CreateManyUser"
	| "livingBalanceSheet/CreateOneAsset"
	| "livingBalanceSheet/CreateOneFinancialGoal"
	| "livingBalanceSheet/CreateOneLiability"
	| "livingBalanceSheet/CreateOneUser"
	| "livingBalanceSheet/DeleteManyAsset"
	| "livingBalanceSheet/DeleteManyFinancialGoal"
	| "livingBalanceSheet/DeleteManyLiability"
	| "livingBalanceSheet/DeleteManyUser"
	| "livingBalanceSheet/DeleteOneAsset"
	| "livingBalanceSheet/DeleteOneFinancialGoal"
	| "livingBalanceSheet/DeleteOneLiability"
	| "livingBalanceSheet/DeleteOneUser"
	| "livingBalanceSheet/ExecuteRaw"
	| "livingBalanceSheet/UpdateManyAsset"
	| "livingBalanceSheet/UpdateManyFinancialGoal"
	| "livingBalanceSheet/UpdateManyLiability"
	| "livingBalanceSheet/UpdateManyUser"
	| "livingBalanceSheet/UpdateOneAsset"
	| "livingBalanceSheet/UpdateOneFinancialGoal"
	| "livingBalanceSheet/UpdateOneLiability"
	| "livingBalanceSheet/UpdateOneUser"
	| "livingBalanceSheet/UpsertOneAsset"
	| "livingBalanceSheet/UpsertOneFinancialGoal"
	| "livingBalanceSheet/UpsertOneLiability"
	| "livingBalanceSheet/UpsertOneUser"
	| "smartOffice/CreateManyClient"
	| "smartOffice/CreateManySale"
	| "smartOffice/CreateManyTask"
	| "smartOffice/CreateManyUser"
	| "smartOffice/CreateOneClient"
	| "smartOffice/CreateOneSale"
	| "smartOffice/CreateOneTask"
	| "smartOffice/CreateOneUser"
	| "smartOffice/DeleteManyClient"
	| "smartOffice/DeleteManySale"
	| "smartOffice/DeleteManyTask"
	| "smartOffice/DeleteManyUser"
	| "smartOffice/DeleteOneClient"
	| "smartOffice/DeleteOneSale"
	| "smartOffice/DeleteOneTask"
	| "smartOffice/DeleteOneUser"
	| "smartOffice/ExecuteRaw"
	| "smartOffice/UpdateManyClient"
	| "smartOffice/UpdateManySale"
	| "smartOffice/UpdateManyTask"
	| "smartOffice/UpdateManyUser"
	| "smartOffice/UpdateOneClient"
	| "smartOffice/UpdateOneSale"
	| "smartOffice/UpdateOneTask"
	| "smartOffice/UpdateOneUser"
	| "smartOffice/UpsertOneClient"
	| "smartOffice/UpsertOneSale"
	| "smartOffice/UpsertOneTask"
	| "smartOffice/UpsertOneUser"
	| "users/update";

export type SubscriptionNames = "users/subscribe";

export default jsonSchema;
