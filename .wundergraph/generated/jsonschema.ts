// Code generated by wunderctl. DO NOT EDIT.

// @ts-ignore: no-types available
import type { JSONSchema7 } from "json-schema";

// @ts-ignore: module unavailable
declare module "json-schema" {
	export interface JSONSchema7 {
		"x-graphql-enum-name"?: string;
	}
}

export interface Queries {
	"countries/Continent": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"countries/Continents": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"countries/Countries": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"countries/Country": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"countries/CountryByCode": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"countries/Language": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"countries/Languages": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/AggregateAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/AggregatePost": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/AggregateSession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/AggregateTodo": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/AggregateUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/AggregateVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindFirstAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindFirstAccountOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindFirstPost": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindFirstPostOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindFirstSession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindFirstSessionOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindFirstTodo": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindFirstTodoOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindFirstUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindFirstUserOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindFirstVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindFirstVerificationTokenOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindManyAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindManyPost": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindManySession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindManyTodo": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindManyVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindUniqueAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindUniqueAccountOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindUniquePost": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindUniquePostOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindUniqueSession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindUniqueSessionOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindUniqueTodo": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindUniqueTodoOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindUniqueUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindUniqueUserOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindUniqueVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/FindUniqueVerificationTokenOrThrow": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/GroupByAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/GroupByPost": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/GroupBySession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/GroupByTodo": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/GroupByUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/GroupByVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/QueryRaw": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/QueryRawJSON": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"todos/getAllTodosForCurrentUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"weather/GetCityById": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"weather/GetCityByName": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"openai/extract-website-metadata": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"openai/load-url": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"openai/summarize-url-content": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"openai/summary": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"openai/weather": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"users/get": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
}

export interface Mutations {
	"db/CreateManyAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/CreateManyPost": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/CreateManySession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/CreateManyTodo": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/CreateManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/CreateManyVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/CreateOneAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/CreateOnePost": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/CreateOneSession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/CreateOneTodo": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/CreateOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/CreateOneVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/DeleteManyAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/DeleteManyPost": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/DeleteManySession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/DeleteManyTodo": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/DeleteManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/DeleteManyVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/DeleteOneAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/DeleteOnePost": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/DeleteOneSession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/DeleteOneTodo": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/DeleteOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/DeleteOneVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/ExecuteRaw": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpdateManyAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpdateManyPost": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpdateManySession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpdateManyTodo": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpdateManyUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpdateManyVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpdateOneAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpdateOnePost": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpdateOneSession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpdateOneTodo": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpdateOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpdateOneVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpsertOneAccount": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpsertOnePost": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpsertOneSession": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpsertOneTodo": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpsertOneUser": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"db/UpsertOneVerificationToken": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"todos/addTodo": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"todos/updateTodo": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"users/update": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
}

export interface Subscriptions {
	"users/subscribe": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
}

export type Schema = Queries & Mutations & Subscriptions;

const jsonSchema: Schema = {
	"countries/Continent": {
		input: {
			type: "object",
			properties: {
				code: { type: "string" },
				countries_continent_countries_countries_name_lang: { type: ["string", "null"] },
			},
			additionalProperties: false,
			required: ["code"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						countries_continent: {
							type: "object",
							properties: {
								code: { type: "string" },
								countries: {
									type: "array",
									items: {
										type: "object",
										properties: {
											awsRegion: { type: "string" },
											capital: { type: "string" },
											code: { type: "string" },
											currencies: { type: "array", items: { type: "string" } },
											currency: { type: "string" },
											emoji: { type: "string" },
											emojiU: { type: "string" },
											languages: {
												type: "array",
												items: {
													type: "object",
													properties: {
														code: { type: "string" },
														name: { type: "string" },
														native: { type: "string" },
														rtl: { type: "boolean" },
													},
													additionalProperties: false,
													required: ["code", "name", "native", "rtl"],
												},
											},
											name: { type: "string" },
											native: { type: "string" },
											phone: { type: "string" },
											phones: { type: "array", items: { type: "string" } },
											states: {
												type: "array",
												items: {
													type: "object",
													properties: { code: { type: "string" }, name: { type: "string" } },
													additionalProperties: false,
													required: ["name"],
												},
											},
											subdivisions: {
												type: "array",
												items: {
													type: "object",
													properties: { code: { type: "string" }, emoji: { type: "string" }, name: { type: "string" } },
													additionalProperties: false,
													required: ["code", "name"],
												},
											},
										},
										additionalProperties: false,
										required: [
											"awsRegion",
											"code",
											"currencies",
											"emoji",
											"emojiU",
											"languages",
											"name",
											"native",
											"phone",
											"phones",
											"states",
											"subdivisions",
										],
									},
								},
								name: { type: "string" },
							},
							additionalProperties: false,
							required: ["code", "countries", "name"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"countries/Continents": {
		input: {
			type: "object",
			properties: {
				filter: { $ref: "#/definitions/countries_ContinentFilterInput" },
				countries_continents_countries_countries_name_lang: { type: ["string", "null"] },
			},
			additionalProperties: false,
			definitions: {
				countries_ContinentFilterInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { code: { $ref: "#/definitions/countries_StringQueryOperatorInput" } },
				},
				countries_StringQueryOperatorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						eq: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: "string" } },
						ne: { type: ["string", "null"] },
						nin: { type: ["array", "null"], items: { type: "string" } },
						regex: { type: ["string", "null"] },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						countries_continents: {
							type: "array",
							items: {
								type: "object",
								properties: {
									code: { type: "string" },
									countries: {
										type: "array",
										items: {
											type: "object",
											properties: {
												awsRegion: { type: "string" },
												capital: { type: "string" },
												code: { type: "string" },
												currencies: { type: "array", items: { type: "string" } },
												currency: { type: "string" },
												emoji: { type: "string" },
												emojiU: { type: "string" },
												languages: {
													type: "array",
													items: {
														type: "object",
														properties: {
															code: { type: "string" },
															name: { type: "string" },
															native: { type: "string" },
															rtl: { type: "boolean" },
														},
														additionalProperties: false,
														required: ["code", "name", "native", "rtl"],
													},
												},
												name: { type: "string" },
												native: { type: "string" },
												phone: { type: "string" },
												phones: { type: "array", items: { type: "string" } },
												states: {
													type: "array",
													items: {
														type: "object",
														properties: { code: { type: "string" }, name: { type: "string" } },
														additionalProperties: false,
														required: ["name"],
													},
												},
												subdivisions: {
													type: "array",
													items: {
														type: "object",
														properties: {
															code: { type: "string" },
															emoji: { type: "string" },
															name: { type: "string" },
														},
														additionalProperties: false,
														required: ["code", "name"],
													},
												},
											},
											additionalProperties: false,
											required: [
												"awsRegion",
												"code",
												"currencies",
												"emoji",
												"emojiU",
												"languages",
												"name",
												"native",
												"phone",
												"phones",
												"states",
												"subdivisions",
											],
										},
									},
									name: { type: "string" },
								},
								additionalProperties: false,
								required: ["code", "countries", "name"],
							},
						},
					},
					additionalProperties: false,
					required: ["countries_continents"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"countries/Countries": {
		input: {
			type: "object",
			properties: {
				filter: { $ref: "#/definitions/countries_CountryFilterInput" },
				countries_countries_name_lang: { type: ["string", "null"] },
			},
			additionalProperties: false,
			definitions: {
				countries_CountryFilterInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						code: { $ref: "#/definitions/countries_StringQueryOperatorInput" },
						continent: { $ref: "#/definitions/countries_StringQueryOperatorInput" },
						currency: { $ref: "#/definitions/countries_StringQueryOperatorInput" },
						name: { $ref: "#/definitions/countries_StringQueryOperatorInput" },
					},
				},
				countries_StringQueryOperatorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						eq: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: "string" } },
						ne: { type: ["string", "null"] },
						nin: { type: ["array", "null"], items: { type: "string" } },
						regex: { type: ["string", "null"] },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						countries_countries: {
							type: "array",
							items: {
								type: "object",
								properties: {
									awsRegion: { type: "string" },
									capital: { type: "string" },
									code: { type: "string" },
									continent: {
										type: "object",
										properties: { code: { type: "string" }, name: { type: "string" } },
										additionalProperties: false,
										required: ["code", "name"],
									},
									currencies: { type: "array", items: { type: "string" } },
									currency: { type: "string" },
									emoji: { type: "string" },
									emojiU: { type: "string" },
									languages: {
										type: "array",
										items: {
											type: "object",
											properties: {
												code: { type: "string" },
												name: { type: "string" },
												native: { type: "string" },
												rtl: { type: "boolean" },
											},
											additionalProperties: false,
											required: ["code", "name", "native", "rtl"],
										},
									},
									name: { type: "string" },
									native: { type: "string" },
									phone: { type: "string" },
									phones: { type: "array", items: { type: "string" } },
									states: {
										type: "array",
										items: {
											type: "object",
											properties: { code: { type: "string" }, name: { type: "string" } },
											additionalProperties: false,
											required: ["name"],
										},
									},
									subdivisions: {
										type: "array",
										items: {
											type: "object",
											properties: { code: { type: "string" }, emoji: { type: "string" }, name: { type: "string" } },
											additionalProperties: false,
											required: ["code", "name"],
										},
									},
								},
								additionalProperties: false,
								required: [
									"awsRegion",
									"code",
									"continent",
									"currencies",
									"emoji",
									"emojiU",
									"languages",
									"name",
									"native",
									"phone",
									"phones",
									"states",
									"subdivisions",
								],
							},
						},
					},
					additionalProperties: false,
					required: ["countries_countries"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"countries/Country": {
		input: {
			type: "object",
			properties: { code: { type: "string" }, countries_country_name_lang: { type: ["string", "null"] } },
			additionalProperties: false,
			required: ["code"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						countries_country: {
							type: "object",
							properties: {
								awsRegion: { type: "string" },
								capital: { type: "string" },
								code: { type: "string" },
								continent: {
									type: "object",
									properties: { code: { type: "string" }, name: { type: "string" } },
									additionalProperties: false,
									required: ["code", "name"],
								},
								currencies: { type: "array", items: { type: "string" } },
								currency: { type: "string" },
								emoji: { type: "string" },
								emojiU: { type: "string" },
								languages: {
									type: "array",
									items: {
										type: "object",
										properties: {
											code: { type: "string" },
											name: { type: "string" },
											native: { type: "string" },
											rtl: { type: "boolean" },
										},
										additionalProperties: false,
										required: ["code", "name", "native", "rtl"],
									},
								},
								name: { type: "string" },
								native: { type: "string" },
								phone: { type: "string" },
								phones: { type: "array", items: { type: "string" } },
								states: {
									type: "array",
									items: {
										type: "object",
										properties: { code: { type: "string" }, name: { type: "string" } },
										additionalProperties: false,
										required: ["name"],
									},
								},
								subdivisions: {
									type: "array",
									items: {
										type: "object",
										properties: { code: { type: "string" }, emoji: { type: "string" }, name: { type: "string" } },
										additionalProperties: false,
										required: ["code", "name"],
									},
								},
							},
							additionalProperties: false,
							required: [
								"awsRegion",
								"code",
								"continent",
								"currencies",
								"emoji",
								"emojiU",
								"languages",
								"name",
								"native",
								"phone",
								"phones",
								"states",
								"subdivisions",
							],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"countries/CountryByCode": {
		input: {
			type: "object",
			properties: { code: { type: "string" } },
			additionalProperties: false,
			required: ["code"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						countries_country: {
							type: "object",
							properties: {
								code: { type: "string" },
								name: { type: "string" },
								currencies: { type: "array", items: { type: "string" } },
								capital: { type: "string" },
							},
							additionalProperties: false,
							required: ["code", "name", "currencies"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"countries/Language": {
		input: {
			type: "object",
			properties: { code: { type: "string" } },
			additionalProperties: false,
			required: ["code"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						countries_language: {
							type: "object",
							properties: {
								code: { type: "string" },
								name: { type: "string" },
								native: { type: "string" },
								rtl: { type: "boolean" },
							},
							additionalProperties: false,
							required: ["code", "name", "native", "rtl"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"countries/Languages": {
		input: {
			type: "object",
			properties: { filter: { $ref: "#/definitions/countries_LanguageFilterInput" } },
			additionalProperties: false,
			definitions: {
				countries_LanguageFilterInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { code: { $ref: "#/definitions/countries_StringQueryOperatorInput" } },
				},
				countries_StringQueryOperatorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						eq: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: "string" } },
						ne: { type: ["string", "null"] },
						nin: { type: ["array", "null"], items: { type: "string" } },
						regex: { type: ["string", "null"] },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						countries_languages: {
							type: "array",
							items: {
								type: "object",
								properties: {
									code: { type: "string" },
									name: { type: "string" },
									native: { type: "string" },
									rtl: { type: "boolean" },
								},
								additionalProperties: false,
								required: ["code", "name", "native", "rtl"],
							},
						},
					},
					additionalProperties: false,
					required: ["countries_languages"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/AggregateAccount": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_AccountWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_aggregateAccount: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										userId: { type: "integer" },
										type: { type: "integer" },
										provider: { type: "integer" },
										providerAccountId: { type: "integer" },
										refresh_token: { type: "integer" },
										access_token: { type: "integer" },
										expires_at: { type: "integer" },
										token_type: { type: "integer" },
										scope: { type: "integer" },
										id_token: { type: "integer" },
										session_state: { type: "integer" },
										createdAt: { type: "integer" },
										updatedAt: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: [
										"id",
										"userId",
										"type",
										"provider",
										"providerAccountId",
										"refresh_token",
										"access_token",
										"expires_at",
										"token_type",
										"scope",
										"id_token",
										"session_state",
										"createdAt",
										"updatedAt",
										"_all",
									],
								},
								_avg: { type: "object", properties: { expires_at: { type: "number" } }, additionalProperties: false },
								_sum: { type: "object", properties: { expires_at: { type: "integer" } }, additionalProperties: false },
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										userId: { type: "string" },
										type: { type: "string" },
										provider: { type: "string" },
										providerAccountId: { type: "string" },
										refresh_token: { type: "string" },
										access_token: { type: "string" },
										expires_at: { type: "integer" },
										token_type: { type: "string" },
										scope: { type: "string" },
										id_token: { type: "string" },
										session_state: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										userId: { type: "string" },
										type: { type: "string" },
										provider: { type: "string" },
										providerAccountId: { type: "string" },
										refresh_token: { type: "string" },
										access_token: { type: "string" },
										expires_at: { type: "integer" },
										token_type: { type: "string" },
										scope: { type: "string" },
										id_token: { type: "string" },
										session_state: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["db_aggregateAccount"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/AggregatePost": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_PostWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_aggregatePost: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										title: { type: "integer" },
										content: { type: "integer" },
										published: { type: "integer" },
										createdAt: { type: "integer" },
										updatedAt: { type: "integer" },
										authorId: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										title: { type: "string" },
										published: { type: "boolean" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										authorId: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										title: { type: "string" },
										published: { type: "boolean" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										authorId: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["db_aggregatePost"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/AggregateSession": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_SessionWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_aggregateSession: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										sessionToken: { type: "integer" },
										userId: { type: "integer" },
										expires: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "sessionToken", "userId", "expires", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										sessionToken: { type: "string" },
										userId: { type: "string" },
										expires: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										sessionToken: { type: "string" },
										userId: { type: "string" },
										expires: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["db_aggregateSession"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/AggregateTodo": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_TodoWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_aggregateTodo: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										text: { type: "integer" },
										isCompleted: { type: "integer" },
										createdAt: { type: "integer" },
										updatedAt: { type: "integer" },
										userId: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										text: { type: "string" },
										isCompleted: { type: "boolean" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										text: { type: "string" },
										isCompleted: { type: "boolean" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										userId: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["db_aggregateTodo"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/AggregateUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_UserWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_aggregateUser: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										id: { type: "integer" },
										name: { type: "integer" },
										email: { type: "integer" },
										emailVerified: { type: "integer" },
										image: { type: "integer" },
										createdAt: { type: "integer" },
										updatedAt: { type: "integer" },
										stripeCustomerId: { type: "integer" },
										stripeSubscriptionId: { type: "integer" },
										stripePriceId: { type: "integer" },
										stripeCurrentPeriodEnd: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: [
										"id",
										"name",
										"email",
										"emailVerified",
										"image",
										"createdAt",
										"updatedAt",
										"stripeCustomerId",
										"stripeSubscriptionId",
										"stripePriceId",
										"stripeCurrentPeriodEnd",
										"_all",
									],
								},
								_min: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["db_aggregateUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/AggregateVerificationToken": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_VerificationTokenOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/db_VerificationTokenWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				db_VerificationTokenWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_VerificationTokenWhereInput" } },
						NOT: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
						identifier: { $ref: "#/definitions/db_StringFilter" },
						token: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_VerificationTokenOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: { $ref: "#/definitions/db_VerificationTokenIdentifierTokenCompoundUniqueInput" },
					},
				},
				db_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_aggregateVerificationToken: {
							type: "object",
							properties: {
								_count: {
									type: "object",
									properties: {
										identifier: { type: "integer" },
										token: { type: "integer" },
										expires: { type: "integer" },
										_all: { type: "integer" },
									},
									additionalProperties: false,
									required: ["identifier", "token", "expires", "_all"],
								},
								_min: {
									type: "object",
									properties: {
										identifier: { type: "string" },
										token: { type: "string" },
										expires: { type: "string" },
									},
									additionalProperties: false,
								},
								_max: {
									type: "object",
									properties: {
										identifier: { type: "string" },
										token: { type: "string" },
										expires: { type: "string" },
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
					required: ["db_aggregateVerificationToken"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindFirstAccount": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_AccountWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findFirstAccount_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findFirstAccount_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findFirstAccount_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findFirstAccount_user_user_sessions_take: { type: ["integer", "null"] },
				db_findFirstAccount_user_user_sessions_skip: { type: ["integer", "null"] },
				db_findFirstAccount_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findFirstAccount_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findFirstAccount_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findFirstAccount_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findFirstAccount_user_user_Post_take: { type: ["integer", "null"] },
				db_findFirstAccount_user_user_Post_skip: { type: ["integer", "null"] },
				db_findFirstAccount_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findFirstAccount_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findFirstAccount_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findFirstAccount_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findFirstAccount_user_user_Todo_take: { type: ["integer", "null"] },
				db_findFirstAccount_user_user_Todo_skip: { type: ["integer", "null"] },
				db_findFirstAccount_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findFirstAccount: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindFirstAccountOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_AccountWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findFirstAccountOrThrow_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findFirstAccountOrThrow_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findFirstAccountOrThrow_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findFirstAccountOrThrow_user_user_sessions_take: { type: ["integer", "null"] },
				db_findFirstAccountOrThrow_user_user_sessions_skip: { type: ["integer", "null"] },
				db_findFirstAccountOrThrow_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findFirstAccountOrThrow_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findFirstAccountOrThrow_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findFirstAccountOrThrow_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findFirstAccountOrThrow_user_user_Post_take: { type: ["integer", "null"] },
				db_findFirstAccountOrThrow_user_user_Post_skip: { type: ["integer", "null"] },
				db_findFirstAccountOrThrow_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findFirstAccountOrThrow_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findFirstAccountOrThrow_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findFirstAccountOrThrow_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findFirstAccountOrThrow_user_user_Todo_take: { type: ["integer", "null"] },
				db_findFirstAccountOrThrow_user_user_Todo_skip: { type: ["integer", "null"] },
				db_findFirstAccountOrThrow_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findFirstAccountOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindFirstPost": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_PostWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findFirstPost_author_author_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findFirstPost_author_author_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findFirstPost_author_author_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findFirstPost_author_author_accounts_take: { type: ["integer", "null"] },
				db_findFirstPost_author_author_accounts_skip: { type: ["integer", "null"] },
				db_findFirstPost_author_author_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findFirstPost_author_author_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findFirstPost_author_author_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findFirstPost_author_author_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findFirstPost_author_author_sessions_take: { type: ["integer", "null"] },
				db_findFirstPost_author_author_sessions_skip: { type: ["integer", "null"] },
				db_findFirstPost_author_author_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findFirstPost_author_author_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findFirstPost_author_author_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findFirstPost_author_author_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findFirstPost_author_author_Todo_take: { type: ["integer", "null"] },
				db_findFirstPost_author_author_Todo_skip: { type: ["integer", "null"] },
				db_findFirstPost_author_author_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findFirstPost: {
							type: "object",
							properties: {
								id: { type: "string" },
								title: { type: "string" },
								content: {},
								published: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								authorId: { type: "string" },
								author: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "title", "published", "createdAt", "updatedAt", "authorId", "author"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindFirstPostOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_PostWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findFirstPostOrThrow_author_author_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findFirstPostOrThrow_author_author_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findFirstPostOrThrow_author_author_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findFirstPostOrThrow_author_author_accounts_take: { type: ["integer", "null"] },
				db_findFirstPostOrThrow_author_author_accounts_skip: { type: ["integer", "null"] },
				db_findFirstPostOrThrow_author_author_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findFirstPostOrThrow_author_author_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findFirstPostOrThrow_author_author_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findFirstPostOrThrow_author_author_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findFirstPostOrThrow_author_author_sessions_take: { type: ["integer", "null"] },
				db_findFirstPostOrThrow_author_author_sessions_skip: { type: ["integer", "null"] },
				db_findFirstPostOrThrow_author_author_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findFirstPostOrThrow_author_author_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findFirstPostOrThrow_author_author_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findFirstPostOrThrow_author_author_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findFirstPostOrThrow_author_author_Todo_take: { type: ["integer", "null"] },
				db_findFirstPostOrThrow_author_author_Todo_skip: { type: ["integer", "null"] },
				db_findFirstPostOrThrow_author_author_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findFirstPostOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								title: { type: "string" },
								content: {},
								published: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								authorId: { type: "string" },
								author: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "title", "published", "createdAt", "updatedAt", "authorId", "author"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindFirstSession": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_SessionWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findFirstSession_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findFirstSession_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findFirstSession_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findFirstSession_user_user_accounts_take: { type: ["integer", "null"] },
				db_findFirstSession_user_user_accounts_skip: { type: ["integer", "null"] },
				db_findFirstSession_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findFirstSession_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findFirstSession_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findFirstSession_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findFirstSession_user_user_Post_take: { type: ["integer", "null"] },
				db_findFirstSession_user_user_Post_skip: { type: ["integer", "null"] },
				db_findFirstSession_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findFirstSession_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findFirstSession_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findFirstSession_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findFirstSession_user_user_Todo_take: { type: ["integer", "null"] },
				db_findFirstSession_user_user_Todo_skip: { type: ["integer", "null"] },
				db_findFirstSession_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findFirstSession: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindFirstSessionOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_SessionWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findFirstSessionOrThrow_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findFirstSessionOrThrow_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findFirstSessionOrThrow_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findFirstSessionOrThrow_user_user_accounts_take: { type: ["integer", "null"] },
				db_findFirstSessionOrThrow_user_user_accounts_skip: { type: ["integer", "null"] },
				db_findFirstSessionOrThrow_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findFirstSessionOrThrow_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findFirstSessionOrThrow_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findFirstSessionOrThrow_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findFirstSessionOrThrow_user_user_Post_take: { type: ["integer", "null"] },
				db_findFirstSessionOrThrow_user_user_Post_skip: { type: ["integer", "null"] },
				db_findFirstSessionOrThrow_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findFirstSessionOrThrow_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findFirstSessionOrThrow_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findFirstSessionOrThrow_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findFirstSessionOrThrow_user_user_Todo_take: { type: ["integer", "null"] },
				db_findFirstSessionOrThrow_user_user_Todo_skip: { type: ["integer", "null"] },
				db_findFirstSessionOrThrow_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findFirstSessionOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindFirstTodo": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_TodoWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
				db_findFirstTodo_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findFirstTodo_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findFirstTodo_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findFirstTodo_user_user_accounts_take: { type: ["integer", "null"] },
				db_findFirstTodo_user_user_accounts_skip: { type: ["integer", "null"] },
				db_findFirstTodo_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findFirstTodo_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findFirstTodo_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findFirstTodo_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findFirstTodo_user_user_sessions_take: { type: ["integer", "null"] },
				db_findFirstTodo_user_user_sessions_skip: { type: ["integer", "null"] },
				db_findFirstTodo_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findFirstTodo_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findFirstTodo_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findFirstTodo_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findFirstTodo_user_user_Post_take: { type: ["integer", "null"] },
				db_findFirstTodo_user_user_Post_skip: { type: ["integer", "null"] },
				db_findFirstTodo_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findFirstTodo: {
							type: "object",
							properties: {
								id: { type: "string" },
								text: { type: "string" },
								isCompleted: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindFirstTodoOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_TodoWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
				db_findFirstTodoOrThrow_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findFirstTodoOrThrow_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findFirstTodoOrThrow_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findFirstTodoOrThrow_user_user_accounts_take: { type: ["integer", "null"] },
				db_findFirstTodoOrThrow_user_user_accounts_skip: { type: ["integer", "null"] },
				db_findFirstTodoOrThrow_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findFirstTodoOrThrow_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findFirstTodoOrThrow_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findFirstTodoOrThrow_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findFirstTodoOrThrow_user_user_sessions_take: { type: ["integer", "null"] },
				db_findFirstTodoOrThrow_user_user_sessions_skip: { type: ["integer", "null"] },
				db_findFirstTodoOrThrow_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findFirstTodoOrThrow_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findFirstTodoOrThrow_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findFirstTodoOrThrow_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findFirstTodoOrThrow_user_user_Post_take: { type: ["integer", "null"] },
				db_findFirstTodoOrThrow_user_user_Post_skip: { type: ["integer", "null"] },
				db_findFirstTodoOrThrow_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findFirstTodoOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								text: { type: "string" },
								isCompleted: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindFirstUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_UserWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_UserScalarFieldEnum",
						enum: [
							"id",
							"name",
							"email",
							"emailVerified",
							"image",
							"createdAt",
							"updatedAt",
							"stripeCustomerId",
							"stripeSubscriptionId",
							"stripePriceId",
							"stripeCurrentPeriodEnd",
						],
					},
				},
				db_findFirstUser_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findFirstUser_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findFirstUser_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findFirstUser_accounts_take: { type: ["integer", "null"] },
				db_findFirstUser_accounts_skip: { type: ["integer", "null"] },
				db_findFirstUser_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findFirstUser_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findFirstUser_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findFirstUser_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findFirstUser_sessions_take: { type: ["integer", "null"] },
				db_findFirstUser_sessions_skip: { type: ["integer", "null"] },
				db_findFirstUser_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findFirstUser_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findFirstUser_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findFirstUser_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findFirstUser_Post_take: { type: ["integer", "null"] },
				db_findFirstUser_Post_skip: { type: ["integer", "null"] },
				db_findFirstUser_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findFirstUser_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findFirstUser_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findFirstUser_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findFirstUser_Todo_take: { type: ["integer", "null"] },
				db_findFirstUser_Todo_skip: { type: ["integer", "null"] },
				db_findFirstUser_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findFirstUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								Post: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											title: { type: "string" },
											content: {},
											published: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											authorId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
									},
								},
								Todo: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											text: { type: "string" },
											isCompleted: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
									},
								},
								_count: {
									type: "object",
									properties: {
										accounts: { type: "integer" },
										sessions: { type: "integer" },
										Post: { type: "integer" },
										Todo: { type: "integer" },
									},
									additionalProperties: false,
									required: ["accounts", "sessions", "Post", "Todo"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindFirstUserOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_UserWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_UserScalarFieldEnum",
						enum: [
							"id",
							"name",
							"email",
							"emailVerified",
							"image",
							"createdAt",
							"updatedAt",
							"stripeCustomerId",
							"stripeSubscriptionId",
							"stripePriceId",
							"stripeCurrentPeriodEnd",
						],
					},
				},
				db_findFirstUserOrThrow_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findFirstUserOrThrow_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findFirstUserOrThrow_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findFirstUserOrThrow_accounts_take: { type: ["integer", "null"] },
				db_findFirstUserOrThrow_accounts_skip: { type: ["integer", "null"] },
				db_findFirstUserOrThrow_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findFirstUserOrThrow_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findFirstUserOrThrow_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findFirstUserOrThrow_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findFirstUserOrThrow_sessions_take: { type: ["integer", "null"] },
				db_findFirstUserOrThrow_sessions_skip: { type: ["integer", "null"] },
				db_findFirstUserOrThrow_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findFirstUserOrThrow_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findFirstUserOrThrow_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findFirstUserOrThrow_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findFirstUserOrThrow_Post_take: { type: ["integer", "null"] },
				db_findFirstUserOrThrow_Post_skip: { type: ["integer", "null"] },
				db_findFirstUserOrThrow_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findFirstUserOrThrow_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findFirstUserOrThrow_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findFirstUserOrThrow_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findFirstUserOrThrow_Todo_take: { type: ["integer", "null"] },
				db_findFirstUserOrThrow_Todo_skip: { type: ["integer", "null"] },
				db_findFirstUserOrThrow_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findFirstUserOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								Post: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											title: { type: "string" },
											content: {},
											published: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											authorId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
									},
								},
								Todo: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											text: { type: "string" },
											isCompleted: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
									},
								},
								_count: {
									type: "object",
									properties: {
										accounts: { type: "integer" },
										sessions: { type: "integer" },
										Post: { type: "integer" },
										Todo: { type: "integer" },
									},
									additionalProperties: false,
									required: ["accounts", "sessions", "Post", "Todo"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindFirstVerificationToken": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_VerificationTokenOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/db_VerificationTokenWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_VerificationTokenScalarFieldEnum",
						enum: ["identifier", "token", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_VerificationTokenWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_VerificationTokenWhereInput" } },
						NOT: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
						identifier: { $ref: "#/definitions/db_StringFilter" },
						token: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_VerificationTokenOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: { $ref: "#/definitions/db_VerificationTokenIdentifierTokenCompoundUniqueInput" },
					},
				},
				db_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findFirstVerificationToken: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindFirstVerificationTokenOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_VerificationTokenOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/db_VerificationTokenWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_VerificationTokenScalarFieldEnum",
						enum: ["identifier", "token", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_VerificationTokenWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_VerificationTokenWhereInput" } },
						NOT: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
						identifier: { $ref: "#/definitions/db_StringFilter" },
						token: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_VerificationTokenOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: { $ref: "#/definitions/db_VerificationTokenIdentifierTokenCompoundUniqueInput" },
					},
				},
				db_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findFirstVerificationTokenOrThrow: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindManyAccount": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_AccountWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findManyAccount_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findManyAccount_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findManyAccount_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findManyAccount_user_user_sessions_take: { type: ["integer", "null"] },
				db_findManyAccount_user_user_sessions_skip: { type: ["integer", "null"] },
				db_findManyAccount_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findManyAccount_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findManyAccount_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findManyAccount_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findManyAccount_user_user_Post_take: { type: ["integer", "null"] },
				db_findManyAccount_user_user_Post_skip: { type: ["integer", "null"] },
				db_findManyAccount_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findManyAccount_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findManyAccount_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findManyAccount_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findManyAccount_user_user_Todo_take: { type: ["integer", "null"] },
				db_findManyAccount_user_user_Todo_skip: { type: ["integer", "null"] },
				db_findManyAccount_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findManyAccount: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									userId: { type: "string" },
									type: { type: "string" },
									provider: { type: "string" },
									providerAccountId: { type: "string" },
									refresh_token: { type: "string" },
									access_token: { type: "string" },
									expires_at: { type: "integer" },
									token_type: { type: "string" },
									scope: { type: "string" },
									id_token: { type: "string" },
									session_state: { type: "string" },
									createdAt: { type: "string" },
									updatedAt: { type: "string" },
									user: {
										type: "object",
										properties: {
											id: { type: "string" },
											name: { type: "string" },
											email: { type: "string" },
											emailVerified: { type: "string" },
											image: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											stripeCustomerId: { type: "string" },
											stripeSubscriptionId: { type: "string" },
											stripePriceId: { type: "string" },
											stripeCurrentPeriodEnd: { type: "string" },
											sessions: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														sessionToken: { type: "string" },
														userId: { type: "string" },
														expires: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "sessionToken", "userId", "expires"],
												},
											},
											Post: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														title: { type: "string" },
														content: {},
														published: { type: "boolean" },
														createdAt: { type: "string" },
														updatedAt: { type: "string" },
														authorId: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
												},
											},
											Todo: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														text: { type: "string" },
														isCompleted: { type: "boolean" },
														createdAt: { type: "string" },
														updatedAt: { type: "string" },
														userId: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
												},
											},
											_count: {
												type: "object",
												properties: {
													accounts: { type: "integer" },
													sessions: { type: "integer" },
													Post: { type: "integer" },
													Todo: { type: "integer" },
												},
												additionalProperties: false,
												required: ["accounts", "sessions", "Post", "Todo"],
											},
										},
										additionalProperties: false,
										required: ["id", "createdAt", "updatedAt", "_count"],
									},
								},
								additionalProperties: false,
								required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
							},
						},
					},
					additionalProperties: false,
					required: ["db_findManyAccount"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindManyPost": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_PostWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findManyPost_author_author_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findManyPost_author_author_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findManyPost_author_author_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findManyPost_author_author_accounts_take: { type: ["integer", "null"] },
				db_findManyPost_author_author_accounts_skip: { type: ["integer", "null"] },
				db_findManyPost_author_author_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findManyPost_author_author_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findManyPost_author_author_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findManyPost_author_author_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findManyPost_author_author_sessions_take: { type: ["integer", "null"] },
				db_findManyPost_author_author_sessions_skip: { type: ["integer", "null"] },
				db_findManyPost_author_author_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findManyPost_author_author_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findManyPost_author_author_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findManyPost_author_author_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findManyPost_author_author_Todo_take: { type: ["integer", "null"] },
				db_findManyPost_author_author_Todo_skip: { type: ["integer", "null"] },
				db_findManyPost_author_author_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findManyPost: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									title: { type: "string" },
									content: {},
									published: { type: "boolean" },
									createdAt: { type: "string" },
									updatedAt: { type: "string" },
									authorId: { type: "string" },
									author: {
										type: "object",
										properties: {
											id: { type: "string" },
											name: { type: "string" },
											email: { type: "string" },
											emailVerified: { type: "string" },
											image: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											stripeCustomerId: { type: "string" },
											stripeSubscriptionId: { type: "string" },
											stripePriceId: { type: "string" },
											stripeCurrentPeriodEnd: { type: "string" },
											accounts: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														userId: { type: "string" },
														type: { type: "string" },
														provider: { type: "string" },
														providerAccountId: { type: "string" },
														refresh_token: { type: "string" },
														access_token: { type: "string" },
														expires_at: { type: "integer" },
														token_type: { type: "string" },
														scope: { type: "string" },
														id_token: { type: "string" },
														session_state: { type: "string" },
														createdAt: { type: "string" },
														updatedAt: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
												},
											},
											sessions: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														sessionToken: { type: "string" },
														userId: { type: "string" },
														expires: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "sessionToken", "userId", "expires"],
												},
											},
											Todo: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														text: { type: "string" },
														isCompleted: { type: "boolean" },
														createdAt: { type: "string" },
														updatedAt: { type: "string" },
														userId: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
												},
											},
											_count: {
												type: "object",
												properties: {
													accounts: { type: "integer" },
													sessions: { type: "integer" },
													Post: { type: "integer" },
													Todo: { type: "integer" },
												},
												additionalProperties: false,
												required: ["accounts", "sessions", "Post", "Todo"],
											},
										},
										additionalProperties: false,
										required: ["id", "createdAt", "updatedAt", "_count"],
									},
								},
								additionalProperties: false,
								required: ["id", "title", "published", "createdAt", "updatedAt", "authorId", "author"],
							},
						},
					},
					additionalProperties: false,
					required: ["db_findManyPost"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindManySession": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_SessionWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findManySession_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findManySession_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findManySession_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findManySession_user_user_accounts_take: { type: ["integer", "null"] },
				db_findManySession_user_user_accounts_skip: { type: ["integer", "null"] },
				db_findManySession_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findManySession_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findManySession_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findManySession_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findManySession_user_user_Post_take: { type: ["integer", "null"] },
				db_findManySession_user_user_Post_skip: { type: ["integer", "null"] },
				db_findManySession_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findManySession_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findManySession_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findManySession_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findManySession_user_user_Todo_take: { type: ["integer", "null"] },
				db_findManySession_user_user_Todo_skip: { type: ["integer", "null"] },
				db_findManySession_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findManySession: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									sessionToken: { type: "string" },
									userId: { type: "string" },
									expires: { type: "string" },
									user: {
										type: "object",
										properties: {
											id: { type: "string" },
											name: { type: "string" },
											email: { type: "string" },
											emailVerified: { type: "string" },
											image: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											stripeCustomerId: { type: "string" },
											stripeSubscriptionId: { type: "string" },
											stripePriceId: { type: "string" },
											stripeCurrentPeriodEnd: { type: "string" },
											accounts: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														userId: { type: "string" },
														type: { type: "string" },
														provider: { type: "string" },
														providerAccountId: { type: "string" },
														refresh_token: { type: "string" },
														access_token: { type: "string" },
														expires_at: { type: "integer" },
														token_type: { type: "string" },
														scope: { type: "string" },
														id_token: { type: "string" },
														session_state: { type: "string" },
														createdAt: { type: "string" },
														updatedAt: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
												},
											},
											Post: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														title: { type: "string" },
														content: {},
														published: { type: "boolean" },
														createdAt: { type: "string" },
														updatedAt: { type: "string" },
														authorId: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
												},
											},
											Todo: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														text: { type: "string" },
														isCompleted: { type: "boolean" },
														createdAt: { type: "string" },
														updatedAt: { type: "string" },
														userId: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
												},
											},
											_count: {
												type: "object",
												properties: {
													accounts: { type: "integer" },
													sessions: { type: "integer" },
													Post: { type: "integer" },
													Todo: { type: "integer" },
												},
												additionalProperties: false,
												required: ["accounts", "sessions", "Post", "Todo"],
											},
										},
										additionalProperties: false,
										required: ["id", "createdAt", "updatedAt", "_count"],
									},
								},
								additionalProperties: false,
								required: ["id", "sessionToken", "userId", "expires", "user"],
							},
						},
					},
					additionalProperties: false,
					required: ["db_findManySession"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindManyTodo": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_TodoWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
				db_findManyTodo_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findManyTodo_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findManyTodo_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findManyTodo_user_user_accounts_take: { type: ["integer", "null"] },
				db_findManyTodo_user_user_accounts_skip: { type: ["integer", "null"] },
				db_findManyTodo_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findManyTodo_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findManyTodo_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findManyTodo_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findManyTodo_user_user_sessions_take: { type: ["integer", "null"] },
				db_findManyTodo_user_user_sessions_skip: { type: ["integer", "null"] },
				db_findManyTodo_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findManyTodo_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findManyTodo_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findManyTodo_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findManyTodo_user_user_Post_take: { type: ["integer", "null"] },
				db_findManyTodo_user_user_Post_skip: { type: ["integer", "null"] },
				db_findManyTodo_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findManyTodo: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									text: { type: "string" },
									isCompleted: { type: "boolean" },
									createdAt: { type: "string" },
									updatedAt: { type: "string" },
									userId: { type: "string" },
									user: {
										type: "object",
										properties: {
											id: { type: "string" },
											name: { type: "string" },
											email: { type: "string" },
											emailVerified: { type: "string" },
											image: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											stripeCustomerId: { type: "string" },
											stripeSubscriptionId: { type: "string" },
											stripePriceId: { type: "string" },
											stripeCurrentPeriodEnd: { type: "string" },
											accounts: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														userId: { type: "string" },
														type: { type: "string" },
														provider: { type: "string" },
														providerAccountId: { type: "string" },
														refresh_token: { type: "string" },
														access_token: { type: "string" },
														expires_at: { type: "integer" },
														token_type: { type: "string" },
														scope: { type: "string" },
														id_token: { type: "string" },
														session_state: { type: "string" },
														createdAt: { type: "string" },
														updatedAt: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
												},
											},
											sessions: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														sessionToken: { type: "string" },
														userId: { type: "string" },
														expires: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "sessionToken", "userId", "expires"],
												},
											},
											Post: {
												type: "array",
												items: {
													type: "object",
													properties: {
														id: { type: "string" },
														title: { type: "string" },
														content: {},
														published: { type: "boolean" },
														createdAt: { type: "string" },
														updatedAt: { type: "string" },
														authorId: { type: "string" },
													},
													additionalProperties: false,
													required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
												},
											},
											_count: {
												type: "object",
												properties: {
													accounts: { type: "integer" },
													sessions: { type: "integer" },
													Post: { type: "integer" },
													Todo: { type: "integer" },
												},
												additionalProperties: false,
												required: ["accounts", "sessions", "Post", "Todo"],
											},
										},
										additionalProperties: false,
										required: ["id", "createdAt", "updatedAt", "_count"],
									},
								},
								additionalProperties: false,
								required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId", "user"],
							},
						},
					},
					additionalProperties: false,
					required: ["db_findManyTodo"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindManyUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_UserWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserOrderByWithRelationInput" } },
				cursor: { $ref: "#/definitions/db_UserWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_UserScalarFieldEnum",
						enum: [
							"id",
							"name",
							"email",
							"emailVerified",
							"image",
							"createdAt",
							"updatedAt",
							"stripeCustomerId",
							"stripeSubscriptionId",
							"stripePriceId",
							"stripeCurrentPeriodEnd",
						],
					},
				},
				db_findManyUser_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findManyUser_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findManyUser_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findManyUser_accounts_take: { type: ["integer", "null"] },
				db_findManyUser_accounts_skip: { type: ["integer", "null"] },
				db_findManyUser_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findManyUser_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findManyUser_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findManyUser_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findManyUser_sessions_take: { type: ["integer", "null"] },
				db_findManyUser_sessions_skip: { type: ["integer", "null"] },
				db_findManyUser_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findManyUser_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findManyUser_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findManyUser_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findManyUser_Post_take: { type: ["integer", "null"] },
				db_findManyUser_Post_skip: { type: ["integer", "null"] },
				db_findManyUser_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findManyUser_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findManyUser_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findManyUser_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findManyUser_Todo_take: { type: ["integer", "null"] },
				db_findManyUser_Todo_skip: { type: ["integer", "null"] },
				db_findManyUser_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findManyUser: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									name: { type: "string" },
									email: { type: "string" },
									emailVerified: { type: "string" },
									image: { type: "string" },
									createdAt: { type: "string" },
									updatedAt: { type: "string" },
									stripeCustomerId: { type: "string" },
									stripeSubscriptionId: { type: "string" },
									stripePriceId: { type: "string" },
									stripeCurrentPeriodEnd: { type: "string" },
									accounts: {
										type: "array",
										items: {
											type: "object",
											properties: {
												id: { type: "string" },
												userId: { type: "string" },
												type: { type: "string" },
												provider: { type: "string" },
												providerAccountId: { type: "string" },
												refresh_token: { type: "string" },
												access_token: { type: "string" },
												expires_at: { type: "integer" },
												token_type: { type: "string" },
												scope: { type: "string" },
												id_token: { type: "string" },
												session_state: { type: "string" },
												createdAt: { type: "string" },
												updatedAt: { type: "string" },
											},
											additionalProperties: false,
											required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
										},
									},
									sessions: {
										type: "array",
										items: {
											type: "object",
											properties: {
												id: { type: "string" },
												sessionToken: { type: "string" },
												userId: { type: "string" },
												expires: { type: "string" },
											},
											additionalProperties: false,
											required: ["id", "sessionToken", "userId", "expires"],
										},
									},
									Post: {
										type: "array",
										items: {
											type: "object",
											properties: {
												id: { type: "string" },
												title: { type: "string" },
												content: {},
												published: { type: "boolean" },
												createdAt: { type: "string" },
												updatedAt: { type: "string" },
												authorId: { type: "string" },
											},
											additionalProperties: false,
											required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
										},
									},
									Todo: {
										type: "array",
										items: {
											type: "object",
											properties: {
												id: { type: "string" },
												text: { type: "string" },
												isCompleted: { type: "boolean" },
												createdAt: { type: "string" },
												updatedAt: { type: "string" },
												userId: { type: "string" },
											},
											additionalProperties: false,
											required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
										},
									},
									_count: {
										type: "object",
										properties: {
											accounts: { type: "integer" },
											sessions: { type: "integer" },
											Post: { type: "integer" },
											Todo: { type: "integer" },
										},
										additionalProperties: false,
										required: ["accounts", "sessions", "Post", "Todo"],
									},
								},
								additionalProperties: false,
								required: ["id", "createdAt", "updatedAt", "_count"],
							},
						},
					},
					additionalProperties: false,
					required: ["db_findManyUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindManyVerificationToken": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_VerificationTokenOrderByWithRelationInput" },
				},
				cursor: { $ref: "#/definitions/db_VerificationTokenWhereUniqueInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
				distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_VerificationTokenScalarFieldEnum",
						enum: ["identifier", "token", "expires"],
					},
				},
			},
			additionalProperties: false,
			definitions: {
				db_VerificationTokenWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_VerificationTokenWhereInput" } },
						NOT: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
						identifier: { $ref: "#/definitions/db_StringFilter" },
						token: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_VerificationTokenOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: { $ref: "#/definitions/db_VerificationTokenIdentifierTokenCompoundUniqueInput" },
					},
				},
				db_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findManyVerificationToken: {
							type: "array",
							items: {
								type: "object",
								properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
								additionalProperties: false,
								required: ["identifier", "token", "expires"],
							},
						},
					},
					additionalProperties: false,
					required: ["db_findManyVerificationToken"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindUniqueAccount": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findUniqueAccount_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findUniqueAccount_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findUniqueAccount_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findUniqueAccount_user_user_sessions_take: { type: ["integer", "null"] },
				db_findUniqueAccount_user_user_sessions_skip: { type: ["integer", "null"] },
				db_findUniqueAccount_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findUniqueAccount_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findUniqueAccount_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findUniqueAccount_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findUniqueAccount_user_user_Post_take: { type: ["integer", "null"] },
				db_findUniqueAccount_user_user_Post_skip: { type: ["integer", "null"] },
				db_findUniqueAccount_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findUniqueAccount_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findUniqueAccount_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findUniqueAccount_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findUniqueAccount_user_user_Todo_take: { type: ["integer", "null"] },
				db_findUniqueAccount_user_user_Todo_skip: { type: ["integer", "null"] },
				db_findUniqueAccount_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findUniqueAccount: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindUniqueAccountOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findUniqueAccountOrThrow_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findUniqueAccountOrThrow_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findUniqueAccountOrThrow_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findUniqueAccountOrThrow_user_user_sessions_take: { type: ["integer", "null"] },
				db_findUniqueAccountOrThrow_user_user_sessions_skip: { type: ["integer", "null"] },
				db_findUniqueAccountOrThrow_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findUniqueAccountOrThrow_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findUniqueAccountOrThrow_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findUniqueAccountOrThrow_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findUniqueAccountOrThrow_user_user_Post_take: { type: ["integer", "null"] },
				db_findUniqueAccountOrThrow_user_user_Post_skip: { type: ["integer", "null"] },
				db_findUniqueAccountOrThrow_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findUniqueAccountOrThrow_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findUniqueAccountOrThrow_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findUniqueAccountOrThrow_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findUniqueAccountOrThrow_user_user_Todo_take: { type: ["integer", "null"] },
				db_findUniqueAccountOrThrow_user_user_Todo_skip: { type: ["integer", "null"] },
				db_findUniqueAccountOrThrow_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findUniqueAccountOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindUniquePost": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findUniquePost_author_author_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findUniquePost_author_author_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findUniquePost_author_author_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findUniquePost_author_author_accounts_take: { type: ["integer", "null"] },
				db_findUniquePost_author_author_accounts_skip: { type: ["integer", "null"] },
				db_findUniquePost_author_author_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findUniquePost_author_author_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findUniquePost_author_author_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findUniquePost_author_author_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findUniquePost_author_author_sessions_take: { type: ["integer", "null"] },
				db_findUniquePost_author_author_sessions_skip: { type: ["integer", "null"] },
				db_findUniquePost_author_author_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findUniquePost_author_author_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findUniquePost_author_author_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findUniquePost_author_author_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findUniquePost_author_author_Todo_take: { type: ["integer", "null"] },
				db_findUniquePost_author_author_Todo_skip: { type: ["integer", "null"] },
				db_findUniquePost_author_author_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findUniquePost: {
							type: "object",
							properties: {
								id: { type: "string" },
								title: { type: "string" },
								content: {},
								published: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								authorId: { type: "string" },
								author: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "title", "published", "createdAt", "updatedAt", "authorId", "author"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindUniquePostOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findUniquePostOrThrow_author_author_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findUniquePostOrThrow_author_author_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findUniquePostOrThrow_author_author_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findUniquePostOrThrow_author_author_accounts_take: { type: ["integer", "null"] },
				db_findUniquePostOrThrow_author_author_accounts_skip: { type: ["integer", "null"] },
				db_findUniquePostOrThrow_author_author_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findUniquePostOrThrow_author_author_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findUniquePostOrThrow_author_author_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findUniquePostOrThrow_author_author_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findUniquePostOrThrow_author_author_sessions_take: { type: ["integer", "null"] },
				db_findUniquePostOrThrow_author_author_sessions_skip: { type: ["integer", "null"] },
				db_findUniquePostOrThrow_author_author_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findUniquePostOrThrow_author_author_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findUniquePostOrThrow_author_author_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findUniquePostOrThrow_author_author_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findUniquePostOrThrow_author_author_Todo_take: { type: ["integer", "null"] },
				db_findUniquePostOrThrow_author_author_Todo_skip: { type: ["integer", "null"] },
				db_findUniquePostOrThrow_author_author_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findUniquePostOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								title: { type: "string" },
								content: {},
								published: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								authorId: { type: "string" },
								author: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "title", "published", "createdAt", "updatedAt", "authorId", "author"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindUniqueSession": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findUniqueSession_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findUniqueSession_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findUniqueSession_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findUniqueSession_user_user_accounts_take: { type: ["integer", "null"] },
				db_findUniqueSession_user_user_accounts_skip: { type: ["integer", "null"] },
				db_findUniqueSession_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findUniqueSession_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findUniqueSession_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findUniqueSession_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findUniqueSession_user_user_Post_take: { type: ["integer", "null"] },
				db_findUniqueSession_user_user_Post_skip: { type: ["integer", "null"] },
				db_findUniqueSession_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findUniqueSession_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findUniqueSession_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findUniqueSession_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findUniqueSession_user_user_Todo_take: { type: ["integer", "null"] },
				db_findUniqueSession_user_user_Todo_skip: { type: ["integer", "null"] },
				db_findUniqueSession_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findUniqueSession: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindUniqueSessionOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findUniqueSessionOrThrow_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findUniqueSessionOrThrow_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findUniqueSessionOrThrow_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findUniqueSessionOrThrow_user_user_accounts_take: { type: ["integer", "null"] },
				db_findUniqueSessionOrThrow_user_user_accounts_skip: { type: ["integer", "null"] },
				db_findUniqueSessionOrThrow_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findUniqueSessionOrThrow_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findUniqueSessionOrThrow_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findUniqueSessionOrThrow_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findUniqueSessionOrThrow_user_user_Post_take: { type: ["integer", "null"] },
				db_findUniqueSessionOrThrow_user_user_Post_skip: { type: ["integer", "null"] },
				db_findUniqueSessionOrThrow_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findUniqueSessionOrThrow_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findUniqueSessionOrThrow_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findUniqueSessionOrThrow_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findUniqueSessionOrThrow_user_user_Todo_take: { type: ["integer", "null"] },
				db_findUniqueSessionOrThrow_user_user_Todo_skip: { type: ["integer", "null"] },
				db_findUniqueSessionOrThrow_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findUniqueSessionOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindUniqueTodo": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findUniqueTodo_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findUniqueTodo_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findUniqueTodo_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findUniqueTodo_user_user_accounts_take: { type: ["integer", "null"] },
				db_findUniqueTodo_user_user_accounts_skip: { type: ["integer", "null"] },
				db_findUniqueTodo_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findUniqueTodo_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findUniqueTodo_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findUniqueTodo_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findUniqueTodo_user_user_sessions_take: { type: ["integer", "null"] },
				db_findUniqueTodo_user_user_sessions_skip: { type: ["integer", "null"] },
				db_findUniqueTodo_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findUniqueTodo_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findUniqueTodo_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findUniqueTodo_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findUniqueTodo_user_user_Post_take: { type: ["integer", "null"] },
				db_findUniqueTodo_user_user_Post_skip: { type: ["integer", "null"] },
				db_findUniqueTodo_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findUniqueTodo: {
							type: "object",
							properties: {
								id: { type: "string" },
								text: { type: "string" },
								isCompleted: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindUniqueTodoOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findUniqueTodoOrThrow_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findUniqueTodoOrThrow_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findUniqueTodoOrThrow_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findUniqueTodoOrThrow_user_user_accounts_take: { type: ["integer", "null"] },
				db_findUniqueTodoOrThrow_user_user_accounts_skip: { type: ["integer", "null"] },
				db_findUniqueTodoOrThrow_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findUniqueTodoOrThrow_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findUniqueTodoOrThrow_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findUniqueTodoOrThrow_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findUniqueTodoOrThrow_user_user_sessions_take: { type: ["integer", "null"] },
				db_findUniqueTodoOrThrow_user_user_sessions_skip: { type: ["integer", "null"] },
				db_findUniqueTodoOrThrow_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findUniqueTodoOrThrow_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findUniqueTodoOrThrow_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findUniqueTodoOrThrow_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findUniqueTodoOrThrow_user_user_Post_take: { type: ["integer", "null"] },
				db_findUniqueTodoOrThrow_user_user_Post_skip: { type: ["integer", "null"] },
				db_findUniqueTodoOrThrow_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findUniqueTodoOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								text: { type: "string" },
								isCompleted: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindUniqueUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
				db_findUniqueUser_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findUniqueUser_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findUniqueUser_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findUniqueUser_accounts_take: { type: ["integer", "null"] },
				db_findUniqueUser_accounts_skip: { type: ["integer", "null"] },
				db_findUniqueUser_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findUniqueUser_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findUniqueUser_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findUniqueUser_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findUniqueUser_sessions_take: { type: ["integer", "null"] },
				db_findUniqueUser_sessions_skip: { type: ["integer", "null"] },
				db_findUniqueUser_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findUniqueUser_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findUniqueUser_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findUniqueUser_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findUniqueUser_Post_take: { type: ["integer", "null"] },
				db_findUniqueUser_Post_skip: { type: ["integer", "null"] },
				db_findUniqueUser_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findUniqueUser_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findUniqueUser_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findUniqueUser_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findUniqueUser_Todo_take: { type: ["integer", "null"] },
				db_findUniqueUser_Todo_skip: { type: ["integer", "null"] },
				db_findUniqueUser_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findUniqueUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								Post: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											title: { type: "string" },
											content: {},
											published: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											authorId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
									},
								},
								Todo: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											text: { type: "string" },
											isCompleted: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
									},
								},
								_count: {
									type: "object",
									properties: {
										accounts: { type: "integer" },
										sessions: { type: "integer" },
										Post: { type: "integer" },
										Todo: { type: "integer" },
									},
									additionalProperties: false,
									required: ["accounts", "sessions", "Post", "Todo"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindUniqueUserOrThrow": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
				db_findUniqueUserOrThrow_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_findUniqueUserOrThrow_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_findUniqueUserOrThrow_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_findUniqueUserOrThrow_accounts_take: { type: ["integer", "null"] },
				db_findUniqueUserOrThrow_accounts_skip: { type: ["integer", "null"] },
				db_findUniqueUserOrThrow_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_findUniqueUserOrThrow_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_findUniqueUserOrThrow_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_findUniqueUserOrThrow_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_findUniqueUserOrThrow_sessions_take: { type: ["integer", "null"] },
				db_findUniqueUserOrThrow_sessions_skip: { type: ["integer", "null"] },
				db_findUniqueUserOrThrow_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_findUniqueUserOrThrow_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_findUniqueUserOrThrow_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_findUniqueUserOrThrow_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_findUniqueUserOrThrow_Post_take: { type: ["integer", "null"] },
				db_findUniqueUserOrThrow_Post_skip: { type: ["integer", "null"] },
				db_findUniqueUserOrThrow_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_findUniqueUserOrThrow_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_findUniqueUserOrThrow_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_findUniqueUserOrThrow_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_findUniqueUserOrThrow_Todo_take: { type: ["integer", "null"] },
				db_findUniqueUserOrThrow_Todo_skip: { type: ["integer", "null"] },
				db_findUniqueUserOrThrow_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findUniqueUserOrThrow: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								Post: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											title: { type: "string" },
											content: {},
											published: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											authorId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
									},
								},
								Todo: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											text: { type: "string" },
											isCompleted: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
									},
								},
								_count: {
									type: "object",
									properties: {
										accounts: { type: "integer" },
										sessions: { type: "integer" },
										Post: { type: "integer" },
										Todo: { type: "integer" },
									},
									additionalProperties: false,
									required: ["accounts", "sessions", "Post", "Todo"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindUniqueVerificationToken": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/db_VerificationTokenWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: { $ref: "#/definitions/db_VerificationTokenIdentifierTokenCompoundUniqueInput" },
					},
				},
				db_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findUniqueVerificationToken: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/FindUniqueVerificationTokenOrThrow": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/db_VerificationTokenWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: { $ref: "#/definitions/db_VerificationTokenIdentifierTokenCompoundUniqueInput" },
					},
				},
				db_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findUniqueVerificationTokenOrThrow: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/GroupByAccount": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_AccountWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountOrderByWithAggregationInput" } },
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				having: { $ref: "#/definitions/db_AccountScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						_count: { $ref: "#/definitions/db_AccountCountOrderByAggregateInput" },
						_avg: { $ref: "#/definitions/db_AccountAvgOrderByAggregateInput" },
						_max: { $ref: "#/definitions/db_AccountMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/db_AccountMinOrderByAggregateInput" },
						_sum: { $ref: "#/definitions/db_AccountSumOrderByAggregateInput" },
					},
				},
				db_AccountCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountAvgOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountSumOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountScalarWhereWithAggregatesInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountScalarWhereWithAggregatesInput" } },
						NOT: { $ref: "#/definitions/db_AccountScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
						userId: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
						type: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
						provider: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableWithAggregatesFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableWithAggregatesFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableWithAggregatesFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableWithAggregatesFilter" },
						scope: { $ref: "#/definitions/db_StringNullableWithAggregatesFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableWithAggregatesFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableWithAggregatesFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeWithAggregatesFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeWithAggregatesFilter" },
					},
				},
				db_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedStringFilter" },
						_max: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedStringFilter" },
						_max: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntFilter" },
					},
				},
				db_StringNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/db_NestedStringNullableFilter" },
						_max: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/db_NestedStringNullableFilter" },
						_max: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntNullableFilter" },
						_avg: { $ref: "#/definitions/db_NestedFloatNullableFilter" },
						_sum: { $ref: "#/definitions/db_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/db_NestedIntNullableFilter" },
						_max: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntNullableFilter" },
						_avg: { $ref: "#/definitions/db_NestedFloatNullableFilter" },
						_sum: { $ref: "#/definitions/db_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/db_NestedIntNullableFilter" },
						_max: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedFloatNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["number", "null"] },
						in: { type: ["array", "null"], items: { type: ["number", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["number", "null"] } },
						lt: { type: ["number", "null"] },
						lte: { type: ["number", "null"] },
						gt: { type: ["number", "null"] },
						gte: { type: ["number", "null"] },
						not: { $ref: "#/definitions/db_NestedFloatNullableFilter" },
					},
				},
				db_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_groupByAccount: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									userId: { type: "string" },
									type: { type: "string" },
									provider: { type: "string" },
									providerAccountId: { type: "string" },
									refresh_token: { type: "string" },
									access_token: { type: "string" },
									expires_at: { type: "integer" },
									token_type: { type: "string" },
									scope: { type: "string" },
									id_token: { type: "string" },
									session_state: { type: "string" },
									createdAt: { type: "string" },
									updatedAt: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											userId: { type: "integer" },
											type: { type: "integer" },
											provider: { type: "integer" },
											providerAccountId: { type: "integer" },
											refresh_token: { type: "integer" },
											access_token: { type: "integer" },
											expires_at: { type: "integer" },
											token_type: { type: "integer" },
											scope: { type: "integer" },
											id_token: { type: "integer" },
											session_state: { type: "integer" },
											createdAt: { type: "integer" },
											updatedAt: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: [
											"id",
											"userId",
											"type",
											"provider",
											"providerAccountId",
											"refresh_token",
											"access_token",
											"expires_at",
											"token_type",
											"scope",
											"id_token",
											"session_state",
											"createdAt",
											"updatedAt",
											"_all",
										],
									},
									_avg: { type: "object", properties: { expires_at: { type: "number" } }, additionalProperties: false },
									_sum: {
										type: "object",
										properties: { expires_at: { type: "integer" } },
										additionalProperties: false,
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
							},
						},
					},
					additionalProperties: false,
					required: ["db_groupByAccount"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/GroupByPost": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_PostWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostOrderByWithAggregationInput" } },
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				having: { $ref: "#/definitions/db_PostScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						_count: { $ref: "#/definitions/db_PostCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/db_PostMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/db_PostMinOrderByAggregateInput" },
					},
				},
				db_PostCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostScalarWhereWithAggregatesInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostScalarWhereWithAggregatesInput" } },
						NOT: { $ref: "#/definitions/db_PostScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
						title: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
						content: { $ref: "#/definitions/db_JsonNullableWithAggregatesFilter" },
						published: { $ref: "#/definitions/db_BoolWithAggregatesFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeWithAggregatesFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeWithAggregatesFilter" },
						authorId: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
					},
				},
				db_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedStringFilter" },
						_max: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedStringFilter" },
						_max: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntFilter" },
					},
				},
				db_JsonNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
						_count: { $ref: "#/definitions/db_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/db_NestedJsonNullableFilter" },
						_max: { $ref: "#/definitions/db_NestedJsonNullableFilter" },
					},
				},
				db_NestedJsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["boolean", "null"] },
						not: { $ref: "#/definitions/db_NestedBoolWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedBoolFilter" },
						_max: { $ref: "#/definitions/db_NestedBoolFilter" },
					},
				},
				db_NestedBoolWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["boolean", "null"] },
						not: { $ref: "#/definitions/db_NestedBoolWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedBoolFilter" },
						_max: { $ref: "#/definitions/db_NestedBoolFilter" },
					},
				},
				db_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_groupByPost: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									title: { type: "string" },
									content: {},
									published: { type: "boolean" },
									createdAt: { type: "string" },
									updatedAt: { type: "string" },
									authorId: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											title: { type: "integer" },
											content: { type: "integer" },
											published: { type: "integer" },
											createdAt: { type: "integer" },
											updatedAt: { type: "integer" },
											authorId: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											title: { type: "string" },
											published: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											authorId: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											title: { type: "string" },
											published: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											authorId: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
							},
						},
					},
					additionalProperties: false,
					required: ["db_groupByPost"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/GroupBySession": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_SessionWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionOrderByWithAggregationInput" } },
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				having: { $ref: "#/definitions/db_SessionScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_SessionOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						_count: { $ref: "#/definitions/db_SessionCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/db_SessionMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/db_SessionMinOrderByAggregateInput" },
					},
				},
				db_SessionCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionScalarWhereWithAggregatesInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionScalarWhereWithAggregatesInput" } },
						NOT: { $ref: "#/definitions/db_SessionScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
						sessionToken: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
						userId: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
						expires: { $ref: "#/definitions/db_DateTimeWithAggregatesFilter" },
					},
				},
				db_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedStringFilter" },
						_max: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedStringFilter" },
						_max: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntFilter" },
					},
				},
				db_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_groupBySession: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									sessionToken: { type: "string" },
									userId: { type: "string" },
									expires: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											sessionToken: { type: "integer" },
											userId: { type: "integer" },
											expires: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "sessionToken", "userId", "expires"],
							},
						},
					},
					additionalProperties: false,
					required: ["db_groupBySession"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/GroupByTodo": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_TodoWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoOrderByWithAggregationInput" } },
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
				having: { $ref: "#/definitions/db_TodoScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						_count: { $ref: "#/definitions/db_TodoCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/db_TodoMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/db_TodoMinOrderByAggregateInput" },
					},
				},
				db_TodoCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoScalarWhereWithAggregatesInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoScalarWhereWithAggregatesInput" } },
						NOT: { $ref: "#/definitions/db_TodoScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
						text: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolWithAggregatesFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeWithAggregatesFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeWithAggregatesFilter" },
						userId: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
					},
				},
				db_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedStringFilter" },
						_max: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedStringFilter" },
						_max: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntFilter" },
					},
				},
				db_BoolWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["boolean", "null"] },
						not: { $ref: "#/definitions/db_NestedBoolWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedBoolFilter" },
						_max: { $ref: "#/definitions/db_NestedBoolFilter" },
					},
				},
				db_NestedBoolWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["boolean", "null"] },
						not: { $ref: "#/definitions/db_NestedBoolWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedBoolFilter" },
						_max: { $ref: "#/definitions/db_NestedBoolFilter" },
					},
				},
				db_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_groupByTodo: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									text: { type: "string" },
									isCompleted: { type: "boolean" },
									createdAt: { type: "string" },
									updatedAt: { type: "string" },
									userId: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											text: { type: "integer" },
											isCompleted: { type: "integer" },
											createdAt: { type: "integer" },
											updatedAt: { type: "integer" },
											userId: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											text: { type: "string" },
											isCompleted: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											text: { type: "string" },
											isCompleted: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
							},
						},
					},
					additionalProperties: false,
					required: ["db_groupByTodo"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/GroupByUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_UserWhereInput" },
				orderBy: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserOrderByWithAggregationInput" } },
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_UserScalarFieldEnum",
						enum: [
							"id",
							"name",
							"email",
							"emailVerified",
							"image",
							"createdAt",
							"updatedAt",
							"stripeCustomerId",
							"stripeSubscriptionId",
							"stripePriceId",
							"stripeCurrentPeriodEnd",
						],
					},
				},
				having: { $ref: "#/definitions/db_UserScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_UserOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						_count: { $ref: "#/definitions/db_UserCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/db_UserMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/db_UserMinOrderByAggregateInput" },
					},
				},
				db_UserCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				db_UserMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				db_UserMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
					},
				},
				db_UserScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserScalarWhereWithAggregatesInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserScalarWhereWithAggregatesInput" } },
						NOT: { $ref: "#/definitions/db_UserScalarWhereWithAggregatesInput" },
						id: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
						name: { $ref: "#/definitions/db_StringNullableWithAggregatesFilter" },
						email: { $ref: "#/definitions/db_StringNullableWithAggregatesFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableWithAggregatesFilter" },
						image: { $ref: "#/definitions/db_StringNullableWithAggregatesFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeWithAggregatesFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeWithAggregatesFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableWithAggregatesFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableWithAggregatesFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableWithAggregatesFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableWithAggregatesFilter" },
					},
				},
				db_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedStringFilter" },
						_max: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedStringFilter" },
						_max: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntFilter" },
					},
				},
				db_StringNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/db_NestedStringNullableFilter" },
						_max: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/db_NestedStringNullableFilter" },
						_max: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
						_max: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntNullableFilter" },
						_min: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
						_max: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_groupByUser: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									name: { type: "string" },
									email: { type: "string" },
									emailVerified: { type: "string" },
									image: { type: "string" },
									createdAt: { type: "string" },
									updatedAt: { type: "string" },
									stripeCustomerId: { type: "string" },
									stripeSubscriptionId: { type: "string" },
									stripePriceId: { type: "string" },
									stripeCurrentPeriodEnd: { type: "string" },
									_count: {
										type: "object",
										properties: {
											id: { type: "integer" },
											name: { type: "integer" },
											email: { type: "integer" },
											emailVerified: { type: "integer" },
											image: { type: "integer" },
											createdAt: { type: "integer" },
											updatedAt: { type: "integer" },
											stripeCustomerId: { type: "integer" },
											stripeSubscriptionId: { type: "integer" },
											stripePriceId: { type: "integer" },
											stripeCurrentPeriodEnd: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: [
											"id",
											"name",
											"email",
											"emailVerified",
											"image",
											"createdAt",
											"updatedAt",
											"stripeCustomerId",
											"stripeSubscriptionId",
											"stripePriceId",
											"stripeCurrentPeriodEnd",
											"_all",
										],
									},
									_min: {
										type: "object",
										properties: {
											id: { type: "string" },
											name: { type: "string" },
											email: { type: "string" },
											emailVerified: { type: "string" },
											image: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											stripeCustomerId: { type: "string" },
											stripeSubscriptionId: { type: "string" },
											stripePriceId: { type: "string" },
											stripeCurrentPeriodEnd: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											id: { type: "string" },
											name: { type: "string" },
											email: { type: "string" },
											emailVerified: { type: "string" },
											image: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											stripeCustomerId: { type: "string" },
											stripeSubscriptionId: { type: "string" },
											stripePriceId: { type: "string" },
											stripeCurrentPeriodEnd: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["id", "createdAt", "updatedAt"],
							},
						},
					},
					additionalProperties: false,
					required: ["db_groupByUser"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/GroupByVerificationToken": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
				orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_VerificationTokenOrderByWithAggregationInput" },
				},
				by: {
					type: "array",
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_VerificationTokenScalarFieldEnum",
						enum: ["identifier", "token", "expires"],
					},
				},
				having: { $ref: "#/definitions/db_VerificationTokenScalarWhereWithAggregatesInput" },
				take: { type: ["integer", "null"] },
				skip: { type: ["integer", "null"] },
			},
			additionalProperties: false,
			definitions: {
				db_VerificationTokenWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_VerificationTokenWhereInput" } },
						NOT: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
						identifier: { $ref: "#/definitions/db_StringFilter" },
						token: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_VerificationTokenOrderByWithAggregationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						_count: { $ref: "#/definitions/db_VerificationTokenCountOrderByAggregateInput" },
						_max: { $ref: "#/definitions/db_VerificationTokenMaxOrderByAggregateInput" },
						_min: { $ref: "#/definitions/db_VerificationTokenMinOrderByAggregateInput" },
					},
				},
				db_VerificationTokenCountOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_VerificationTokenMaxOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_VerificationTokenMinOrderByAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						identifier: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_VerificationTokenScalarWhereWithAggregatesInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_VerificationTokenScalarWhereWithAggregatesInput" },
						OR: {
							type: ["array", "null"],
							items: { $ref: "#/definitions/db_VerificationTokenScalarWhereWithAggregatesInput" },
						},
						NOT: { $ref: "#/definitions/db_VerificationTokenScalarWhereWithAggregatesInput" },
						identifier: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
						token: { $ref: "#/definitions/db_StringWithAggregatesFilter" },
						expires: { $ref: "#/definitions/db_DateTimeWithAggregatesFilter" },
					},
				},
				db_StringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedStringFilter" },
						_max: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedStringFilter" },
						_max: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedIntFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntFilter" },
					},
				},
				db_DateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeWithAggregatesFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeWithAggregatesFilter" },
						_count: { $ref: "#/definitions/db_NestedIntFilter" },
						_min: { $ref: "#/definitions/db_NestedDateTimeFilter" },
						_max: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
			},
			required: ["by"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_groupByVerificationToken: {
							type: "array",
							items: {
								type: "object",
								properties: {
									identifier: { type: "string" },
									token: { type: "string" },
									expires: { type: "string" },
									_count: {
										type: "object",
										properties: {
											identifier: { type: "integer" },
											token: { type: "integer" },
											expires: { type: "integer" },
											_all: { type: "integer" },
										},
										additionalProperties: false,
										required: ["identifier", "token", "expires", "_all"],
									},
									_min: {
										type: "object",
										properties: {
											identifier: { type: "string" },
											token: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
									},
									_max: {
										type: "object",
										properties: {
											identifier: { type: "string" },
											token: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
								required: ["identifier", "token", "expires"],
							},
						},
					},
					additionalProperties: false,
					required: ["db_groupByVerificationToken"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/QueryRaw": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_queryRaw: {
							type: "array",
							items: {
								type: "object",
								properties: {
									ID: { type: "string" },
									Int: { type: "integer" },
									Float: { type: "number" },
									String: { type: "string" },
									Boolean: { type: "boolean" },
									DateTime: { type: "string" },
									JSON: {},
									Object: {
										type: "object",
										properties: {
											ID: { type: "string" },
											Int: { type: "integer" },
											Float: { type: "number" },
											String: { type: "string" },
											Boolean: { type: "boolean" },
											DateTime: { type: "string" },
											JSON: {},
											OptionalID: { type: "string" },
											OptionalInt: { type: "integer" },
											OptionalFloat: { type: "number" },
											OptionalString: { type: "string" },
											OptionalBoolean: { type: "boolean" },
											OptionalDateTime: { type: "string" },
											OptionalJSON: {},
										},
										additionalProperties: false,
										required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
									},
									Array: {
										type: "array",
										items: {
											type: "object",
											properties: {
												ID: { type: "string" },
												Int: { type: "integer" },
												Float: { type: "number" },
												String: { type: "string" },
												Boolean: { type: "boolean" },
												DateTime: { type: "string" },
												JSON: {},
												OptionalID: { type: "string" },
												OptionalInt: { type: "integer" },
												OptionalFloat: { type: "number" },
												OptionalString: { type: "string" },
												OptionalBoolean: { type: "boolean" },
												OptionalDateTime: { type: "string" },
												OptionalJSON: {},
											},
											additionalProperties: false,
											required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
										},
									},
									OptionalID: { type: "string" },
									OptionalInt: { type: "integer" },
									OptionalFloat: { type: "number" },
									OptionalString: { type: "string" },
									OptionalBoolean: { type: "boolean" },
									OptionalDateTime: { type: "string" },
									OptionalJSON: {},
									OptionalObject: {
										type: "object",
										properties: {
											ID: { type: "string" },
											Int: { type: "integer" },
											Float: { type: "number" },
											String: { type: "string" },
											Boolean: { type: "boolean" },
											DateTime: { type: "string" },
											JSON: {},
											OptionalID: { type: "string" },
											OptionalInt: { type: "integer" },
											OptionalFloat: { type: "number" },
											OptionalString: { type: "string" },
											OptionalBoolean: { type: "boolean" },
											OptionalDateTime: { type: "string" },
											OptionalJSON: {},
										},
										additionalProperties: false,
										required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
									},
									OptionalArray: {
										type: "array",
										items: {
											type: "object",
											properties: {
												ID: { type: "string" },
												Int: { type: "integer" },
												Float: { type: "number" },
												String: { type: "string" },
												Boolean: { type: "boolean" },
												DateTime: { type: "string" },
												JSON: {},
												OptionalID: { type: "string" },
												OptionalInt: { type: "integer" },
												OptionalFloat: { type: "number" },
												OptionalString: { type: "string" },
												OptionalBoolean: { type: "boolean" },
												OptionalDateTime: { type: "string" },
												OptionalJSON: {},
											},
											additionalProperties: false,
											required: ["ID", "Int", "Float", "String", "Boolean", "DateTime", "JSON"],
										},
									},
								},
								additionalProperties: false,
								required: [
									"ID",
									"Int",
									"Float",
									"String",
									"Boolean",
									"DateTime",
									"JSON",
									"Object",
									"Array",
									"OptionalArray",
								],
							},
						},
					},
					additionalProperties: false,
					required: ["db_queryRaw"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"db/QueryRawJSON": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: { data: { type: "object", properties: { db_queryRawJSON: {} }, additionalProperties: false } },
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"todos/getAllTodosForCurrentUser": {
		input: {
			type: "object",
			properties: { userId: { type: "string" } },
			additionalProperties: false,
			required: ["userId"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_findManyTodo: {
							type: "array",
							items: {
								type: "object",
								properties: { id: { type: "string" }, text: { type: "string" }, isCompleted: { type: "boolean" } },
								additionalProperties: false,
								required: ["id", "text", "isCompleted"],
							},
						},
					},
					additionalProperties: false,
					required: ["db_findManyTodo"],
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"weather/GetCityById": {
		input: {
			type: "object",
			properties: {
				config: { $ref: "#/definitions/weather_ConfigInput" },
				id: { type: ["array", "null"], items: { type: "string" } },
			},
			additionalProperties: false,
			definitions: {
				weather_ConfigInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						lang: {
							type: ["string", "null"],
							"x-graphql-enum-name": "weather_Language",
							enum: [
								"af",
								"al",
								"ar",
								"az",
								"bg",
								"ca",
								"cz",
								"da",
								"de",
								"el",
								"en",
								"es",
								"eu",
								"fa",
								"fi",
								"fr",
								"gl",
								"he",
								"hi",
								"hr",
								"hu",
								"id",
								"it",
								"ja",
								"kr",
								"la",
								"lt",
								"mk",
								"nl",
								"no",
								"pl",
								"pt",
								"pt_br",
								"ro",
								"ru",
								"se",
								"sk",
								"sl",
								"sp",
								"sr",
								"sv",
								"th",
								"tr",
								"ua",
								"uk",
								"vi",
								"zh_cn",
								"zh_tw",
								"zu",
							],
						},
						units: {
							type: ["string", "null"],
							"x-graphql-enum-name": "weather_Unit",
							enum: ["imperial", "kelvin", "metric"],
						},
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						weather_getCityById: {
							type: "array",
							items: {
								type: "object",
								properties: {
									coord: {
										type: "object",
										properties: { lat: { type: "number" }, lon: { type: "number" } },
										additionalProperties: false,
									},
									country: { type: "string" },
									id: { type: "string" },
									name: { type: "string" },
									weather: {
										type: "object",
										properties: {
											clouds: {
												type: "object",
												properties: {
													all: { type: "integer" },
													humidity: { type: "integer" },
													visibility: { type: "integer" },
												},
												additionalProperties: false,
											},
											summary: {
												type: "object",
												properties: {
													description: { type: "string" },
													icon: { type: "string" },
													title: { type: "string" },
												},
												additionalProperties: false,
											},
											temperature: {
												type: "object",
												properties: {
													actual: { type: "number" },
													feelsLike: { type: "number" },
													max: { type: "number" },
													min: { type: "number" },
												},
												additionalProperties: false,
											},
											timestamp: { type: "integer" },
											wind: {
												type: "object",
												properties: { deg: { type: "integer" }, speed: { type: "number" } },
												additionalProperties: false,
											},
										},
										additionalProperties: false,
									},
								},
								additionalProperties: false,
							},
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"weather/GetCityByName": {
		input: {
			type: "object",
			properties: {
				config: { $ref: "#/definitions/weather_ConfigInput" },
				country: { type: ["string", "null"] },
				name: { type: "string" },
			},
			additionalProperties: false,
			definitions: {
				weather_ConfigInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						lang: {
							type: ["string", "null"],
							"x-graphql-enum-name": "weather_Language",
							enum: [
								"af",
								"al",
								"ar",
								"az",
								"bg",
								"ca",
								"cz",
								"da",
								"de",
								"el",
								"en",
								"es",
								"eu",
								"fa",
								"fi",
								"fr",
								"gl",
								"he",
								"hi",
								"hr",
								"hu",
								"id",
								"it",
								"ja",
								"kr",
								"la",
								"lt",
								"mk",
								"nl",
								"no",
								"pl",
								"pt",
								"pt_br",
								"ro",
								"ru",
								"se",
								"sk",
								"sl",
								"sp",
								"sr",
								"sv",
								"th",
								"tr",
								"ua",
								"uk",
								"vi",
								"zh_cn",
								"zh_tw",
								"zu",
							],
						},
						units: {
							type: ["string", "null"],
							"x-graphql-enum-name": "weather_Unit",
							enum: ["imperial", "kelvin", "metric"],
						},
					},
				},
			},
			required: ["name"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						weather_getCityByName: {
							type: "object",
							properties: {
								coord: {
									type: "object",
									properties: { lat: { type: "number" }, lon: { type: "number" } },
									additionalProperties: false,
								},
								country: { type: "string" },
								id: { type: "string" },
								name: { type: "string" },
								weather: {
									type: "object",
									properties: {
										clouds: {
											type: "object",
											properties: {
												all: { type: "integer" },
												humidity: { type: "integer" },
												visibility: { type: "integer" },
											},
											additionalProperties: false,
										},
										summary: {
											type: "object",
											properties: {
												description: { type: "string" },
												icon: { type: "string" },
												title: { type: "string" },
											},
											additionalProperties: false,
										},
										temperature: {
											type: "object",
											properties: {
												actual: { type: "number" },
												feelsLike: { type: "number" },
												max: { type: "number" },
												min: { type: "number" },
											},
											additionalProperties: false,
										},
										timestamp: { type: "integer" },
										wind: {
											type: "object",
											properties: { deg: { type: "integer" }, speed: { type: "number" } },
											additionalProperties: false,
										},
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"openai/extract-website-metadata": {
		input: {
			type: "object",
			properties: { url: { type: "string" } },
			required: ["url"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: {
			type: "object",
			properties: {
				title: { type: "string" },
				h1: { type: "string" },
				summary: { type: "string" },
				description: { type: "string" },
				links: { type: "array", items: { type: "string" } },
			},
			required: ["description", "h1", "links", "summary", "title"],
		},
		operationType: "QUERY",
		description: "Load metadata like title, description, social media images, headlines, and summary from a website",
	},
	"openai/load-url": {
		input: {
			type: "object",
			properties: { url: { type: "string" } },
			required: ["url"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: { type: "object", properties: { content: { type: "string" } }, required: ["content"] },
		operationType: "QUERY",
		description: "Load the content of a url",
	},
	"openai/summarize-url-content": {
		input: {
			type: "object",
			properties: { url: { type: "string" } },
			required: ["url"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: { type: "object", properties: { summary: { type: "string" } }, required: ["summary"] },
		operationType: "QUERY",
		description: "Summarize the content of a URL",
	},
	"openai/summary": {
		input: {
			type: "object",
			properties: { url: { type: "string" } },
			required: ["url"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: { type: "object", properties: { summary: { type: "string" } }, required: ["summary"] },
		operationType: "QUERY",
		description: "Summarize the content of a URL",
	},
	"openai/weather": {
		input: {
			type: "object",
			properties: { country: { type: "string" } },
			required: ["country"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: {
			type: "object",
			properties: {
				structuredOutput: { $ref: "#/definitions/{country:string;city:string;temperature:number;}" },
				messages: { type: "array", items: { $ref: "#/definitions/ChatCompletionRequestMessage" } },
			},
			required: ["messages", "structuredOutput"],
			definitions: {
				"{country:string;city:string;temperature:number;}": {
					type: "object",
					properties: { country: { type: "string" }, city: { type: "string" }, temperature: { type: "number" } },
					required: ["city", "country", "temperature"],
				},
				ChatCompletionRequestMessage: {
					type: "object",
					properties: {
						role: {
							description: "The role of the messages author. One of `system`, `user`, `assistant`, or `function`.",
							type: "{string}",
						},
						content: {
							description:
								"The contents of the message. `content` is required for all messages except assistant messages with function calls.",
							type: "{string}",
						},
						name: {
							description:
								"The name of the author of this message. `name` is required if role is `function`, and it should be the name of the function whose response is in the `content`. May contain a-z, A-Z, 0-9, and underscores, with a maximum length of 64 characters.",
							type: "{string}",
						},
						function_call: { type: "{ChatCompletionRequestMessageFunctionCall}" },
					},
					required: ["role"],
				},
			},
		},
		operationType: "QUERY",
		description: "This operation returns the weather of the capital of the given country",
	},
	"users/get": {
		input: {
			type: "object",
			properties: { id: { type: "string" } },
			required: ["id"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: {
			type: "object",
			properties: {
				id: { type: "string" },
				name: { type: "string", default: "Jens" },
				bio: { type: "string", default: "Founder of WunderGraph" },
			},
			required: ["bio", "id", "name"],
		},
		operationType: "QUERY",
		description: "generated/bundle/operations/users/get",
	},
	"db/CreateManyAccount": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/db_AccountCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_AccountCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						userId: { type: "string" },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_createManyAccount: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/CreateManyPost": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/db_PostCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_PostCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						authorId: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_createManyPost: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/CreateManySession": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/db_SessionCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_SessionCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						userId: { type: "string" },
						expires: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_createManySession: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/CreateManyTodo": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/db_TodoCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_TodoCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						userId: { type: "string" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_createManyTodo: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/CreateManyUser": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/db_UserCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_UserCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_createManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/CreateManyVerificationToken": {
		input: {
			type: "object",
			properties: {
				data: { type: "array", items: { $ref: "#/definitions/db_VerificationTokenCreateManyInput" } },
				skipDuplicates: { type: ["boolean", "null"] },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_VerificationTokenCreateManyInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_createManyVerificationToken: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/CreateOneAccount": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_AccountCreateInput" },
				db_createOneAccount_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_createOneAccount_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_createOneAccount_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_createOneAccount_user_user_sessions_take: { type: ["integer", "null"] },
				db_createOneAccount_user_user_sessions_skip: { type: ["integer", "null"] },
				db_createOneAccount_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_createOneAccount_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_createOneAccount_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_createOneAccount_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_createOneAccount_user_user_Post_take: { type: ["integer", "null"] },
				db_createOneAccount_user_user_Post_skip: { type: ["integer", "null"] },
				db_createOneAccount_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_createOneAccount_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_createOneAccount_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_createOneAccount_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_createOneAccount_user_user_Todo_take: { type: ["integer", "null"] },
				db_createOneAccount_user_user_Todo_skip: { type: ["integer", "null"] },
				db_createOneAccount_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_AccountCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						user: { $ref: "#/definitions/db_UserCreateNestedOneWithoutAccountsInput" },
					},
					required: ["type", "provider", "providerAccountId", "user"],
				},
				db_UserCreateNestedOneWithoutAccountsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutAccountsInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutAccountsInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
					},
				},
				db_UserCreateWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						sessions: { $ref: "#/definitions/db_SessionCreateNestedManyWithoutUserInput" },
						Post: { $ref: "#/definitions/db_PostCreateNestedManyWithoutAuthorInput" },
						Todo: { $ref: "#/definitions/db_TodoCreateNestedManyWithoutUserInput" },
					},
				},
				db_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
					},
				},
				db_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				db_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				db_PostCreateNestedManyWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
					},
				},
				db_PostCreateWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_PostCreateOrConnectWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_PostCreateManyAuthorInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_PostCreateManyAuthorInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_PostCreateManyAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["title"],
				},
				db_TodoCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
					},
				},
				db_TodoCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_TodoCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_TodoCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_TodoCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["text"],
				},
				db_UserCreateOrConnectWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutAccountsInput" },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_createOneAccount: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/CreateOnePost": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_PostCreateInput" },
				db_createOnePost_author_author_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_createOnePost_author_author_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_createOnePost_author_author_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_createOnePost_author_author_accounts_take: { type: ["integer", "null"] },
				db_createOnePost_author_author_accounts_skip: { type: ["integer", "null"] },
				db_createOnePost_author_author_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_createOnePost_author_author_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_createOnePost_author_author_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_createOnePost_author_author_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_createOnePost_author_author_sessions_take: { type: ["integer", "null"] },
				db_createOnePost_author_author_sessions_skip: { type: ["integer", "null"] },
				db_createOnePost_author_author_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_createOnePost_author_author_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_createOnePost_author_author_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_createOnePost_author_author_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_createOnePost_author_author_Todo_take: { type: ["integer", "null"] },
				db_createOnePost_author_author_Todo_skip: { type: ["integer", "null"] },
				db_createOnePost_author_author_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_PostCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						author: { $ref: "#/definitions/db_UserCreateNestedOneWithoutPostInput" },
					},
					required: ["title", "author"],
				},
				db_UserCreateNestedOneWithoutPostInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutPostInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutPostInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
					},
				},
				db_UserCreateWithoutPostInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/db_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/db_SessionCreateNestedManyWithoutUserInput" },
						Todo: { $ref: "#/definitions/db_TodoCreateNestedManyWithoutUserInput" },
					},
				},
				db_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
					},
				},
				db_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				db_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
					},
				},
				db_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				db_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				db_TodoCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
					},
				},
				db_TodoCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_TodoCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_TodoCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_TodoCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["text"],
				},
				db_UserCreateOrConnectWithoutPostInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutPostInput" },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_createOnePost: {
							type: "object",
							properties: {
								id: { type: "string" },
								title: { type: "string" },
								content: {},
								published: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								authorId: { type: "string" },
								author: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "title", "published", "createdAt", "updatedAt", "authorId", "author"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/CreateOneSession": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_SessionCreateInput" },
				db_createOneSession_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_createOneSession_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_createOneSession_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_createOneSession_user_user_accounts_take: { type: ["integer", "null"] },
				db_createOneSession_user_user_accounts_skip: { type: ["integer", "null"] },
				db_createOneSession_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_createOneSession_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_createOneSession_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_createOneSession_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_createOneSession_user_user_Post_take: { type: ["integer", "null"] },
				db_createOneSession_user_user_Post_skip: { type: ["integer", "null"] },
				db_createOneSession_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_createOneSession_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_createOneSession_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_createOneSession_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_createOneSession_user_user_Todo_take: { type: ["integer", "null"] },
				db_createOneSession_user_user_Todo_skip: { type: ["integer", "null"] },
				db_createOneSession_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_SessionCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
						user: { $ref: "#/definitions/db_UserCreateNestedOneWithoutSessionsInput" },
					},
					required: ["sessionToken", "expires", "user"],
				},
				db_UserCreateNestedOneWithoutSessionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutSessionsInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutSessionsInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
					},
				},
				db_UserCreateWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/db_AccountCreateNestedManyWithoutUserInput" },
						Post: { $ref: "#/definitions/db_PostCreateNestedManyWithoutAuthorInput" },
						Todo: { $ref: "#/definitions/db_TodoCreateNestedManyWithoutUserInput" },
					},
				},
				db_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
					},
				},
				db_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				db_PostCreateNestedManyWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
					},
				},
				db_PostCreateWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_PostCreateOrConnectWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_PostCreateManyAuthorInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_PostCreateManyAuthorInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_PostCreateManyAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["title"],
				},
				db_TodoCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
					},
				},
				db_TodoCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_TodoCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_TodoCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_TodoCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["text"],
				},
				db_UserCreateOrConnectWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutSessionsInput" },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_createOneSession: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/CreateOneTodo": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_TodoCreateInput" },
				db_createOneTodo_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_createOneTodo_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_createOneTodo_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_createOneTodo_user_user_accounts_take: { type: ["integer", "null"] },
				db_createOneTodo_user_user_accounts_skip: { type: ["integer", "null"] },
				db_createOneTodo_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_createOneTodo_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_createOneTodo_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_createOneTodo_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_createOneTodo_user_user_sessions_take: { type: ["integer", "null"] },
				db_createOneTodo_user_user_sessions_skip: { type: ["integer", "null"] },
				db_createOneTodo_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_createOneTodo_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_createOneTodo_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_createOneTodo_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_createOneTodo_user_user_Post_take: { type: ["integer", "null"] },
				db_createOneTodo_user_user_Post_skip: { type: ["integer", "null"] },
				db_createOneTodo_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_TodoCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						user: { $ref: "#/definitions/db_UserCreateNestedOneWithoutTodoInput" },
					},
					required: ["text", "user"],
				},
				db_UserCreateNestedOneWithoutTodoInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutTodoInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutTodoInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
					},
				},
				db_UserCreateWithoutTodoInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/db_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/db_SessionCreateNestedManyWithoutUserInput" },
						Post: { $ref: "#/definitions/db_PostCreateNestedManyWithoutAuthorInput" },
					},
				},
				db_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
					},
				},
				db_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				db_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
					},
				},
				db_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				db_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				db_PostCreateNestedManyWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
					},
				},
				db_PostCreateWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_PostCreateOrConnectWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_PostCreateManyAuthorInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_PostCreateManyAuthorInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_PostCreateManyAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["title"],
				},
				db_UserCreateOrConnectWithoutTodoInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutTodoInput" },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_createOneTodo: {
							type: "object",
							properties: {
								id: { type: "string" },
								text: { type: "string" },
								isCompleted: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/CreateOneUser": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_UserCreateInput" },
				db_createOneUser_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_createOneUser_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_createOneUser_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_createOneUser_accounts_take: { type: ["integer", "null"] },
				db_createOneUser_accounts_skip: { type: ["integer", "null"] },
				db_createOneUser_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_createOneUser_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_createOneUser_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_createOneUser_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_createOneUser_sessions_take: { type: ["integer", "null"] },
				db_createOneUser_sessions_skip: { type: ["integer", "null"] },
				db_createOneUser_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_createOneUser_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_createOneUser_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_createOneUser_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_createOneUser_Post_take: { type: ["integer", "null"] },
				db_createOneUser_Post_skip: { type: ["integer", "null"] },
				db_createOneUser_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_createOneUser_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_createOneUser_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_createOneUser_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_createOneUser_Todo_take: { type: ["integer", "null"] },
				db_createOneUser_Todo_skip: { type: ["integer", "null"] },
				db_createOneUser_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_UserCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/db_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/db_SessionCreateNestedManyWithoutUserInput" },
						Post: { $ref: "#/definitions/db_PostCreateNestedManyWithoutAuthorInput" },
						Todo: { $ref: "#/definitions/db_TodoCreateNestedManyWithoutUserInput" },
					},
				},
				db_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
					},
				},
				db_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				db_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
					},
				},
				db_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				db_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				db_PostCreateNestedManyWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
					},
				},
				db_PostCreateWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_PostCreateOrConnectWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_PostCreateManyAuthorInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_PostCreateManyAuthorInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_PostCreateManyAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["title"],
				},
				db_TodoCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
					},
				},
				db_TodoCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_TodoCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_TodoCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_TodoCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["text"],
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_createOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								Post: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											title: { type: "string" },
											content: {},
											published: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											authorId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
									},
								},
								Todo: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											text: { type: "string" },
											isCompleted: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
									},
								},
								_count: {
									type: "object",
									properties: {
										accounts: { type: "integer" },
										sessions: { type: "integer" },
										Post: { type: "integer" },
										Todo: { type: "integer" },
									},
									additionalProperties: false,
									required: ["accounts", "sessions", "Post", "Todo"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/CreateOneVerificationToken": {
		input: {
			type: "object",
			properties: { data: { $ref: "#/definitions/db_VerificationTokenCreateInput" } },
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_VerificationTokenCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
					required: ["identifier", "token", "expires"],
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_createOneVerificationToken: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/DeleteManyAccount": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/db_AccountWhereInput" } },
			additionalProperties: false,
			definitions: {
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_deleteManyAccount: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/DeleteManyPost": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/db_PostWhereInput" } },
			additionalProperties: false,
			definitions: {
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_deleteManyPost: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/DeleteManySession": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/db_SessionWhereInput" } },
			additionalProperties: false,
			definitions: {
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_deleteManySession: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/DeleteManyTodo": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/db_TodoWhereInput" } },
			additionalProperties: false,
			definitions: {
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_deleteManyTodo: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/DeleteManyUser": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/db_UserWhereInput" } },
			additionalProperties: false,
			definitions: {
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_deleteManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/DeleteManyVerificationToken": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/db_VerificationTokenWhereInput" } },
			additionalProperties: false,
			definitions: {
				db_VerificationTokenWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_VerificationTokenWhereInput" } },
						NOT: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
						identifier: { $ref: "#/definitions/db_StringFilter" },
						token: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_deleteManyVerificationToken: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/DeleteOneAccount": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_deleteOneAccount_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_deleteOneAccount_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_deleteOneAccount_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_deleteOneAccount_user_user_sessions_take: { type: ["integer", "null"] },
				db_deleteOneAccount_user_user_sessions_skip: { type: ["integer", "null"] },
				db_deleteOneAccount_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_deleteOneAccount_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_deleteOneAccount_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_deleteOneAccount_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_deleteOneAccount_user_user_Post_take: { type: ["integer", "null"] },
				db_deleteOneAccount_user_user_Post_skip: { type: ["integer", "null"] },
				db_deleteOneAccount_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_deleteOneAccount_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_deleteOneAccount_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_deleteOneAccount_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_deleteOneAccount_user_user_Todo_take: { type: ["integer", "null"] },
				db_deleteOneAccount_user_user_Todo_skip: { type: ["integer", "null"] },
				db_deleteOneAccount_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_deleteOneAccount: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/DeleteOnePost": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_deleteOnePost_author_author_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_deleteOnePost_author_author_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_deleteOnePost_author_author_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_deleteOnePost_author_author_accounts_take: { type: ["integer", "null"] },
				db_deleteOnePost_author_author_accounts_skip: { type: ["integer", "null"] },
				db_deleteOnePost_author_author_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_deleteOnePost_author_author_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_deleteOnePost_author_author_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_deleteOnePost_author_author_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_deleteOnePost_author_author_sessions_take: { type: ["integer", "null"] },
				db_deleteOnePost_author_author_sessions_skip: { type: ["integer", "null"] },
				db_deleteOnePost_author_author_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_deleteOnePost_author_author_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_deleteOnePost_author_author_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_deleteOnePost_author_author_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_deleteOnePost_author_author_Todo_take: { type: ["integer", "null"] },
				db_deleteOnePost_author_author_Todo_skip: { type: ["integer", "null"] },
				db_deleteOnePost_author_author_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_deleteOnePost: {
							type: "object",
							properties: {
								id: { type: "string" },
								title: { type: "string" },
								content: {},
								published: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								authorId: { type: "string" },
								author: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "title", "published", "createdAt", "updatedAt", "authorId", "author"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/DeleteOneSession": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_deleteOneSession_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_deleteOneSession_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_deleteOneSession_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_deleteOneSession_user_user_accounts_take: { type: ["integer", "null"] },
				db_deleteOneSession_user_user_accounts_skip: { type: ["integer", "null"] },
				db_deleteOneSession_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_deleteOneSession_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_deleteOneSession_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_deleteOneSession_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_deleteOneSession_user_user_Post_take: { type: ["integer", "null"] },
				db_deleteOneSession_user_user_Post_skip: { type: ["integer", "null"] },
				db_deleteOneSession_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_deleteOneSession_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_deleteOneSession_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_deleteOneSession_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_deleteOneSession_user_user_Todo_take: { type: ["integer", "null"] },
				db_deleteOneSession_user_user_Todo_skip: { type: ["integer", "null"] },
				db_deleteOneSession_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_deleteOneSession: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/DeleteOneTodo": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_deleteOneTodo_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_deleteOneTodo_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_deleteOneTodo_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_deleteOneTodo_user_user_accounts_take: { type: ["integer", "null"] },
				db_deleteOneTodo_user_user_accounts_skip: { type: ["integer", "null"] },
				db_deleteOneTodo_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_deleteOneTodo_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_deleteOneTodo_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_deleteOneTodo_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_deleteOneTodo_user_user_sessions_take: { type: ["integer", "null"] },
				db_deleteOneTodo_user_user_sessions_skip: { type: ["integer", "null"] },
				db_deleteOneTodo_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_deleteOneTodo_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_deleteOneTodo_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_deleteOneTodo_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_deleteOneTodo_user_user_Post_take: { type: ["integer", "null"] },
				db_deleteOneTodo_user_user_Post_skip: { type: ["integer", "null"] },
				db_deleteOneTodo_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_deleteOneTodo: {
							type: "object",
							properties: {
								id: { type: "string" },
								text: { type: "string" },
								isCompleted: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/DeleteOneUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
				db_deleteOneUser_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_deleteOneUser_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_deleteOneUser_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_deleteOneUser_accounts_take: { type: ["integer", "null"] },
				db_deleteOneUser_accounts_skip: { type: ["integer", "null"] },
				db_deleteOneUser_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_deleteOneUser_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_deleteOneUser_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_deleteOneUser_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_deleteOneUser_sessions_take: { type: ["integer", "null"] },
				db_deleteOneUser_sessions_skip: { type: ["integer", "null"] },
				db_deleteOneUser_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_deleteOneUser_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_deleteOneUser_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_deleteOneUser_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_deleteOneUser_Post_take: { type: ["integer", "null"] },
				db_deleteOneUser_Post_skip: { type: ["integer", "null"] },
				db_deleteOneUser_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_deleteOneUser_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_deleteOneUser_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_deleteOneUser_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_deleteOneUser_Todo_take: { type: ["integer", "null"] },
				db_deleteOneUser_Todo_skip: { type: ["integer", "null"] },
				db_deleteOneUser_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { id: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_deleteOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								Post: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											title: { type: "string" },
											content: {},
											published: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											authorId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
									},
								},
								Todo: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											text: { type: "string" },
											isCompleted: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
									},
								},
								_count: {
									type: "object",
									properties: {
										accounts: { type: "integer" },
										sessions: { type: "integer" },
										Post: { type: "integer" },
										Todo: { type: "integer" },
									},
									additionalProperties: false,
									required: ["accounts", "sessions", "Post", "Todo"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/DeleteOneVerificationToken": {
		input: {
			type: "object",
			properties: { where: { $ref: "#/definitions/db_VerificationTokenWhereUniqueInput" } },
			additionalProperties: false,
			required: ["where"],
			definitions: {
				db_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: { $ref: "#/definitions/db_VerificationTokenIdentifierTokenCompoundUniqueInput" },
					},
				},
				db_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_deleteOneVerificationToken: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/ExecuteRaw": {
		input: {
			type: "object",
			properties: {
				query: { type: "string" },
				parameters: { type: ["array", "null"], items: { type: ["string", "null"] } },
			},
			additionalProperties: false,
			required: ["query"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: { db_executeRaw: { type: "integer" } },
					additionalProperties: false,
					required: ["db_executeRaw"],
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpdateManyAccount": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_AccountUpdateManyMutationInput" },
				where: { $ref: "#/definitions/db_AccountWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_updateManyAccount: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpdateManyPost": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_PostUpdateManyMutationInput" },
				where: { $ref: "#/definitions/db_PostWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_PostUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_BoolFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["boolean", "null"] } },
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_updateManyPost: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpdateManySession": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_SessionUpdateManyMutationInput" },
				where: { $ref: "#/definitions/db_SessionWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_updateManySession: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpdateManyTodo": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_TodoUpdateManyMutationInput" },
				where: { $ref: "#/definitions/db_TodoWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_TodoUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_BoolFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["boolean", "null"] } },
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_updateManyTodo: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpdateManyUser": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_UserUpdateManyMutationInput" },
				where: { $ref: "#/definitions/db_UserWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_UserUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						stripeCustomerId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripePriceId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_updateManyUser: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpdateManyVerificationToken": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_VerificationTokenUpdateManyMutationInput" },
				where: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
			},
			additionalProperties: false,
			required: ["data"],
			definitions: {
				db_VerificationTokenUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						identifier: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						token: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_VerificationTokenWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_VerificationTokenWhereInput" } },
						NOT: { $ref: "#/definitions/db_VerificationTokenWhereInput" },
						identifier: { $ref: "#/definitions/db_StringFilter" },
						token: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_updateManyVerificationToken: {
							type: "object",
							properties: { count: { type: "integer" } },
							additionalProperties: false,
							required: ["count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpdateOneAccount": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_AccountUpdateInput" },
				where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_updateOneAccount_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_updateOneAccount_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_updateOneAccount_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_updateOneAccount_user_user_sessions_take: { type: ["integer", "null"] },
				db_updateOneAccount_user_user_sessions_skip: { type: ["integer", "null"] },
				db_updateOneAccount_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_updateOneAccount_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_updateOneAccount_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_updateOneAccount_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_updateOneAccount_user_user_Post_take: { type: ["integer", "null"] },
				db_updateOneAccount_user_user_Post_skip: { type: ["integer", "null"] },
				db_updateOneAccount_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_updateOneAccount_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_updateOneAccount_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_updateOneAccount_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_updateOneAccount_user_user_Todo_take: { type: ["integer", "null"] },
				db_updateOneAccount_user_user_Todo_skip: { type: ["integer", "null"] },
				db_updateOneAccount_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				db_AccountUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						user: { $ref: "#/definitions/db_UserUpdateOneRequiredWithoutAccountsNestedInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_UserUpdateOneRequiredWithoutAccountsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutAccountsInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutAccountsInput" },
						upsert: { $ref: "#/definitions/db_UserUpsertWithoutAccountsInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/db_UserUpdateWithoutAccountsInput" },
					},
				},
				db_UserCreateWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						sessions: { $ref: "#/definitions/db_SessionCreateNestedManyWithoutUserInput" },
						Post: { $ref: "#/definitions/db_PostCreateNestedManyWithoutAuthorInput" },
						Todo: { $ref: "#/definitions/db_TodoCreateNestedManyWithoutUserInput" },
					},
				},
				db_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
					},
				},
				db_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				db_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				db_PostCreateNestedManyWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
					},
				},
				db_PostCreateWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_PostCreateOrConnectWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_PostCreateManyAuthorInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_PostCreateManyAuthorInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_PostCreateManyAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["title"],
				},
				db_TodoCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
					},
				},
				db_TodoCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_TodoCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_TodoCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_TodoCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["text"],
				},
				db_UserCreateOrConnectWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutAccountsInput" },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_UserUpsertWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/db_UserUpdateWithoutAccountsInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutAccountsInput" },
					},
				},
				db_UserUpdateWithoutAccountsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						stripeCustomerId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripePriceId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						sessions: { $ref: "#/definitions/db_SessionUpdateManyWithoutUserNestedInput" },
						Post: { $ref: "#/definitions/db_PostUpdateManyWithoutAuthorNestedInput" },
						Todo: { $ref: "#/definitions/db_TodoUpdateManyWithoutUserNestedInput" },
					},
				},
				db_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_SessionScalarWhereInput" },
					},
				},
				db_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
					},
				},
				db_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/db_SessionUpdateManyMutationInput" },
					},
				},
				db_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_PostUpdateManyWithoutAuthorNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						upsert: { $ref: "#/definitions/db_PostUpsertWithWhereUniqueWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						set: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithWhereUniqueWithoutAuthorInput" },
						updateMany: { $ref: "#/definitions/db_PostUpdateManyWithWhereWithoutAuthorInput" },
						deleteMany: { $ref: "#/definitions/db_PostScalarWhereInput" },
					},
				},
				db_PostUpsertWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostUpdateWithoutAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_BoolFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["boolean", "null"] } },
				},
				db_PostUpdateWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						data: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
					},
				},
				db_PostUpdateManyWithWhereWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostScalarWhereInput" },
						data: { $ref: "#/definitions/db_PostUpdateManyMutationInput" },
					},
				},
				db_PostScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_PostScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_PostUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_TodoUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_TodoUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_TodoScalarWhereInput" },
					},
				},
				db_TodoUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						data: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
					},
				},
				db_TodoUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						data: { $ref: "#/definitions/db_TodoUpdateManyMutationInput" },
					},
				},
				db_TodoScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_TodoUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_updateOneAccount: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpdateOnePost": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_PostUpdateInput" },
				where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_updateOnePost_author_author_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_updateOnePost_author_author_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_updateOnePost_author_author_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_updateOnePost_author_author_accounts_take: { type: ["integer", "null"] },
				db_updateOnePost_author_author_accounts_skip: { type: ["integer", "null"] },
				db_updateOnePost_author_author_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_updateOnePost_author_author_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_updateOnePost_author_author_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_updateOnePost_author_author_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_updateOnePost_author_author_sessions_take: { type: ["integer", "null"] },
				db_updateOnePost_author_author_sessions_skip: { type: ["integer", "null"] },
				db_updateOnePost_author_author_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_updateOnePost_author_author_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_updateOnePost_author_author_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_updateOnePost_author_author_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_updateOnePost_author_author_Todo_take: { type: ["integer", "null"] },
				db_updateOnePost_author_author_Todo_skip: { type: ["integer", "null"] },
				db_updateOnePost_author_author_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				db_PostUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						author: { $ref: "#/definitions/db_UserUpdateOneRequiredWithoutPostNestedInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_BoolFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["boolean", "null"] } },
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_UserUpdateOneRequiredWithoutPostNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutPostInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutPostInput" },
						upsert: { $ref: "#/definitions/db_UserUpsertWithoutPostInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/db_UserUpdateWithoutPostInput" },
					},
				},
				db_UserCreateWithoutPostInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/db_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/db_SessionCreateNestedManyWithoutUserInput" },
						Todo: { $ref: "#/definitions/db_TodoCreateNestedManyWithoutUserInput" },
					},
				},
				db_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
					},
				},
				db_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				db_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
					},
				},
				db_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				db_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				db_TodoCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
					},
				},
				db_TodoCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_TodoCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_TodoCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_TodoCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["text"],
				},
				db_UserCreateOrConnectWithoutPostInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutPostInput" },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_UserUpsertWithoutPostInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/db_UserUpdateWithoutPostInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutPostInput" },
					},
				},
				db_UserUpdateWithoutPostInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						stripeCustomerId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripePriceId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						accounts: { $ref: "#/definitions/db_AccountUpdateManyWithoutUserNestedInput" },
						sessions: { $ref: "#/definitions/db_SessionUpdateManyWithoutUserNestedInput" },
						Todo: { $ref: "#/definitions/db_TodoUpdateManyWithoutUserNestedInput" },
					},
				},
				db_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_AccountScalarWhereInput" },
					},
				},
				db_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				db_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
					},
				},
				db_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/db_AccountUpdateManyMutationInput" },
					},
				},
				db_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_SessionScalarWhereInput" },
					},
				},
				db_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
					},
				},
				db_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/db_SessionUpdateManyMutationInput" },
					},
				},
				db_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_TodoUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_TodoUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_TodoScalarWhereInput" },
					},
				},
				db_TodoUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						data: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
					},
				},
				db_TodoUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						data: { $ref: "#/definitions/db_TodoUpdateManyMutationInput" },
					},
				},
				db_TodoScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_updateOnePost: {
							type: "object",
							properties: {
								id: { type: "string" },
								title: { type: "string" },
								content: {},
								published: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								authorId: { type: "string" },
								author: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "title", "published", "createdAt", "updatedAt", "authorId", "author"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpdateOneSession": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_SessionUpdateInput" },
				where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_updateOneSession_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_updateOneSession_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_updateOneSession_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_updateOneSession_user_user_accounts_take: { type: ["integer", "null"] },
				db_updateOneSession_user_user_accounts_skip: { type: ["integer", "null"] },
				db_updateOneSession_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_updateOneSession_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_updateOneSession_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_updateOneSession_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_updateOneSession_user_user_Post_take: { type: ["integer", "null"] },
				db_updateOneSession_user_user_Post_skip: { type: ["integer", "null"] },
				db_updateOneSession_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_updateOneSession_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_updateOneSession_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_updateOneSession_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_updateOneSession_user_user_Todo_take: { type: ["integer", "null"] },
				db_updateOneSession_user_user_Todo_skip: { type: ["integer", "null"] },
				db_updateOneSession_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				db_SessionUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						user: { $ref: "#/definitions/db_UserUpdateOneRequiredWithoutSessionsNestedInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_UserUpdateOneRequiredWithoutSessionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutSessionsInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutSessionsInput" },
						upsert: { $ref: "#/definitions/db_UserUpsertWithoutSessionsInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/db_UserUpdateWithoutSessionsInput" },
					},
				},
				db_UserCreateWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/db_AccountCreateNestedManyWithoutUserInput" },
						Post: { $ref: "#/definitions/db_PostCreateNestedManyWithoutAuthorInput" },
						Todo: { $ref: "#/definitions/db_TodoCreateNestedManyWithoutUserInput" },
					},
				},
				db_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
					},
				},
				db_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				db_PostCreateNestedManyWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
					},
				},
				db_PostCreateWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_PostCreateOrConnectWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_PostCreateManyAuthorInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_PostCreateManyAuthorInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_PostCreateManyAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["title"],
				},
				db_TodoCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
					},
				},
				db_TodoCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_TodoCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_TodoCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_TodoCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["text"],
				},
				db_UserCreateOrConnectWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutSessionsInput" },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_UserUpsertWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/db_UserUpdateWithoutSessionsInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutSessionsInput" },
					},
				},
				db_UserUpdateWithoutSessionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						stripeCustomerId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripePriceId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						accounts: { $ref: "#/definitions/db_AccountUpdateManyWithoutUserNestedInput" },
						Post: { $ref: "#/definitions/db_PostUpdateManyWithoutAuthorNestedInput" },
						Todo: { $ref: "#/definitions/db_TodoUpdateManyWithoutUserNestedInput" },
					},
				},
				db_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_AccountScalarWhereInput" },
					},
				},
				db_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				db_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
					},
				},
				db_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/db_AccountUpdateManyMutationInput" },
					},
				},
				db_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_PostUpdateManyWithoutAuthorNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						upsert: { $ref: "#/definitions/db_PostUpsertWithWhereUniqueWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						set: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithWhereUniqueWithoutAuthorInput" },
						updateMany: { $ref: "#/definitions/db_PostUpdateManyWithWhereWithoutAuthorInput" },
						deleteMany: { $ref: "#/definitions/db_PostScalarWhereInput" },
					},
				},
				db_PostUpsertWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostUpdateWithoutAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_BoolFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["boolean", "null"] } },
				},
				db_PostUpdateWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						data: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
					},
				},
				db_PostUpdateManyWithWhereWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostScalarWhereInput" },
						data: { $ref: "#/definitions/db_PostUpdateManyMutationInput" },
					},
				},
				db_PostScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_PostScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_PostUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_TodoUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_TodoUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_TodoScalarWhereInput" },
					},
				},
				db_TodoUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						data: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
					},
				},
				db_TodoUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						data: { $ref: "#/definitions/db_TodoUpdateManyMutationInput" },
					},
				},
				db_TodoScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_TodoUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_updateOneSession: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpdateOneTodo": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_TodoUpdateInput" },
				where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_updateOneTodo_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_updateOneTodo_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_updateOneTodo_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_updateOneTodo_user_user_accounts_take: { type: ["integer", "null"] },
				db_updateOneTodo_user_user_accounts_skip: { type: ["integer", "null"] },
				db_updateOneTodo_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_updateOneTodo_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_updateOneTodo_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_updateOneTodo_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_updateOneTodo_user_user_sessions_take: { type: ["integer", "null"] },
				db_updateOneTodo_user_user_sessions_skip: { type: ["integer", "null"] },
				db_updateOneTodo_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_updateOneTodo_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_updateOneTodo_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_updateOneTodo_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_updateOneTodo_user_user_Post_take: { type: ["integer", "null"] },
				db_updateOneTodo_user_user_Post_skip: { type: ["integer", "null"] },
				db_updateOneTodo_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				db_TodoUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						user: { $ref: "#/definitions/db_UserUpdateOneRequiredWithoutTodoNestedInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_BoolFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["boolean", "null"] } },
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_UserUpdateOneRequiredWithoutTodoNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutTodoInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutTodoInput" },
						upsert: { $ref: "#/definitions/db_UserUpsertWithoutTodoInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/db_UserUpdateWithoutTodoInput" },
					},
				},
				db_UserCreateWithoutTodoInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/db_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/db_SessionCreateNestedManyWithoutUserInput" },
						Post: { $ref: "#/definitions/db_PostCreateNestedManyWithoutAuthorInput" },
					},
				},
				db_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
					},
				},
				db_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				db_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
					},
				},
				db_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				db_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				db_PostCreateNestedManyWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
					},
				},
				db_PostCreateWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_PostCreateOrConnectWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_PostCreateManyAuthorInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_PostCreateManyAuthorInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_PostCreateManyAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["title"],
				},
				db_UserCreateOrConnectWithoutTodoInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutTodoInput" },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_UserUpsertWithoutTodoInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/db_UserUpdateWithoutTodoInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutTodoInput" },
					},
				},
				db_UserUpdateWithoutTodoInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						stripeCustomerId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripePriceId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						accounts: { $ref: "#/definitions/db_AccountUpdateManyWithoutUserNestedInput" },
						sessions: { $ref: "#/definitions/db_SessionUpdateManyWithoutUserNestedInput" },
						Post: { $ref: "#/definitions/db_PostUpdateManyWithoutAuthorNestedInput" },
					},
				},
				db_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_AccountScalarWhereInput" },
					},
				},
				db_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				db_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
					},
				},
				db_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/db_AccountUpdateManyMutationInput" },
					},
				},
				db_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_SessionScalarWhereInput" },
					},
				},
				db_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
					},
				},
				db_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/db_SessionUpdateManyMutationInput" },
					},
				},
				db_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_PostUpdateManyWithoutAuthorNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						upsert: { $ref: "#/definitions/db_PostUpsertWithWhereUniqueWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						set: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithWhereUniqueWithoutAuthorInput" },
						updateMany: { $ref: "#/definitions/db_PostUpdateManyWithWhereWithoutAuthorInput" },
						deleteMany: { $ref: "#/definitions/db_PostScalarWhereInput" },
					},
				},
				db_PostUpsertWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostUpdateWithoutAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_PostUpdateWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						data: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
					},
				},
				db_PostUpdateManyWithWhereWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostScalarWhereInput" },
						data: { $ref: "#/definitions/db_PostUpdateManyMutationInput" },
					},
				},
				db_PostScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_PostScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_PostUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_updateOneTodo: {
							type: "object",
							properties: {
								id: { type: "string" },
								text: { type: "string" },
								isCompleted: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpdateOneUser": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_UserUpdateInput" },
				where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
				db_updateOneUser_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_updateOneUser_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_updateOneUser_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_updateOneUser_accounts_take: { type: ["integer", "null"] },
				db_updateOneUser_accounts_skip: { type: ["integer", "null"] },
				db_updateOneUser_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_updateOneUser_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_updateOneUser_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_updateOneUser_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_updateOneUser_sessions_take: { type: ["integer", "null"] },
				db_updateOneUser_sessions_skip: { type: ["integer", "null"] },
				db_updateOneUser_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_updateOneUser_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_updateOneUser_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_updateOneUser_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_updateOneUser_Post_take: { type: ["integer", "null"] },
				db_updateOneUser_Post_skip: { type: ["integer", "null"] },
				db_updateOneUser_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_updateOneUser_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_updateOneUser_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_updateOneUser_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_updateOneUser_Todo_take: { type: ["integer", "null"] },
				db_updateOneUser_Todo_skip: { type: ["integer", "null"] },
				db_updateOneUser_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				db_UserUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						stripeCustomerId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripePriceId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						accounts: { $ref: "#/definitions/db_AccountUpdateManyWithoutUserNestedInput" },
						sessions: { $ref: "#/definitions/db_SessionUpdateManyWithoutUserNestedInput" },
						Post: { $ref: "#/definitions/db_PostUpdateManyWithoutAuthorNestedInput" },
						Todo: { $ref: "#/definitions/db_TodoUpdateManyWithoutUserNestedInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_AccountScalarWhereInput" },
					},
				},
				db_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				db_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				db_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
					},
				},
				db_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/db_AccountUpdateManyMutationInput" },
					},
				},
				db_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_SessionScalarWhereInput" },
					},
				},
				db_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				db_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				db_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
					},
				},
				db_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/db_SessionUpdateManyMutationInput" },
					},
				},
				db_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_PostUpdateManyWithoutAuthorNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						upsert: { $ref: "#/definitions/db_PostUpsertWithWhereUniqueWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						set: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithWhereUniqueWithoutAuthorInput" },
						updateMany: { $ref: "#/definitions/db_PostUpdateManyWithWhereWithoutAuthorInput" },
						deleteMany: { $ref: "#/definitions/db_PostScalarWhereInput" },
					},
				},
				db_PostCreateWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_PostCreateOrConnectWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_PostUpsertWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostUpdateWithoutAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_BoolFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["boolean", "null"] } },
				},
				db_PostCreateManyAuthorInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_PostCreateManyAuthorInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_PostCreateManyAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["title"],
				},
				db_PostUpdateWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						data: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
					},
				},
				db_PostUpdateManyWithWhereWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostScalarWhereInput" },
						data: { $ref: "#/definitions/db_PostUpdateManyMutationInput" },
					},
				},
				db_PostScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_PostScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_PostUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_TodoUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_TodoUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_TodoScalarWhereInput" },
					},
				},
				db_TodoCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_TodoCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_TodoCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_TodoCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["text"],
				},
				db_TodoUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						data: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
					},
				},
				db_TodoUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						data: { $ref: "#/definitions/db_TodoUpdateManyMutationInput" },
					},
				},
				db_TodoScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_TodoUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_updateOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								Post: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											title: { type: "string" },
											content: {},
											published: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											authorId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
									},
								},
								Todo: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											text: { type: "string" },
											isCompleted: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
									},
								},
								_count: {
									type: "object",
									properties: {
										accounts: { type: "integer" },
										sessions: { type: "integer" },
										Post: { type: "integer" },
										Todo: { type: "integer" },
									},
									additionalProperties: false,
									required: ["accounts", "sessions", "Post", "Todo"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpdateOneVerificationToken": {
		input: {
			type: "object",
			properties: {
				data: { $ref: "#/definitions/db_VerificationTokenUpdateInput" },
				where: { $ref: "#/definitions/db_VerificationTokenWhereUniqueInput" },
			},
			additionalProperties: false,
			required: ["data", "where"],
			definitions: {
				db_VerificationTokenUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						identifier: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						token: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: { $ref: "#/definitions/db_VerificationTokenIdentifierTokenCompoundUniqueInput" },
					},
				},
				db_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_updateOneVerificationToken: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpsertOneAccount": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				create: { $ref: "#/definitions/db_AccountCreateInput" },
				update: { $ref: "#/definitions/db_AccountUpdateInput" },
				db_upsertOneAccount_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_upsertOneAccount_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_upsertOneAccount_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_upsertOneAccount_user_user_sessions_take: { type: ["integer", "null"] },
				db_upsertOneAccount_user_user_sessions_skip: { type: ["integer", "null"] },
				db_upsertOneAccount_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_upsertOneAccount_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_upsertOneAccount_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_upsertOneAccount_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_upsertOneAccount_user_user_Post_take: { type: ["integer", "null"] },
				db_upsertOneAccount_user_user_Post_skip: { type: ["integer", "null"] },
				db_upsertOneAccount_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_upsertOneAccount_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_upsertOneAccount_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_upsertOneAccount_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_upsertOneAccount_user_user_Todo_take: { type: ["integer", "null"] },
				db_upsertOneAccount_user_user_Todo_skip: { type: ["integer", "null"] },
				db_upsertOneAccount_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_AccountCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						user: { $ref: "#/definitions/db_UserCreateNestedOneWithoutAccountsInput" },
					},
					required: ["type", "provider", "providerAccountId", "user"],
				},
				db_UserCreateNestedOneWithoutAccountsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutAccountsInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutAccountsInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
					},
				},
				db_UserCreateWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						sessions: { $ref: "#/definitions/db_SessionCreateNestedManyWithoutUserInput" },
						Post: { $ref: "#/definitions/db_PostCreateNestedManyWithoutAuthorInput" },
						Todo: { $ref: "#/definitions/db_TodoCreateNestedManyWithoutUserInput" },
					},
				},
				db_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
					},
				},
				db_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				db_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				db_PostCreateNestedManyWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
					},
				},
				db_PostCreateWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_PostCreateOrConnectWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_PostCreateManyAuthorInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_PostCreateManyAuthorInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_PostCreateManyAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["title"],
				},
				db_TodoCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
					},
				},
				db_TodoCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_TodoCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_TodoCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_TodoCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["text"],
				},
				db_UserCreateOrConnectWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutAccountsInput" },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_AccountUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						user: { $ref: "#/definitions/db_UserUpdateOneRequiredWithoutAccountsNestedInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_UserUpdateOneRequiredWithoutAccountsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutAccountsInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutAccountsInput" },
						upsert: { $ref: "#/definitions/db_UserUpsertWithoutAccountsInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/db_UserUpdateWithoutAccountsInput" },
					},
				},
				db_UserUpsertWithoutAccountsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/db_UserUpdateWithoutAccountsInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutAccountsInput" },
					},
				},
				db_UserUpdateWithoutAccountsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						stripeCustomerId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripePriceId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						sessions: { $ref: "#/definitions/db_SessionUpdateManyWithoutUserNestedInput" },
						Post: { $ref: "#/definitions/db_PostUpdateManyWithoutAuthorNestedInput" },
						Todo: { $ref: "#/definitions/db_TodoUpdateManyWithoutUserNestedInput" },
					},
				},
				db_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_SessionScalarWhereInput" },
					},
				},
				db_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
					},
				},
				db_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/db_SessionUpdateManyMutationInput" },
					},
				},
				db_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_PostUpdateManyWithoutAuthorNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						upsert: { $ref: "#/definitions/db_PostUpsertWithWhereUniqueWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						set: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithWhereUniqueWithoutAuthorInput" },
						updateMany: { $ref: "#/definitions/db_PostUpdateManyWithWhereWithoutAuthorInput" },
						deleteMany: { $ref: "#/definitions/db_PostScalarWhereInput" },
					},
				},
				db_PostUpsertWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostUpdateWithoutAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_BoolFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["boolean", "null"] } },
				},
				db_PostUpdateWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						data: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
					},
				},
				db_PostUpdateManyWithWhereWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostScalarWhereInput" },
						data: { $ref: "#/definitions/db_PostUpdateManyMutationInput" },
					},
				},
				db_PostScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_PostScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_PostUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_TodoUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_TodoUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_TodoScalarWhereInput" },
					},
				},
				db_TodoUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						data: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
					},
				},
				db_TodoUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						data: { $ref: "#/definitions/db_TodoUpdateManyMutationInput" },
					},
				},
				db_TodoScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_TodoUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_upsertOneAccount: {
							type: "object",
							properties: {
								id: { type: "string" },
								userId: { type: "string" },
								type: { type: "string" },
								provider: { type: "string" },
								providerAccountId: { type: "string" },
								refresh_token: { type: "string" },
								access_token: { type: "string" },
								expires_at: { type: "integer" },
								token_type: { type: "string" },
								scope: { type: "string" },
								id_token: { type: "string" },
								session_state: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpsertOnePost": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				create: { $ref: "#/definitions/db_PostCreateInput" },
				update: { $ref: "#/definitions/db_PostUpdateInput" },
				db_upsertOnePost_author_author_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_upsertOnePost_author_author_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_upsertOnePost_author_author_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_upsertOnePost_author_author_accounts_take: { type: ["integer", "null"] },
				db_upsertOnePost_author_author_accounts_skip: { type: ["integer", "null"] },
				db_upsertOnePost_author_author_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_upsertOnePost_author_author_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_upsertOnePost_author_author_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_upsertOnePost_author_author_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_upsertOnePost_author_author_sessions_take: { type: ["integer", "null"] },
				db_upsertOnePost_author_author_sessions_skip: { type: ["integer", "null"] },
				db_upsertOnePost_author_author_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_upsertOnePost_author_author_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_upsertOnePost_author_author_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_upsertOnePost_author_author_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_upsertOnePost_author_author_Todo_take: { type: ["integer", "null"] },
				db_upsertOnePost_author_author_Todo_skip: { type: ["integer", "null"] },
				db_upsertOnePost_author_author_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_PostCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						author: { $ref: "#/definitions/db_UserCreateNestedOneWithoutPostInput" },
					},
					required: ["title", "author"],
				},
				db_UserCreateNestedOneWithoutPostInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutPostInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutPostInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
					},
				},
				db_UserCreateWithoutPostInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/db_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/db_SessionCreateNestedManyWithoutUserInput" },
						Todo: { $ref: "#/definitions/db_TodoCreateNestedManyWithoutUserInput" },
					},
				},
				db_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
					},
				},
				db_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				db_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
					},
				},
				db_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				db_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				db_TodoCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
					},
				},
				db_TodoCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_TodoCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_TodoCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_TodoCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["text"],
				},
				db_UserCreateOrConnectWithoutPostInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutPostInput" },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_PostUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						author: { $ref: "#/definitions/db_UserUpdateOneRequiredWithoutPostNestedInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_BoolFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["boolean", "null"] } },
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_UserUpdateOneRequiredWithoutPostNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutPostInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutPostInput" },
						upsert: { $ref: "#/definitions/db_UserUpsertWithoutPostInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/db_UserUpdateWithoutPostInput" },
					},
				},
				db_UserUpsertWithoutPostInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/db_UserUpdateWithoutPostInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutPostInput" },
					},
				},
				db_UserUpdateWithoutPostInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						stripeCustomerId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripePriceId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						accounts: { $ref: "#/definitions/db_AccountUpdateManyWithoutUserNestedInput" },
						sessions: { $ref: "#/definitions/db_SessionUpdateManyWithoutUserNestedInput" },
						Todo: { $ref: "#/definitions/db_TodoUpdateManyWithoutUserNestedInput" },
					},
				},
				db_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_AccountScalarWhereInput" },
					},
				},
				db_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				db_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
					},
				},
				db_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/db_AccountUpdateManyMutationInput" },
					},
				},
				db_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_SessionScalarWhereInput" },
					},
				},
				db_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
					},
				},
				db_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/db_SessionUpdateManyMutationInput" },
					},
				},
				db_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_TodoUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_TodoUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_TodoScalarWhereInput" },
					},
				},
				db_TodoUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						data: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
					},
				},
				db_TodoUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						data: { $ref: "#/definitions/db_TodoUpdateManyMutationInput" },
					},
				},
				db_TodoScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_TodoUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_upsertOnePost: {
							type: "object",
							properties: {
								id: { type: "string" },
								title: { type: "string" },
								content: {},
								published: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								authorId: { type: "string" },
								author: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "title", "published", "createdAt", "updatedAt", "authorId", "author"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpsertOneSession": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				create: { $ref: "#/definitions/db_SessionCreateInput" },
				update: { $ref: "#/definitions/db_SessionUpdateInput" },
				db_upsertOneSession_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_upsertOneSession_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_upsertOneSession_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_upsertOneSession_user_user_accounts_take: { type: ["integer", "null"] },
				db_upsertOneSession_user_user_accounts_skip: { type: ["integer", "null"] },
				db_upsertOneSession_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_upsertOneSession_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_upsertOneSession_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_upsertOneSession_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_upsertOneSession_user_user_Post_take: { type: ["integer", "null"] },
				db_upsertOneSession_user_user_Post_skip: { type: ["integer", "null"] },
				db_upsertOneSession_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_upsertOneSession_user_user_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_upsertOneSession_user_user_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_upsertOneSession_user_user_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_upsertOneSession_user_user_Todo_take: { type: ["integer", "null"] },
				db_upsertOneSession_user_user_Todo_skip: { type: ["integer", "null"] },
				db_upsertOneSession_user_user_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_SessionCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
						user: { $ref: "#/definitions/db_UserCreateNestedOneWithoutSessionsInput" },
					},
					required: ["sessionToken", "expires", "user"],
				},
				db_UserCreateNestedOneWithoutSessionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutSessionsInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutSessionsInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
					},
				},
				db_UserCreateWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/db_AccountCreateNestedManyWithoutUserInput" },
						Post: { $ref: "#/definitions/db_PostCreateNestedManyWithoutAuthorInput" },
						Todo: { $ref: "#/definitions/db_TodoCreateNestedManyWithoutUserInput" },
					},
				},
				db_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
					},
				},
				db_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				db_PostCreateNestedManyWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
					},
				},
				db_PostCreateWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_PostCreateOrConnectWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_PostCreateManyAuthorInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_PostCreateManyAuthorInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_PostCreateManyAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["title"],
				},
				db_TodoCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
					},
				},
				db_TodoCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_TodoCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_TodoCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_TodoCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["text"],
				},
				db_UserCreateOrConnectWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutSessionsInput" },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_SessionUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						user: { $ref: "#/definitions/db_UserUpdateOneRequiredWithoutSessionsNestedInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_UserUpdateOneRequiredWithoutSessionsNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutSessionsInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutSessionsInput" },
						upsert: { $ref: "#/definitions/db_UserUpsertWithoutSessionsInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/db_UserUpdateWithoutSessionsInput" },
					},
				},
				db_UserUpsertWithoutSessionsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/db_UserUpdateWithoutSessionsInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutSessionsInput" },
					},
				},
				db_UserUpdateWithoutSessionsInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						stripeCustomerId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripePriceId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						accounts: { $ref: "#/definitions/db_AccountUpdateManyWithoutUserNestedInput" },
						Post: { $ref: "#/definitions/db_PostUpdateManyWithoutAuthorNestedInput" },
						Todo: { $ref: "#/definitions/db_TodoUpdateManyWithoutUserNestedInput" },
					},
				},
				db_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_AccountScalarWhereInput" },
					},
				},
				db_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				db_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
					},
				},
				db_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/db_AccountUpdateManyMutationInput" },
					},
				},
				db_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_PostUpdateManyWithoutAuthorNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						upsert: { $ref: "#/definitions/db_PostUpsertWithWhereUniqueWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						set: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithWhereUniqueWithoutAuthorInput" },
						updateMany: { $ref: "#/definitions/db_PostUpdateManyWithWhereWithoutAuthorInput" },
						deleteMany: { $ref: "#/definitions/db_PostScalarWhereInput" },
					},
				},
				db_PostUpsertWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostUpdateWithoutAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_BoolFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["boolean", "null"] } },
				},
				db_PostUpdateWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						data: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
					},
				},
				db_PostUpdateManyWithWhereWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostScalarWhereInput" },
						data: { $ref: "#/definitions/db_PostUpdateManyMutationInput" },
					},
				},
				db_PostScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_PostScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_PostUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_TodoUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_TodoUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_TodoScalarWhereInput" },
					},
				},
				db_TodoUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						data: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
					},
				},
				db_TodoUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						data: { $ref: "#/definitions/db_TodoUpdateManyMutationInput" },
					},
				},
				db_TodoScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_TodoUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_upsertOneSession: {
							type: "object",
							properties: {
								id: { type: "string" },
								sessionToken: { type: "string" },
								userId: { type: "string" },
								expires: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										Todo: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													text: { type: "string" },
													isCompleted: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													userId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "sessionToken", "userId", "expires", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpsertOneTodo": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				create: { $ref: "#/definitions/db_TodoCreateInput" },
				update: { $ref: "#/definitions/db_TodoUpdateInput" },
				db_upsertOneTodo_user_user_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_upsertOneTodo_user_user_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_upsertOneTodo_user_user_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_upsertOneTodo_user_user_accounts_take: { type: ["integer", "null"] },
				db_upsertOneTodo_user_user_accounts_skip: { type: ["integer", "null"] },
				db_upsertOneTodo_user_user_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_upsertOneTodo_user_user_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_upsertOneTodo_user_user_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_upsertOneTodo_user_user_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_upsertOneTodo_user_user_sessions_take: { type: ["integer", "null"] },
				db_upsertOneTodo_user_user_sessions_skip: { type: ["integer", "null"] },
				db_upsertOneTodo_user_user_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_upsertOneTodo_user_user_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_upsertOneTodo_user_user_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_upsertOneTodo_user_user_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_upsertOneTodo_user_user_Post_take: { type: ["integer", "null"] },
				db_upsertOneTodo_user_user_Post_skip: { type: ["integer", "null"] },
				db_upsertOneTodo_user_user_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						user: { $ref: "#/definitions/db_UserCreateNestedOneWithoutTodoInput" },
					},
					required: ["text", "user"],
				},
				db_UserCreateNestedOneWithoutTodoInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutTodoInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutTodoInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
					},
				},
				db_UserCreateWithoutTodoInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/db_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/db_SessionCreateNestedManyWithoutUserInput" },
						Post: { $ref: "#/definitions/db_PostCreateNestedManyWithoutAuthorInput" },
					},
				},
				db_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
					},
				},
				db_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				db_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
					},
				},
				db_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				db_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				db_PostCreateNestedManyWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
					},
				},
				db_PostCreateWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_PostCreateOrConnectWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_PostCreateManyAuthorInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_PostCreateManyAuthorInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_PostCreateManyAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["title"],
				},
				db_UserCreateOrConnectWithoutTodoInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutTodoInput" },
					},
				},
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_TodoUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						user: { $ref: "#/definitions/db_UserUpdateOneRequiredWithoutTodoNestedInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_BoolFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["boolean", "null"] } },
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_UserUpdateOneRequiredWithoutTodoNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_UserCreateWithoutTodoInput" },
						connectOrCreate: { $ref: "#/definitions/db_UserCreateOrConnectWithoutTodoInput" },
						upsert: { $ref: "#/definitions/db_UserUpsertWithoutTodoInput" },
						connect: { $ref: "#/definitions/db_UserWhereUniqueInput" },
						update: { $ref: "#/definitions/db_UserUpdateWithoutTodoInput" },
					},
				},
				db_UserUpsertWithoutTodoInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						update: { $ref: "#/definitions/db_UserUpdateWithoutTodoInput" },
						create: { $ref: "#/definitions/db_UserCreateWithoutTodoInput" },
					},
				},
				db_UserUpdateWithoutTodoInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						stripeCustomerId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripePriceId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						accounts: { $ref: "#/definitions/db_AccountUpdateManyWithoutUserNestedInput" },
						sessions: { $ref: "#/definitions/db_SessionUpdateManyWithoutUserNestedInput" },
						Post: { $ref: "#/definitions/db_PostUpdateManyWithoutAuthorNestedInput" },
					},
				},
				db_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_AccountScalarWhereInput" },
					},
				},
				db_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				db_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
					},
				},
				db_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/db_AccountUpdateManyMutationInput" },
					},
				},
				db_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_SessionScalarWhereInput" },
					},
				},
				db_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
					},
				},
				db_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/db_SessionUpdateManyMutationInput" },
					},
				},
				db_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_PostUpdateManyWithoutAuthorNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						upsert: { $ref: "#/definitions/db_PostUpsertWithWhereUniqueWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						set: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithWhereUniqueWithoutAuthorInput" },
						updateMany: { $ref: "#/definitions/db_PostUpdateManyWithWhereWithoutAuthorInput" },
						deleteMany: { $ref: "#/definitions/db_PostScalarWhereInput" },
					},
				},
				db_PostUpsertWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostUpdateWithoutAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_PostUpdateWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						data: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
					},
				},
				db_PostUpdateManyWithWhereWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostScalarWhereInput" },
						data: { $ref: "#/definitions/db_PostUpdateManyMutationInput" },
					},
				},
				db_PostScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_PostScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_PostUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_upsertOneTodo: {
							type: "object",
							properties: {
								id: { type: "string" },
								text: { type: "string" },
								isCompleted: { type: "boolean" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								userId: { type: "string" },
								user: {
									type: "object",
									properties: {
										id: { type: "string" },
										name: { type: "string" },
										email: { type: "string" },
										emailVerified: { type: "string" },
										image: { type: "string" },
										createdAt: { type: "string" },
										updatedAt: { type: "string" },
										stripeCustomerId: { type: "string" },
										stripeSubscriptionId: { type: "string" },
										stripePriceId: { type: "string" },
										stripeCurrentPeriodEnd: { type: "string" },
										accounts: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													userId: { type: "string" },
													type: { type: "string" },
													provider: { type: "string" },
													providerAccountId: { type: "string" },
													refresh_token: { type: "string" },
													access_token: { type: "string" },
													expires_at: { type: "integer" },
													token_type: { type: "string" },
													scope: { type: "string" },
													id_token: { type: "string" },
													session_state: { type: "string" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
											},
										},
										sessions: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													sessionToken: { type: "string" },
													userId: { type: "string" },
													expires: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "sessionToken", "userId", "expires"],
											},
										},
										Post: {
											type: "array",
											items: {
												type: "object",
												properties: {
													id: { type: "string" },
													title: { type: "string" },
													content: {},
													published: { type: "boolean" },
													createdAt: { type: "string" },
													updatedAt: { type: "string" },
													authorId: { type: "string" },
												},
												additionalProperties: false,
												required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
											},
										},
										_count: {
											type: "object",
											properties: {
												accounts: { type: "integer" },
												sessions: { type: "integer" },
												Post: { type: "integer" },
												Todo: { type: "integer" },
											},
											additionalProperties: false,
											required: ["accounts", "sessions", "Post", "Todo"],
										},
									},
									additionalProperties: false,
									required: ["id", "createdAt", "updatedAt", "_count"],
								},
							},
							additionalProperties: false,
							required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpsertOneUser": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_UserWhereUniqueInput" },
				create: { $ref: "#/definitions/db_UserCreateInput" },
				update: { $ref: "#/definitions/db_UserUpdateInput" },
				db_upsertOneUser_accounts_where: { $ref: "#/definitions/db_AccountWhereInput" },
				db_upsertOneUser_accounts_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_AccountOrderByWithRelationInput" },
				},
				db_upsertOneUser_accounts_cursor: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
				db_upsertOneUser_accounts_take: { type: ["integer", "null"] },
				db_upsertOneUser_accounts_skip: { type: ["integer", "null"] },
				db_upsertOneUser_accounts_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_AccountScalarFieldEnum",
						enum: [
							"id",
							"userId",
							"type",
							"provider",
							"providerAccountId",
							"refresh_token",
							"access_token",
							"expires_at",
							"token_type",
							"scope",
							"id_token",
							"session_state",
							"createdAt",
							"updatedAt",
						],
					},
				},
				db_upsertOneUser_sessions_where: { $ref: "#/definitions/db_SessionWhereInput" },
				db_upsertOneUser_sessions_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_SessionOrderByWithRelationInput" },
				},
				db_upsertOneUser_sessions_cursor: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
				db_upsertOneUser_sessions_take: { type: ["integer", "null"] },
				db_upsertOneUser_sessions_skip: { type: ["integer", "null"] },
				db_upsertOneUser_sessions_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_SessionScalarFieldEnum",
						enum: ["id", "sessionToken", "userId", "expires"],
					},
				},
				db_upsertOneUser_Post_where: { $ref: "#/definitions/db_PostWhereInput" },
				db_upsertOneUser_Post_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_PostOrderByWithRelationInput" },
				},
				db_upsertOneUser_Post_cursor: { $ref: "#/definitions/db_PostWhereUniqueInput" },
				db_upsertOneUser_Post_take: { type: ["integer", "null"] },
				db_upsertOneUser_Post_skip: { type: ["integer", "null"] },
				db_upsertOneUser_Post_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_PostScalarFieldEnum",
						enum: ["id", "title", "content", "published", "createdAt", "updatedAt", "authorId"],
					},
				},
				db_upsertOneUser_Todo_where: { $ref: "#/definitions/db_TodoWhereInput" },
				db_upsertOneUser_Todo_orderBy: {
					type: ["array", "null"],
					items: { $ref: "#/definitions/db_TodoOrderByWithRelationInput" },
				},
				db_upsertOneUser_Todo_cursor: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
				db_upsertOneUser_Todo_take: { type: ["integer", "null"] },
				db_upsertOneUser_Todo_skip: { type: ["integer", "null"] },
				db_upsertOneUser_Todo_distinct: {
					type: ["array", "null"],
					items: {
						type: ["string", "null"],
						"x-graphql-enum-name": "db_TodoScalarFieldEnum",
						enum: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
					},
				},
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				db_UserWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
					},
				},
				db_UserCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						email: { type: ["string", "null"] },
						emailVerified: { type: ["string", "null"] },
						image: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
						stripeCustomerId: { type: ["string", "null"] },
						stripeSubscriptionId: { type: ["string", "null"] },
						stripePriceId: { type: ["string", "null"] },
						stripeCurrentPeriodEnd: { type: ["string", "null"] },
						accounts: { $ref: "#/definitions/db_AccountCreateNestedManyWithoutUserInput" },
						sessions: { $ref: "#/definitions/db_SessionCreateNestedManyWithoutUserInput" },
						Post: { $ref: "#/definitions/db_PostCreateNestedManyWithoutAuthorInput" },
						Todo: { $ref: "#/definitions/db_TodoCreateNestedManyWithoutUserInput" },
					},
				},
				db_AccountCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
					},
				},
				db_AccountCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_AccountCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						provider_providerAccountId: {
							$ref: "#/definitions/db_AccountProviderProviderAccountIdCompoundUniqueInput",
						},
					},
				},
				db_AccountProviderProviderAccountIdCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { provider: { type: "string" }, providerAccountId: { type: "string" } },
				},
				db_AccountCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_AccountCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_AccountCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						type: { type: "string" },
						provider: { type: "string" },
						providerAccountId: { type: "string" },
						refresh_token: { type: ["string", "null"] },
						access_token: { type: ["string", "null"] },
						expires_at: { type: ["integer", "null"] },
						token_type: { type: ["string", "null"] },
						scope: { type: ["string", "null"] },
						id_token: { type: ["string", "null"] },
						session_state: { type: ["string", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["type", "provider", "providerAccountId"],
				},
				db_SessionCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
					},
				},
				db_SessionCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
				},
				db_SessionCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] }, sessionToken: { type: ["string", "null"] } },
				},
				db_SessionCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_SessionCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_SessionCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						sessionToken: { type: "string" },
						expires: { type: "string" },
					},
					required: ["sessionToken", "expires"],
				},
				db_PostCreateNestedManyWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
					},
				},
				db_PostCreateWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_PostCreateOrConnectWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_PostCreateManyAuthorInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_PostCreateManyAuthorInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_PostCreateManyAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						title: { type: "string" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["title"],
				},
				db_TodoCreateNestedManyWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
					},
				},
				db_TodoCreateWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
				},
				db_TodoCreateOrConnectWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: { id: { type: ["string", "null"] } },
				},
				db_TodoCreateManyUserInputEnvelope: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/db_TodoCreateManyUserInput" },
						skipDuplicates: { type: ["boolean", "null"] },
					},
				},
				db_TodoCreateManyUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { type: ["string", "null"] },
						text: { type: "string" },
						isCompleted: { type: ["boolean", "null"] },
						createdAt: { type: ["string", "null"] },
						updatedAt: { type: ["string", "null"] },
					},
					required: ["text"],
				},
				db_UserUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						name: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						email: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						emailVerified: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						image: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						stripeCustomerId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeSubscriptionId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripePriceId: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_NullableDateTimeFieldUpdateOperationsInput" },
						accounts: { $ref: "#/definitions/db_AccountUpdateManyWithoutUserNestedInput" },
						sessions: { $ref: "#/definitions/db_SessionUpdateManyWithoutUserNestedInput" },
						Post: { $ref: "#/definitions/db_PostUpdateManyWithoutAuthorNestedInput" },
						Todo: { $ref: "#/definitions/db_TodoUpdateManyWithoutUserNestedInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableStringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_NullableDateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_AccountUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_AccountCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_AccountUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_AccountCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_AccountUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_AccountScalarWhereInput" },
					},
				},
				db_AccountUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						update: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_AccountCreateWithoutUserInput" },
					},
				},
				db_AccountUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_NullableIntFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						set: { type: ["integer", "null"] },
						increment: { type: ["integer", "null"] },
						decrement: { type: ["integer", "null"] },
						multiply: { type: ["integer", "null"] },
						divide: { type: ["integer", "null"] },
					},
				},
				db_AccountUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountWhereUniqueInput" },
						data: { $ref: "#/definitions/db_AccountUpdateWithoutUserInput" },
					},
				},
				db_AccountUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						data: { $ref: "#/definitions/db_AccountUpdateManyMutationInput" },
					},
				},
				db_AccountScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_StringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_NestedStringFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringFilter" },
					},
				},
				db_StringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_NestedStringNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						contains: { type: ["string", "null"] },
						startsWith: { type: ["string", "null"] },
						endsWith: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedStringNullableFilter" },
					},
				},
				db_IntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_NestedIntNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["integer", "null"] },
						in: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["integer", "null"] } },
						lt: { type: ["integer", "null"] },
						lte: { type: ["integer", "null"] },
						gt: { type: ["integer", "null"] },
						gte: { type: ["integer", "null"] },
						not: { $ref: "#/definitions/db_NestedIntNullableFilter" },
					},
				},
				db_DateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_NestedDateTimeFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeFilter" },
					},
				},
				db_AccountUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						type: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						provider: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						providerAccountId: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						refresh_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						access_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						expires_at: { $ref: "#/definitions/db_NullableIntFieldUpdateOperationsInput" },
						token_type: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						scope: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						id_token: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						session_state: { $ref: "#/definitions/db_NullableStringFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_SessionCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_SessionUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_SessionCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_SessionUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_SessionScalarWhereInput" },
					},
				},
				db_SessionUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						update: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_SessionCreateWithoutUserInput" },
					},
				},
				db_SessionUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_SessionUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionWhereUniqueInput" },
						data: { $ref: "#/definitions/db_SessionUpdateWithoutUserInput" },
					},
				},
				db_SessionUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						data: { $ref: "#/definitions/db_SessionUpdateManyMutationInput" },
					},
				},
				db_SessionScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
					},
				},
				db_SessionUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						sessionToken: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_PostUpdateManyWithoutAuthorNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
						connectOrCreate: { $ref: "#/definitions/db_PostCreateOrConnectWithoutAuthorInput" },
						upsert: { $ref: "#/definitions/db_PostUpsertWithWhereUniqueWithoutAuthorInput" },
						createMany: { $ref: "#/definitions/db_PostCreateManyAuthorInputEnvelope" },
						set: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithWhereUniqueWithoutAuthorInput" },
						updateMany: { $ref: "#/definitions/db_PostUpdateManyWithWhereWithoutAuthorInput" },
						deleteMany: { $ref: "#/definitions/db_PostScalarWhereInput" },
					},
				},
				db_PostUpsertWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						update: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
						create: { $ref: "#/definitions/db_PostCreateWithoutAuthorInput" },
					},
				},
				db_PostUpdateWithoutAuthorInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_BoolFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["boolean", "null"] } },
				},
				db_PostUpdateWithWhereUniqueWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostWhereUniqueInput" },
						data: { $ref: "#/definitions/db_PostUpdateWithoutAuthorInput" },
					},
				},
				db_PostUpdateManyWithWhereWithoutAuthorInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_PostScalarWhereInput" },
						data: { $ref: "#/definitions/db_PostUpdateManyMutationInput" },
					},
				},
				db_PostScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_PostScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_JsonNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: {},
						path: { type: ["string", "null"] },
						string_contains: { type: ["string", "null"] },
						string_starts_with: { type: ["string", "null"] },
						string_ends_with: { type: ["string", "null"] },
						array_contains: {},
						array_starts_with: {},
						array_ends_with: {},
						lt: {},
						lte: {},
						gt: {},
						gte: {},
						not: {},
					},
				},
				db_BoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_NestedBoolFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { equals: { type: ["boolean", "null"] }, not: { $ref: "#/definitions/db_NestedBoolFilter" } },
				},
				db_PostUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						title: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						content: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_NullableJsonNullValueInput",
							enum: ["DbNull", "JsonNull"],
						},
						published: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoUpdateManyWithoutUserNestedInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
						connectOrCreate: { $ref: "#/definitions/db_TodoCreateOrConnectWithoutUserInput" },
						upsert: { $ref: "#/definitions/db_TodoUpsertWithWhereUniqueWithoutUserInput" },
						createMany: { $ref: "#/definitions/db_TodoCreateManyUserInputEnvelope" },
						set: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						disconnect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						delete: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						connect: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithWhereUniqueWithoutUserInput" },
						updateMany: { $ref: "#/definitions/db_TodoUpdateManyWithWhereWithoutUserInput" },
						deleteMany: { $ref: "#/definitions/db_TodoScalarWhereInput" },
					},
				},
				db_TodoUpsertWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						update: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
						create: { $ref: "#/definitions/db_TodoCreateWithoutUserInput" },
					},
				},
				db_TodoUpdateWithoutUserInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_TodoUpdateWithWhereUniqueWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoWhereUniqueInput" },
						data: { $ref: "#/definitions/db_TodoUpdateWithoutUserInput" },
					},
				},
				db_TodoUpdateManyWithWhereWithoutUserInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						where: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						data: { $ref: "#/definitions/db_TodoUpdateManyMutationInput" },
					},
				},
				db_TodoScalarWhereInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						AND: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoScalarWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoScalarWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
					},
				},
				db_TodoUpdateManyMutationInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						id: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						text: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						isCompleted: { $ref: "#/definitions/db_BoolFieldUpdateOperationsInput" },
						createdAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_AccountWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_AccountWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_AccountWhereInput" } },
						NOT: { $ref: "#/definitions/db_AccountWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						type: { $ref: "#/definitions/db_StringFilter" },
						provider: { $ref: "#/definitions/db_StringFilter" },
						providerAccountId: { $ref: "#/definitions/db_StringFilter" },
						refresh_token: { $ref: "#/definitions/db_StringNullableFilter" },
						access_token: { $ref: "#/definitions/db_StringNullableFilter" },
						expires_at: { $ref: "#/definitions/db_IntNullableFilter" },
						token_type: { $ref: "#/definitions/db_StringNullableFilter" },
						scope: { $ref: "#/definitions/db_StringNullableFilter" },
						id_token: { $ref: "#/definitions/db_StringNullableFilter" },
						session_state: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_UserRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						is: { $ref: "#/definitions/db_UserWhereInput" },
						isNot: { $ref: "#/definitions/db_UserWhereInput" },
					},
				},
				db_UserWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_UserWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_UserWhereInput" } },
						NOT: { $ref: "#/definitions/db_UserWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						name: { $ref: "#/definitions/db_StringNullableFilter" },
						email: { $ref: "#/definitions/db_StringNullableFilter" },
						emailVerified: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						image: { $ref: "#/definitions/db_StringNullableFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						stripeCustomerId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeSubscriptionId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripePriceId: { $ref: "#/definitions/db_StringNullableFilter" },
						stripeCurrentPeriodEnd: { $ref: "#/definitions/db_DateTimeNullableFilter" },
						accounts: { $ref: "#/definitions/db_AccountListRelationFilter" },
						sessions: { $ref: "#/definitions/db_SessionListRelationFilter" },
						Post: { $ref: "#/definitions/db_PostListRelationFilter" },
						Todo: { $ref: "#/definitions/db_TodoListRelationFilter" },
					},
				},
				db_DateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_NestedDateTimeNullableFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						equals: { type: ["string", "null"] },
						in: { type: ["array", "null"], items: { type: ["string", "null"] } },
						notIn: { type: ["array", "null"], items: { type: ["string", "null"] } },
						lt: { type: ["string", "null"] },
						lte: { type: ["string", "null"] },
						gt: { type: ["string", "null"] },
						gte: { type: ["string", "null"] },
						not: { $ref: "#/definitions/db_NestedDateTimeNullableFilter" },
					},
				},
				db_AccountListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_AccountWhereInput" },
						some: { $ref: "#/definitions/db_AccountWhereInput" },
						none: { $ref: "#/definitions/db_AccountWhereInput" },
					},
				},
				db_SessionListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_SessionWhereInput" },
						some: { $ref: "#/definitions/db_SessionWhereInput" },
						none: { $ref: "#/definitions/db_SessionWhereInput" },
					},
				},
				db_SessionWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_SessionWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_SessionWhereInput" } },
						NOT: { $ref: "#/definitions/db_SessionWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						sessionToken: { $ref: "#/definitions/db_StringFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						expires: { $ref: "#/definitions/db_DateTimeFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_PostListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_PostWhereInput" },
						some: { $ref: "#/definitions/db_PostWhereInput" },
						none: { $ref: "#/definitions/db_PostWhereInput" },
					},
				},
				db_PostWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_PostWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_PostWhereInput" } },
						NOT: { $ref: "#/definitions/db_PostWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						title: { $ref: "#/definitions/db_StringFilter" },
						content: { $ref: "#/definitions/db_JsonNullableFilter" },
						published: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						authorId: { $ref: "#/definitions/db_StringFilter" },
						author: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_TodoListRelationFilter: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						every: { $ref: "#/definitions/db_TodoWhereInput" },
						some: { $ref: "#/definitions/db_TodoWhereInput" },
						none: { $ref: "#/definitions/db_TodoWhereInput" },
					},
				},
				db_TodoWhereInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						AND: { $ref: "#/definitions/db_TodoWhereInput" },
						OR: { type: ["array", "null"], items: { $ref: "#/definitions/db_TodoWhereInput" } },
						NOT: { $ref: "#/definitions/db_TodoWhereInput" },
						id: { $ref: "#/definitions/db_StringFilter" },
						text: { $ref: "#/definitions/db_StringFilter" },
						isCompleted: { $ref: "#/definitions/db_BoolFilter" },
						createdAt: { $ref: "#/definitions/db_DateTimeFilter" },
						updatedAt: { $ref: "#/definitions/db_DateTimeFilter" },
						userId: { $ref: "#/definitions/db_StringFilter" },
						user: { $ref: "#/definitions/db_UserRelationFilter" },
					},
				},
				db_AccountOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						provider: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						providerAccountId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						refresh_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						access_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires_at: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						token_type: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						scope: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						id_token: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						session_state: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_UserOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						name: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						email: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						emailVerified: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						image: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCustomerId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripeSubscriptionId: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						stripePriceId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						stripeCurrentPeriodEnd: {
							type: ["string", "null"],
							"x-graphql-enum-name": "db_SortOrder",
							enum: ["asc", "desc"],
						},
						accounts: { $ref: "#/definitions/db_AccountOrderByRelationAggregateInput" },
						sessions: { $ref: "#/definitions/db_SessionOrderByRelationAggregateInput" },
						Post: { $ref: "#/definitions/db_PostOrderByRelationAggregateInput" },
						Todo: { $ref: "#/definitions/db_TodoOrderByRelationAggregateInput" },
					},
				},
				db_AccountOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_PostOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_TodoOrderByRelationAggregateInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_count: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
					},
				},
				db_SessionOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						sessionToken: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						expires: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_PostOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						title: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						content: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						published: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						authorId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						author: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
				db_TodoOrderByWithRelationInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						id: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						text: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						isCompleted: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						createdAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						updatedAt: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						userId: { type: ["string", "null"], "x-graphql-enum-name": "db_SortOrder", enum: ["asc", "desc"] },
						user: { $ref: "#/definitions/db_UserOrderByWithRelationInput" },
					},
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_upsertOneUser: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								email: { type: "string" },
								emailVerified: { type: "string" },
								image: { type: "string" },
								createdAt: { type: "string" },
								updatedAt: { type: "string" },
								stripeCustomerId: { type: "string" },
								stripeSubscriptionId: { type: "string" },
								stripePriceId: { type: "string" },
								stripeCurrentPeriodEnd: { type: "string" },
								accounts: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											userId: { type: "string" },
											type: { type: "string" },
											provider: { type: "string" },
											providerAccountId: { type: "string" },
											refresh_token: { type: "string" },
											access_token: { type: "string" },
											expires_at: { type: "integer" },
											token_type: { type: "string" },
											scope: { type: "string" },
											id_token: { type: "string" },
											session_state: { type: "string" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "userId", "type", "provider", "providerAccountId", "createdAt", "updatedAt"],
									},
								},
								sessions: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											sessionToken: { type: "string" },
											userId: { type: "string" },
											expires: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "sessionToken", "userId", "expires"],
									},
								},
								Post: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											title: { type: "string" },
											content: {},
											published: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											authorId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "title", "published", "createdAt", "updatedAt", "authorId"],
									},
								},
								Todo: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											text: { type: "string" },
											isCompleted: { type: "boolean" },
											createdAt: { type: "string" },
											updatedAt: { type: "string" },
											userId: { type: "string" },
										},
										additionalProperties: false,
										required: ["id", "text", "isCompleted", "createdAt", "updatedAt", "userId"],
									},
								},
								_count: {
									type: "object",
									properties: {
										accounts: { type: "integer" },
										sessions: { type: "integer" },
										Post: { type: "integer" },
										Todo: { type: "integer" },
									},
									additionalProperties: false,
									required: ["accounts", "sessions", "Post", "Todo"],
								},
							},
							additionalProperties: false,
							required: ["id", "createdAt", "updatedAt", "_count"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"db/UpsertOneVerificationToken": {
		input: {
			type: "object",
			properties: {
				where: { $ref: "#/definitions/db_VerificationTokenWhereUniqueInput" },
				create: { $ref: "#/definitions/db_VerificationTokenCreateInput" },
				update: { $ref: "#/definitions/db_VerificationTokenUpdateInput" },
			},
			additionalProperties: false,
			required: ["where", "create", "update"],
			definitions: {
				db_VerificationTokenWhereUniqueInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						token: { type: ["string", "null"] },
						identifier_token: { $ref: "#/definitions/db_VerificationTokenIdentifierTokenCompoundUniqueInput" },
					},
				},
				db_VerificationTokenIdentifierTokenCompoundUniqueInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { identifier: { type: "string" }, token: { type: "string" } },
				},
				db_VerificationTokenCreateInput: {
					additionalProperties: false,
					type: "object",
					properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
					required: ["identifier", "token", "expires"],
				},
				db_VerificationTokenUpdateInput: {
					additionalProperties: false,
					type: "object",
					properties: {
						identifier: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						token: { $ref: "#/definitions/db_StringFieldUpdateOperationsInput" },
						expires: { $ref: "#/definitions/db_DateTimeFieldUpdateOperationsInput" },
					},
				},
				db_StringFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
				db_DateTimeFieldUpdateOperationsInput: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { set: { type: ["string", "null"] } },
				},
			},
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_upsertOneVerificationToken: {
							type: "object",
							properties: { identifier: { type: "string" }, token: { type: "string" }, expires: { type: "string" } },
							additionalProperties: false,
							required: ["identifier", "token", "expires"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"todos/addTodo": {
		input: {
			type: "object",
			properties: { text: { type: "string" }, userId: { type: "string" } },
			additionalProperties: false,
			required: ["text", "userId"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_createOneTodo: {
							type: "object",
							properties: {
								id: { type: "string" },
								text: { type: "string" },
								user: {
									type: "object",
									properties: { id: { type: "string" }, name: { type: "string" } },
									additionalProperties: false,
									required: ["id"],
								},
							},
							additionalProperties: false,
							required: ["id", "text", "user"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"todos/updateTodo": {
		input: {
			type: "object",
			properties: { id: { type: "string" }, text: { type: "string" }, isCompleted: { type: "boolean" } },
			additionalProperties: false,
			required: ["id", "text", "isCompleted"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						db_updateOneTodo: {
							type: "object",
							properties: { id: { type: "string" }, text: { type: "string" }, isCompleted: { type: "boolean" } },
							additionalProperties: false,
							required: ["id", "text", "isCompleted"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"users/update": {
		input: {
			type: "object",
			properties: { id: { type: "string" }, name: { type: "string" }, bio: { type: "string" } },
			required: ["id", "name", "bio"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: {
			type: "object",
			properties: { name: { type: "string" }, id: { type: "string" }, bio: { type: "string" } },
			required: ["bio", "id", "name"],
		},
		operationType: "MUTATION",
		description: "generated/bundle/operations/users/update",
	},
	"users/subscribe": {
		input: {
			type: "object",
			properties: { id: { type: "string" } },
			required: ["id"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: {
			type: "object",
			properties: {
				id: { type: "string" },
				name: { type: "string", default: "Jens" },
				bio: { type: "string", default: "Founder of WunderGraph" },
				time: { type: "string" },
			},
			required: ["bio", "id", "name", "time"],
		},
		operationType: "SUBSCRIPTION",
		description: "generated/bundle/operations/users/subscribe",
	},
};

export type QueryNames =
	| "countries/Continent"
	| "countries/Continents"
	| "countries/Countries"
	| "countries/Country"
	| "countries/CountryByCode"
	| "countries/Language"
	| "countries/Languages"
	| "db/AggregateAccount"
	| "db/AggregatePost"
	| "db/AggregateSession"
	| "db/AggregateTodo"
	| "db/AggregateUser"
	| "db/AggregateVerificationToken"
	| "db/FindFirstAccount"
	| "db/FindFirstAccountOrThrow"
	| "db/FindFirstPost"
	| "db/FindFirstPostOrThrow"
	| "db/FindFirstSession"
	| "db/FindFirstSessionOrThrow"
	| "db/FindFirstTodo"
	| "db/FindFirstTodoOrThrow"
	| "db/FindFirstUser"
	| "db/FindFirstUserOrThrow"
	| "db/FindFirstVerificationToken"
	| "db/FindFirstVerificationTokenOrThrow"
	| "db/FindManyAccount"
	| "db/FindManyPost"
	| "db/FindManySession"
	| "db/FindManyTodo"
	| "db/FindManyUser"
	| "db/FindManyVerificationToken"
	| "db/FindUniqueAccount"
	| "db/FindUniqueAccountOrThrow"
	| "db/FindUniquePost"
	| "db/FindUniquePostOrThrow"
	| "db/FindUniqueSession"
	| "db/FindUniqueSessionOrThrow"
	| "db/FindUniqueTodo"
	| "db/FindUniqueTodoOrThrow"
	| "db/FindUniqueUser"
	| "db/FindUniqueUserOrThrow"
	| "db/FindUniqueVerificationToken"
	| "db/FindUniqueVerificationTokenOrThrow"
	| "db/GroupByAccount"
	| "db/GroupByPost"
	| "db/GroupBySession"
	| "db/GroupByTodo"
	| "db/GroupByUser"
	| "db/GroupByVerificationToken"
	| "db/QueryRaw"
	| "db/QueryRawJSON"
	| "todos/getAllTodosForCurrentUser"
	| "weather/GetCityById"
	| "weather/GetCityByName"
	| "openai/extract-website-metadata"
	| "openai/load-url"
	| "openai/summarize-url-content"
	| "openai/summary"
	| "openai/weather"
	| "users/get";

export type MutationNames =
	| "db/CreateManyAccount"
	| "db/CreateManyPost"
	| "db/CreateManySession"
	| "db/CreateManyTodo"
	| "db/CreateManyUser"
	| "db/CreateManyVerificationToken"
	| "db/CreateOneAccount"
	| "db/CreateOnePost"
	| "db/CreateOneSession"
	| "db/CreateOneTodo"
	| "db/CreateOneUser"
	| "db/CreateOneVerificationToken"
	| "db/DeleteManyAccount"
	| "db/DeleteManyPost"
	| "db/DeleteManySession"
	| "db/DeleteManyTodo"
	| "db/DeleteManyUser"
	| "db/DeleteManyVerificationToken"
	| "db/DeleteOneAccount"
	| "db/DeleteOnePost"
	| "db/DeleteOneSession"
	| "db/DeleteOneTodo"
	| "db/DeleteOneUser"
	| "db/DeleteOneVerificationToken"
	| "db/ExecuteRaw"
	| "db/UpdateManyAccount"
	| "db/UpdateManyPost"
	| "db/UpdateManySession"
	| "db/UpdateManyTodo"
	| "db/UpdateManyUser"
	| "db/UpdateManyVerificationToken"
	| "db/UpdateOneAccount"
	| "db/UpdateOnePost"
	| "db/UpdateOneSession"
	| "db/UpdateOneTodo"
	| "db/UpdateOneUser"
	| "db/UpdateOneVerificationToken"
	| "db/UpsertOneAccount"
	| "db/UpsertOnePost"
	| "db/UpsertOneSession"
	| "db/UpsertOneTodo"
	| "db/UpsertOneUser"
	| "db/UpsertOneVerificationToken"
	| "todos/addTodo"
	| "todos/updateTodo"
	| "users/update";

export type SubscriptionNames = "users/subscribe";

export default jsonSchema;
