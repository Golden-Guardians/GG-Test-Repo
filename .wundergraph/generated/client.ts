import type {
	ClientConfig,
	CreateClientConfig,
	User,
	UploadRequestOptions,
	OperationMetadata,
	OperationsDefinition,
	OperationRequestOptions,
	SubscriptionRequestOptions,
	SubscriptionEventHandler,
	FetchUserRequestOptions,
	UploadValidationOptions,
	QueryRequestOptions,
	MutationRequestOptions,
	ClientOperationErrors,
	ExtractProfileName,
	ExtractMeta,
	GraphQLError,
} from "@wundergraph/sdk/client";
import { Client } from "@wundergraph/sdk/client";
import type { OperationErrors } from "./ts-operation-errors";

import type { PublicCustomClaims } from "./claims";
import type {
	ClientPortalAggregateActivityResponse,
	ClientPortalAggregateActivityInput,
	ClientPortalAggregateActivityResponseData,
	ClientPortalAggregateClientResponse,
	ClientPortalAggregateClientInput,
	ClientPortalAggregateClientResponseData,
	ClientPortalAggregateServiceResponse,
	ClientPortalAggregateServiceInput,
	ClientPortalAggregateServiceResponseData,
	ClientPortalCreateManyActivityResponse,
	ClientPortalCreateManyActivityInput,
	ClientPortalCreateManyActivityResponseData,
	ClientPortalCreateManyClientResponse,
	ClientPortalCreateManyClientInput,
	ClientPortalCreateManyClientResponseData,
	ClientPortalCreateManyServiceResponse,
	ClientPortalCreateManyServiceInput,
	ClientPortalCreateManyServiceResponseData,
	ClientPortalCreateOneActivityResponse,
	ClientPortalCreateOneActivityInput,
	ClientPortalCreateOneActivityResponseData,
	ClientPortalCreateOneClientResponse,
	ClientPortalCreateOneClientInput,
	ClientPortalCreateOneClientResponseData,
	ClientPortalCreateOneServiceResponse,
	ClientPortalCreateOneServiceInput,
	ClientPortalCreateOneServiceResponseData,
	ClientPortalDeleteManyActivityResponse,
	ClientPortalDeleteManyActivityInput,
	ClientPortalDeleteManyActivityResponseData,
	ClientPortalDeleteManyClientResponse,
	ClientPortalDeleteManyClientInput,
	ClientPortalDeleteManyClientResponseData,
	ClientPortalDeleteManyServiceResponse,
	ClientPortalDeleteManyServiceInput,
	ClientPortalDeleteManyServiceResponseData,
	ClientPortalDeleteOneActivityResponse,
	ClientPortalDeleteOneActivityInput,
	ClientPortalDeleteOneActivityResponseData,
	ClientPortalDeleteOneClientResponse,
	ClientPortalDeleteOneClientInput,
	ClientPortalDeleteOneClientResponseData,
	ClientPortalDeleteOneServiceResponse,
	ClientPortalDeleteOneServiceInput,
	ClientPortalDeleteOneServiceResponseData,
	ClientPortalExecuteRawResponse,
	ClientPortalExecuteRawInput,
	ClientPortalExecuteRawResponseData,
	ClientPortalFindFirstActivityResponse,
	ClientPortalFindFirstActivityInput,
	ClientPortalFindFirstActivityResponseData,
	ClientPortalFindFirstActivityOrThrowResponse,
	ClientPortalFindFirstActivityOrThrowInput,
	ClientPortalFindFirstActivityOrThrowResponseData,
	ClientPortalFindFirstClientResponse,
	ClientPortalFindFirstClientInput,
	ClientPortalFindFirstClientResponseData,
	ClientPortalFindFirstClientOrThrowResponse,
	ClientPortalFindFirstClientOrThrowInput,
	ClientPortalFindFirstClientOrThrowResponseData,
	ClientPortalFindFirstServiceResponse,
	ClientPortalFindFirstServiceInput,
	ClientPortalFindFirstServiceResponseData,
	ClientPortalFindFirstServiceOrThrowResponse,
	ClientPortalFindFirstServiceOrThrowInput,
	ClientPortalFindFirstServiceOrThrowResponseData,
	ClientPortalFindManyActivityResponse,
	ClientPortalFindManyActivityInput,
	ClientPortalFindManyActivityResponseData,
	ClientPortalFindManyClientResponse,
	ClientPortalFindManyClientInput,
	ClientPortalFindManyClientResponseData,
	ClientPortalFindManyServiceResponse,
	ClientPortalFindManyServiceInput,
	ClientPortalFindManyServiceResponseData,
	ClientPortalFindUniqueActivityResponse,
	ClientPortalFindUniqueActivityInput,
	ClientPortalFindUniqueActivityResponseData,
	ClientPortalFindUniqueActivityOrThrowResponse,
	ClientPortalFindUniqueActivityOrThrowInput,
	ClientPortalFindUniqueActivityOrThrowResponseData,
	ClientPortalFindUniqueClientResponse,
	ClientPortalFindUniqueClientInput,
	ClientPortalFindUniqueClientResponseData,
	ClientPortalFindUniqueClientOrThrowResponse,
	ClientPortalFindUniqueClientOrThrowInput,
	ClientPortalFindUniqueClientOrThrowResponseData,
	ClientPortalFindUniqueServiceResponse,
	ClientPortalFindUniqueServiceInput,
	ClientPortalFindUniqueServiceResponseData,
	ClientPortalFindUniqueServiceOrThrowResponse,
	ClientPortalFindUniqueServiceOrThrowInput,
	ClientPortalFindUniqueServiceOrThrowResponseData,
	ClientPortalGroupByActivityResponse,
	ClientPortalGroupByActivityInput,
	ClientPortalGroupByActivityResponseData,
	ClientPortalGroupByClientResponse,
	ClientPortalGroupByClientInput,
	ClientPortalGroupByClientResponseData,
	ClientPortalGroupByServiceResponse,
	ClientPortalGroupByServiceInput,
	ClientPortalGroupByServiceResponseData,
	ClientPortalQueryRawResponse,
	ClientPortalQueryRawInput,
	ClientPortalQueryRawResponseData,
	ClientPortalQueryRawJSONResponse,
	ClientPortalQueryRawJSONInput,
	ClientPortalQueryRawJSONResponseData,
	ClientPortalUpdateManyActivityResponse,
	ClientPortalUpdateManyActivityInput,
	ClientPortalUpdateManyActivityResponseData,
	ClientPortalUpdateManyClientResponse,
	ClientPortalUpdateManyClientInput,
	ClientPortalUpdateManyClientResponseData,
	ClientPortalUpdateManyServiceResponse,
	ClientPortalUpdateManyServiceInput,
	ClientPortalUpdateManyServiceResponseData,
	ClientPortalUpdateOneActivityResponse,
	ClientPortalUpdateOneActivityInput,
	ClientPortalUpdateOneActivityResponseData,
	ClientPortalUpdateOneClientResponse,
	ClientPortalUpdateOneClientInput,
	ClientPortalUpdateOneClientResponseData,
	ClientPortalUpdateOneServiceResponse,
	ClientPortalUpdateOneServiceInput,
	ClientPortalUpdateOneServiceResponseData,
	ClientPortalUpsertOneActivityResponse,
	ClientPortalUpsertOneActivityInput,
	ClientPortalUpsertOneActivityResponseData,
	ClientPortalUpsertOneClientResponse,
	ClientPortalUpsertOneClientInput,
	ClientPortalUpsertOneClientResponseData,
	ClientPortalUpsertOneServiceResponse,
	ClientPortalUpsertOneServiceInput,
	ClientPortalUpsertOneServiceResponseData,
	CountriesContinentResponse,
	CountriesContinentInput,
	CountriesContinentResponseData,
	CountriesContinentsResponse,
	CountriesContinentsInput,
	CountriesContinentsResponseData,
	CountriesCountriesResponse,
	CountriesCountriesInput,
	CountriesCountriesResponseData,
	CountriesCountryResponse,
	CountriesCountryInput,
	CountriesCountryResponseData,
	CountriesCountryByCodeResponse,
	CountriesCountryByCodeInput,
	CountriesCountryByCodeResponseData,
	CountriesLanguageResponse,
	CountriesLanguageInput,
	CountriesLanguageResponseData,
	CountriesLanguagesResponse,
	CountriesLanguagesInput,
	CountriesLanguagesResponseData,
	CustomerCommunicationAggregateAccountResponse,
	CustomerCommunicationAggregateAccountInput,
	CustomerCommunicationAggregateAccountResponseData,
	CustomerCommunicationAggregateFilterResponse,
	CustomerCommunicationAggregateFilterInput,
	CustomerCommunicationAggregateFilterResponseData,
	CustomerCommunicationAggregateInteractionResponse,
	CustomerCommunicationAggregateInteractionInput,
	CustomerCommunicationAggregateInteractionResponseData,
	CustomerCommunicationAggregateSessionResponse,
	CustomerCommunicationAggregateSessionInput,
	CustomerCommunicationAggregateSessionResponseData,
	CustomerCommunicationAggregateUserResponse,
	CustomerCommunicationAggregateUserInput,
	CustomerCommunicationAggregateUserResponseData,
	CustomerCommunicationAggregateVerificationTokenResponse,
	CustomerCommunicationAggregateVerificationTokenInput,
	CustomerCommunicationAggregateVerificationTokenResponseData,
	CustomerCommunicationAggregateWidgetResponse,
	CustomerCommunicationAggregateWidgetInput,
	CustomerCommunicationAggregateWidgetResponseData,
	CustomerCommunicationCreateManyAccountResponse,
	CustomerCommunicationCreateManyAccountInput,
	CustomerCommunicationCreateManyAccountResponseData,
	CustomerCommunicationCreateManyFilterResponse,
	CustomerCommunicationCreateManyFilterInput,
	CustomerCommunicationCreateManyFilterResponseData,
	CustomerCommunicationCreateManyInteractionResponse,
	CustomerCommunicationCreateManyInteractionInput,
	CustomerCommunicationCreateManyInteractionResponseData,
	CustomerCommunicationCreateManySessionResponse,
	CustomerCommunicationCreateManySessionInput,
	CustomerCommunicationCreateManySessionResponseData,
	CustomerCommunicationCreateManyUserResponse,
	CustomerCommunicationCreateManyUserInput,
	CustomerCommunicationCreateManyUserResponseData,
	CustomerCommunicationCreateManyVerificationTokenResponse,
	CustomerCommunicationCreateManyVerificationTokenInput,
	CustomerCommunicationCreateManyVerificationTokenResponseData,
	CustomerCommunicationCreateManyWidgetResponse,
	CustomerCommunicationCreateManyWidgetInput,
	CustomerCommunicationCreateManyWidgetResponseData,
	CustomerCommunicationCreateOneAccountResponse,
	CustomerCommunicationCreateOneAccountInput,
	CustomerCommunicationCreateOneAccountResponseData,
	CustomerCommunicationCreateOneFilterResponse,
	CustomerCommunicationCreateOneFilterInput,
	CustomerCommunicationCreateOneFilterResponseData,
	CustomerCommunicationCreateOneInteractionResponse,
	CustomerCommunicationCreateOneInteractionInput,
	CustomerCommunicationCreateOneInteractionResponseData,
	CustomerCommunicationCreateOneSessionResponse,
	CustomerCommunicationCreateOneSessionInput,
	CustomerCommunicationCreateOneSessionResponseData,
	CustomerCommunicationCreateOneUserResponse,
	CustomerCommunicationCreateOneUserInput,
	CustomerCommunicationCreateOneUserResponseData,
	CustomerCommunicationCreateOneVerificationTokenResponse,
	CustomerCommunicationCreateOneVerificationTokenInput,
	CustomerCommunicationCreateOneVerificationTokenResponseData,
	CustomerCommunicationCreateOneWidgetResponse,
	CustomerCommunicationCreateOneWidgetInput,
	CustomerCommunicationCreateOneWidgetResponseData,
	CustomerCommunicationDeleteManyAccountResponse,
	CustomerCommunicationDeleteManyAccountInput,
	CustomerCommunicationDeleteManyAccountResponseData,
	CustomerCommunicationDeleteManyFilterResponse,
	CustomerCommunicationDeleteManyFilterInput,
	CustomerCommunicationDeleteManyFilterResponseData,
	CustomerCommunicationDeleteManyInteractionResponse,
	CustomerCommunicationDeleteManyInteractionInput,
	CustomerCommunicationDeleteManyInteractionResponseData,
	CustomerCommunicationDeleteManySessionResponse,
	CustomerCommunicationDeleteManySessionInput,
	CustomerCommunicationDeleteManySessionResponseData,
	CustomerCommunicationDeleteManyUserResponse,
	CustomerCommunicationDeleteManyUserInput,
	CustomerCommunicationDeleteManyUserResponseData,
	CustomerCommunicationDeleteManyVerificationTokenResponse,
	CustomerCommunicationDeleteManyVerificationTokenInput,
	CustomerCommunicationDeleteManyVerificationTokenResponseData,
	CustomerCommunicationDeleteManyWidgetResponse,
	CustomerCommunicationDeleteManyWidgetInput,
	CustomerCommunicationDeleteManyWidgetResponseData,
	CustomerCommunicationDeleteOneAccountResponse,
	CustomerCommunicationDeleteOneAccountInput,
	CustomerCommunicationDeleteOneAccountResponseData,
	CustomerCommunicationDeleteOneFilterResponse,
	CustomerCommunicationDeleteOneFilterInput,
	CustomerCommunicationDeleteOneFilterResponseData,
	CustomerCommunicationDeleteOneInteractionResponse,
	CustomerCommunicationDeleteOneInteractionInput,
	CustomerCommunicationDeleteOneInteractionResponseData,
	CustomerCommunicationDeleteOneSessionResponse,
	CustomerCommunicationDeleteOneSessionInput,
	CustomerCommunicationDeleteOneSessionResponseData,
	CustomerCommunicationDeleteOneUserResponse,
	CustomerCommunicationDeleteOneUserInput,
	CustomerCommunicationDeleteOneUserResponseData,
	CustomerCommunicationDeleteOneVerificationTokenResponse,
	CustomerCommunicationDeleteOneVerificationTokenInput,
	CustomerCommunicationDeleteOneVerificationTokenResponseData,
	CustomerCommunicationDeleteOneWidgetResponse,
	CustomerCommunicationDeleteOneWidgetInput,
	CustomerCommunicationDeleteOneWidgetResponseData,
	CustomerCommunicationExecuteRawResponse,
	CustomerCommunicationExecuteRawInput,
	CustomerCommunicationExecuteRawResponseData,
	CustomerCommunicationFindFirstAccountResponse,
	CustomerCommunicationFindFirstAccountInput,
	CustomerCommunicationFindFirstAccountResponseData,
	CustomerCommunicationFindFirstAccountOrThrowResponse,
	CustomerCommunicationFindFirstAccountOrThrowInput,
	CustomerCommunicationFindFirstAccountOrThrowResponseData,
	CustomerCommunicationFindFirstFilterResponse,
	CustomerCommunicationFindFirstFilterInput,
	CustomerCommunicationFindFirstFilterResponseData,
	CustomerCommunicationFindFirstFilterOrThrowResponse,
	CustomerCommunicationFindFirstFilterOrThrowInput,
	CustomerCommunicationFindFirstFilterOrThrowResponseData,
	CustomerCommunicationFindFirstInteractionResponse,
	CustomerCommunicationFindFirstInteractionInput,
	CustomerCommunicationFindFirstInteractionResponseData,
	CustomerCommunicationFindFirstInteractionOrThrowResponse,
	CustomerCommunicationFindFirstInteractionOrThrowInput,
	CustomerCommunicationFindFirstInteractionOrThrowResponseData,
	CustomerCommunicationFindFirstSessionResponse,
	CustomerCommunicationFindFirstSessionInput,
	CustomerCommunicationFindFirstSessionResponseData,
	CustomerCommunicationFindFirstSessionOrThrowResponse,
	CustomerCommunicationFindFirstSessionOrThrowInput,
	CustomerCommunicationFindFirstSessionOrThrowResponseData,
	CustomerCommunicationFindFirstUserResponse,
	CustomerCommunicationFindFirstUserInput,
	CustomerCommunicationFindFirstUserResponseData,
	CustomerCommunicationFindFirstUserOrThrowResponse,
	CustomerCommunicationFindFirstUserOrThrowInput,
	CustomerCommunicationFindFirstUserOrThrowResponseData,
	CustomerCommunicationFindFirstVerificationTokenResponse,
	CustomerCommunicationFindFirstVerificationTokenInput,
	CustomerCommunicationFindFirstVerificationTokenResponseData,
	CustomerCommunicationFindFirstVerificationTokenOrThrowResponse,
	CustomerCommunicationFindFirstVerificationTokenOrThrowInput,
	CustomerCommunicationFindFirstVerificationTokenOrThrowResponseData,
	CustomerCommunicationFindFirstWidgetResponse,
	CustomerCommunicationFindFirstWidgetInput,
	CustomerCommunicationFindFirstWidgetResponseData,
	CustomerCommunicationFindFirstWidgetOrThrowResponse,
	CustomerCommunicationFindFirstWidgetOrThrowInput,
	CustomerCommunicationFindFirstWidgetOrThrowResponseData,
	CustomerCommunicationFindManyAccountResponse,
	CustomerCommunicationFindManyAccountInput,
	CustomerCommunicationFindManyAccountResponseData,
	CustomerCommunicationFindManyFilterResponse,
	CustomerCommunicationFindManyFilterInput,
	CustomerCommunicationFindManyFilterResponseData,
	CustomerCommunicationFindManyInteractionResponse,
	CustomerCommunicationFindManyInteractionInput,
	CustomerCommunicationFindManyInteractionResponseData,
	CustomerCommunicationFindManySessionResponse,
	CustomerCommunicationFindManySessionInput,
	CustomerCommunicationFindManySessionResponseData,
	CustomerCommunicationFindManyUserResponse,
	CustomerCommunicationFindManyUserInput,
	CustomerCommunicationFindManyUserResponseData,
	CustomerCommunicationFindManyVerificationTokenResponse,
	CustomerCommunicationFindManyVerificationTokenInput,
	CustomerCommunicationFindManyVerificationTokenResponseData,
	CustomerCommunicationFindManyWidgetResponse,
	CustomerCommunicationFindManyWidgetInput,
	CustomerCommunicationFindManyWidgetResponseData,
	CustomerCommunicationFindUniqueAccountResponse,
	CustomerCommunicationFindUniqueAccountInput,
	CustomerCommunicationFindUniqueAccountResponseData,
	CustomerCommunicationFindUniqueAccountOrThrowResponse,
	CustomerCommunicationFindUniqueAccountOrThrowInput,
	CustomerCommunicationFindUniqueAccountOrThrowResponseData,
	CustomerCommunicationFindUniqueFilterResponse,
	CustomerCommunicationFindUniqueFilterInput,
	CustomerCommunicationFindUniqueFilterResponseData,
	CustomerCommunicationFindUniqueFilterOrThrowResponse,
	CustomerCommunicationFindUniqueFilterOrThrowInput,
	CustomerCommunicationFindUniqueFilterOrThrowResponseData,
	CustomerCommunicationFindUniqueInteractionResponse,
	CustomerCommunicationFindUniqueInteractionInput,
	CustomerCommunicationFindUniqueInteractionResponseData,
	CustomerCommunicationFindUniqueInteractionOrThrowResponse,
	CustomerCommunicationFindUniqueInteractionOrThrowInput,
	CustomerCommunicationFindUniqueInteractionOrThrowResponseData,
	CustomerCommunicationFindUniqueSessionResponse,
	CustomerCommunicationFindUniqueSessionInput,
	CustomerCommunicationFindUniqueSessionResponseData,
	CustomerCommunicationFindUniqueSessionOrThrowResponse,
	CustomerCommunicationFindUniqueSessionOrThrowInput,
	CustomerCommunicationFindUniqueSessionOrThrowResponseData,
	CustomerCommunicationFindUniqueUserResponse,
	CustomerCommunicationFindUniqueUserInput,
	CustomerCommunicationFindUniqueUserResponseData,
	CustomerCommunicationFindUniqueUserOrThrowResponse,
	CustomerCommunicationFindUniqueUserOrThrowInput,
	CustomerCommunicationFindUniqueUserOrThrowResponseData,
	CustomerCommunicationFindUniqueVerificationTokenResponse,
	CustomerCommunicationFindUniqueVerificationTokenInput,
	CustomerCommunicationFindUniqueVerificationTokenResponseData,
	CustomerCommunicationFindUniqueVerificationTokenOrThrowResponse,
	CustomerCommunicationFindUniqueVerificationTokenOrThrowInput,
	CustomerCommunicationFindUniqueVerificationTokenOrThrowResponseData,
	CustomerCommunicationFindUniqueWidgetResponse,
	CustomerCommunicationFindUniqueWidgetInput,
	CustomerCommunicationFindUniqueWidgetResponseData,
	CustomerCommunicationFindUniqueWidgetOrThrowResponse,
	CustomerCommunicationFindUniqueWidgetOrThrowInput,
	CustomerCommunicationFindUniqueWidgetOrThrowResponseData,
	CustomerCommunicationGroupByAccountResponse,
	CustomerCommunicationGroupByAccountInput,
	CustomerCommunicationGroupByAccountResponseData,
	CustomerCommunicationGroupByFilterResponse,
	CustomerCommunicationGroupByFilterInput,
	CustomerCommunicationGroupByFilterResponseData,
	CustomerCommunicationGroupByInteractionResponse,
	CustomerCommunicationGroupByInteractionInput,
	CustomerCommunicationGroupByInteractionResponseData,
	CustomerCommunicationGroupBySessionResponse,
	CustomerCommunicationGroupBySessionInput,
	CustomerCommunicationGroupBySessionResponseData,
	CustomerCommunicationGroupByUserResponse,
	CustomerCommunicationGroupByUserInput,
	CustomerCommunicationGroupByUserResponseData,
	CustomerCommunicationGroupByVerificationTokenResponse,
	CustomerCommunicationGroupByVerificationTokenInput,
	CustomerCommunicationGroupByVerificationTokenResponseData,
	CustomerCommunicationGroupByWidgetResponse,
	CustomerCommunicationGroupByWidgetInput,
	CustomerCommunicationGroupByWidgetResponseData,
	CustomerCommunicationQueryRawResponse,
	CustomerCommunicationQueryRawInput,
	CustomerCommunicationQueryRawResponseData,
	CustomerCommunicationQueryRawJSONResponse,
	CustomerCommunicationQueryRawJSONInput,
	CustomerCommunicationQueryRawJSONResponseData,
	CustomerCommunicationUpdateManyAccountResponse,
	CustomerCommunicationUpdateManyAccountInput,
	CustomerCommunicationUpdateManyAccountResponseData,
	CustomerCommunicationUpdateManyFilterResponse,
	CustomerCommunicationUpdateManyFilterInput,
	CustomerCommunicationUpdateManyFilterResponseData,
	CustomerCommunicationUpdateManyInteractionResponse,
	CustomerCommunicationUpdateManyInteractionInput,
	CustomerCommunicationUpdateManyInteractionResponseData,
	CustomerCommunicationUpdateManySessionResponse,
	CustomerCommunicationUpdateManySessionInput,
	CustomerCommunicationUpdateManySessionResponseData,
	CustomerCommunicationUpdateManyUserResponse,
	CustomerCommunicationUpdateManyUserInput,
	CustomerCommunicationUpdateManyUserResponseData,
	CustomerCommunicationUpdateManyVerificationTokenResponse,
	CustomerCommunicationUpdateManyVerificationTokenInput,
	CustomerCommunicationUpdateManyVerificationTokenResponseData,
	CustomerCommunicationUpdateManyWidgetResponse,
	CustomerCommunicationUpdateManyWidgetInput,
	CustomerCommunicationUpdateManyWidgetResponseData,
	CustomerCommunicationUpdateOneAccountResponse,
	CustomerCommunicationUpdateOneAccountInput,
	CustomerCommunicationUpdateOneAccountResponseData,
	CustomerCommunicationUpdateOneFilterResponse,
	CustomerCommunicationUpdateOneFilterInput,
	CustomerCommunicationUpdateOneFilterResponseData,
	CustomerCommunicationUpdateOneInteractionResponse,
	CustomerCommunicationUpdateOneInteractionInput,
	CustomerCommunicationUpdateOneInteractionResponseData,
	CustomerCommunicationUpdateOneSessionResponse,
	CustomerCommunicationUpdateOneSessionInput,
	CustomerCommunicationUpdateOneSessionResponseData,
	CustomerCommunicationUpdateOneUserResponse,
	CustomerCommunicationUpdateOneUserInput,
	CustomerCommunicationUpdateOneUserResponseData,
	CustomerCommunicationUpdateOneVerificationTokenResponse,
	CustomerCommunicationUpdateOneVerificationTokenInput,
	CustomerCommunicationUpdateOneVerificationTokenResponseData,
	CustomerCommunicationUpdateOneWidgetResponse,
	CustomerCommunicationUpdateOneWidgetInput,
	CustomerCommunicationUpdateOneWidgetResponseData,
	CustomerCommunicationUpsertOneAccountResponse,
	CustomerCommunicationUpsertOneAccountInput,
	CustomerCommunicationUpsertOneAccountResponseData,
	CustomerCommunicationUpsertOneFilterResponse,
	CustomerCommunicationUpsertOneFilterInput,
	CustomerCommunicationUpsertOneFilterResponseData,
	CustomerCommunicationUpsertOneInteractionResponse,
	CustomerCommunicationUpsertOneInteractionInput,
	CustomerCommunicationUpsertOneInteractionResponseData,
	CustomerCommunicationUpsertOneSessionResponse,
	CustomerCommunicationUpsertOneSessionInput,
	CustomerCommunicationUpsertOneSessionResponseData,
	CustomerCommunicationUpsertOneUserResponse,
	CustomerCommunicationUpsertOneUserInput,
	CustomerCommunicationUpsertOneUserResponseData,
	CustomerCommunicationUpsertOneVerificationTokenResponse,
	CustomerCommunicationUpsertOneVerificationTokenInput,
	CustomerCommunicationUpsertOneVerificationTokenResponseData,
	CustomerCommunicationUpsertOneWidgetResponse,
	CustomerCommunicationUpsertOneWidgetInput,
	CustomerCommunicationUpsertOneWidgetResponseData,
	GpacAggregateAdminActionResponse,
	GpacAggregateAdminActionInput,
	GpacAggregateAdminActionResponseData,
	GpacAggregatePolicyResponse,
	GpacAggregatePolicyInput,
	GpacAggregatePolicyResponseData,
	GpacAggregateUserResponse,
	GpacAggregateUserInput,
	GpacAggregateUserResponseData,
	GpacCreateManyAdminActionResponse,
	GpacCreateManyAdminActionInput,
	GpacCreateManyAdminActionResponseData,
	GpacCreateManyPolicyResponse,
	GpacCreateManyPolicyInput,
	GpacCreateManyPolicyResponseData,
	GpacCreateManyUserResponse,
	GpacCreateManyUserInput,
	GpacCreateManyUserResponseData,
	GpacCreateOneAdminActionResponse,
	GpacCreateOneAdminActionInput,
	GpacCreateOneAdminActionResponseData,
	GpacCreateOnePolicyResponse,
	GpacCreateOnePolicyInput,
	GpacCreateOnePolicyResponseData,
	GpacCreateOneUserResponse,
	GpacCreateOneUserInput,
	GpacCreateOneUserResponseData,
	GpacDeleteManyAdminActionResponse,
	GpacDeleteManyAdminActionInput,
	GpacDeleteManyAdminActionResponseData,
	GpacDeleteManyPolicyResponse,
	GpacDeleteManyPolicyInput,
	GpacDeleteManyPolicyResponseData,
	GpacDeleteManyUserResponse,
	GpacDeleteManyUserInput,
	GpacDeleteManyUserResponseData,
	GpacDeleteOneAdminActionResponse,
	GpacDeleteOneAdminActionInput,
	GpacDeleteOneAdminActionResponseData,
	GpacDeleteOnePolicyResponse,
	GpacDeleteOnePolicyInput,
	GpacDeleteOnePolicyResponseData,
	GpacDeleteOneUserResponse,
	GpacDeleteOneUserInput,
	GpacDeleteOneUserResponseData,
	GpacExecuteRawResponse,
	GpacExecuteRawInput,
	GpacExecuteRawResponseData,
	GpacFindFirstAdminActionResponse,
	GpacFindFirstAdminActionInput,
	GpacFindFirstAdminActionResponseData,
	GpacFindFirstAdminActionOrThrowResponse,
	GpacFindFirstAdminActionOrThrowInput,
	GpacFindFirstAdminActionOrThrowResponseData,
	GpacFindFirstPolicyResponse,
	GpacFindFirstPolicyInput,
	GpacFindFirstPolicyResponseData,
	GpacFindFirstPolicyOrThrowResponse,
	GpacFindFirstPolicyOrThrowInput,
	GpacFindFirstPolicyOrThrowResponseData,
	GpacFindFirstUserResponse,
	GpacFindFirstUserInput,
	GpacFindFirstUserResponseData,
	GpacFindFirstUserOrThrowResponse,
	GpacFindFirstUserOrThrowInput,
	GpacFindFirstUserOrThrowResponseData,
	GpacFindManyAdminActionResponse,
	GpacFindManyAdminActionInput,
	GpacFindManyAdminActionResponseData,
	GpacFindManyPolicyResponse,
	GpacFindManyPolicyInput,
	GpacFindManyPolicyResponseData,
	GpacFindManyUserResponse,
	GpacFindManyUserInput,
	GpacFindManyUserResponseData,
	GpacFindUniqueAdminActionResponse,
	GpacFindUniqueAdminActionInput,
	GpacFindUniqueAdminActionResponseData,
	GpacFindUniqueAdminActionOrThrowResponse,
	GpacFindUniqueAdminActionOrThrowInput,
	GpacFindUniqueAdminActionOrThrowResponseData,
	GpacFindUniquePolicyResponse,
	GpacFindUniquePolicyInput,
	GpacFindUniquePolicyResponseData,
	GpacFindUniquePolicyOrThrowResponse,
	GpacFindUniquePolicyOrThrowInput,
	GpacFindUniquePolicyOrThrowResponseData,
	GpacFindUniqueUserResponse,
	GpacFindUniqueUserInput,
	GpacFindUniqueUserResponseData,
	GpacFindUniqueUserOrThrowResponse,
	GpacFindUniqueUserOrThrowInput,
	GpacFindUniqueUserOrThrowResponseData,
	GpacGroupByAdminActionResponse,
	GpacGroupByAdminActionInput,
	GpacGroupByAdminActionResponseData,
	GpacGroupByPolicyResponse,
	GpacGroupByPolicyInput,
	GpacGroupByPolicyResponseData,
	GpacGroupByUserResponse,
	GpacGroupByUserInput,
	GpacGroupByUserResponseData,
	GpacQueryRawResponse,
	GpacQueryRawInput,
	GpacQueryRawResponseData,
	GpacQueryRawJSONResponse,
	GpacQueryRawJSONInput,
	GpacQueryRawJSONResponseData,
	GpacUpdateManyAdminActionResponse,
	GpacUpdateManyAdminActionInput,
	GpacUpdateManyAdminActionResponseData,
	GpacUpdateManyPolicyResponse,
	GpacUpdateManyPolicyInput,
	GpacUpdateManyPolicyResponseData,
	GpacUpdateManyUserResponse,
	GpacUpdateManyUserInput,
	GpacUpdateManyUserResponseData,
	GpacUpdateOneAdminActionResponse,
	GpacUpdateOneAdminActionInput,
	GpacUpdateOneAdminActionResponseData,
	GpacUpdateOnePolicyResponse,
	GpacUpdateOnePolicyInput,
	GpacUpdateOnePolicyResponseData,
	GpacUpdateOneUserResponse,
	GpacUpdateOneUserInput,
	GpacUpdateOneUserResponseData,
	GpacUpsertOneAdminActionResponse,
	GpacUpsertOneAdminActionInput,
	GpacUpsertOneAdminActionResponseData,
	GpacUpsertOnePolicyResponse,
	GpacUpsertOnePolicyInput,
	GpacUpsertOnePolicyResponseData,
	GpacUpsertOneUserResponse,
	GpacUpsertOneUserInput,
	GpacUpsertOneUserResponseData,
	GuardianOnlineAggregateFeatureResponse,
	GuardianOnlineAggregateFeatureInput,
	GuardianOnlineAggregateFeatureResponseData,
	GuardianOnlineAggregateUserResponse,
	GuardianOnlineAggregateUserInput,
	GuardianOnlineAggregateUserResponseData,
	GuardianOnlineAggregateUserLogResponse,
	GuardianOnlineAggregateUserLogInput,
	GuardianOnlineAggregateUserLogResponseData,
	GuardianOnlineCreateManyFeatureResponse,
	GuardianOnlineCreateManyFeatureInput,
	GuardianOnlineCreateManyFeatureResponseData,
	GuardianOnlineCreateManyUserResponse,
	GuardianOnlineCreateManyUserInput,
	GuardianOnlineCreateManyUserResponseData,
	GuardianOnlineCreateManyUserLogResponse,
	GuardianOnlineCreateManyUserLogInput,
	GuardianOnlineCreateManyUserLogResponseData,
	GuardianOnlineCreateOneFeatureResponse,
	GuardianOnlineCreateOneFeatureInput,
	GuardianOnlineCreateOneFeatureResponseData,
	GuardianOnlineCreateOneUserResponse,
	GuardianOnlineCreateOneUserInput,
	GuardianOnlineCreateOneUserResponseData,
	GuardianOnlineCreateOneUserLogResponse,
	GuardianOnlineCreateOneUserLogInput,
	GuardianOnlineCreateOneUserLogResponseData,
	GuardianOnlineDeleteManyFeatureResponse,
	GuardianOnlineDeleteManyFeatureInput,
	GuardianOnlineDeleteManyFeatureResponseData,
	GuardianOnlineDeleteManyUserResponse,
	GuardianOnlineDeleteManyUserInput,
	GuardianOnlineDeleteManyUserResponseData,
	GuardianOnlineDeleteManyUserLogResponse,
	GuardianOnlineDeleteManyUserLogInput,
	GuardianOnlineDeleteManyUserLogResponseData,
	GuardianOnlineDeleteOneFeatureResponse,
	GuardianOnlineDeleteOneFeatureInput,
	GuardianOnlineDeleteOneFeatureResponseData,
	GuardianOnlineDeleteOneUserResponse,
	GuardianOnlineDeleteOneUserInput,
	GuardianOnlineDeleteOneUserResponseData,
	GuardianOnlineDeleteOneUserLogResponse,
	GuardianOnlineDeleteOneUserLogInput,
	GuardianOnlineDeleteOneUserLogResponseData,
	GuardianOnlineExecuteRawResponse,
	GuardianOnlineExecuteRawInput,
	GuardianOnlineExecuteRawResponseData,
	GuardianOnlineFindFirstFeatureResponse,
	GuardianOnlineFindFirstFeatureInput,
	GuardianOnlineFindFirstFeatureResponseData,
	GuardianOnlineFindFirstFeatureOrThrowResponse,
	GuardianOnlineFindFirstFeatureOrThrowInput,
	GuardianOnlineFindFirstFeatureOrThrowResponseData,
	GuardianOnlineFindFirstUserResponse,
	GuardianOnlineFindFirstUserInput,
	GuardianOnlineFindFirstUserResponseData,
	GuardianOnlineFindFirstUserLogResponse,
	GuardianOnlineFindFirstUserLogInput,
	GuardianOnlineFindFirstUserLogResponseData,
	GuardianOnlineFindFirstUserLogOrThrowResponse,
	GuardianOnlineFindFirstUserLogOrThrowInput,
	GuardianOnlineFindFirstUserLogOrThrowResponseData,
	GuardianOnlineFindFirstUserOrThrowResponse,
	GuardianOnlineFindFirstUserOrThrowInput,
	GuardianOnlineFindFirstUserOrThrowResponseData,
	GuardianOnlineFindManyFeatureResponse,
	GuardianOnlineFindManyFeatureInput,
	GuardianOnlineFindManyFeatureResponseData,
	GuardianOnlineFindManyUserResponse,
	GuardianOnlineFindManyUserInput,
	GuardianOnlineFindManyUserResponseData,
	GuardianOnlineFindManyUserLogResponse,
	GuardianOnlineFindManyUserLogInput,
	GuardianOnlineFindManyUserLogResponseData,
	GuardianOnlineFindUniqueFeatureResponse,
	GuardianOnlineFindUniqueFeatureInput,
	GuardianOnlineFindUniqueFeatureResponseData,
	GuardianOnlineFindUniqueFeatureOrThrowResponse,
	GuardianOnlineFindUniqueFeatureOrThrowInput,
	GuardianOnlineFindUniqueFeatureOrThrowResponseData,
	GuardianOnlineFindUniqueUserResponse,
	GuardianOnlineFindUniqueUserInput,
	GuardianOnlineFindUniqueUserResponseData,
	GuardianOnlineFindUniqueUserLogResponse,
	GuardianOnlineFindUniqueUserLogInput,
	GuardianOnlineFindUniqueUserLogResponseData,
	GuardianOnlineFindUniqueUserLogOrThrowResponse,
	GuardianOnlineFindUniqueUserLogOrThrowInput,
	GuardianOnlineFindUniqueUserLogOrThrowResponseData,
	GuardianOnlineFindUniqueUserOrThrowResponse,
	GuardianOnlineFindUniqueUserOrThrowInput,
	GuardianOnlineFindUniqueUserOrThrowResponseData,
	GuardianOnlineGroupByFeatureResponse,
	GuardianOnlineGroupByFeatureInput,
	GuardianOnlineGroupByFeatureResponseData,
	GuardianOnlineGroupByUserResponse,
	GuardianOnlineGroupByUserInput,
	GuardianOnlineGroupByUserResponseData,
	GuardianOnlineGroupByUserLogResponse,
	GuardianOnlineGroupByUserLogInput,
	GuardianOnlineGroupByUserLogResponseData,
	GuardianOnlineQueryRawResponse,
	GuardianOnlineQueryRawInput,
	GuardianOnlineQueryRawResponseData,
	GuardianOnlineQueryRawJSONResponse,
	GuardianOnlineQueryRawJSONInput,
	GuardianOnlineQueryRawJSONResponseData,
	GuardianOnlineUpdateManyFeatureResponse,
	GuardianOnlineUpdateManyFeatureInput,
	GuardianOnlineUpdateManyFeatureResponseData,
	GuardianOnlineUpdateManyUserResponse,
	GuardianOnlineUpdateManyUserInput,
	GuardianOnlineUpdateManyUserResponseData,
	GuardianOnlineUpdateManyUserLogResponse,
	GuardianOnlineUpdateManyUserLogInput,
	GuardianOnlineUpdateManyUserLogResponseData,
	GuardianOnlineUpdateOneFeatureResponse,
	GuardianOnlineUpdateOneFeatureInput,
	GuardianOnlineUpdateOneFeatureResponseData,
	GuardianOnlineUpdateOneUserResponse,
	GuardianOnlineUpdateOneUserInput,
	GuardianOnlineUpdateOneUserResponseData,
	GuardianOnlineUpdateOneUserLogResponse,
	GuardianOnlineUpdateOneUserLogInput,
	GuardianOnlineUpdateOneUserLogResponseData,
	GuardianOnlineUpsertOneFeatureResponse,
	GuardianOnlineUpsertOneFeatureInput,
	GuardianOnlineUpsertOneFeatureResponseData,
	GuardianOnlineUpsertOneUserResponse,
	GuardianOnlineUpsertOneUserInput,
	GuardianOnlineUpsertOneUserResponseData,
	GuardianOnlineUpsertOneUserLogResponse,
	GuardianOnlineUpsertOneUserLogInput,
	GuardianOnlineUpsertOneUserLogResponseData,
	LivingBalanceSheetAggregateAssetResponse,
	LivingBalanceSheetAggregateAssetInput,
	LivingBalanceSheetAggregateAssetResponseData,
	LivingBalanceSheetAggregateFinancialGoalResponse,
	LivingBalanceSheetAggregateFinancialGoalInput,
	LivingBalanceSheetAggregateFinancialGoalResponseData,
	LivingBalanceSheetAggregateLiabilityResponse,
	LivingBalanceSheetAggregateLiabilityInput,
	LivingBalanceSheetAggregateLiabilityResponseData,
	LivingBalanceSheetAggregateUserResponse,
	LivingBalanceSheetAggregateUserInput,
	LivingBalanceSheetAggregateUserResponseData,
	LivingBalanceSheetCreateManyAssetResponse,
	LivingBalanceSheetCreateManyAssetInput,
	LivingBalanceSheetCreateManyAssetResponseData,
	LivingBalanceSheetCreateManyFinancialGoalResponse,
	LivingBalanceSheetCreateManyFinancialGoalInput,
	LivingBalanceSheetCreateManyFinancialGoalResponseData,
	LivingBalanceSheetCreateManyLiabilityResponse,
	LivingBalanceSheetCreateManyLiabilityInput,
	LivingBalanceSheetCreateManyLiabilityResponseData,
	LivingBalanceSheetCreateManyUserResponse,
	LivingBalanceSheetCreateManyUserInput,
	LivingBalanceSheetCreateManyUserResponseData,
	LivingBalanceSheetCreateOneAssetResponse,
	LivingBalanceSheetCreateOneAssetInput,
	LivingBalanceSheetCreateOneAssetResponseData,
	LivingBalanceSheetCreateOneFinancialGoalResponse,
	LivingBalanceSheetCreateOneFinancialGoalInput,
	LivingBalanceSheetCreateOneFinancialGoalResponseData,
	LivingBalanceSheetCreateOneLiabilityResponse,
	LivingBalanceSheetCreateOneLiabilityInput,
	LivingBalanceSheetCreateOneLiabilityResponseData,
	LivingBalanceSheetCreateOneUserResponse,
	LivingBalanceSheetCreateOneUserInput,
	LivingBalanceSheetCreateOneUserResponseData,
	LivingBalanceSheetDeleteManyAssetResponse,
	LivingBalanceSheetDeleteManyAssetInput,
	LivingBalanceSheetDeleteManyAssetResponseData,
	LivingBalanceSheetDeleteManyFinancialGoalResponse,
	LivingBalanceSheetDeleteManyFinancialGoalInput,
	LivingBalanceSheetDeleteManyFinancialGoalResponseData,
	LivingBalanceSheetDeleteManyLiabilityResponse,
	LivingBalanceSheetDeleteManyLiabilityInput,
	LivingBalanceSheetDeleteManyLiabilityResponseData,
	LivingBalanceSheetDeleteManyUserResponse,
	LivingBalanceSheetDeleteManyUserInput,
	LivingBalanceSheetDeleteManyUserResponseData,
	LivingBalanceSheetDeleteOneAssetResponse,
	LivingBalanceSheetDeleteOneAssetInput,
	LivingBalanceSheetDeleteOneAssetResponseData,
	LivingBalanceSheetDeleteOneFinancialGoalResponse,
	LivingBalanceSheetDeleteOneFinancialGoalInput,
	LivingBalanceSheetDeleteOneFinancialGoalResponseData,
	LivingBalanceSheetDeleteOneLiabilityResponse,
	LivingBalanceSheetDeleteOneLiabilityInput,
	LivingBalanceSheetDeleteOneLiabilityResponseData,
	LivingBalanceSheetDeleteOneUserResponse,
	LivingBalanceSheetDeleteOneUserInput,
	LivingBalanceSheetDeleteOneUserResponseData,
	LivingBalanceSheetExecuteRawResponse,
	LivingBalanceSheetExecuteRawInput,
	LivingBalanceSheetExecuteRawResponseData,
	LivingBalanceSheetFindFirstAssetResponse,
	LivingBalanceSheetFindFirstAssetInput,
	LivingBalanceSheetFindFirstAssetResponseData,
	LivingBalanceSheetFindFirstAssetOrThrowResponse,
	LivingBalanceSheetFindFirstAssetOrThrowInput,
	LivingBalanceSheetFindFirstAssetOrThrowResponseData,
	LivingBalanceSheetFindFirstFinancialGoalResponse,
	LivingBalanceSheetFindFirstFinancialGoalInput,
	LivingBalanceSheetFindFirstFinancialGoalResponseData,
	LivingBalanceSheetFindFirstFinancialGoalOrThrowResponse,
	LivingBalanceSheetFindFirstFinancialGoalOrThrowInput,
	LivingBalanceSheetFindFirstFinancialGoalOrThrowResponseData,
	LivingBalanceSheetFindFirstLiabilityResponse,
	LivingBalanceSheetFindFirstLiabilityInput,
	LivingBalanceSheetFindFirstLiabilityResponseData,
	LivingBalanceSheetFindFirstLiabilityOrThrowResponse,
	LivingBalanceSheetFindFirstLiabilityOrThrowInput,
	LivingBalanceSheetFindFirstLiabilityOrThrowResponseData,
	LivingBalanceSheetFindFirstUserResponse,
	LivingBalanceSheetFindFirstUserInput,
	LivingBalanceSheetFindFirstUserResponseData,
	LivingBalanceSheetFindFirstUserOrThrowResponse,
	LivingBalanceSheetFindFirstUserOrThrowInput,
	LivingBalanceSheetFindFirstUserOrThrowResponseData,
	LivingBalanceSheetFindManyAssetResponse,
	LivingBalanceSheetFindManyAssetInput,
	LivingBalanceSheetFindManyAssetResponseData,
	LivingBalanceSheetFindManyFinancialGoalResponse,
	LivingBalanceSheetFindManyFinancialGoalInput,
	LivingBalanceSheetFindManyFinancialGoalResponseData,
	LivingBalanceSheetFindManyLiabilityResponse,
	LivingBalanceSheetFindManyLiabilityInput,
	LivingBalanceSheetFindManyLiabilityResponseData,
	LivingBalanceSheetFindManyUserResponse,
	LivingBalanceSheetFindManyUserInput,
	LivingBalanceSheetFindManyUserResponseData,
	LivingBalanceSheetFindUniqueAssetResponse,
	LivingBalanceSheetFindUniqueAssetInput,
	LivingBalanceSheetFindUniqueAssetResponseData,
	LivingBalanceSheetFindUniqueAssetOrThrowResponse,
	LivingBalanceSheetFindUniqueAssetOrThrowInput,
	LivingBalanceSheetFindUniqueAssetOrThrowResponseData,
	LivingBalanceSheetFindUniqueFinancialGoalResponse,
	LivingBalanceSheetFindUniqueFinancialGoalInput,
	LivingBalanceSheetFindUniqueFinancialGoalResponseData,
	LivingBalanceSheetFindUniqueFinancialGoalOrThrowResponse,
	LivingBalanceSheetFindUniqueFinancialGoalOrThrowInput,
	LivingBalanceSheetFindUniqueFinancialGoalOrThrowResponseData,
	LivingBalanceSheetFindUniqueLiabilityResponse,
	LivingBalanceSheetFindUniqueLiabilityInput,
	LivingBalanceSheetFindUniqueLiabilityResponseData,
	LivingBalanceSheetFindUniqueLiabilityOrThrowResponse,
	LivingBalanceSheetFindUniqueLiabilityOrThrowInput,
	LivingBalanceSheetFindUniqueLiabilityOrThrowResponseData,
	LivingBalanceSheetFindUniqueUserResponse,
	LivingBalanceSheetFindUniqueUserInput,
	LivingBalanceSheetFindUniqueUserResponseData,
	LivingBalanceSheetFindUniqueUserOrThrowResponse,
	LivingBalanceSheetFindUniqueUserOrThrowInput,
	LivingBalanceSheetFindUniqueUserOrThrowResponseData,
	LivingBalanceSheetGroupByAssetResponse,
	LivingBalanceSheetGroupByAssetInput,
	LivingBalanceSheetGroupByAssetResponseData,
	LivingBalanceSheetGroupByFinancialGoalResponse,
	LivingBalanceSheetGroupByFinancialGoalInput,
	LivingBalanceSheetGroupByFinancialGoalResponseData,
	LivingBalanceSheetGroupByLiabilityResponse,
	LivingBalanceSheetGroupByLiabilityInput,
	LivingBalanceSheetGroupByLiabilityResponseData,
	LivingBalanceSheetGroupByUserResponse,
	LivingBalanceSheetGroupByUserInput,
	LivingBalanceSheetGroupByUserResponseData,
	LivingBalanceSheetQueryRawResponse,
	LivingBalanceSheetQueryRawInput,
	LivingBalanceSheetQueryRawResponseData,
	LivingBalanceSheetQueryRawJSONResponse,
	LivingBalanceSheetQueryRawJSONInput,
	LivingBalanceSheetQueryRawJSONResponseData,
	LivingBalanceSheetUpdateManyAssetResponse,
	LivingBalanceSheetUpdateManyAssetInput,
	LivingBalanceSheetUpdateManyAssetResponseData,
	LivingBalanceSheetUpdateManyFinancialGoalResponse,
	LivingBalanceSheetUpdateManyFinancialGoalInput,
	LivingBalanceSheetUpdateManyFinancialGoalResponseData,
	LivingBalanceSheetUpdateManyLiabilityResponse,
	LivingBalanceSheetUpdateManyLiabilityInput,
	LivingBalanceSheetUpdateManyLiabilityResponseData,
	LivingBalanceSheetUpdateManyUserResponse,
	LivingBalanceSheetUpdateManyUserInput,
	LivingBalanceSheetUpdateManyUserResponseData,
	LivingBalanceSheetUpdateOneAssetResponse,
	LivingBalanceSheetUpdateOneAssetInput,
	LivingBalanceSheetUpdateOneAssetResponseData,
	LivingBalanceSheetUpdateOneFinancialGoalResponse,
	LivingBalanceSheetUpdateOneFinancialGoalInput,
	LivingBalanceSheetUpdateOneFinancialGoalResponseData,
	LivingBalanceSheetUpdateOneLiabilityResponse,
	LivingBalanceSheetUpdateOneLiabilityInput,
	LivingBalanceSheetUpdateOneLiabilityResponseData,
	LivingBalanceSheetUpdateOneUserResponse,
	LivingBalanceSheetUpdateOneUserInput,
	LivingBalanceSheetUpdateOneUserResponseData,
	LivingBalanceSheetUpsertOneAssetResponse,
	LivingBalanceSheetUpsertOneAssetInput,
	LivingBalanceSheetUpsertOneAssetResponseData,
	LivingBalanceSheetUpsertOneFinancialGoalResponse,
	LivingBalanceSheetUpsertOneFinancialGoalInput,
	LivingBalanceSheetUpsertOneFinancialGoalResponseData,
	LivingBalanceSheetUpsertOneLiabilityResponse,
	LivingBalanceSheetUpsertOneLiabilityInput,
	LivingBalanceSheetUpsertOneLiabilityResponseData,
	LivingBalanceSheetUpsertOneUserResponse,
	LivingBalanceSheetUpsertOneUserInput,
	LivingBalanceSheetUpsertOneUserResponseData,
	SmartOfficeAggregateClientResponse,
	SmartOfficeAggregateClientInput,
	SmartOfficeAggregateClientResponseData,
	SmartOfficeAggregateSaleResponse,
	SmartOfficeAggregateSaleInput,
	SmartOfficeAggregateSaleResponseData,
	SmartOfficeAggregateTaskResponse,
	SmartOfficeAggregateTaskInput,
	SmartOfficeAggregateTaskResponseData,
	SmartOfficeAggregateUserResponse,
	SmartOfficeAggregateUserInput,
	SmartOfficeAggregateUserResponseData,
	SmartOfficeCreateManyClientResponse,
	SmartOfficeCreateManyClientInput,
	SmartOfficeCreateManyClientResponseData,
	SmartOfficeCreateManySaleResponse,
	SmartOfficeCreateManySaleInput,
	SmartOfficeCreateManySaleResponseData,
	SmartOfficeCreateManyTaskResponse,
	SmartOfficeCreateManyTaskInput,
	SmartOfficeCreateManyTaskResponseData,
	SmartOfficeCreateManyUserResponse,
	SmartOfficeCreateManyUserInput,
	SmartOfficeCreateManyUserResponseData,
	SmartOfficeCreateOneClientResponse,
	SmartOfficeCreateOneClientInput,
	SmartOfficeCreateOneClientResponseData,
	SmartOfficeCreateOneSaleResponse,
	SmartOfficeCreateOneSaleInput,
	SmartOfficeCreateOneSaleResponseData,
	SmartOfficeCreateOneTaskResponse,
	SmartOfficeCreateOneTaskInput,
	SmartOfficeCreateOneTaskResponseData,
	SmartOfficeCreateOneUserResponse,
	SmartOfficeCreateOneUserInput,
	SmartOfficeCreateOneUserResponseData,
	SmartOfficeDeleteManyClientResponse,
	SmartOfficeDeleteManyClientInput,
	SmartOfficeDeleteManyClientResponseData,
	SmartOfficeDeleteManySaleResponse,
	SmartOfficeDeleteManySaleInput,
	SmartOfficeDeleteManySaleResponseData,
	SmartOfficeDeleteManyTaskResponse,
	SmartOfficeDeleteManyTaskInput,
	SmartOfficeDeleteManyTaskResponseData,
	SmartOfficeDeleteManyUserResponse,
	SmartOfficeDeleteManyUserInput,
	SmartOfficeDeleteManyUserResponseData,
	SmartOfficeDeleteOneClientResponse,
	SmartOfficeDeleteOneClientInput,
	SmartOfficeDeleteOneClientResponseData,
	SmartOfficeDeleteOneSaleResponse,
	SmartOfficeDeleteOneSaleInput,
	SmartOfficeDeleteOneSaleResponseData,
	SmartOfficeDeleteOneTaskResponse,
	SmartOfficeDeleteOneTaskInput,
	SmartOfficeDeleteOneTaskResponseData,
	SmartOfficeDeleteOneUserResponse,
	SmartOfficeDeleteOneUserInput,
	SmartOfficeDeleteOneUserResponseData,
	SmartOfficeExecuteRawResponse,
	SmartOfficeExecuteRawInput,
	SmartOfficeExecuteRawResponseData,
	SmartOfficeFindFirstClientResponse,
	SmartOfficeFindFirstClientInput,
	SmartOfficeFindFirstClientResponseData,
	SmartOfficeFindFirstClientOrThrowResponse,
	SmartOfficeFindFirstClientOrThrowInput,
	SmartOfficeFindFirstClientOrThrowResponseData,
	SmartOfficeFindFirstSaleResponse,
	SmartOfficeFindFirstSaleInput,
	SmartOfficeFindFirstSaleResponseData,
	SmartOfficeFindFirstSaleOrThrowResponse,
	SmartOfficeFindFirstSaleOrThrowInput,
	SmartOfficeFindFirstSaleOrThrowResponseData,
	SmartOfficeFindFirstTaskResponse,
	SmartOfficeFindFirstTaskInput,
	SmartOfficeFindFirstTaskResponseData,
	SmartOfficeFindFirstTaskOrThrowResponse,
	SmartOfficeFindFirstTaskOrThrowInput,
	SmartOfficeFindFirstTaskOrThrowResponseData,
	SmartOfficeFindFirstUserResponse,
	SmartOfficeFindFirstUserInput,
	SmartOfficeFindFirstUserResponseData,
	SmartOfficeFindFirstUserOrThrowResponse,
	SmartOfficeFindFirstUserOrThrowInput,
	SmartOfficeFindFirstUserOrThrowResponseData,
	SmartOfficeFindManyClientResponse,
	SmartOfficeFindManyClientInput,
	SmartOfficeFindManyClientResponseData,
	SmartOfficeFindManySaleResponse,
	SmartOfficeFindManySaleInput,
	SmartOfficeFindManySaleResponseData,
	SmartOfficeFindManyTaskResponse,
	SmartOfficeFindManyTaskInput,
	SmartOfficeFindManyTaskResponseData,
	SmartOfficeFindManyUserResponse,
	SmartOfficeFindManyUserInput,
	SmartOfficeFindManyUserResponseData,
	SmartOfficeFindUniqueClientResponse,
	SmartOfficeFindUniqueClientInput,
	SmartOfficeFindUniqueClientResponseData,
	SmartOfficeFindUniqueClientOrThrowResponse,
	SmartOfficeFindUniqueClientOrThrowInput,
	SmartOfficeFindUniqueClientOrThrowResponseData,
	SmartOfficeFindUniqueSaleResponse,
	SmartOfficeFindUniqueSaleInput,
	SmartOfficeFindUniqueSaleResponseData,
	SmartOfficeFindUniqueSaleOrThrowResponse,
	SmartOfficeFindUniqueSaleOrThrowInput,
	SmartOfficeFindUniqueSaleOrThrowResponseData,
	SmartOfficeFindUniqueTaskResponse,
	SmartOfficeFindUniqueTaskInput,
	SmartOfficeFindUniqueTaskResponseData,
	SmartOfficeFindUniqueTaskOrThrowResponse,
	SmartOfficeFindUniqueTaskOrThrowInput,
	SmartOfficeFindUniqueTaskOrThrowResponseData,
	SmartOfficeFindUniqueUserResponse,
	SmartOfficeFindUniqueUserInput,
	SmartOfficeFindUniqueUserResponseData,
	SmartOfficeFindUniqueUserOrThrowResponse,
	SmartOfficeFindUniqueUserOrThrowInput,
	SmartOfficeFindUniqueUserOrThrowResponseData,
	SmartOfficeGroupByClientResponse,
	SmartOfficeGroupByClientInput,
	SmartOfficeGroupByClientResponseData,
	SmartOfficeGroupBySaleResponse,
	SmartOfficeGroupBySaleInput,
	SmartOfficeGroupBySaleResponseData,
	SmartOfficeGroupByTaskResponse,
	SmartOfficeGroupByTaskInput,
	SmartOfficeGroupByTaskResponseData,
	SmartOfficeGroupByUserResponse,
	SmartOfficeGroupByUserInput,
	SmartOfficeGroupByUserResponseData,
	SmartOfficeQueryRawResponse,
	SmartOfficeQueryRawInput,
	SmartOfficeQueryRawResponseData,
	SmartOfficeQueryRawJSONResponse,
	SmartOfficeQueryRawJSONInput,
	SmartOfficeQueryRawJSONResponseData,
	SmartOfficeUpdateManyClientResponse,
	SmartOfficeUpdateManyClientInput,
	SmartOfficeUpdateManyClientResponseData,
	SmartOfficeUpdateManySaleResponse,
	SmartOfficeUpdateManySaleInput,
	SmartOfficeUpdateManySaleResponseData,
	SmartOfficeUpdateManyTaskResponse,
	SmartOfficeUpdateManyTaskInput,
	SmartOfficeUpdateManyTaskResponseData,
	SmartOfficeUpdateManyUserResponse,
	SmartOfficeUpdateManyUserInput,
	SmartOfficeUpdateManyUserResponseData,
	SmartOfficeUpdateOneClientResponse,
	SmartOfficeUpdateOneClientInput,
	SmartOfficeUpdateOneClientResponseData,
	SmartOfficeUpdateOneSaleResponse,
	SmartOfficeUpdateOneSaleInput,
	SmartOfficeUpdateOneSaleResponseData,
	SmartOfficeUpdateOneTaskResponse,
	SmartOfficeUpdateOneTaskInput,
	SmartOfficeUpdateOneTaskResponseData,
	SmartOfficeUpdateOneUserResponse,
	SmartOfficeUpdateOneUserInput,
	SmartOfficeUpdateOneUserResponseData,
	SmartOfficeUpsertOneClientResponse,
	SmartOfficeUpsertOneClientInput,
	SmartOfficeUpsertOneClientResponseData,
	SmartOfficeUpsertOneSaleResponse,
	SmartOfficeUpsertOneSaleInput,
	SmartOfficeUpsertOneSaleResponseData,
	SmartOfficeUpsertOneTaskResponse,
	SmartOfficeUpsertOneTaskInput,
	SmartOfficeUpsertOneTaskResponseData,
	SmartOfficeUpsertOneUserResponse,
	SmartOfficeUpsertOneUserInput,
	SmartOfficeUpsertOneUserResponseData,
	UsersCountUsersResponse,
	UsersCountUsersResponseData,
	UsersGetAllUsersResponse,
	UsersGetAllUsersResponseData,
	WeatherGetCityByIdResponse,
	WeatherGetCityByIdInput,
	WeatherGetCityByIdResponseData,
	WeatherGetCityByNameResponse,
	WeatherGetCityByNameInput,
	WeatherGetCityByNameResponseData,
	OpenaiExtract_website_metadataResponse,
	OpenaiExtract_website_metadataInput,
	OpenaiExtract_website_metadataResponseData,
	OpenaiLoad_urlResponse,
	OpenaiLoad_urlInput,
	OpenaiLoad_urlResponseData,
	OpenaiSummarize_url_contentResponse,
	OpenaiSummarize_url_contentInput,
	OpenaiSummarize_url_contentResponseData,
	OpenaiSummaryResponse,
	OpenaiSummaryInput,
	OpenaiSummaryResponseData,
	OpenaiWeatherResponse,
	OpenaiWeatherInput,
	OpenaiWeatherResponseData,
	UsersGetResponse,
	UsersGetInput,
	UsersGetResponseData,
	UsersSubscribeResponse,
	UsersSubscribeInput,
	UsersSubscribeResponseData,
	UsersUpdateResponse,
	UsersUpdateInput,
	UsersUpdateResponseData,
} from "./models";
export type UserRole = "admin" | "user";

export const WUNDERGRAPH_S3_ENABLED = false;
export const WUNDERGRAPH_AUTH_ENABLED = false;

export const defaultClientConfig: ClientConfig = {
	applicationHash: "bfc869cb",
	baseURL: "https://d2vp238439bu7d.cloudfront.net",
	sdkVersion: "0.179.3",
};

export const operationMetadata: OperationMetadata = {
	"clientPortal/AggregateActivity": {
		requiresAuthentication: false,
	},
	"clientPortal/AggregateClient": {
		requiresAuthentication: false,
	},
	"clientPortal/AggregateService": {
		requiresAuthentication: false,
	},
	"clientPortal/CreateManyActivity": {
		requiresAuthentication: false,
	},
	"clientPortal/CreateManyClient": {
		requiresAuthentication: false,
	},
	"clientPortal/CreateManyService": {
		requiresAuthentication: false,
	},
	"clientPortal/CreateOneActivity": {
		requiresAuthentication: false,
	},
	"clientPortal/CreateOneClient": {
		requiresAuthentication: false,
	},
	"clientPortal/CreateOneService": {
		requiresAuthentication: false,
	},
	"clientPortal/DeleteManyActivity": {
		requiresAuthentication: false,
	},
	"clientPortal/DeleteManyClient": {
		requiresAuthentication: false,
	},
	"clientPortal/DeleteManyService": {
		requiresAuthentication: false,
	},
	"clientPortal/DeleteOneActivity": {
		requiresAuthentication: false,
	},
	"clientPortal/DeleteOneClient": {
		requiresAuthentication: false,
	},
	"clientPortal/DeleteOneService": {
		requiresAuthentication: false,
	},
	"clientPortal/ExecuteRaw": {
		requiresAuthentication: false,
	},
	"clientPortal/FindFirstActivity": {
		requiresAuthentication: false,
	},
	"clientPortal/FindFirstActivityOrThrow": {
		requiresAuthentication: false,
	},
	"clientPortal/FindFirstClient": {
		requiresAuthentication: false,
	},
	"clientPortal/FindFirstClientOrThrow": {
		requiresAuthentication: false,
	},
	"clientPortal/FindFirstService": {
		requiresAuthentication: false,
	},
	"clientPortal/FindFirstServiceOrThrow": {
		requiresAuthentication: false,
	},
	"clientPortal/FindManyActivity": {
		requiresAuthentication: false,
	},
	"clientPortal/FindManyClient": {
		requiresAuthentication: false,
	},
	"clientPortal/FindManyService": {
		requiresAuthentication: false,
	},
	"clientPortal/FindUniqueActivity": {
		requiresAuthentication: false,
	},
	"clientPortal/FindUniqueActivityOrThrow": {
		requiresAuthentication: false,
	},
	"clientPortal/FindUniqueClient": {
		requiresAuthentication: false,
	},
	"clientPortal/FindUniqueClientOrThrow": {
		requiresAuthentication: false,
	},
	"clientPortal/FindUniqueService": {
		requiresAuthentication: false,
	},
	"clientPortal/FindUniqueServiceOrThrow": {
		requiresAuthentication: false,
	},
	"clientPortal/GroupByActivity": {
		requiresAuthentication: false,
	},
	"clientPortal/GroupByClient": {
		requiresAuthentication: false,
	},
	"clientPortal/GroupByService": {
		requiresAuthentication: false,
	},
	"clientPortal/QueryRaw": {
		requiresAuthentication: false,
	},
	"clientPortal/QueryRawJSON": {
		requiresAuthentication: false,
	},
	"clientPortal/UpdateManyActivity": {
		requiresAuthentication: false,
	},
	"clientPortal/UpdateManyClient": {
		requiresAuthentication: false,
	},
	"clientPortal/UpdateManyService": {
		requiresAuthentication: false,
	},
	"clientPortal/UpdateOneActivity": {
		requiresAuthentication: false,
	},
	"clientPortal/UpdateOneClient": {
		requiresAuthentication: false,
	},
	"clientPortal/UpdateOneService": {
		requiresAuthentication: false,
	},
	"clientPortal/UpsertOneActivity": {
		requiresAuthentication: false,
	},
	"clientPortal/UpsertOneClient": {
		requiresAuthentication: false,
	},
	"clientPortal/UpsertOneService": {
		requiresAuthentication: false,
	},
	"countries/Continent": {
		requiresAuthentication: false,
	},
	"countries/Continents": {
		requiresAuthentication: false,
	},
	"countries/Countries": {
		requiresAuthentication: false,
	},
	"countries/Country": {
		requiresAuthentication: false,
	},
	"countries/CountryByCode": {
		requiresAuthentication: false,
	},
	"countries/Language": {
		requiresAuthentication: false,
	},
	"countries/Languages": {
		requiresAuthentication: false,
	},
	"customerCommunication/AggregateAccount": {
		requiresAuthentication: false,
	},
	"customerCommunication/AggregateFilter": {
		requiresAuthentication: false,
	},
	"customerCommunication/AggregateInteraction": {
		requiresAuthentication: false,
	},
	"customerCommunication/AggregateSession": {
		requiresAuthentication: false,
	},
	"customerCommunication/AggregateUser": {
		requiresAuthentication: false,
	},
	"customerCommunication/AggregateVerificationToken": {
		requiresAuthentication: false,
	},
	"customerCommunication/AggregateWidget": {
		requiresAuthentication: false,
	},
	"customerCommunication/CreateManyAccount": {
		requiresAuthentication: false,
	},
	"customerCommunication/CreateManyFilter": {
		requiresAuthentication: false,
	},
	"customerCommunication/CreateManyInteraction": {
		requiresAuthentication: false,
	},
	"customerCommunication/CreateManySession": {
		requiresAuthentication: false,
	},
	"customerCommunication/CreateManyUser": {
		requiresAuthentication: false,
	},
	"customerCommunication/CreateManyVerificationToken": {
		requiresAuthentication: false,
	},
	"customerCommunication/CreateManyWidget": {
		requiresAuthentication: false,
	},
	"customerCommunication/CreateOneAccount": {
		requiresAuthentication: false,
	},
	"customerCommunication/CreateOneFilter": {
		requiresAuthentication: false,
	},
	"customerCommunication/CreateOneInteraction": {
		requiresAuthentication: false,
	},
	"customerCommunication/CreateOneSession": {
		requiresAuthentication: false,
	},
	"customerCommunication/CreateOneUser": {
		requiresAuthentication: false,
	},
	"customerCommunication/CreateOneVerificationToken": {
		requiresAuthentication: false,
	},
	"customerCommunication/CreateOneWidget": {
		requiresAuthentication: false,
	},
	"customerCommunication/DeleteManyAccount": {
		requiresAuthentication: false,
	},
	"customerCommunication/DeleteManyFilter": {
		requiresAuthentication: false,
	},
	"customerCommunication/DeleteManyInteraction": {
		requiresAuthentication: false,
	},
	"customerCommunication/DeleteManySession": {
		requiresAuthentication: false,
	},
	"customerCommunication/DeleteManyUser": {
		requiresAuthentication: false,
	},
	"customerCommunication/DeleteManyVerificationToken": {
		requiresAuthentication: false,
	},
	"customerCommunication/DeleteManyWidget": {
		requiresAuthentication: false,
	},
	"customerCommunication/DeleteOneAccount": {
		requiresAuthentication: false,
	},
	"customerCommunication/DeleteOneFilter": {
		requiresAuthentication: false,
	},
	"customerCommunication/DeleteOneInteraction": {
		requiresAuthentication: false,
	},
	"customerCommunication/DeleteOneSession": {
		requiresAuthentication: false,
	},
	"customerCommunication/DeleteOneUser": {
		requiresAuthentication: false,
	},
	"customerCommunication/DeleteOneVerificationToken": {
		requiresAuthentication: false,
	},
	"customerCommunication/DeleteOneWidget": {
		requiresAuthentication: false,
	},
	"customerCommunication/ExecuteRaw": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindFirstAccount": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindFirstAccountOrThrow": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindFirstFilter": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindFirstFilterOrThrow": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindFirstInteraction": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindFirstInteractionOrThrow": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindFirstSession": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindFirstSessionOrThrow": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindFirstUser": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindFirstUserOrThrow": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindFirstVerificationToken": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindFirstVerificationTokenOrThrow": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindFirstWidget": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindFirstWidgetOrThrow": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindManyAccount": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindManyFilter": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindManyInteraction": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindManySession": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindManyUser": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindManyVerificationToken": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindManyWidget": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindUniqueAccount": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindUniqueAccountOrThrow": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindUniqueFilter": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindUniqueFilterOrThrow": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindUniqueInteraction": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindUniqueInteractionOrThrow": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindUniqueSession": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindUniqueSessionOrThrow": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindUniqueUser": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindUniqueUserOrThrow": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindUniqueVerificationToken": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindUniqueVerificationTokenOrThrow": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindUniqueWidget": {
		requiresAuthentication: false,
	},
	"customerCommunication/FindUniqueWidgetOrThrow": {
		requiresAuthentication: false,
	},
	"customerCommunication/GroupByAccount": {
		requiresAuthentication: false,
	},
	"customerCommunication/GroupByFilter": {
		requiresAuthentication: false,
	},
	"customerCommunication/GroupByInteraction": {
		requiresAuthentication: false,
	},
	"customerCommunication/GroupBySession": {
		requiresAuthentication: false,
	},
	"customerCommunication/GroupByUser": {
		requiresAuthentication: false,
	},
	"customerCommunication/GroupByVerificationToken": {
		requiresAuthentication: false,
	},
	"customerCommunication/GroupByWidget": {
		requiresAuthentication: false,
	},
	"customerCommunication/QueryRaw": {
		requiresAuthentication: false,
	},
	"customerCommunication/QueryRawJSON": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpdateManyAccount": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpdateManyFilter": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpdateManyInteraction": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpdateManySession": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpdateManyUser": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpdateManyVerificationToken": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpdateManyWidget": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpdateOneAccount": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpdateOneFilter": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpdateOneInteraction": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpdateOneSession": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpdateOneUser": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpdateOneVerificationToken": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpdateOneWidget": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpsertOneAccount": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpsertOneFilter": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpsertOneInteraction": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpsertOneSession": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpsertOneUser": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpsertOneVerificationToken": {
		requiresAuthentication: false,
	},
	"customerCommunication/UpsertOneWidget": {
		requiresAuthentication: false,
	},
	"gpac/AggregateAdminAction": {
		requiresAuthentication: false,
	},
	"gpac/AggregatePolicy": {
		requiresAuthentication: false,
	},
	"gpac/AggregateUser": {
		requiresAuthentication: false,
	},
	"gpac/CreateManyAdminAction": {
		requiresAuthentication: false,
	},
	"gpac/CreateManyPolicy": {
		requiresAuthentication: false,
	},
	"gpac/CreateManyUser": {
		requiresAuthentication: false,
	},
	"gpac/CreateOneAdminAction": {
		requiresAuthentication: false,
	},
	"gpac/CreateOnePolicy": {
		requiresAuthentication: false,
	},
	"gpac/CreateOneUser": {
		requiresAuthentication: false,
	},
	"gpac/DeleteManyAdminAction": {
		requiresAuthentication: false,
	},
	"gpac/DeleteManyPolicy": {
		requiresAuthentication: false,
	},
	"gpac/DeleteManyUser": {
		requiresAuthentication: false,
	},
	"gpac/DeleteOneAdminAction": {
		requiresAuthentication: false,
	},
	"gpac/DeleteOnePolicy": {
		requiresAuthentication: false,
	},
	"gpac/DeleteOneUser": {
		requiresAuthentication: false,
	},
	"gpac/ExecuteRaw": {
		requiresAuthentication: false,
	},
	"gpac/FindFirstAdminAction": {
		requiresAuthentication: false,
	},
	"gpac/FindFirstAdminActionOrThrow": {
		requiresAuthentication: false,
	},
	"gpac/FindFirstPolicy": {
		requiresAuthentication: false,
	},
	"gpac/FindFirstPolicyOrThrow": {
		requiresAuthentication: false,
	},
	"gpac/FindFirstUser": {
		requiresAuthentication: false,
	},
	"gpac/FindFirstUserOrThrow": {
		requiresAuthentication: false,
	},
	"gpac/FindManyAdminAction": {
		requiresAuthentication: false,
	},
	"gpac/FindManyPolicy": {
		requiresAuthentication: false,
	},
	"gpac/FindManyUser": {
		requiresAuthentication: false,
	},
	"gpac/FindUniqueAdminAction": {
		requiresAuthentication: false,
	},
	"gpac/FindUniqueAdminActionOrThrow": {
		requiresAuthentication: false,
	},
	"gpac/FindUniquePolicy": {
		requiresAuthentication: false,
	},
	"gpac/FindUniquePolicyOrThrow": {
		requiresAuthentication: false,
	},
	"gpac/FindUniqueUser": {
		requiresAuthentication: false,
	},
	"gpac/FindUniqueUserOrThrow": {
		requiresAuthentication: false,
	},
	"gpac/GroupByAdminAction": {
		requiresAuthentication: false,
	},
	"gpac/GroupByPolicy": {
		requiresAuthentication: false,
	},
	"gpac/GroupByUser": {
		requiresAuthentication: false,
	},
	"gpac/QueryRaw": {
		requiresAuthentication: false,
	},
	"gpac/QueryRawJSON": {
		requiresAuthentication: false,
	},
	"gpac/UpdateManyAdminAction": {
		requiresAuthentication: false,
	},
	"gpac/UpdateManyPolicy": {
		requiresAuthentication: false,
	},
	"gpac/UpdateManyUser": {
		requiresAuthentication: false,
	},
	"gpac/UpdateOneAdminAction": {
		requiresAuthentication: false,
	},
	"gpac/UpdateOnePolicy": {
		requiresAuthentication: false,
	},
	"gpac/UpdateOneUser": {
		requiresAuthentication: false,
	},
	"gpac/UpsertOneAdminAction": {
		requiresAuthentication: false,
	},
	"gpac/UpsertOnePolicy": {
		requiresAuthentication: false,
	},
	"gpac/UpsertOneUser": {
		requiresAuthentication: false,
	},
	"guardianOnline/AggregateFeature": {
		requiresAuthentication: false,
	},
	"guardianOnline/AggregateUser": {
		requiresAuthentication: false,
	},
	"guardianOnline/AggregateUserLog": {
		requiresAuthentication: false,
	},
	"guardianOnline/CreateManyFeature": {
		requiresAuthentication: false,
	},
	"guardianOnline/CreateManyUser": {
		requiresAuthentication: false,
	},
	"guardianOnline/CreateManyUserLog": {
		requiresAuthentication: false,
	},
	"guardianOnline/CreateOneFeature": {
		requiresAuthentication: false,
	},
	"guardianOnline/CreateOneUser": {
		requiresAuthentication: false,
	},
	"guardianOnline/CreateOneUserLog": {
		requiresAuthentication: false,
	},
	"guardianOnline/DeleteManyFeature": {
		requiresAuthentication: false,
	},
	"guardianOnline/DeleteManyUser": {
		requiresAuthentication: false,
	},
	"guardianOnline/DeleteManyUserLog": {
		requiresAuthentication: false,
	},
	"guardianOnline/DeleteOneFeature": {
		requiresAuthentication: false,
	},
	"guardianOnline/DeleteOneUser": {
		requiresAuthentication: false,
	},
	"guardianOnline/DeleteOneUserLog": {
		requiresAuthentication: false,
	},
	"guardianOnline/ExecuteRaw": {
		requiresAuthentication: false,
	},
	"guardianOnline/FindFirstFeature": {
		requiresAuthentication: false,
	},
	"guardianOnline/FindFirstFeatureOrThrow": {
		requiresAuthentication: false,
	},
	"guardianOnline/FindFirstUser": {
		requiresAuthentication: false,
	},
	"guardianOnline/FindFirstUserLog": {
		requiresAuthentication: false,
	},
	"guardianOnline/FindFirstUserLogOrThrow": {
		requiresAuthentication: false,
	},
	"guardianOnline/FindFirstUserOrThrow": {
		requiresAuthentication: false,
	},
	"guardianOnline/FindManyFeature": {
		requiresAuthentication: false,
	},
	"guardianOnline/FindManyUser": {
		requiresAuthentication: false,
	},
	"guardianOnline/FindManyUserLog": {
		requiresAuthentication: false,
	},
	"guardianOnline/FindUniqueFeature": {
		requiresAuthentication: false,
	},
	"guardianOnline/FindUniqueFeatureOrThrow": {
		requiresAuthentication: false,
	},
	"guardianOnline/FindUniqueUser": {
		requiresAuthentication: false,
	},
	"guardianOnline/FindUniqueUserLog": {
		requiresAuthentication: false,
	},
	"guardianOnline/FindUniqueUserLogOrThrow": {
		requiresAuthentication: false,
	},
	"guardianOnline/FindUniqueUserOrThrow": {
		requiresAuthentication: false,
	},
	"guardianOnline/GroupByFeature": {
		requiresAuthentication: false,
	},
	"guardianOnline/GroupByUser": {
		requiresAuthentication: false,
	},
	"guardianOnline/GroupByUserLog": {
		requiresAuthentication: false,
	},
	"guardianOnline/QueryRaw": {
		requiresAuthentication: false,
	},
	"guardianOnline/QueryRawJSON": {
		requiresAuthentication: false,
	},
	"guardianOnline/UpdateManyFeature": {
		requiresAuthentication: false,
	},
	"guardianOnline/UpdateManyUser": {
		requiresAuthentication: false,
	},
	"guardianOnline/UpdateManyUserLog": {
		requiresAuthentication: false,
	},
	"guardianOnline/UpdateOneFeature": {
		requiresAuthentication: false,
	},
	"guardianOnline/UpdateOneUser": {
		requiresAuthentication: false,
	},
	"guardianOnline/UpdateOneUserLog": {
		requiresAuthentication: false,
	},
	"guardianOnline/UpsertOneFeature": {
		requiresAuthentication: false,
	},
	"guardianOnline/UpsertOneUser": {
		requiresAuthentication: false,
	},
	"guardianOnline/UpsertOneUserLog": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/AggregateAsset": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/AggregateFinancialGoal": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/AggregateLiability": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/AggregateUser": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/CreateManyAsset": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/CreateManyFinancialGoal": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/CreateManyLiability": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/CreateManyUser": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/CreateOneAsset": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/CreateOneFinancialGoal": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/CreateOneLiability": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/CreateOneUser": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/DeleteManyAsset": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/DeleteManyFinancialGoal": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/DeleteManyLiability": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/DeleteManyUser": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/DeleteOneAsset": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/DeleteOneFinancialGoal": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/DeleteOneLiability": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/DeleteOneUser": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/ExecuteRaw": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindFirstAsset": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindFirstAssetOrThrow": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindFirstFinancialGoal": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindFirstFinancialGoalOrThrow": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindFirstLiability": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindFirstLiabilityOrThrow": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindFirstUser": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindFirstUserOrThrow": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindManyAsset": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindManyFinancialGoal": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindManyLiability": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindManyUser": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindUniqueAsset": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindUniqueAssetOrThrow": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindUniqueFinancialGoal": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindUniqueFinancialGoalOrThrow": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindUniqueLiability": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindUniqueLiabilityOrThrow": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindUniqueUser": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/FindUniqueUserOrThrow": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/GroupByAsset": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/GroupByFinancialGoal": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/GroupByLiability": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/GroupByUser": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/QueryRaw": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/QueryRawJSON": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/UpdateManyAsset": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/UpdateManyFinancialGoal": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/UpdateManyLiability": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/UpdateManyUser": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/UpdateOneAsset": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/UpdateOneFinancialGoal": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/UpdateOneLiability": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/UpdateOneUser": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/UpsertOneAsset": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/UpsertOneFinancialGoal": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/UpsertOneLiability": {
		requiresAuthentication: false,
	},
	"livingBalanceSheet/UpsertOneUser": {
		requiresAuthentication: false,
	},
	"smartOffice/AggregateClient": {
		requiresAuthentication: false,
	},
	"smartOffice/AggregateSale": {
		requiresAuthentication: false,
	},
	"smartOffice/AggregateTask": {
		requiresAuthentication: false,
	},
	"smartOffice/AggregateUser": {
		requiresAuthentication: false,
	},
	"smartOffice/CreateManyClient": {
		requiresAuthentication: false,
	},
	"smartOffice/CreateManySale": {
		requiresAuthentication: false,
	},
	"smartOffice/CreateManyTask": {
		requiresAuthentication: false,
	},
	"smartOffice/CreateManyUser": {
		requiresAuthentication: false,
	},
	"smartOffice/CreateOneClient": {
		requiresAuthentication: false,
	},
	"smartOffice/CreateOneSale": {
		requiresAuthentication: false,
	},
	"smartOffice/CreateOneTask": {
		requiresAuthentication: false,
	},
	"smartOffice/CreateOneUser": {
		requiresAuthentication: false,
	},
	"smartOffice/DeleteManyClient": {
		requiresAuthentication: false,
	},
	"smartOffice/DeleteManySale": {
		requiresAuthentication: false,
	},
	"smartOffice/DeleteManyTask": {
		requiresAuthentication: false,
	},
	"smartOffice/DeleteManyUser": {
		requiresAuthentication: false,
	},
	"smartOffice/DeleteOneClient": {
		requiresAuthentication: false,
	},
	"smartOffice/DeleteOneSale": {
		requiresAuthentication: false,
	},
	"smartOffice/DeleteOneTask": {
		requiresAuthentication: false,
	},
	"smartOffice/DeleteOneUser": {
		requiresAuthentication: false,
	},
	"smartOffice/ExecuteRaw": {
		requiresAuthentication: false,
	},
	"smartOffice/FindFirstClient": {
		requiresAuthentication: false,
	},
	"smartOffice/FindFirstClientOrThrow": {
		requiresAuthentication: false,
	},
	"smartOffice/FindFirstSale": {
		requiresAuthentication: false,
	},
	"smartOffice/FindFirstSaleOrThrow": {
		requiresAuthentication: false,
	},
	"smartOffice/FindFirstTask": {
		requiresAuthentication: false,
	},
	"smartOffice/FindFirstTaskOrThrow": {
		requiresAuthentication: false,
	},
	"smartOffice/FindFirstUser": {
		requiresAuthentication: false,
	},
	"smartOffice/FindFirstUserOrThrow": {
		requiresAuthentication: false,
	},
	"smartOffice/FindManyClient": {
		requiresAuthentication: false,
	},
	"smartOffice/FindManySale": {
		requiresAuthentication: false,
	},
	"smartOffice/FindManyTask": {
		requiresAuthentication: false,
	},
	"smartOffice/FindManyUser": {
		requiresAuthentication: false,
	},
	"smartOffice/FindUniqueClient": {
		requiresAuthentication: false,
	},
	"smartOffice/FindUniqueClientOrThrow": {
		requiresAuthentication: false,
	},
	"smartOffice/FindUniqueSale": {
		requiresAuthentication: false,
	},
	"smartOffice/FindUniqueSaleOrThrow": {
		requiresAuthentication: false,
	},
	"smartOffice/FindUniqueTask": {
		requiresAuthentication: false,
	},
	"smartOffice/FindUniqueTaskOrThrow": {
		requiresAuthentication: false,
	},
	"smartOffice/FindUniqueUser": {
		requiresAuthentication: false,
	},
	"smartOffice/FindUniqueUserOrThrow": {
		requiresAuthentication: false,
	},
	"smartOffice/GroupByClient": {
		requiresAuthentication: false,
	},
	"smartOffice/GroupBySale": {
		requiresAuthentication: false,
	},
	"smartOffice/GroupByTask": {
		requiresAuthentication: false,
	},
	"smartOffice/GroupByUser": {
		requiresAuthentication: false,
	},
	"smartOffice/QueryRaw": {
		requiresAuthentication: false,
	},
	"smartOffice/QueryRawJSON": {
		requiresAuthentication: false,
	},
	"smartOffice/UpdateManyClient": {
		requiresAuthentication: false,
	},
	"smartOffice/UpdateManySale": {
		requiresAuthentication: false,
	},
	"smartOffice/UpdateManyTask": {
		requiresAuthentication: false,
	},
	"smartOffice/UpdateManyUser": {
		requiresAuthentication: false,
	},
	"smartOffice/UpdateOneClient": {
		requiresAuthentication: false,
	},
	"smartOffice/UpdateOneSale": {
		requiresAuthentication: false,
	},
	"smartOffice/UpdateOneTask": {
		requiresAuthentication: false,
	},
	"smartOffice/UpdateOneUser": {
		requiresAuthentication: false,
	},
	"smartOffice/UpsertOneClient": {
		requiresAuthentication: false,
	},
	"smartOffice/UpsertOneSale": {
		requiresAuthentication: false,
	},
	"smartOffice/UpsertOneTask": {
		requiresAuthentication: false,
	},
	"smartOffice/UpsertOneUser": {
		requiresAuthentication: false,
	},
	"users/CountUsers": {
		requiresAuthentication: false,
	},
	"users/GetAllUsers": {
		requiresAuthentication: false,
	},
	"weather/GetCityById": {
		requiresAuthentication: false,
	},
	"weather/GetCityByName": {
		requiresAuthentication: false,
	},
	"openai/extract-website-metadata": {
		requiresAuthentication: false,
	},
	"openai/load-url": {
		requiresAuthentication: false,
	},
	"openai/summarize-url-content": {
		requiresAuthentication: false,
	},
	"openai/summary": {
		requiresAuthentication: false,
	},
	"openai/weather": {
		requiresAuthentication: false,
	},
	"users/get": {
		requiresAuthentication: false,
	},
	"users/subscribe": {
		requiresAuthentication: false,
	},
	"users/update": {
		requiresAuthentication: false,
	},
};

export type PublicUser = User<UserRole, PublicCustomClaims>;

export class WunderGraphClient extends Client {
	query<
		OperationName extends Extract<keyof Operations["queries"], string>,
		Input extends Operations["queries"][OperationName]["input"] = Operations["queries"][OperationName]["input"],
		Response extends Operations["queries"][OperationName]["response"] = Operations["queries"][OperationName]["response"]
	>(options: OperationName extends string ? QueryRequestOptions<OperationName, Input> : OperationRequestOptions) {
		return super.query<OperationRequestOptions, Response["data"], Response["error"]>(options);
	}

	mutate<
		OperationName extends Extract<keyof Operations["mutations"], string>,
		Input extends Operations["mutations"][OperationName]["input"] = Operations["mutations"][OperationName]["input"],
		Response extends Operations["mutations"][OperationName]["response"] = Operations["mutations"][OperationName]["response"]
	>(options: OperationName extends string ? MutationRequestOptions<OperationName, Input> : OperationRequestOptions) {
		return super.mutate<OperationRequestOptions, Response["data"], Response["error"]>(options);
	}

	subscribe<
		OperationName extends Extract<keyof Operations["subscriptions"], string>,
		Input extends Operations["subscriptions"][OperationName]["input"] = Operations["subscriptions"][OperationName]["input"],
		Response extends Operations["subscriptions"][OperationName]["response"] = Operations["subscriptions"][OperationName]["response"]
	>(
		options: OperationName extends string
			? SubscriptionRequestOptions<OperationName, Input>
			: SubscriptionRequestOptions,
		cb?: SubscriptionEventHandler<Response["data"], Response["error"]>
	) {
		return super.subscribe<OperationRequestOptions, Response["data"], Response["error"]>(options, cb);
	}
	public login(authProviderID: Operations["authProvider"], redirectURI?: string) {
		return super.login(authProviderID, redirectURI);
	}
	public async fetchUser<TUser extends PublicUser = PublicUser>(options?: FetchUserRequestOptions) {
		return super.fetchUser<TUser>(options);
	}
}

export const createClient = (config?: CreateClientConfig) => {
	return new WunderGraphClient({
		...defaultClientConfig,
		...config,
		operationMetadata,
		csrfEnabled: false,
	});
};

export type Queries = {
	"clientPortal/AggregateActivity": {
		input: ClientPortalAggregateActivityInput;
		response: { data?: ClientPortalAggregateActivityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/AggregateClient": {
		input: ClientPortalAggregateClientInput;
		response: { data?: ClientPortalAggregateClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/AggregateService": {
		input: ClientPortalAggregateServiceInput;
		response: { data?: ClientPortalAggregateServiceResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/FindFirstActivity": {
		input: ClientPortalFindFirstActivityInput;
		response: { data?: ClientPortalFindFirstActivityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/FindFirstActivityOrThrow": {
		input: ClientPortalFindFirstActivityOrThrowInput;
		response: { data?: ClientPortalFindFirstActivityOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/FindFirstClient": {
		input: ClientPortalFindFirstClientInput;
		response: { data?: ClientPortalFindFirstClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/FindFirstClientOrThrow": {
		input: ClientPortalFindFirstClientOrThrowInput;
		response: { data?: ClientPortalFindFirstClientOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/FindFirstService": {
		input: ClientPortalFindFirstServiceInput;
		response: { data?: ClientPortalFindFirstServiceResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/FindFirstServiceOrThrow": {
		input: ClientPortalFindFirstServiceOrThrowInput;
		response: { data?: ClientPortalFindFirstServiceOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/FindManyActivity": {
		input: ClientPortalFindManyActivityInput;
		response: { data?: ClientPortalFindManyActivityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/FindManyClient": {
		input: ClientPortalFindManyClientInput;
		response: { data?: ClientPortalFindManyClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/FindManyService": {
		input: ClientPortalFindManyServiceInput;
		response: { data?: ClientPortalFindManyServiceResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/FindUniqueActivity": {
		input: ClientPortalFindUniqueActivityInput;
		response: { data?: ClientPortalFindUniqueActivityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/FindUniqueActivityOrThrow": {
		input: ClientPortalFindUniqueActivityOrThrowInput;
		response: { data?: ClientPortalFindUniqueActivityOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/FindUniqueClient": {
		input: ClientPortalFindUniqueClientInput;
		response: { data?: ClientPortalFindUniqueClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/FindUniqueClientOrThrow": {
		input: ClientPortalFindUniqueClientOrThrowInput;
		response: { data?: ClientPortalFindUniqueClientOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/FindUniqueService": {
		input: ClientPortalFindUniqueServiceInput;
		response: { data?: ClientPortalFindUniqueServiceResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/FindUniqueServiceOrThrow": {
		input: ClientPortalFindUniqueServiceOrThrowInput;
		response: { data?: ClientPortalFindUniqueServiceOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/GroupByActivity": {
		input: ClientPortalGroupByActivityInput;
		response: { data?: ClientPortalGroupByActivityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/GroupByClient": {
		input: ClientPortalGroupByClientInput;
		response: { data?: ClientPortalGroupByClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/GroupByService": {
		input: ClientPortalGroupByServiceInput;
		response: { data?: ClientPortalGroupByServiceResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/QueryRaw": {
		input: ClientPortalQueryRawInput;
		response: { data?: ClientPortalQueryRawResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"clientPortal/QueryRawJSON": {
		input: ClientPortalQueryRawJSONInput;
		response: { data?: ClientPortalQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"countries/Continent": {
		input: CountriesContinentInput;
		response: { data?: CountriesContinentResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"countries/Continents": {
		input: CountriesContinentsInput;
		response: { data?: CountriesContinentsResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"countries/Countries": {
		input: CountriesCountriesInput;
		response: { data?: CountriesCountriesResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"countries/Country": {
		input: CountriesCountryInput;
		response: { data?: CountriesCountryResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"countries/CountryByCode": {
		input: CountriesCountryByCodeInput;
		response: { data?: CountriesCountryByCodeResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"countries/Language": {
		input: CountriesLanguageInput;
		response: { data?: CountriesLanguageResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"countries/Languages": {
		input: CountriesLanguagesInput;
		response: { data?: CountriesLanguagesResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/AggregateAccount": {
		input: CustomerCommunicationAggregateAccountInput;
		response: { data?: CustomerCommunicationAggregateAccountResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/AggregateFilter": {
		input: CustomerCommunicationAggregateFilterInput;
		response: { data?: CustomerCommunicationAggregateFilterResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/AggregateInteraction": {
		input: CustomerCommunicationAggregateInteractionInput;
		response: { data?: CustomerCommunicationAggregateInteractionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/AggregateSession": {
		input: CustomerCommunicationAggregateSessionInput;
		response: { data?: CustomerCommunicationAggregateSessionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/AggregateUser": {
		input: CustomerCommunicationAggregateUserInput;
		response: { data?: CustomerCommunicationAggregateUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/AggregateVerificationToken": {
		input: CustomerCommunicationAggregateVerificationTokenInput;
		response: { data?: CustomerCommunicationAggregateVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/AggregateWidget": {
		input: CustomerCommunicationAggregateWidgetInput;
		response: { data?: CustomerCommunicationAggregateWidgetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindFirstAccount": {
		input: CustomerCommunicationFindFirstAccountInput;
		response: { data?: CustomerCommunicationFindFirstAccountResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindFirstAccountOrThrow": {
		input: CustomerCommunicationFindFirstAccountOrThrowInput;
		response: { data?: CustomerCommunicationFindFirstAccountOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindFirstFilter": {
		input: CustomerCommunicationFindFirstFilterInput;
		response: { data?: CustomerCommunicationFindFirstFilterResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindFirstFilterOrThrow": {
		input: CustomerCommunicationFindFirstFilterOrThrowInput;
		response: { data?: CustomerCommunicationFindFirstFilterOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindFirstInteraction": {
		input: CustomerCommunicationFindFirstInteractionInput;
		response: { data?: CustomerCommunicationFindFirstInteractionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindFirstInteractionOrThrow": {
		input: CustomerCommunicationFindFirstInteractionOrThrowInput;
		response: {
			data?: CustomerCommunicationFindFirstInteractionOrThrowResponse["data"];
			error?: ClientOperationErrors;
		};
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindFirstSession": {
		input: CustomerCommunicationFindFirstSessionInput;
		response: { data?: CustomerCommunicationFindFirstSessionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindFirstSessionOrThrow": {
		input: CustomerCommunicationFindFirstSessionOrThrowInput;
		response: { data?: CustomerCommunicationFindFirstSessionOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindFirstUser": {
		input: CustomerCommunicationFindFirstUserInput;
		response: { data?: CustomerCommunicationFindFirstUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindFirstUserOrThrow": {
		input: CustomerCommunicationFindFirstUserOrThrowInput;
		response: { data?: CustomerCommunicationFindFirstUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindFirstVerificationToken": {
		input: CustomerCommunicationFindFirstVerificationTokenInput;
		response: { data?: CustomerCommunicationFindFirstVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindFirstVerificationTokenOrThrow": {
		input: CustomerCommunicationFindFirstVerificationTokenOrThrowInput;
		response: {
			data?: CustomerCommunicationFindFirstVerificationTokenOrThrowResponse["data"];
			error?: ClientOperationErrors;
		};
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindFirstWidget": {
		input: CustomerCommunicationFindFirstWidgetInput;
		response: { data?: CustomerCommunicationFindFirstWidgetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindFirstWidgetOrThrow": {
		input: CustomerCommunicationFindFirstWidgetOrThrowInput;
		response: { data?: CustomerCommunicationFindFirstWidgetOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindManyAccount": {
		input: CustomerCommunicationFindManyAccountInput;
		response: { data?: CustomerCommunicationFindManyAccountResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindManyFilter": {
		input: CustomerCommunicationFindManyFilterInput;
		response: { data?: CustomerCommunicationFindManyFilterResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindManyInteraction": {
		input: CustomerCommunicationFindManyInteractionInput;
		response: { data?: CustomerCommunicationFindManyInteractionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindManySession": {
		input: CustomerCommunicationFindManySessionInput;
		response: { data?: CustomerCommunicationFindManySessionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindManyUser": {
		input: CustomerCommunicationFindManyUserInput;
		response: { data?: CustomerCommunicationFindManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindManyVerificationToken": {
		input: CustomerCommunicationFindManyVerificationTokenInput;
		response: { data?: CustomerCommunicationFindManyVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindManyWidget": {
		input: CustomerCommunicationFindManyWidgetInput;
		response: { data?: CustomerCommunicationFindManyWidgetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindUniqueAccount": {
		input: CustomerCommunicationFindUniqueAccountInput;
		response: { data?: CustomerCommunicationFindUniqueAccountResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindUniqueAccountOrThrow": {
		input: CustomerCommunicationFindUniqueAccountOrThrowInput;
		response: { data?: CustomerCommunicationFindUniqueAccountOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindUniqueFilter": {
		input: CustomerCommunicationFindUniqueFilterInput;
		response: { data?: CustomerCommunicationFindUniqueFilterResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindUniqueFilterOrThrow": {
		input: CustomerCommunicationFindUniqueFilterOrThrowInput;
		response: { data?: CustomerCommunicationFindUniqueFilterOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindUniqueInteraction": {
		input: CustomerCommunicationFindUniqueInteractionInput;
		response: { data?: CustomerCommunicationFindUniqueInteractionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindUniqueInteractionOrThrow": {
		input: CustomerCommunicationFindUniqueInteractionOrThrowInput;
		response: {
			data?: CustomerCommunicationFindUniqueInteractionOrThrowResponse["data"];
			error?: ClientOperationErrors;
		};
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindUniqueSession": {
		input: CustomerCommunicationFindUniqueSessionInput;
		response: { data?: CustomerCommunicationFindUniqueSessionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindUniqueSessionOrThrow": {
		input: CustomerCommunicationFindUniqueSessionOrThrowInput;
		response: { data?: CustomerCommunicationFindUniqueSessionOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindUniqueUser": {
		input: CustomerCommunicationFindUniqueUserInput;
		response: { data?: CustomerCommunicationFindUniqueUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindUniqueUserOrThrow": {
		input: CustomerCommunicationFindUniqueUserOrThrowInput;
		response: { data?: CustomerCommunicationFindUniqueUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindUniqueVerificationToken": {
		input: CustomerCommunicationFindUniqueVerificationTokenInput;
		response: {
			data?: CustomerCommunicationFindUniqueVerificationTokenResponse["data"];
			error?: ClientOperationErrors;
		};
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindUniqueVerificationTokenOrThrow": {
		input: CustomerCommunicationFindUniqueVerificationTokenOrThrowInput;
		response: {
			data?: CustomerCommunicationFindUniqueVerificationTokenOrThrowResponse["data"];
			error?: ClientOperationErrors;
		};
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindUniqueWidget": {
		input: CustomerCommunicationFindUniqueWidgetInput;
		response: { data?: CustomerCommunicationFindUniqueWidgetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/FindUniqueWidgetOrThrow": {
		input: CustomerCommunicationFindUniqueWidgetOrThrowInput;
		response: { data?: CustomerCommunicationFindUniqueWidgetOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/GroupByAccount": {
		input: CustomerCommunicationGroupByAccountInput;
		response: { data?: CustomerCommunicationGroupByAccountResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/GroupByFilter": {
		input: CustomerCommunicationGroupByFilterInput;
		response: { data?: CustomerCommunicationGroupByFilterResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/GroupByInteraction": {
		input: CustomerCommunicationGroupByInteractionInput;
		response: { data?: CustomerCommunicationGroupByInteractionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/GroupBySession": {
		input: CustomerCommunicationGroupBySessionInput;
		response: { data?: CustomerCommunicationGroupBySessionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/GroupByUser": {
		input: CustomerCommunicationGroupByUserInput;
		response: { data?: CustomerCommunicationGroupByUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/GroupByVerificationToken": {
		input: CustomerCommunicationGroupByVerificationTokenInput;
		response: { data?: CustomerCommunicationGroupByVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/GroupByWidget": {
		input: CustomerCommunicationGroupByWidgetInput;
		response: { data?: CustomerCommunicationGroupByWidgetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/QueryRaw": {
		input: CustomerCommunicationQueryRawInput;
		response: { data?: CustomerCommunicationQueryRawResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"customerCommunication/QueryRawJSON": {
		input: CustomerCommunicationQueryRawJSONInput;
		response: { data?: CustomerCommunicationQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/AggregateAdminAction": {
		input: GpacAggregateAdminActionInput;
		response: { data?: GpacAggregateAdminActionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/AggregatePolicy": {
		input: GpacAggregatePolicyInput;
		response: { data?: GpacAggregatePolicyResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/AggregateUser": {
		input: GpacAggregateUserInput;
		response: { data?: GpacAggregateUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/FindFirstAdminAction": {
		input: GpacFindFirstAdminActionInput;
		response: { data?: GpacFindFirstAdminActionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/FindFirstAdminActionOrThrow": {
		input: GpacFindFirstAdminActionOrThrowInput;
		response: { data?: GpacFindFirstAdminActionOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/FindFirstPolicy": {
		input: GpacFindFirstPolicyInput;
		response: { data?: GpacFindFirstPolicyResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/FindFirstPolicyOrThrow": {
		input: GpacFindFirstPolicyOrThrowInput;
		response: { data?: GpacFindFirstPolicyOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/FindFirstUser": {
		input: GpacFindFirstUserInput;
		response: { data?: GpacFindFirstUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/FindFirstUserOrThrow": {
		input: GpacFindFirstUserOrThrowInput;
		response: { data?: GpacFindFirstUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/FindManyAdminAction": {
		input: GpacFindManyAdminActionInput;
		response: { data?: GpacFindManyAdminActionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/FindManyPolicy": {
		input: GpacFindManyPolicyInput;
		response: { data?: GpacFindManyPolicyResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/FindManyUser": {
		input: GpacFindManyUserInput;
		response: { data?: GpacFindManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/FindUniqueAdminAction": {
		input: GpacFindUniqueAdminActionInput;
		response: { data?: GpacFindUniqueAdminActionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/FindUniqueAdminActionOrThrow": {
		input: GpacFindUniqueAdminActionOrThrowInput;
		response: { data?: GpacFindUniqueAdminActionOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/FindUniquePolicy": {
		input: GpacFindUniquePolicyInput;
		response: { data?: GpacFindUniquePolicyResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/FindUniquePolicyOrThrow": {
		input: GpacFindUniquePolicyOrThrowInput;
		response: { data?: GpacFindUniquePolicyOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/FindUniqueUser": {
		input: GpacFindUniqueUserInput;
		response: { data?: GpacFindUniqueUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/FindUniqueUserOrThrow": {
		input: GpacFindUniqueUserOrThrowInput;
		response: { data?: GpacFindUniqueUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/GroupByAdminAction": {
		input: GpacGroupByAdminActionInput;
		response: { data?: GpacGroupByAdminActionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/GroupByPolicy": {
		input: GpacGroupByPolicyInput;
		response: { data?: GpacGroupByPolicyResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/GroupByUser": {
		input: GpacGroupByUserInput;
		response: { data?: GpacGroupByUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/QueryRaw": {
		input: GpacQueryRawInput;
		response: { data?: GpacQueryRawResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"gpac/QueryRawJSON": {
		input: GpacQueryRawJSONInput;
		response: { data?: GpacQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/AggregateFeature": {
		input: GuardianOnlineAggregateFeatureInput;
		response: { data?: GuardianOnlineAggregateFeatureResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/AggregateUser": {
		input: GuardianOnlineAggregateUserInput;
		response: { data?: GuardianOnlineAggregateUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/AggregateUserLog": {
		input: GuardianOnlineAggregateUserLogInput;
		response: { data?: GuardianOnlineAggregateUserLogResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/FindFirstFeature": {
		input: GuardianOnlineFindFirstFeatureInput;
		response: { data?: GuardianOnlineFindFirstFeatureResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/FindFirstFeatureOrThrow": {
		input: GuardianOnlineFindFirstFeatureOrThrowInput;
		response: { data?: GuardianOnlineFindFirstFeatureOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/FindFirstUser": {
		input: GuardianOnlineFindFirstUserInput;
		response: { data?: GuardianOnlineFindFirstUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/FindFirstUserLog": {
		input: GuardianOnlineFindFirstUserLogInput;
		response: { data?: GuardianOnlineFindFirstUserLogResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/FindFirstUserLogOrThrow": {
		input: GuardianOnlineFindFirstUserLogOrThrowInput;
		response: { data?: GuardianOnlineFindFirstUserLogOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/FindFirstUserOrThrow": {
		input: GuardianOnlineFindFirstUserOrThrowInput;
		response: { data?: GuardianOnlineFindFirstUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/FindManyFeature": {
		input: GuardianOnlineFindManyFeatureInput;
		response: { data?: GuardianOnlineFindManyFeatureResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/FindManyUser": {
		input: GuardianOnlineFindManyUserInput;
		response: { data?: GuardianOnlineFindManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/FindManyUserLog": {
		input: GuardianOnlineFindManyUserLogInput;
		response: { data?: GuardianOnlineFindManyUserLogResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/FindUniqueFeature": {
		input: GuardianOnlineFindUniqueFeatureInput;
		response: { data?: GuardianOnlineFindUniqueFeatureResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/FindUniqueFeatureOrThrow": {
		input: GuardianOnlineFindUniqueFeatureOrThrowInput;
		response: { data?: GuardianOnlineFindUniqueFeatureOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/FindUniqueUser": {
		input: GuardianOnlineFindUniqueUserInput;
		response: { data?: GuardianOnlineFindUniqueUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/FindUniqueUserLog": {
		input: GuardianOnlineFindUniqueUserLogInput;
		response: { data?: GuardianOnlineFindUniqueUserLogResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/FindUniqueUserLogOrThrow": {
		input: GuardianOnlineFindUniqueUserLogOrThrowInput;
		response: { data?: GuardianOnlineFindUniqueUserLogOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/FindUniqueUserOrThrow": {
		input: GuardianOnlineFindUniqueUserOrThrowInput;
		response: { data?: GuardianOnlineFindUniqueUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/GroupByFeature": {
		input: GuardianOnlineGroupByFeatureInput;
		response: { data?: GuardianOnlineGroupByFeatureResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/GroupByUser": {
		input: GuardianOnlineGroupByUserInput;
		response: { data?: GuardianOnlineGroupByUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/GroupByUserLog": {
		input: GuardianOnlineGroupByUserLogInput;
		response: { data?: GuardianOnlineGroupByUserLogResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/QueryRaw": {
		input: GuardianOnlineQueryRawInput;
		response: { data?: GuardianOnlineQueryRawResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"guardianOnline/QueryRawJSON": {
		input: GuardianOnlineQueryRawJSONInput;
		response: { data?: GuardianOnlineQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/AggregateAsset": {
		input: LivingBalanceSheetAggregateAssetInput;
		response: { data?: LivingBalanceSheetAggregateAssetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/AggregateFinancialGoal": {
		input: LivingBalanceSheetAggregateFinancialGoalInput;
		response: { data?: LivingBalanceSheetAggregateFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/AggregateLiability": {
		input: LivingBalanceSheetAggregateLiabilityInput;
		response: { data?: LivingBalanceSheetAggregateLiabilityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/AggregateUser": {
		input: LivingBalanceSheetAggregateUserInput;
		response: { data?: LivingBalanceSheetAggregateUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindFirstAsset": {
		input: LivingBalanceSheetFindFirstAssetInput;
		response: { data?: LivingBalanceSheetFindFirstAssetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindFirstAssetOrThrow": {
		input: LivingBalanceSheetFindFirstAssetOrThrowInput;
		response: { data?: LivingBalanceSheetFindFirstAssetOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindFirstFinancialGoal": {
		input: LivingBalanceSheetFindFirstFinancialGoalInput;
		response: { data?: LivingBalanceSheetFindFirstFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindFirstFinancialGoalOrThrow": {
		input: LivingBalanceSheetFindFirstFinancialGoalOrThrowInput;
		response: { data?: LivingBalanceSheetFindFirstFinancialGoalOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindFirstLiability": {
		input: LivingBalanceSheetFindFirstLiabilityInput;
		response: { data?: LivingBalanceSheetFindFirstLiabilityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindFirstLiabilityOrThrow": {
		input: LivingBalanceSheetFindFirstLiabilityOrThrowInput;
		response: { data?: LivingBalanceSheetFindFirstLiabilityOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindFirstUser": {
		input: LivingBalanceSheetFindFirstUserInput;
		response: { data?: LivingBalanceSheetFindFirstUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindFirstUserOrThrow": {
		input: LivingBalanceSheetFindFirstUserOrThrowInput;
		response: { data?: LivingBalanceSheetFindFirstUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindManyAsset": {
		input: LivingBalanceSheetFindManyAssetInput;
		response: { data?: LivingBalanceSheetFindManyAssetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindManyFinancialGoal": {
		input: LivingBalanceSheetFindManyFinancialGoalInput;
		response: { data?: LivingBalanceSheetFindManyFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindManyLiability": {
		input: LivingBalanceSheetFindManyLiabilityInput;
		response: { data?: LivingBalanceSheetFindManyLiabilityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindManyUser": {
		input: LivingBalanceSheetFindManyUserInput;
		response: { data?: LivingBalanceSheetFindManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindUniqueAsset": {
		input: LivingBalanceSheetFindUniqueAssetInput;
		response: { data?: LivingBalanceSheetFindUniqueAssetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindUniqueAssetOrThrow": {
		input: LivingBalanceSheetFindUniqueAssetOrThrowInput;
		response: { data?: LivingBalanceSheetFindUniqueAssetOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindUniqueFinancialGoal": {
		input: LivingBalanceSheetFindUniqueFinancialGoalInput;
		response: { data?: LivingBalanceSheetFindUniqueFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindUniqueFinancialGoalOrThrow": {
		input: LivingBalanceSheetFindUniqueFinancialGoalOrThrowInput;
		response: {
			data?: LivingBalanceSheetFindUniqueFinancialGoalOrThrowResponse["data"];
			error?: ClientOperationErrors;
		};
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindUniqueLiability": {
		input: LivingBalanceSheetFindUniqueLiabilityInput;
		response: { data?: LivingBalanceSheetFindUniqueLiabilityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindUniqueLiabilityOrThrow": {
		input: LivingBalanceSheetFindUniqueLiabilityOrThrowInput;
		response: { data?: LivingBalanceSheetFindUniqueLiabilityOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindUniqueUser": {
		input: LivingBalanceSheetFindUniqueUserInput;
		response: { data?: LivingBalanceSheetFindUniqueUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/FindUniqueUserOrThrow": {
		input: LivingBalanceSheetFindUniqueUserOrThrowInput;
		response: { data?: LivingBalanceSheetFindUniqueUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/GroupByAsset": {
		input: LivingBalanceSheetGroupByAssetInput;
		response: { data?: LivingBalanceSheetGroupByAssetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/GroupByFinancialGoal": {
		input: LivingBalanceSheetGroupByFinancialGoalInput;
		response: { data?: LivingBalanceSheetGroupByFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/GroupByLiability": {
		input: LivingBalanceSheetGroupByLiabilityInput;
		response: { data?: LivingBalanceSheetGroupByLiabilityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/GroupByUser": {
		input: LivingBalanceSheetGroupByUserInput;
		response: { data?: LivingBalanceSheetGroupByUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/QueryRaw": {
		input: LivingBalanceSheetQueryRawInput;
		response: { data?: LivingBalanceSheetQueryRawResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"livingBalanceSheet/QueryRawJSON": {
		input: LivingBalanceSheetQueryRawJSONInput;
		response: { data?: LivingBalanceSheetQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/AggregateClient": {
		input: SmartOfficeAggregateClientInput;
		response: { data?: SmartOfficeAggregateClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/AggregateSale": {
		input: SmartOfficeAggregateSaleInput;
		response: { data?: SmartOfficeAggregateSaleResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/AggregateTask": {
		input: SmartOfficeAggregateTaskInput;
		response: { data?: SmartOfficeAggregateTaskResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/AggregateUser": {
		input: SmartOfficeAggregateUserInput;
		response: { data?: SmartOfficeAggregateUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindFirstClient": {
		input: SmartOfficeFindFirstClientInput;
		response: { data?: SmartOfficeFindFirstClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindFirstClientOrThrow": {
		input: SmartOfficeFindFirstClientOrThrowInput;
		response: { data?: SmartOfficeFindFirstClientOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindFirstSale": {
		input: SmartOfficeFindFirstSaleInput;
		response: { data?: SmartOfficeFindFirstSaleResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindFirstSaleOrThrow": {
		input: SmartOfficeFindFirstSaleOrThrowInput;
		response: { data?: SmartOfficeFindFirstSaleOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindFirstTask": {
		input: SmartOfficeFindFirstTaskInput;
		response: { data?: SmartOfficeFindFirstTaskResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindFirstTaskOrThrow": {
		input: SmartOfficeFindFirstTaskOrThrowInput;
		response: { data?: SmartOfficeFindFirstTaskOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindFirstUser": {
		input: SmartOfficeFindFirstUserInput;
		response: { data?: SmartOfficeFindFirstUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindFirstUserOrThrow": {
		input: SmartOfficeFindFirstUserOrThrowInput;
		response: { data?: SmartOfficeFindFirstUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindManyClient": {
		input: SmartOfficeFindManyClientInput;
		response: { data?: SmartOfficeFindManyClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindManySale": {
		input: SmartOfficeFindManySaleInput;
		response: { data?: SmartOfficeFindManySaleResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindManyTask": {
		input: SmartOfficeFindManyTaskInput;
		response: { data?: SmartOfficeFindManyTaskResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindManyUser": {
		input: SmartOfficeFindManyUserInput;
		response: { data?: SmartOfficeFindManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindUniqueClient": {
		input: SmartOfficeFindUniqueClientInput;
		response: { data?: SmartOfficeFindUniqueClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindUniqueClientOrThrow": {
		input: SmartOfficeFindUniqueClientOrThrowInput;
		response: { data?: SmartOfficeFindUniqueClientOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindUniqueSale": {
		input: SmartOfficeFindUniqueSaleInput;
		response: { data?: SmartOfficeFindUniqueSaleResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindUniqueSaleOrThrow": {
		input: SmartOfficeFindUniqueSaleOrThrowInput;
		response: { data?: SmartOfficeFindUniqueSaleOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindUniqueTask": {
		input: SmartOfficeFindUniqueTaskInput;
		response: { data?: SmartOfficeFindUniqueTaskResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindUniqueTaskOrThrow": {
		input: SmartOfficeFindUniqueTaskOrThrowInput;
		response: { data?: SmartOfficeFindUniqueTaskOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindUniqueUser": {
		input: SmartOfficeFindUniqueUserInput;
		response: { data?: SmartOfficeFindUniqueUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/FindUniqueUserOrThrow": {
		input: SmartOfficeFindUniqueUserOrThrowInput;
		response: { data?: SmartOfficeFindUniqueUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/GroupByClient": {
		input: SmartOfficeGroupByClientInput;
		response: { data?: SmartOfficeGroupByClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/GroupBySale": {
		input: SmartOfficeGroupBySaleInput;
		response: { data?: SmartOfficeGroupBySaleResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/GroupByTask": {
		input: SmartOfficeGroupByTaskInput;
		response: { data?: SmartOfficeGroupByTaskResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/GroupByUser": {
		input: SmartOfficeGroupByUserInput;
		response: { data?: SmartOfficeGroupByUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/QueryRaw": {
		input: SmartOfficeQueryRawInput;
		response: { data?: SmartOfficeQueryRawResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"smartOffice/QueryRawJSON": {
		input: SmartOfficeQueryRawJSONInput;
		response: { data?: SmartOfficeQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"users/CountUsers": {
		input?: undefined;
		response: { data?: UsersCountUsersResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"users/GetAllUsers": {
		input?: undefined;
		response: { data?: UsersGetAllUsersResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"weather/GetCityById": {
		input: WeatherGetCityByIdInput;
		response: { data?: WeatherGetCityByIdResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"weather/GetCityByName": {
		input: WeatherGetCityByNameInput;
		response: { data?: WeatherGetCityByNameResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"openai/extract-website-metadata": {
		input: OpenaiExtract_website_metadataInput;
		response: {
			data?: OpenaiExtract_website_metadataResponseData;
			error?: OperationErrors["openai/extract-website-metadata"];
		};
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"openai/load-url": {
		input: OpenaiLoad_urlInput;
		response: { data?: OpenaiLoad_urlResponseData; error?: OperationErrors["openai/load-url"] };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"openai/summarize-url-content": {
		input: OpenaiSummarize_url_contentInput;
		response: {
			data?: OpenaiSummarize_url_contentResponseData;
			error?: OperationErrors["openai/summarize-url-content"];
		};
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"openai/summary": {
		input: OpenaiSummaryInput;
		response: { data?: OpenaiSummaryResponseData; error?: OperationErrors["openai/summary"] };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"openai/weather": {
		input: OpenaiWeatherInput;
		response: { data?: OpenaiWeatherResponseData; error?: OperationErrors["openai/weather"] };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
	"users/get": {
		input: UsersGetInput;
		response: { data?: UsersGetResponseData; error?: OperationErrors["users/get"] };
		requiresAuthentication: false;
		liveQuery: boolean;
	};
};

export type Mutations = {
	"clientPortal/CreateManyActivity": {
		input: ClientPortalCreateManyActivityInput;
		response: { data?: ClientPortalCreateManyActivityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/CreateManyClient": {
		input: ClientPortalCreateManyClientInput;
		response: { data?: ClientPortalCreateManyClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/CreateManyService": {
		input: ClientPortalCreateManyServiceInput;
		response: { data?: ClientPortalCreateManyServiceResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/CreateOneActivity": {
		input: ClientPortalCreateOneActivityInput;
		response: { data?: ClientPortalCreateOneActivityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/CreateOneClient": {
		input: ClientPortalCreateOneClientInput;
		response: { data?: ClientPortalCreateOneClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/CreateOneService": {
		input: ClientPortalCreateOneServiceInput;
		response: { data?: ClientPortalCreateOneServiceResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/DeleteManyActivity": {
		input: ClientPortalDeleteManyActivityInput;
		response: { data?: ClientPortalDeleteManyActivityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/DeleteManyClient": {
		input: ClientPortalDeleteManyClientInput;
		response: { data?: ClientPortalDeleteManyClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/DeleteManyService": {
		input: ClientPortalDeleteManyServiceInput;
		response: { data?: ClientPortalDeleteManyServiceResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/DeleteOneActivity": {
		input: ClientPortalDeleteOneActivityInput;
		response: { data?: ClientPortalDeleteOneActivityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/DeleteOneClient": {
		input: ClientPortalDeleteOneClientInput;
		response: { data?: ClientPortalDeleteOneClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/DeleteOneService": {
		input: ClientPortalDeleteOneServiceInput;
		response: { data?: ClientPortalDeleteOneServiceResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/ExecuteRaw": {
		input: ClientPortalExecuteRawInput;
		response: { data?: ClientPortalExecuteRawResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/UpdateManyActivity": {
		input: ClientPortalUpdateManyActivityInput;
		response: { data?: ClientPortalUpdateManyActivityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/UpdateManyClient": {
		input: ClientPortalUpdateManyClientInput;
		response: { data?: ClientPortalUpdateManyClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/UpdateManyService": {
		input: ClientPortalUpdateManyServiceInput;
		response: { data?: ClientPortalUpdateManyServiceResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/UpdateOneActivity": {
		input: ClientPortalUpdateOneActivityInput;
		response: { data?: ClientPortalUpdateOneActivityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/UpdateOneClient": {
		input: ClientPortalUpdateOneClientInput;
		response: { data?: ClientPortalUpdateOneClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/UpdateOneService": {
		input: ClientPortalUpdateOneServiceInput;
		response: { data?: ClientPortalUpdateOneServiceResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/UpsertOneActivity": {
		input: ClientPortalUpsertOneActivityInput;
		response: { data?: ClientPortalUpsertOneActivityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/UpsertOneClient": {
		input: ClientPortalUpsertOneClientInput;
		response: { data?: ClientPortalUpsertOneClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"clientPortal/UpsertOneService": {
		input: ClientPortalUpsertOneServiceInput;
		response: { data?: ClientPortalUpsertOneServiceResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/CreateManyAccount": {
		input: CustomerCommunicationCreateManyAccountInput;
		response: { data?: CustomerCommunicationCreateManyAccountResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/CreateManyFilter": {
		input: CustomerCommunicationCreateManyFilterInput;
		response: { data?: CustomerCommunicationCreateManyFilterResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/CreateManyInteraction": {
		input: CustomerCommunicationCreateManyInteractionInput;
		response: { data?: CustomerCommunicationCreateManyInteractionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/CreateManySession": {
		input: CustomerCommunicationCreateManySessionInput;
		response: { data?: CustomerCommunicationCreateManySessionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/CreateManyUser": {
		input: CustomerCommunicationCreateManyUserInput;
		response: { data?: CustomerCommunicationCreateManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/CreateManyVerificationToken": {
		input: CustomerCommunicationCreateManyVerificationTokenInput;
		response: {
			data?: CustomerCommunicationCreateManyVerificationTokenResponse["data"];
			error?: ClientOperationErrors;
		};
		requiresAuthentication: false;
	};
	"customerCommunication/CreateManyWidget": {
		input: CustomerCommunicationCreateManyWidgetInput;
		response: { data?: CustomerCommunicationCreateManyWidgetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/CreateOneAccount": {
		input: CustomerCommunicationCreateOneAccountInput;
		response: { data?: CustomerCommunicationCreateOneAccountResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/CreateOneFilter": {
		input: CustomerCommunicationCreateOneFilterInput;
		response: { data?: CustomerCommunicationCreateOneFilterResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/CreateOneInteraction": {
		input: CustomerCommunicationCreateOneInteractionInput;
		response: { data?: CustomerCommunicationCreateOneInteractionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/CreateOneSession": {
		input: CustomerCommunicationCreateOneSessionInput;
		response: { data?: CustomerCommunicationCreateOneSessionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/CreateOneUser": {
		input: CustomerCommunicationCreateOneUserInput;
		response: { data?: CustomerCommunicationCreateOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/CreateOneVerificationToken": {
		input: CustomerCommunicationCreateOneVerificationTokenInput;
		response: { data?: CustomerCommunicationCreateOneVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/CreateOneWidget": {
		input: CustomerCommunicationCreateOneWidgetInput;
		response: { data?: CustomerCommunicationCreateOneWidgetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/DeleteManyAccount": {
		input: CustomerCommunicationDeleteManyAccountInput;
		response: { data?: CustomerCommunicationDeleteManyAccountResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/DeleteManyFilter": {
		input: CustomerCommunicationDeleteManyFilterInput;
		response: { data?: CustomerCommunicationDeleteManyFilterResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/DeleteManyInteraction": {
		input: CustomerCommunicationDeleteManyInteractionInput;
		response: { data?: CustomerCommunicationDeleteManyInteractionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/DeleteManySession": {
		input: CustomerCommunicationDeleteManySessionInput;
		response: { data?: CustomerCommunicationDeleteManySessionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/DeleteManyUser": {
		input: CustomerCommunicationDeleteManyUserInput;
		response: { data?: CustomerCommunicationDeleteManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/DeleteManyVerificationToken": {
		input: CustomerCommunicationDeleteManyVerificationTokenInput;
		response: {
			data?: CustomerCommunicationDeleteManyVerificationTokenResponse["data"];
			error?: ClientOperationErrors;
		};
		requiresAuthentication: false;
	};
	"customerCommunication/DeleteManyWidget": {
		input: CustomerCommunicationDeleteManyWidgetInput;
		response: { data?: CustomerCommunicationDeleteManyWidgetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/DeleteOneAccount": {
		input: CustomerCommunicationDeleteOneAccountInput;
		response: { data?: CustomerCommunicationDeleteOneAccountResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/DeleteOneFilter": {
		input: CustomerCommunicationDeleteOneFilterInput;
		response: { data?: CustomerCommunicationDeleteOneFilterResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/DeleteOneInteraction": {
		input: CustomerCommunicationDeleteOneInteractionInput;
		response: { data?: CustomerCommunicationDeleteOneInteractionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/DeleteOneSession": {
		input: CustomerCommunicationDeleteOneSessionInput;
		response: { data?: CustomerCommunicationDeleteOneSessionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/DeleteOneUser": {
		input: CustomerCommunicationDeleteOneUserInput;
		response: { data?: CustomerCommunicationDeleteOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/DeleteOneVerificationToken": {
		input: CustomerCommunicationDeleteOneVerificationTokenInput;
		response: { data?: CustomerCommunicationDeleteOneVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/DeleteOneWidget": {
		input: CustomerCommunicationDeleteOneWidgetInput;
		response: { data?: CustomerCommunicationDeleteOneWidgetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/ExecuteRaw": {
		input: CustomerCommunicationExecuteRawInput;
		response: { data?: CustomerCommunicationExecuteRawResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpdateManyAccount": {
		input: CustomerCommunicationUpdateManyAccountInput;
		response: { data?: CustomerCommunicationUpdateManyAccountResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpdateManyFilter": {
		input: CustomerCommunicationUpdateManyFilterInput;
		response: { data?: CustomerCommunicationUpdateManyFilterResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpdateManyInteraction": {
		input: CustomerCommunicationUpdateManyInteractionInput;
		response: { data?: CustomerCommunicationUpdateManyInteractionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpdateManySession": {
		input: CustomerCommunicationUpdateManySessionInput;
		response: { data?: CustomerCommunicationUpdateManySessionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpdateManyUser": {
		input: CustomerCommunicationUpdateManyUserInput;
		response: { data?: CustomerCommunicationUpdateManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpdateManyVerificationToken": {
		input: CustomerCommunicationUpdateManyVerificationTokenInput;
		response: {
			data?: CustomerCommunicationUpdateManyVerificationTokenResponse["data"];
			error?: ClientOperationErrors;
		};
		requiresAuthentication: false;
	};
	"customerCommunication/UpdateManyWidget": {
		input: CustomerCommunicationUpdateManyWidgetInput;
		response: { data?: CustomerCommunicationUpdateManyWidgetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpdateOneAccount": {
		input: CustomerCommunicationUpdateOneAccountInput;
		response: { data?: CustomerCommunicationUpdateOneAccountResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpdateOneFilter": {
		input: CustomerCommunicationUpdateOneFilterInput;
		response: { data?: CustomerCommunicationUpdateOneFilterResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpdateOneInteraction": {
		input: CustomerCommunicationUpdateOneInteractionInput;
		response: { data?: CustomerCommunicationUpdateOneInteractionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpdateOneSession": {
		input: CustomerCommunicationUpdateOneSessionInput;
		response: { data?: CustomerCommunicationUpdateOneSessionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpdateOneUser": {
		input: CustomerCommunicationUpdateOneUserInput;
		response: { data?: CustomerCommunicationUpdateOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpdateOneVerificationToken": {
		input: CustomerCommunicationUpdateOneVerificationTokenInput;
		response: { data?: CustomerCommunicationUpdateOneVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpdateOneWidget": {
		input: CustomerCommunicationUpdateOneWidgetInput;
		response: { data?: CustomerCommunicationUpdateOneWidgetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpsertOneAccount": {
		input: CustomerCommunicationUpsertOneAccountInput;
		response: { data?: CustomerCommunicationUpsertOneAccountResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpsertOneFilter": {
		input: CustomerCommunicationUpsertOneFilterInput;
		response: { data?: CustomerCommunicationUpsertOneFilterResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpsertOneInteraction": {
		input: CustomerCommunicationUpsertOneInteractionInput;
		response: { data?: CustomerCommunicationUpsertOneInteractionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpsertOneSession": {
		input: CustomerCommunicationUpsertOneSessionInput;
		response: { data?: CustomerCommunicationUpsertOneSessionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpsertOneUser": {
		input: CustomerCommunicationUpsertOneUserInput;
		response: { data?: CustomerCommunicationUpsertOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpsertOneVerificationToken": {
		input: CustomerCommunicationUpsertOneVerificationTokenInput;
		response: { data?: CustomerCommunicationUpsertOneVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"customerCommunication/UpsertOneWidget": {
		input: CustomerCommunicationUpsertOneWidgetInput;
		response: { data?: CustomerCommunicationUpsertOneWidgetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/CreateManyAdminAction": {
		input: GpacCreateManyAdminActionInput;
		response: { data?: GpacCreateManyAdminActionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/CreateManyPolicy": {
		input: GpacCreateManyPolicyInput;
		response: { data?: GpacCreateManyPolicyResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/CreateManyUser": {
		input: GpacCreateManyUserInput;
		response: { data?: GpacCreateManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/CreateOneAdminAction": {
		input: GpacCreateOneAdminActionInput;
		response: { data?: GpacCreateOneAdminActionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/CreateOnePolicy": {
		input: GpacCreateOnePolicyInput;
		response: { data?: GpacCreateOnePolicyResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/CreateOneUser": {
		input: GpacCreateOneUserInput;
		response: { data?: GpacCreateOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/DeleteManyAdminAction": {
		input: GpacDeleteManyAdminActionInput;
		response: { data?: GpacDeleteManyAdminActionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/DeleteManyPolicy": {
		input: GpacDeleteManyPolicyInput;
		response: { data?: GpacDeleteManyPolicyResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/DeleteManyUser": {
		input: GpacDeleteManyUserInput;
		response: { data?: GpacDeleteManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/DeleteOneAdminAction": {
		input: GpacDeleteOneAdminActionInput;
		response: { data?: GpacDeleteOneAdminActionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/DeleteOnePolicy": {
		input: GpacDeleteOnePolicyInput;
		response: { data?: GpacDeleteOnePolicyResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/DeleteOneUser": {
		input: GpacDeleteOneUserInput;
		response: { data?: GpacDeleteOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/ExecuteRaw": {
		input: GpacExecuteRawInput;
		response: { data?: GpacExecuteRawResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/UpdateManyAdminAction": {
		input: GpacUpdateManyAdminActionInput;
		response: { data?: GpacUpdateManyAdminActionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/UpdateManyPolicy": {
		input: GpacUpdateManyPolicyInput;
		response: { data?: GpacUpdateManyPolicyResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/UpdateManyUser": {
		input: GpacUpdateManyUserInput;
		response: { data?: GpacUpdateManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/UpdateOneAdminAction": {
		input: GpacUpdateOneAdminActionInput;
		response: { data?: GpacUpdateOneAdminActionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/UpdateOnePolicy": {
		input: GpacUpdateOnePolicyInput;
		response: { data?: GpacUpdateOnePolicyResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/UpdateOneUser": {
		input: GpacUpdateOneUserInput;
		response: { data?: GpacUpdateOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/UpsertOneAdminAction": {
		input: GpacUpsertOneAdminActionInput;
		response: { data?: GpacUpsertOneAdminActionResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/UpsertOnePolicy": {
		input: GpacUpsertOnePolicyInput;
		response: { data?: GpacUpsertOnePolicyResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"gpac/UpsertOneUser": {
		input: GpacUpsertOneUserInput;
		response: { data?: GpacUpsertOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/CreateManyFeature": {
		input: GuardianOnlineCreateManyFeatureInput;
		response: { data?: GuardianOnlineCreateManyFeatureResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/CreateManyUser": {
		input: GuardianOnlineCreateManyUserInput;
		response: { data?: GuardianOnlineCreateManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/CreateManyUserLog": {
		input: GuardianOnlineCreateManyUserLogInput;
		response: { data?: GuardianOnlineCreateManyUserLogResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/CreateOneFeature": {
		input: GuardianOnlineCreateOneFeatureInput;
		response: { data?: GuardianOnlineCreateOneFeatureResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/CreateOneUser": {
		input: GuardianOnlineCreateOneUserInput;
		response: { data?: GuardianOnlineCreateOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/CreateOneUserLog": {
		input: GuardianOnlineCreateOneUserLogInput;
		response: { data?: GuardianOnlineCreateOneUserLogResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/DeleteManyFeature": {
		input: GuardianOnlineDeleteManyFeatureInput;
		response: { data?: GuardianOnlineDeleteManyFeatureResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/DeleteManyUser": {
		input: GuardianOnlineDeleteManyUserInput;
		response: { data?: GuardianOnlineDeleteManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/DeleteManyUserLog": {
		input: GuardianOnlineDeleteManyUserLogInput;
		response: { data?: GuardianOnlineDeleteManyUserLogResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/DeleteOneFeature": {
		input: GuardianOnlineDeleteOneFeatureInput;
		response: { data?: GuardianOnlineDeleteOneFeatureResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/DeleteOneUser": {
		input: GuardianOnlineDeleteOneUserInput;
		response: { data?: GuardianOnlineDeleteOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/DeleteOneUserLog": {
		input: GuardianOnlineDeleteOneUserLogInput;
		response: { data?: GuardianOnlineDeleteOneUserLogResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/ExecuteRaw": {
		input: GuardianOnlineExecuteRawInput;
		response: { data?: GuardianOnlineExecuteRawResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/UpdateManyFeature": {
		input: GuardianOnlineUpdateManyFeatureInput;
		response: { data?: GuardianOnlineUpdateManyFeatureResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/UpdateManyUser": {
		input: GuardianOnlineUpdateManyUserInput;
		response: { data?: GuardianOnlineUpdateManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/UpdateManyUserLog": {
		input: GuardianOnlineUpdateManyUserLogInput;
		response: { data?: GuardianOnlineUpdateManyUserLogResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/UpdateOneFeature": {
		input: GuardianOnlineUpdateOneFeatureInput;
		response: { data?: GuardianOnlineUpdateOneFeatureResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/UpdateOneUser": {
		input: GuardianOnlineUpdateOneUserInput;
		response: { data?: GuardianOnlineUpdateOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/UpdateOneUserLog": {
		input: GuardianOnlineUpdateOneUserLogInput;
		response: { data?: GuardianOnlineUpdateOneUserLogResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/UpsertOneFeature": {
		input: GuardianOnlineUpsertOneFeatureInput;
		response: { data?: GuardianOnlineUpsertOneFeatureResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/UpsertOneUser": {
		input: GuardianOnlineUpsertOneUserInput;
		response: { data?: GuardianOnlineUpsertOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"guardianOnline/UpsertOneUserLog": {
		input: GuardianOnlineUpsertOneUserLogInput;
		response: { data?: GuardianOnlineUpsertOneUserLogResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/CreateManyAsset": {
		input: LivingBalanceSheetCreateManyAssetInput;
		response: { data?: LivingBalanceSheetCreateManyAssetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/CreateManyFinancialGoal": {
		input: LivingBalanceSheetCreateManyFinancialGoalInput;
		response: { data?: LivingBalanceSheetCreateManyFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/CreateManyLiability": {
		input: LivingBalanceSheetCreateManyLiabilityInput;
		response: { data?: LivingBalanceSheetCreateManyLiabilityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/CreateManyUser": {
		input: LivingBalanceSheetCreateManyUserInput;
		response: { data?: LivingBalanceSheetCreateManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/CreateOneAsset": {
		input: LivingBalanceSheetCreateOneAssetInput;
		response: { data?: LivingBalanceSheetCreateOneAssetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/CreateOneFinancialGoal": {
		input: LivingBalanceSheetCreateOneFinancialGoalInput;
		response: { data?: LivingBalanceSheetCreateOneFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/CreateOneLiability": {
		input: LivingBalanceSheetCreateOneLiabilityInput;
		response: { data?: LivingBalanceSheetCreateOneLiabilityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/CreateOneUser": {
		input: LivingBalanceSheetCreateOneUserInput;
		response: { data?: LivingBalanceSheetCreateOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/DeleteManyAsset": {
		input: LivingBalanceSheetDeleteManyAssetInput;
		response: { data?: LivingBalanceSheetDeleteManyAssetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/DeleteManyFinancialGoal": {
		input: LivingBalanceSheetDeleteManyFinancialGoalInput;
		response: { data?: LivingBalanceSheetDeleteManyFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/DeleteManyLiability": {
		input: LivingBalanceSheetDeleteManyLiabilityInput;
		response: { data?: LivingBalanceSheetDeleteManyLiabilityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/DeleteManyUser": {
		input: LivingBalanceSheetDeleteManyUserInput;
		response: { data?: LivingBalanceSheetDeleteManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/DeleteOneAsset": {
		input: LivingBalanceSheetDeleteOneAssetInput;
		response: { data?: LivingBalanceSheetDeleteOneAssetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/DeleteOneFinancialGoal": {
		input: LivingBalanceSheetDeleteOneFinancialGoalInput;
		response: { data?: LivingBalanceSheetDeleteOneFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/DeleteOneLiability": {
		input: LivingBalanceSheetDeleteOneLiabilityInput;
		response: { data?: LivingBalanceSheetDeleteOneLiabilityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/DeleteOneUser": {
		input: LivingBalanceSheetDeleteOneUserInput;
		response: { data?: LivingBalanceSheetDeleteOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/ExecuteRaw": {
		input: LivingBalanceSheetExecuteRawInput;
		response: { data?: LivingBalanceSheetExecuteRawResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/UpdateManyAsset": {
		input: LivingBalanceSheetUpdateManyAssetInput;
		response: { data?: LivingBalanceSheetUpdateManyAssetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/UpdateManyFinancialGoal": {
		input: LivingBalanceSheetUpdateManyFinancialGoalInput;
		response: { data?: LivingBalanceSheetUpdateManyFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/UpdateManyLiability": {
		input: LivingBalanceSheetUpdateManyLiabilityInput;
		response: { data?: LivingBalanceSheetUpdateManyLiabilityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/UpdateManyUser": {
		input: LivingBalanceSheetUpdateManyUserInput;
		response: { data?: LivingBalanceSheetUpdateManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/UpdateOneAsset": {
		input: LivingBalanceSheetUpdateOneAssetInput;
		response: { data?: LivingBalanceSheetUpdateOneAssetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/UpdateOneFinancialGoal": {
		input: LivingBalanceSheetUpdateOneFinancialGoalInput;
		response: { data?: LivingBalanceSheetUpdateOneFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/UpdateOneLiability": {
		input: LivingBalanceSheetUpdateOneLiabilityInput;
		response: { data?: LivingBalanceSheetUpdateOneLiabilityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/UpdateOneUser": {
		input: LivingBalanceSheetUpdateOneUserInput;
		response: { data?: LivingBalanceSheetUpdateOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/UpsertOneAsset": {
		input: LivingBalanceSheetUpsertOneAssetInput;
		response: { data?: LivingBalanceSheetUpsertOneAssetResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/UpsertOneFinancialGoal": {
		input: LivingBalanceSheetUpsertOneFinancialGoalInput;
		response: { data?: LivingBalanceSheetUpsertOneFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/UpsertOneLiability": {
		input: LivingBalanceSheetUpsertOneLiabilityInput;
		response: { data?: LivingBalanceSheetUpsertOneLiabilityResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"livingBalanceSheet/UpsertOneUser": {
		input: LivingBalanceSheetUpsertOneUserInput;
		response: { data?: LivingBalanceSheetUpsertOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/CreateManyClient": {
		input: SmartOfficeCreateManyClientInput;
		response: { data?: SmartOfficeCreateManyClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/CreateManySale": {
		input: SmartOfficeCreateManySaleInput;
		response: { data?: SmartOfficeCreateManySaleResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/CreateManyTask": {
		input: SmartOfficeCreateManyTaskInput;
		response: { data?: SmartOfficeCreateManyTaskResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/CreateManyUser": {
		input: SmartOfficeCreateManyUserInput;
		response: { data?: SmartOfficeCreateManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/CreateOneClient": {
		input: SmartOfficeCreateOneClientInput;
		response: { data?: SmartOfficeCreateOneClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/CreateOneSale": {
		input: SmartOfficeCreateOneSaleInput;
		response: { data?: SmartOfficeCreateOneSaleResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/CreateOneTask": {
		input: SmartOfficeCreateOneTaskInput;
		response: { data?: SmartOfficeCreateOneTaskResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/CreateOneUser": {
		input: SmartOfficeCreateOneUserInput;
		response: { data?: SmartOfficeCreateOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/DeleteManyClient": {
		input: SmartOfficeDeleteManyClientInput;
		response: { data?: SmartOfficeDeleteManyClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/DeleteManySale": {
		input: SmartOfficeDeleteManySaleInput;
		response: { data?: SmartOfficeDeleteManySaleResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/DeleteManyTask": {
		input: SmartOfficeDeleteManyTaskInput;
		response: { data?: SmartOfficeDeleteManyTaskResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/DeleteManyUser": {
		input: SmartOfficeDeleteManyUserInput;
		response: { data?: SmartOfficeDeleteManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/DeleteOneClient": {
		input: SmartOfficeDeleteOneClientInput;
		response: { data?: SmartOfficeDeleteOneClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/DeleteOneSale": {
		input: SmartOfficeDeleteOneSaleInput;
		response: { data?: SmartOfficeDeleteOneSaleResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/DeleteOneTask": {
		input: SmartOfficeDeleteOneTaskInput;
		response: { data?: SmartOfficeDeleteOneTaskResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/DeleteOneUser": {
		input: SmartOfficeDeleteOneUserInput;
		response: { data?: SmartOfficeDeleteOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/ExecuteRaw": {
		input: SmartOfficeExecuteRawInput;
		response: { data?: SmartOfficeExecuteRawResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/UpdateManyClient": {
		input: SmartOfficeUpdateManyClientInput;
		response: { data?: SmartOfficeUpdateManyClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/UpdateManySale": {
		input: SmartOfficeUpdateManySaleInput;
		response: { data?: SmartOfficeUpdateManySaleResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/UpdateManyTask": {
		input: SmartOfficeUpdateManyTaskInput;
		response: { data?: SmartOfficeUpdateManyTaskResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/UpdateManyUser": {
		input: SmartOfficeUpdateManyUserInput;
		response: { data?: SmartOfficeUpdateManyUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/UpdateOneClient": {
		input: SmartOfficeUpdateOneClientInput;
		response: { data?: SmartOfficeUpdateOneClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/UpdateOneSale": {
		input: SmartOfficeUpdateOneSaleInput;
		response: { data?: SmartOfficeUpdateOneSaleResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/UpdateOneTask": {
		input: SmartOfficeUpdateOneTaskInput;
		response: { data?: SmartOfficeUpdateOneTaskResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/UpdateOneUser": {
		input: SmartOfficeUpdateOneUserInput;
		response: { data?: SmartOfficeUpdateOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/UpsertOneClient": {
		input: SmartOfficeUpsertOneClientInput;
		response: { data?: SmartOfficeUpsertOneClientResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/UpsertOneSale": {
		input: SmartOfficeUpsertOneSaleInput;
		response: { data?: SmartOfficeUpsertOneSaleResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/UpsertOneTask": {
		input: SmartOfficeUpsertOneTaskInput;
		response: { data?: SmartOfficeUpsertOneTaskResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"smartOffice/UpsertOneUser": {
		input: SmartOfficeUpsertOneUserInput;
		response: { data?: SmartOfficeUpsertOneUserResponse["data"]; error?: ClientOperationErrors };
		requiresAuthentication: false;
	};
	"users/update": {
		input: UsersUpdateInput;
		response: { data?: UsersUpdateResponseData; error?: OperationErrors["users/update"] };
		requiresAuthentication: false;
	};
};

export type Subscriptions = {
	"users/subscribe": {
		input: UsersSubscribeInput;
		response: { data?: UsersSubscribeResponseData; error?: OperationErrors["users/subscribe"] };
		requiresAuthentication: false;
	};
	"clientPortal/AggregateActivity": {
		input: ClientPortalAggregateActivityInput;
		response: { data?: ClientPortalAggregateActivityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/AggregateClient": {
		input: ClientPortalAggregateClientInput;
		response: { data?: ClientPortalAggregateClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/AggregateService": {
		input: ClientPortalAggregateServiceInput;
		response: { data?: ClientPortalAggregateServiceResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindFirstActivity": {
		input: ClientPortalFindFirstActivityInput;
		response: { data?: ClientPortalFindFirstActivityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindFirstActivityOrThrow": {
		input: ClientPortalFindFirstActivityOrThrowInput;
		response: { data?: ClientPortalFindFirstActivityOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindFirstClient": {
		input: ClientPortalFindFirstClientInput;
		response: { data?: ClientPortalFindFirstClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindFirstClientOrThrow": {
		input: ClientPortalFindFirstClientOrThrowInput;
		response: { data?: ClientPortalFindFirstClientOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindFirstService": {
		input: ClientPortalFindFirstServiceInput;
		response: { data?: ClientPortalFindFirstServiceResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindFirstServiceOrThrow": {
		input: ClientPortalFindFirstServiceOrThrowInput;
		response: { data?: ClientPortalFindFirstServiceOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindManyActivity": {
		input: ClientPortalFindManyActivityInput;
		response: { data?: ClientPortalFindManyActivityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindManyClient": {
		input: ClientPortalFindManyClientInput;
		response: { data?: ClientPortalFindManyClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindManyService": {
		input: ClientPortalFindManyServiceInput;
		response: { data?: ClientPortalFindManyServiceResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindUniqueActivity": {
		input: ClientPortalFindUniqueActivityInput;
		response: { data?: ClientPortalFindUniqueActivityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindUniqueActivityOrThrow": {
		input: ClientPortalFindUniqueActivityOrThrowInput;
		response: { data?: ClientPortalFindUniqueActivityOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindUniqueClient": {
		input: ClientPortalFindUniqueClientInput;
		response: { data?: ClientPortalFindUniqueClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindUniqueClientOrThrow": {
		input: ClientPortalFindUniqueClientOrThrowInput;
		response: { data?: ClientPortalFindUniqueClientOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindUniqueService": {
		input: ClientPortalFindUniqueServiceInput;
		response: { data?: ClientPortalFindUniqueServiceResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindUniqueServiceOrThrow": {
		input: ClientPortalFindUniqueServiceOrThrowInput;
		response: { data?: ClientPortalFindUniqueServiceOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/GroupByActivity": {
		input: ClientPortalGroupByActivityInput;
		response: { data?: ClientPortalGroupByActivityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/GroupByClient": {
		input: ClientPortalGroupByClientInput;
		response: { data?: ClientPortalGroupByClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/GroupByService": {
		input: ClientPortalGroupByServiceInput;
		response: { data?: ClientPortalGroupByServiceResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/QueryRaw": {
		input: ClientPortalQueryRawInput;
		response: { data?: ClientPortalQueryRawResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/QueryRawJSON": {
		input: ClientPortalQueryRawJSONInput;
		response: { data?: ClientPortalQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"countries/Continent": {
		input: CountriesContinentInput;
		response: { data?: CountriesContinentResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"countries/Continents": {
		input: CountriesContinentsInput;
		response: { data?: CountriesContinentsResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"countries/Countries": {
		input: CountriesCountriesInput;
		response: { data?: CountriesCountriesResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"countries/Country": {
		input: CountriesCountryInput;
		response: { data?: CountriesCountryResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"countries/CountryByCode": {
		input: CountriesCountryByCodeInput;
		response: { data?: CountriesCountryByCodeResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"countries/Language": {
		input: CountriesLanguageInput;
		response: { data?: CountriesLanguageResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"countries/Languages": {
		input: CountriesLanguagesInput;
		response: { data?: CountriesLanguagesResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/AggregateAccount": {
		input: CustomerCommunicationAggregateAccountInput;
		response: { data?: CustomerCommunicationAggregateAccountResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/AggregateFilter": {
		input: CustomerCommunicationAggregateFilterInput;
		response: { data?: CustomerCommunicationAggregateFilterResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/AggregateInteraction": {
		input: CustomerCommunicationAggregateInteractionInput;
		response: { data?: CustomerCommunicationAggregateInteractionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/AggregateSession": {
		input: CustomerCommunicationAggregateSessionInput;
		response: { data?: CustomerCommunicationAggregateSessionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/AggregateUser": {
		input: CustomerCommunicationAggregateUserInput;
		response: { data?: CustomerCommunicationAggregateUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/AggregateVerificationToken": {
		input: CustomerCommunicationAggregateVerificationTokenInput;
		response: { data?: CustomerCommunicationAggregateVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/AggregateWidget": {
		input: CustomerCommunicationAggregateWidgetInput;
		response: { data?: CustomerCommunicationAggregateWidgetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstAccount": {
		input: CustomerCommunicationFindFirstAccountInput;
		response: { data?: CustomerCommunicationFindFirstAccountResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstAccountOrThrow": {
		input: CustomerCommunicationFindFirstAccountOrThrowInput;
		response: { data?: CustomerCommunicationFindFirstAccountOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstFilter": {
		input: CustomerCommunicationFindFirstFilterInput;
		response: { data?: CustomerCommunicationFindFirstFilterResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstFilterOrThrow": {
		input: CustomerCommunicationFindFirstFilterOrThrowInput;
		response: { data?: CustomerCommunicationFindFirstFilterOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstInteraction": {
		input: CustomerCommunicationFindFirstInteractionInput;
		response: { data?: CustomerCommunicationFindFirstInteractionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstInteractionOrThrow": {
		input: CustomerCommunicationFindFirstInteractionOrThrowInput;
		response: {
			data?: CustomerCommunicationFindFirstInteractionOrThrowResponse["data"];
			error?: ClientOperationErrors;
		};
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstSession": {
		input: CustomerCommunicationFindFirstSessionInput;
		response: { data?: CustomerCommunicationFindFirstSessionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstSessionOrThrow": {
		input: CustomerCommunicationFindFirstSessionOrThrowInput;
		response: { data?: CustomerCommunicationFindFirstSessionOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstUser": {
		input: CustomerCommunicationFindFirstUserInput;
		response: { data?: CustomerCommunicationFindFirstUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstUserOrThrow": {
		input: CustomerCommunicationFindFirstUserOrThrowInput;
		response: { data?: CustomerCommunicationFindFirstUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstVerificationToken": {
		input: CustomerCommunicationFindFirstVerificationTokenInput;
		response: { data?: CustomerCommunicationFindFirstVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstVerificationTokenOrThrow": {
		input: CustomerCommunicationFindFirstVerificationTokenOrThrowInput;
		response: {
			data?: CustomerCommunicationFindFirstVerificationTokenOrThrowResponse["data"];
			error?: ClientOperationErrors;
		};
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstWidget": {
		input: CustomerCommunicationFindFirstWidgetInput;
		response: { data?: CustomerCommunicationFindFirstWidgetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstWidgetOrThrow": {
		input: CustomerCommunicationFindFirstWidgetOrThrowInput;
		response: { data?: CustomerCommunicationFindFirstWidgetOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindManyAccount": {
		input: CustomerCommunicationFindManyAccountInput;
		response: { data?: CustomerCommunicationFindManyAccountResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindManyFilter": {
		input: CustomerCommunicationFindManyFilterInput;
		response: { data?: CustomerCommunicationFindManyFilterResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindManyInteraction": {
		input: CustomerCommunicationFindManyInteractionInput;
		response: { data?: CustomerCommunicationFindManyInteractionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindManySession": {
		input: CustomerCommunicationFindManySessionInput;
		response: { data?: CustomerCommunicationFindManySessionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindManyUser": {
		input: CustomerCommunicationFindManyUserInput;
		response: { data?: CustomerCommunicationFindManyUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindManyVerificationToken": {
		input: CustomerCommunicationFindManyVerificationTokenInput;
		response: { data?: CustomerCommunicationFindManyVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindManyWidget": {
		input: CustomerCommunicationFindManyWidgetInput;
		response: { data?: CustomerCommunicationFindManyWidgetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueAccount": {
		input: CustomerCommunicationFindUniqueAccountInput;
		response: { data?: CustomerCommunicationFindUniqueAccountResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueAccountOrThrow": {
		input: CustomerCommunicationFindUniqueAccountOrThrowInput;
		response: { data?: CustomerCommunicationFindUniqueAccountOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueFilter": {
		input: CustomerCommunicationFindUniqueFilterInput;
		response: { data?: CustomerCommunicationFindUniqueFilterResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueFilterOrThrow": {
		input: CustomerCommunicationFindUniqueFilterOrThrowInput;
		response: { data?: CustomerCommunicationFindUniqueFilterOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueInteraction": {
		input: CustomerCommunicationFindUniqueInteractionInput;
		response: { data?: CustomerCommunicationFindUniqueInteractionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueInteractionOrThrow": {
		input: CustomerCommunicationFindUniqueInteractionOrThrowInput;
		response: {
			data?: CustomerCommunicationFindUniqueInteractionOrThrowResponse["data"];
			error?: ClientOperationErrors;
		};
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueSession": {
		input: CustomerCommunicationFindUniqueSessionInput;
		response: { data?: CustomerCommunicationFindUniqueSessionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueSessionOrThrow": {
		input: CustomerCommunicationFindUniqueSessionOrThrowInput;
		response: { data?: CustomerCommunicationFindUniqueSessionOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueUser": {
		input: CustomerCommunicationFindUniqueUserInput;
		response: { data?: CustomerCommunicationFindUniqueUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueUserOrThrow": {
		input: CustomerCommunicationFindUniqueUserOrThrowInput;
		response: { data?: CustomerCommunicationFindUniqueUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueVerificationToken": {
		input: CustomerCommunicationFindUniqueVerificationTokenInput;
		response: {
			data?: CustomerCommunicationFindUniqueVerificationTokenResponse["data"];
			error?: ClientOperationErrors;
		};
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueVerificationTokenOrThrow": {
		input: CustomerCommunicationFindUniqueVerificationTokenOrThrowInput;
		response: {
			data?: CustomerCommunicationFindUniqueVerificationTokenOrThrowResponse["data"];
			error?: ClientOperationErrors;
		};
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueWidget": {
		input: CustomerCommunicationFindUniqueWidgetInput;
		response: { data?: CustomerCommunicationFindUniqueWidgetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueWidgetOrThrow": {
		input: CustomerCommunicationFindUniqueWidgetOrThrowInput;
		response: { data?: CustomerCommunicationFindUniqueWidgetOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/GroupByAccount": {
		input: CustomerCommunicationGroupByAccountInput;
		response: { data?: CustomerCommunicationGroupByAccountResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/GroupByFilter": {
		input: CustomerCommunicationGroupByFilterInput;
		response: { data?: CustomerCommunicationGroupByFilterResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/GroupByInteraction": {
		input: CustomerCommunicationGroupByInteractionInput;
		response: { data?: CustomerCommunicationGroupByInteractionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/GroupBySession": {
		input: CustomerCommunicationGroupBySessionInput;
		response: { data?: CustomerCommunicationGroupBySessionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/GroupByUser": {
		input: CustomerCommunicationGroupByUserInput;
		response: { data?: CustomerCommunicationGroupByUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/GroupByVerificationToken": {
		input: CustomerCommunicationGroupByVerificationTokenInput;
		response: { data?: CustomerCommunicationGroupByVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/GroupByWidget": {
		input: CustomerCommunicationGroupByWidgetInput;
		response: { data?: CustomerCommunicationGroupByWidgetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/QueryRaw": {
		input: CustomerCommunicationQueryRawInput;
		response: { data?: CustomerCommunicationQueryRawResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/QueryRawJSON": {
		input: CustomerCommunicationQueryRawJSONInput;
		response: { data?: CustomerCommunicationQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/AggregateAdminAction": {
		input: GpacAggregateAdminActionInput;
		response: { data?: GpacAggregateAdminActionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/AggregatePolicy": {
		input: GpacAggregatePolicyInput;
		response: { data?: GpacAggregatePolicyResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/AggregateUser": {
		input: GpacAggregateUserInput;
		response: { data?: GpacAggregateUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindFirstAdminAction": {
		input: GpacFindFirstAdminActionInput;
		response: { data?: GpacFindFirstAdminActionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindFirstAdminActionOrThrow": {
		input: GpacFindFirstAdminActionOrThrowInput;
		response: { data?: GpacFindFirstAdminActionOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindFirstPolicy": {
		input: GpacFindFirstPolicyInput;
		response: { data?: GpacFindFirstPolicyResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindFirstPolicyOrThrow": {
		input: GpacFindFirstPolicyOrThrowInput;
		response: { data?: GpacFindFirstPolicyOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindFirstUser": {
		input: GpacFindFirstUserInput;
		response: { data?: GpacFindFirstUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindFirstUserOrThrow": {
		input: GpacFindFirstUserOrThrowInput;
		response: { data?: GpacFindFirstUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindManyAdminAction": {
		input: GpacFindManyAdminActionInput;
		response: { data?: GpacFindManyAdminActionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindManyPolicy": {
		input: GpacFindManyPolicyInput;
		response: { data?: GpacFindManyPolicyResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindManyUser": {
		input: GpacFindManyUserInput;
		response: { data?: GpacFindManyUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindUniqueAdminAction": {
		input: GpacFindUniqueAdminActionInput;
		response: { data?: GpacFindUniqueAdminActionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindUniqueAdminActionOrThrow": {
		input: GpacFindUniqueAdminActionOrThrowInput;
		response: { data?: GpacFindUniqueAdminActionOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindUniquePolicy": {
		input: GpacFindUniquePolicyInput;
		response: { data?: GpacFindUniquePolicyResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindUniquePolicyOrThrow": {
		input: GpacFindUniquePolicyOrThrowInput;
		response: { data?: GpacFindUniquePolicyOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindUniqueUser": {
		input: GpacFindUniqueUserInput;
		response: { data?: GpacFindUniqueUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindUniqueUserOrThrow": {
		input: GpacFindUniqueUserOrThrowInput;
		response: { data?: GpacFindUniqueUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/GroupByAdminAction": {
		input: GpacGroupByAdminActionInput;
		response: { data?: GpacGroupByAdminActionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/GroupByPolicy": {
		input: GpacGroupByPolicyInput;
		response: { data?: GpacGroupByPolicyResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/GroupByUser": {
		input: GpacGroupByUserInput;
		response: { data?: GpacGroupByUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/QueryRaw": {
		input: GpacQueryRawInput;
		response: { data?: GpacQueryRawResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/QueryRawJSON": {
		input: GpacQueryRawJSONInput;
		response: { data?: GpacQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/AggregateFeature": {
		input: GuardianOnlineAggregateFeatureInput;
		response: { data?: GuardianOnlineAggregateFeatureResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/AggregateUser": {
		input: GuardianOnlineAggregateUserInput;
		response: { data?: GuardianOnlineAggregateUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/AggregateUserLog": {
		input: GuardianOnlineAggregateUserLogInput;
		response: { data?: GuardianOnlineAggregateUserLogResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindFirstFeature": {
		input: GuardianOnlineFindFirstFeatureInput;
		response: { data?: GuardianOnlineFindFirstFeatureResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindFirstFeatureOrThrow": {
		input: GuardianOnlineFindFirstFeatureOrThrowInput;
		response: { data?: GuardianOnlineFindFirstFeatureOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindFirstUser": {
		input: GuardianOnlineFindFirstUserInput;
		response: { data?: GuardianOnlineFindFirstUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindFirstUserLog": {
		input: GuardianOnlineFindFirstUserLogInput;
		response: { data?: GuardianOnlineFindFirstUserLogResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindFirstUserLogOrThrow": {
		input: GuardianOnlineFindFirstUserLogOrThrowInput;
		response: { data?: GuardianOnlineFindFirstUserLogOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindFirstUserOrThrow": {
		input: GuardianOnlineFindFirstUserOrThrowInput;
		response: { data?: GuardianOnlineFindFirstUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindManyFeature": {
		input: GuardianOnlineFindManyFeatureInput;
		response: { data?: GuardianOnlineFindManyFeatureResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindManyUser": {
		input: GuardianOnlineFindManyUserInput;
		response: { data?: GuardianOnlineFindManyUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindManyUserLog": {
		input: GuardianOnlineFindManyUserLogInput;
		response: { data?: GuardianOnlineFindManyUserLogResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindUniqueFeature": {
		input: GuardianOnlineFindUniqueFeatureInput;
		response: { data?: GuardianOnlineFindUniqueFeatureResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindUniqueFeatureOrThrow": {
		input: GuardianOnlineFindUniqueFeatureOrThrowInput;
		response: { data?: GuardianOnlineFindUniqueFeatureOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindUniqueUser": {
		input: GuardianOnlineFindUniqueUserInput;
		response: { data?: GuardianOnlineFindUniqueUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindUniqueUserLog": {
		input: GuardianOnlineFindUniqueUserLogInput;
		response: { data?: GuardianOnlineFindUniqueUserLogResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindUniqueUserLogOrThrow": {
		input: GuardianOnlineFindUniqueUserLogOrThrowInput;
		response: { data?: GuardianOnlineFindUniqueUserLogOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindUniqueUserOrThrow": {
		input: GuardianOnlineFindUniqueUserOrThrowInput;
		response: { data?: GuardianOnlineFindUniqueUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/GroupByFeature": {
		input: GuardianOnlineGroupByFeatureInput;
		response: { data?: GuardianOnlineGroupByFeatureResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/GroupByUser": {
		input: GuardianOnlineGroupByUserInput;
		response: { data?: GuardianOnlineGroupByUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/GroupByUserLog": {
		input: GuardianOnlineGroupByUserLogInput;
		response: { data?: GuardianOnlineGroupByUserLogResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/QueryRaw": {
		input: GuardianOnlineQueryRawInput;
		response: { data?: GuardianOnlineQueryRawResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/QueryRawJSON": {
		input: GuardianOnlineQueryRawJSONInput;
		response: { data?: GuardianOnlineQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/AggregateAsset": {
		input: LivingBalanceSheetAggregateAssetInput;
		response: { data?: LivingBalanceSheetAggregateAssetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/AggregateFinancialGoal": {
		input: LivingBalanceSheetAggregateFinancialGoalInput;
		response: { data?: LivingBalanceSheetAggregateFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/AggregateLiability": {
		input: LivingBalanceSheetAggregateLiabilityInput;
		response: { data?: LivingBalanceSheetAggregateLiabilityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/AggregateUser": {
		input: LivingBalanceSheetAggregateUserInput;
		response: { data?: LivingBalanceSheetAggregateUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstAsset": {
		input: LivingBalanceSheetFindFirstAssetInput;
		response: { data?: LivingBalanceSheetFindFirstAssetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstAssetOrThrow": {
		input: LivingBalanceSheetFindFirstAssetOrThrowInput;
		response: { data?: LivingBalanceSheetFindFirstAssetOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstFinancialGoal": {
		input: LivingBalanceSheetFindFirstFinancialGoalInput;
		response: { data?: LivingBalanceSheetFindFirstFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstFinancialGoalOrThrow": {
		input: LivingBalanceSheetFindFirstFinancialGoalOrThrowInput;
		response: { data?: LivingBalanceSheetFindFirstFinancialGoalOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstLiability": {
		input: LivingBalanceSheetFindFirstLiabilityInput;
		response: { data?: LivingBalanceSheetFindFirstLiabilityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstLiabilityOrThrow": {
		input: LivingBalanceSheetFindFirstLiabilityOrThrowInput;
		response: { data?: LivingBalanceSheetFindFirstLiabilityOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstUser": {
		input: LivingBalanceSheetFindFirstUserInput;
		response: { data?: LivingBalanceSheetFindFirstUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstUserOrThrow": {
		input: LivingBalanceSheetFindFirstUserOrThrowInput;
		response: { data?: LivingBalanceSheetFindFirstUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindManyAsset": {
		input: LivingBalanceSheetFindManyAssetInput;
		response: { data?: LivingBalanceSheetFindManyAssetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindManyFinancialGoal": {
		input: LivingBalanceSheetFindManyFinancialGoalInput;
		response: { data?: LivingBalanceSheetFindManyFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindManyLiability": {
		input: LivingBalanceSheetFindManyLiabilityInput;
		response: { data?: LivingBalanceSheetFindManyLiabilityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindManyUser": {
		input: LivingBalanceSheetFindManyUserInput;
		response: { data?: LivingBalanceSheetFindManyUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueAsset": {
		input: LivingBalanceSheetFindUniqueAssetInput;
		response: { data?: LivingBalanceSheetFindUniqueAssetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueAssetOrThrow": {
		input: LivingBalanceSheetFindUniqueAssetOrThrowInput;
		response: { data?: LivingBalanceSheetFindUniqueAssetOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueFinancialGoal": {
		input: LivingBalanceSheetFindUniqueFinancialGoalInput;
		response: { data?: LivingBalanceSheetFindUniqueFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueFinancialGoalOrThrow": {
		input: LivingBalanceSheetFindUniqueFinancialGoalOrThrowInput;
		response: {
			data?: LivingBalanceSheetFindUniqueFinancialGoalOrThrowResponse["data"];
			error?: ClientOperationErrors;
		};
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueLiability": {
		input: LivingBalanceSheetFindUniqueLiabilityInput;
		response: { data?: LivingBalanceSheetFindUniqueLiabilityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueLiabilityOrThrow": {
		input: LivingBalanceSheetFindUniqueLiabilityOrThrowInput;
		response: { data?: LivingBalanceSheetFindUniqueLiabilityOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueUser": {
		input: LivingBalanceSheetFindUniqueUserInput;
		response: { data?: LivingBalanceSheetFindUniqueUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueUserOrThrow": {
		input: LivingBalanceSheetFindUniqueUserOrThrowInput;
		response: { data?: LivingBalanceSheetFindUniqueUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/GroupByAsset": {
		input: LivingBalanceSheetGroupByAssetInput;
		response: { data?: LivingBalanceSheetGroupByAssetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/GroupByFinancialGoal": {
		input: LivingBalanceSheetGroupByFinancialGoalInput;
		response: { data?: LivingBalanceSheetGroupByFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/GroupByLiability": {
		input: LivingBalanceSheetGroupByLiabilityInput;
		response: { data?: LivingBalanceSheetGroupByLiabilityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/GroupByUser": {
		input: LivingBalanceSheetGroupByUserInput;
		response: { data?: LivingBalanceSheetGroupByUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/QueryRaw": {
		input: LivingBalanceSheetQueryRawInput;
		response: { data?: LivingBalanceSheetQueryRawResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/QueryRawJSON": {
		input: LivingBalanceSheetQueryRawJSONInput;
		response: { data?: LivingBalanceSheetQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/AggregateClient": {
		input: SmartOfficeAggregateClientInput;
		response: { data?: SmartOfficeAggregateClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/AggregateSale": {
		input: SmartOfficeAggregateSaleInput;
		response: { data?: SmartOfficeAggregateSaleResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/AggregateTask": {
		input: SmartOfficeAggregateTaskInput;
		response: { data?: SmartOfficeAggregateTaskResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/AggregateUser": {
		input: SmartOfficeAggregateUserInput;
		response: { data?: SmartOfficeAggregateUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstClient": {
		input: SmartOfficeFindFirstClientInput;
		response: { data?: SmartOfficeFindFirstClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstClientOrThrow": {
		input: SmartOfficeFindFirstClientOrThrowInput;
		response: { data?: SmartOfficeFindFirstClientOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstSale": {
		input: SmartOfficeFindFirstSaleInput;
		response: { data?: SmartOfficeFindFirstSaleResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstSaleOrThrow": {
		input: SmartOfficeFindFirstSaleOrThrowInput;
		response: { data?: SmartOfficeFindFirstSaleOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstTask": {
		input: SmartOfficeFindFirstTaskInput;
		response: { data?: SmartOfficeFindFirstTaskResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstTaskOrThrow": {
		input: SmartOfficeFindFirstTaskOrThrowInput;
		response: { data?: SmartOfficeFindFirstTaskOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstUser": {
		input: SmartOfficeFindFirstUserInput;
		response: { data?: SmartOfficeFindFirstUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstUserOrThrow": {
		input: SmartOfficeFindFirstUserOrThrowInput;
		response: { data?: SmartOfficeFindFirstUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindManyClient": {
		input: SmartOfficeFindManyClientInput;
		response: { data?: SmartOfficeFindManyClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindManySale": {
		input: SmartOfficeFindManySaleInput;
		response: { data?: SmartOfficeFindManySaleResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindManyTask": {
		input: SmartOfficeFindManyTaskInput;
		response: { data?: SmartOfficeFindManyTaskResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindManyUser": {
		input: SmartOfficeFindManyUserInput;
		response: { data?: SmartOfficeFindManyUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueClient": {
		input: SmartOfficeFindUniqueClientInput;
		response: { data?: SmartOfficeFindUniqueClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueClientOrThrow": {
		input: SmartOfficeFindUniqueClientOrThrowInput;
		response: { data?: SmartOfficeFindUniqueClientOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueSale": {
		input: SmartOfficeFindUniqueSaleInput;
		response: { data?: SmartOfficeFindUniqueSaleResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueSaleOrThrow": {
		input: SmartOfficeFindUniqueSaleOrThrowInput;
		response: { data?: SmartOfficeFindUniqueSaleOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueTask": {
		input: SmartOfficeFindUniqueTaskInput;
		response: { data?: SmartOfficeFindUniqueTaskResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueTaskOrThrow": {
		input: SmartOfficeFindUniqueTaskOrThrowInput;
		response: { data?: SmartOfficeFindUniqueTaskOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueUser": {
		input: SmartOfficeFindUniqueUserInput;
		response: { data?: SmartOfficeFindUniqueUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueUserOrThrow": {
		input: SmartOfficeFindUniqueUserOrThrowInput;
		response: { data?: SmartOfficeFindUniqueUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/GroupByClient": {
		input: SmartOfficeGroupByClientInput;
		response: { data?: SmartOfficeGroupByClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/GroupBySale": {
		input: SmartOfficeGroupBySaleInput;
		response: { data?: SmartOfficeGroupBySaleResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/GroupByTask": {
		input: SmartOfficeGroupByTaskInput;
		response: { data?: SmartOfficeGroupByTaskResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/GroupByUser": {
		input: SmartOfficeGroupByUserInput;
		response: { data?: SmartOfficeGroupByUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/QueryRaw": {
		input: SmartOfficeQueryRawInput;
		response: { data?: SmartOfficeQueryRawResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/QueryRawJSON": {
		input: SmartOfficeQueryRawJSONInput;
		response: { data?: SmartOfficeQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"users/CountUsers": {
		input?: undefined;
		response: { data?: UsersCountUsersResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"users/GetAllUsers": {
		input?: undefined;
		response: { data?: UsersGetAllUsersResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"weather/GetCityById": {
		input: WeatherGetCityByIdInput;
		response: { data?: WeatherGetCityByIdResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"weather/GetCityByName": {
		input: WeatherGetCityByNameInput;
		response: { data?: WeatherGetCityByNameResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"openai/extract-website-metadata": {
		input: OpenaiExtract_website_metadataInput;
		response: { data?: OpenaiExtract_website_metadataResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"openai/load-url": {
		input: OpenaiLoad_urlInput;
		response: { data?: OpenaiLoad_urlResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"openai/summarize-url-content": {
		input: OpenaiSummarize_url_contentInput;
		response: { data?: OpenaiSummarize_url_contentResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"openai/summary": {
		input: OpenaiSummaryInput;
		response: { data?: OpenaiSummaryResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"openai/weather": {
		input: OpenaiWeatherInput;
		response: { data?: OpenaiWeatherResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"users/get": {
		input: UsersGetInput;
		response: { data?: UsersGetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
};

export type LiveQueries = {
	"clientPortal/AggregateActivity": {
		input: ClientPortalAggregateActivityInput;
		response: { data?: ClientPortalAggregateActivityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/AggregateClient": {
		input: ClientPortalAggregateClientInput;
		response: { data?: ClientPortalAggregateClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/AggregateService": {
		input: ClientPortalAggregateServiceInput;
		response: { data?: ClientPortalAggregateServiceResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindFirstActivity": {
		input: ClientPortalFindFirstActivityInput;
		response: { data?: ClientPortalFindFirstActivityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindFirstActivityOrThrow": {
		input: ClientPortalFindFirstActivityOrThrowInput;
		response: { data?: ClientPortalFindFirstActivityOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindFirstClient": {
		input: ClientPortalFindFirstClientInput;
		response: { data?: ClientPortalFindFirstClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindFirstClientOrThrow": {
		input: ClientPortalFindFirstClientOrThrowInput;
		response: { data?: ClientPortalFindFirstClientOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindFirstService": {
		input: ClientPortalFindFirstServiceInput;
		response: { data?: ClientPortalFindFirstServiceResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindFirstServiceOrThrow": {
		input: ClientPortalFindFirstServiceOrThrowInput;
		response: { data?: ClientPortalFindFirstServiceOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindManyActivity": {
		input: ClientPortalFindManyActivityInput;
		response: { data?: ClientPortalFindManyActivityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindManyClient": {
		input: ClientPortalFindManyClientInput;
		response: { data?: ClientPortalFindManyClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindManyService": {
		input: ClientPortalFindManyServiceInput;
		response: { data?: ClientPortalFindManyServiceResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindUniqueActivity": {
		input: ClientPortalFindUniqueActivityInput;
		response: { data?: ClientPortalFindUniqueActivityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindUniqueActivityOrThrow": {
		input: ClientPortalFindUniqueActivityOrThrowInput;
		response: { data?: ClientPortalFindUniqueActivityOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindUniqueClient": {
		input: ClientPortalFindUniqueClientInput;
		response: { data?: ClientPortalFindUniqueClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindUniqueClientOrThrow": {
		input: ClientPortalFindUniqueClientOrThrowInput;
		response: { data?: ClientPortalFindUniqueClientOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindUniqueService": {
		input: ClientPortalFindUniqueServiceInput;
		response: { data?: ClientPortalFindUniqueServiceResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/FindUniqueServiceOrThrow": {
		input: ClientPortalFindUniqueServiceOrThrowInput;
		response: { data?: ClientPortalFindUniqueServiceOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/GroupByActivity": {
		input: ClientPortalGroupByActivityInput;
		response: { data?: ClientPortalGroupByActivityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/GroupByClient": {
		input: ClientPortalGroupByClientInput;
		response: { data?: ClientPortalGroupByClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/GroupByService": {
		input: ClientPortalGroupByServiceInput;
		response: { data?: ClientPortalGroupByServiceResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/QueryRaw": {
		input: ClientPortalQueryRawInput;
		response: { data?: ClientPortalQueryRawResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"clientPortal/QueryRawJSON": {
		input: ClientPortalQueryRawJSONInput;
		response: { data?: ClientPortalQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"countries/Continent": {
		input: CountriesContinentInput;
		response: { data?: CountriesContinentResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"countries/Continents": {
		input: CountriesContinentsInput;
		response: { data?: CountriesContinentsResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"countries/Countries": {
		input: CountriesCountriesInput;
		response: { data?: CountriesCountriesResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"countries/Country": {
		input: CountriesCountryInput;
		response: { data?: CountriesCountryResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"countries/CountryByCode": {
		input: CountriesCountryByCodeInput;
		response: { data?: CountriesCountryByCodeResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"countries/Language": {
		input: CountriesLanguageInput;
		response: { data?: CountriesLanguageResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"countries/Languages": {
		input: CountriesLanguagesInput;
		response: { data?: CountriesLanguagesResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/AggregateAccount": {
		input: CustomerCommunicationAggregateAccountInput;
		response: { data?: CustomerCommunicationAggregateAccountResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/AggregateFilter": {
		input: CustomerCommunicationAggregateFilterInput;
		response: { data?: CustomerCommunicationAggregateFilterResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/AggregateInteraction": {
		input: CustomerCommunicationAggregateInteractionInput;
		response: { data?: CustomerCommunicationAggregateInteractionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/AggregateSession": {
		input: CustomerCommunicationAggregateSessionInput;
		response: { data?: CustomerCommunicationAggregateSessionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/AggregateUser": {
		input: CustomerCommunicationAggregateUserInput;
		response: { data?: CustomerCommunicationAggregateUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/AggregateVerificationToken": {
		input: CustomerCommunicationAggregateVerificationTokenInput;
		response: { data?: CustomerCommunicationAggregateVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/AggregateWidget": {
		input: CustomerCommunicationAggregateWidgetInput;
		response: { data?: CustomerCommunicationAggregateWidgetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstAccount": {
		input: CustomerCommunicationFindFirstAccountInput;
		response: { data?: CustomerCommunicationFindFirstAccountResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstAccountOrThrow": {
		input: CustomerCommunicationFindFirstAccountOrThrowInput;
		response: { data?: CustomerCommunicationFindFirstAccountOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstFilter": {
		input: CustomerCommunicationFindFirstFilterInput;
		response: { data?: CustomerCommunicationFindFirstFilterResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstFilterOrThrow": {
		input: CustomerCommunicationFindFirstFilterOrThrowInput;
		response: { data?: CustomerCommunicationFindFirstFilterOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstInteraction": {
		input: CustomerCommunicationFindFirstInteractionInput;
		response: { data?: CustomerCommunicationFindFirstInteractionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstInteractionOrThrow": {
		input: CustomerCommunicationFindFirstInteractionOrThrowInput;
		response: {
			data?: CustomerCommunicationFindFirstInteractionOrThrowResponse["data"];
			error?: ClientOperationErrors;
		};
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstSession": {
		input: CustomerCommunicationFindFirstSessionInput;
		response: { data?: CustomerCommunicationFindFirstSessionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstSessionOrThrow": {
		input: CustomerCommunicationFindFirstSessionOrThrowInput;
		response: { data?: CustomerCommunicationFindFirstSessionOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstUser": {
		input: CustomerCommunicationFindFirstUserInput;
		response: { data?: CustomerCommunicationFindFirstUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstUserOrThrow": {
		input: CustomerCommunicationFindFirstUserOrThrowInput;
		response: { data?: CustomerCommunicationFindFirstUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstVerificationToken": {
		input: CustomerCommunicationFindFirstVerificationTokenInput;
		response: { data?: CustomerCommunicationFindFirstVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstVerificationTokenOrThrow": {
		input: CustomerCommunicationFindFirstVerificationTokenOrThrowInput;
		response: {
			data?: CustomerCommunicationFindFirstVerificationTokenOrThrowResponse["data"];
			error?: ClientOperationErrors;
		};
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstWidget": {
		input: CustomerCommunicationFindFirstWidgetInput;
		response: { data?: CustomerCommunicationFindFirstWidgetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindFirstWidgetOrThrow": {
		input: CustomerCommunicationFindFirstWidgetOrThrowInput;
		response: { data?: CustomerCommunicationFindFirstWidgetOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindManyAccount": {
		input: CustomerCommunicationFindManyAccountInput;
		response: { data?: CustomerCommunicationFindManyAccountResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindManyFilter": {
		input: CustomerCommunicationFindManyFilterInput;
		response: { data?: CustomerCommunicationFindManyFilterResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindManyInteraction": {
		input: CustomerCommunicationFindManyInteractionInput;
		response: { data?: CustomerCommunicationFindManyInteractionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindManySession": {
		input: CustomerCommunicationFindManySessionInput;
		response: { data?: CustomerCommunicationFindManySessionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindManyUser": {
		input: CustomerCommunicationFindManyUserInput;
		response: { data?: CustomerCommunicationFindManyUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindManyVerificationToken": {
		input: CustomerCommunicationFindManyVerificationTokenInput;
		response: { data?: CustomerCommunicationFindManyVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindManyWidget": {
		input: CustomerCommunicationFindManyWidgetInput;
		response: { data?: CustomerCommunicationFindManyWidgetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueAccount": {
		input: CustomerCommunicationFindUniqueAccountInput;
		response: { data?: CustomerCommunicationFindUniqueAccountResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueAccountOrThrow": {
		input: CustomerCommunicationFindUniqueAccountOrThrowInput;
		response: { data?: CustomerCommunicationFindUniqueAccountOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueFilter": {
		input: CustomerCommunicationFindUniqueFilterInput;
		response: { data?: CustomerCommunicationFindUniqueFilterResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueFilterOrThrow": {
		input: CustomerCommunicationFindUniqueFilterOrThrowInput;
		response: { data?: CustomerCommunicationFindUniqueFilterOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueInteraction": {
		input: CustomerCommunicationFindUniqueInteractionInput;
		response: { data?: CustomerCommunicationFindUniqueInteractionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueInteractionOrThrow": {
		input: CustomerCommunicationFindUniqueInteractionOrThrowInput;
		response: {
			data?: CustomerCommunicationFindUniqueInteractionOrThrowResponse["data"];
			error?: ClientOperationErrors;
		};
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueSession": {
		input: CustomerCommunicationFindUniqueSessionInput;
		response: { data?: CustomerCommunicationFindUniqueSessionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueSessionOrThrow": {
		input: CustomerCommunicationFindUniqueSessionOrThrowInput;
		response: { data?: CustomerCommunicationFindUniqueSessionOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueUser": {
		input: CustomerCommunicationFindUniqueUserInput;
		response: { data?: CustomerCommunicationFindUniqueUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueUserOrThrow": {
		input: CustomerCommunicationFindUniqueUserOrThrowInput;
		response: { data?: CustomerCommunicationFindUniqueUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueVerificationToken": {
		input: CustomerCommunicationFindUniqueVerificationTokenInput;
		response: {
			data?: CustomerCommunicationFindUniqueVerificationTokenResponse["data"];
			error?: ClientOperationErrors;
		};
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueVerificationTokenOrThrow": {
		input: CustomerCommunicationFindUniqueVerificationTokenOrThrowInput;
		response: {
			data?: CustomerCommunicationFindUniqueVerificationTokenOrThrowResponse["data"];
			error?: ClientOperationErrors;
		};
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueWidget": {
		input: CustomerCommunicationFindUniqueWidgetInput;
		response: { data?: CustomerCommunicationFindUniqueWidgetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/FindUniqueWidgetOrThrow": {
		input: CustomerCommunicationFindUniqueWidgetOrThrowInput;
		response: { data?: CustomerCommunicationFindUniqueWidgetOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/GroupByAccount": {
		input: CustomerCommunicationGroupByAccountInput;
		response: { data?: CustomerCommunicationGroupByAccountResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/GroupByFilter": {
		input: CustomerCommunicationGroupByFilterInput;
		response: { data?: CustomerCommunicationGroupByFilterResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/GroupByInteraction": {
		input: CustomerCommunicationGroupByInteractionInput;
		response: { data?: CustomerCommunicationGroupByInteractionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/GroupBySession": {
		input: CustomerCommunicationGroupBySessionInput;
		response: { data?: CustomerCommunicationGroupBySessionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/GroupByUser": {
		input: CustomerCommunicationGroupByUserInput;
		response: { data?: CustomerCommunicationGroupByUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/GroupByVerificationToken": {
		input: CustomerCommunicationGroupByVerificationTokenInput;
		response: { data?: CustomerCommunicationGroupByVerificationTokenResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/GroupByWidget": {
		input: CustomerCommunicationGroupByWidgetInput;
		response: { data?: CustomerCommunicationGroupByWidgetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/QueryRaw": {
		input: CustomerCommunicationQueryRawInput;
		response: { data?: CustomerCommunicationQueryRawResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"customerCommunication/QueryRawJSON": {
		input: CustomerCommunicationQueryRawJSONInput;
		response: { data?: CustomerCommunicationQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/AggregateAdminAction": {
		input: GpacAggregateAdminActionInput;
		response: { data?: GpacAggregateAdminActionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/AggregatePolicy": {
		input: GpacAggregatePolicyInput;
		response: { data?: GpacAggregatePolicyResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/AggregateUser": {
		input: GpacAggregateUserInput;
		response: { data?: GpacAggregateUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindFirstAdminAction": {
		input: GpacFindFirstAdminActionInput;
		response: { data?: GpacFindFirstAdminActionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindFirstAdminActionOrThrow": {
		input: GpacFindFirstAdminActionOrThrowInput;
		response: { data?: GpacFindFirstAdminActionOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindFirstPolicy": {
		input: GpacFindFirstPolicyInput;
		response: { data?: GpacFindFirstPolicyResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindFirstPolicyOrThrow": {
		input: GpacFindFirstPolicyOrThrowInput;
		response: { data?: GpacFindFirstPolicyOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindFirstUser": {
		input: GpacFindFirstUserInput;
		response: { data?: GpacFindFirstUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindFirstUserOrThrow": {
		input: GpacFindFirstUserOrThrowInput;
		response: { data?: GpacFindFirstUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindManyAdminAction": {
		input: GpacFindManyAdminActionInput;
		response: { data?: GpacFindManyAdminActionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindManyPolicy": {
		input: GpacFindManyPolicyInput;
		response: { data?: GpacFindManyPolicyResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindManyUser": {
		input: GpacFindManyUserInput;
		response: { data?: GpacFindManyUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindUniqueAdminAction": {
		input: GpacFindUniqueAdminActionInput;
		response: { data?: GpacFindUniqueAdminActionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindUniqueAdminActionOrThrow": {
		input: GpacFindUniqueAdminActionOrThrowInput;
		response: { data?: GpacFindUniqueAdminActionOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindUniquePolicy": {
		input: GpacFindUniquePolicyInput;
		response: { data?: GpacFindUniquePolicyResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindUniquePolicyOrThrow": {
		input: GpacFindUniquePolicyOrThrowInput;
		response: { data?: GpacFindUniquePolicyOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindUniqueUser": {
		input: GpacFindUniqueUserInput;
		response: { data?: GpacFindUniqueUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/FindUniqueUserOrThrow": {
		input: GpacFindUniqueUserOrThrowInput;
		response: { data?: GpacFindUniqueUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/GroupByAdminAction": {
		input: GpacGroupByAdminActionInput;
		response: { data?: GpacGroupByAdminActionResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/GroupByPolicy": {
		input: GpacGroupByPolicyInput;
		response: { data?: GpacGroupByPolicyResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/GroupByUser": {
		input: GpacGroupByUserInput;
		response: { data?: GpacGroupByUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/QueryRaw": {
		input: GpacQueryRawInput;
		response: { data?: GpacQueryRawResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"gpac/QueryRawJSON": {
		input: GpacQueryRawJSONInput;
		response: { data?: GpacQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/AggregateFeature": {
		input: GuardianOnlineAggregateFeatureInput;
		response: { data?: GuardianOnlineAggregateFeatureResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/AggregateUser": {
		input: GuardianOnlineAggregateUserInput;
		response: { data?: GuardianOnlineAggregateUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/AggregateUserLog": {
		input: GuardianOnlineAggregateUserLogInput;
		response: { data?: GuardianOnlineAggregateUserLogResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindFirstFeature": {
		input: GuardianOnlineFindFirstFeatureInput;
		response: { data?: GuardianOnlineFindFirstFeatureResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindFirstFeatureOrThrow": {
		input: GuardianOnlineFindFirstFeatureOrThrowInput;
		response: { data?: GuardianOnlineFindFirstFeatureOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindFirstUser": {
		input: GuardianOnlineFindFirstUserInput;
		response: { data?: GuardianOnlineFindFirstUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindFirstUserLog": {
		input: GuardianOnlineFindFirstUserLogInput;
		response: { data?: GuardianOnlineFindFirstUserLogResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindFirstUserLogOrThrow": {
		input: GuardianOnlineFindFirstUserLogOrThrowInput;
		response: { data?: GuardianOnlineFindFirstUserLogOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindFirstUserOrThrow": {
		input: GuardianOnlineFindFirstUserOrThrowInput;
		response: { data?: GuardianOnlineFindFirstUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindManyFeature": {
		input: GuardianOnlineFindManyFeatureInput;
		response: { data?: GuardianOnlineFindManyFeatureResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindManyUser": {
		input: GuardianOnlineFindManyUserInput;
		response: { data?: GuardianOnlineFindManyUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindManyUserLog": {
		input: GuardianOnlineFindManyUserLogInput;
		response: { data?: GuardianOnlineFindManyUserLogResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindUniqueFeature": {
		input: GuardianOnlineFindUniqueFeatureInput;
		response: { data?: GuardianOnlineFindUniqueFeatureResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindUniqueFeatureOrThrow": {
		input: GuardianOnlineFindUniqueFeatureOrThrowInput;
		response: { data?: GuardianOnlineFindUniqueFeatureOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindUniqueUser": {
		input: GuardianOnlineFindUniqueUserInput;
		response: { data?: GuardianOnlineFindUniqueUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindUniqueUserLog": {
		input: GuardianOnlineFindUniqueUserLogInput;
		response: { data?: GuardianOnlineFindUniqueUserLogResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindUniqueUserLogOrThrow": {
		input: GuardianOnlineFindUniqueUserLogOrThrowInput;
		response: { data?: GuardianOnlineFindUniqueUserLogOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/FindUniqueUserOrThrow": {
		input: GuardianOnlineFindUniqueUserOrThrowInput;
		response: { data?: GuardianOnlineFindUniqueUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/GroupByFeature": {
		input: GuardianOnlineGroupByFeatureInput;
		response: { data?: GuardianOnlineGroupByFeatureResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/GroupByUser": {
		input: GuardianOnlineGroupByUserInput;
		response: { data?: GuardianOnlineGroupByUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/GroupByUserLog": {
		input: GuardianOnlineGroupByUserLogInput;
		response: { data?: GuardianOnlineGroupByUserLogResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/QueryRaw": {
		input: GuardianOnlineQueryRawInput;
		response: { data?: GuardianOnlineQueryRawResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"guardianOnline/QueryRawJSON": {
		input: GuardianOnlineQueryRawJSONInput;
		response: { data?: GuardianOnlineQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/AggregateAsset": {
		input: LivingBalanceSheetAggregateAssetInput;
		response: { data?: LivingBalanceSheetAggregateAssetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/AggregateFinancialGoal": {
		input: LivingBalanceSheetAggregateFinancialGoalInput;
		response: { data?: LivingBalanceSheetAggregateFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/AggregateLiability": {
		input: LivingBalanceSheetAggregateLiabilityInput;
		response: { data?: LivingBalanceSheetAggregateLiabilityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/AggregateUser": {
		input: LivingBalanceSheetAggregateUserInput;
		response: { data?: LivingBalanceSheetAggregateUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstAsset": {
		input: LivingBalanceSheetFindFirstAssetInput;
		response: { data?: LivingBalanceSheetFindFirstAssetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstAssetOrThrow": {
		input: LivingBalanceSheetFindFirstAssetOrThrowInput;
		response: { data?: LivingBalanceSheetFindFirstAssetOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstFinancialGoal": {
		input: LivingBalanceSheetFindFirstFinancialGoalInput;
		response: { data?: LivingBalanceSheetFindFirstFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstFinancialGoalOrThrow": {
		input: LivingBalanceSheetFindFirstFinancialGoalOrThrowInput;
		response: { data?: LivingBalanceSheetFindFirstFinancialGoalOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstLiability": {
		input: LivingBalanceSheetFindFirstLiabilityInput;
		response: { data?: LivingBalanceSheetFindFirstLiabilityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstLiabilityOrThrow": {
		input: LivingBalanceSheetFindFirstLiabilityOrThrowInput;
		response: { data?: LivingBalanceSheetFindFirstLiabilityOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstUser": {
		input: LivingBalanceSheetFindFirstUserInput;
		response: { data?: LivingBalanceSheetFindFirstUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindFirstUserOrThrow": {
		input: LivingBalanceSheetFindFirstUserOrThrowInput;
		response: { data?: LivingBalanceSheetFindFirstUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindManyAsset": {
		input: LivingBalanceSheetFindManyAssetInput;
		response: { data?: LivingBalanceSheetFindManyAssetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindManyFinancialGoal": {
		input: LivingBalanceSheetFindManyFinancialGoalInput;
		response: { data?: LivingBalanceSheetFindManyFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindManyLiability": {
		input: LivingBalanceSheetFindManyLiabilityInput;
		response: { data?: LivingBalanceSheetFindManyLiabilityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindManyUser": {
		input: LivingBalanceSheetFindManyUserInput;
		response: { data?: LivingBalanceSheetFindManyUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueAsset": {
		input: LivingBalanceSheetFindUniqueAssetInput;
		response: { data?: LivingBalanceSheetFindUniqueAssetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueAssetOrThrow": {
		input: LivingBalanceSheetFindUniqueAssetOrThrowInput;
		response: { data?: LivingBalanceSheetFindUniqueAssetOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueFinancialGoal": {
		input: LivingBalanceSheetFindUniqueFinancialGoalInput;
		response: { data?: LivingBalanceSheetFindUniqueFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueFinancialGoalOrThrow": {
		input: LivingBalanceSheetFindUniqueFinancialGoalOrThrowInput;
		response: {
			data?: LivingBalanceSheetFindUniqueFinancialGoalOrThrowResponse["data"];
			error?: ClientOperationErrors;
		};
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueLiability": {
		input: LivingBalanceSheetFindUniqueLiabilityInput;
		response: { data?: LivingBalanceSheetFindUniqueLiabilityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueLiabilityOrThrow": {
		input: LivingBalanceSheetFindUniqueLiabilityOrThrowInput;
		response: { data?: LivingBalanceSheetFindUniqueLiabilityOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueUser": {
		input: LivingBalanceSheetFindUniqueUserInput;
		response: { data?: LivingBalanceSheetFindUniqueUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/FindUniqueUserOrThrow": {
		input: LivingBalanceSheetFindUniqueUserOrThrowInput;
		response: { data?: LivingBalanceSheetFindUniqueUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/GroupByAsset": {
		input: LivingBalanceSheetGroupByAssetInput;
		response: { data?: LivingBalanceSheetGroupByAssetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/GroupByFinancialGoal": {
		input: LivingBalanceSheetGroupByFinancialGoalInput;
		response: { data?: LivingBalanceSheetGroupByFinancialGoalResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/GroupByLiability": {
		input: LivingBalanceSheetGroupByLiabilityInput;
		response: { data?: LivingBalanceSheetGroupByLiabilityResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/GroupByUser": {
		input: LivingBalanceSheetGroupByUserInput;
		response: { data?: LivingBalanceSheetGroupByUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/QueryRaw": {
		input: LivingBalanceSheetQueryRawInput;
		response: { data?: LivingBalanceSheetQueryRawResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"livingBalanceSheet/QueryRawJSON": {
		input: LivingBalanceSheetQueryRawJSONInput;
		response: { data?: LivingBalanceSheetQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/AggregateClient": {
		input: SmartOfficeAggregateClientInput;
		response: { data?: SmartOfficeAggregateClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/AggregateSale": {
		input: SmartOfficeAggregateSaleInput;
		response: { data?: SmartOfficeAggregateSaleResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/AggregateTask": {
		input: SmartOfficeAggregateTaskInput;
		response: { data?: SmartOfficeAggregateTaskResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/AggregateUser": {
		input: SmartOfficeAggregateUserInput;
		response: { data?: SmartOfficeAggregateUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstClient": {
		input: SmartOfficeFindFirstClientInput;
		response: { data?: SmartOfficeFindFirstClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstClientOrThrow": {
		input: SmartOfficeFindFirstClientOrThrowInput;
		response: { data?: SmartOfficeFindFirstClientOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstSale": {
		input: SmartOfficeFindFirstSaleInput;
		response: { data?: SmartOfficeFindFirstSaleResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstSaleOrThrow": {
		input: SmartOfficeFindFirstSaleOrThrowInput;
		response: { data?: SmartOfficeFindFirstSaleOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstTask": {
		input: SmartOfficeFindFirstTaskInput;
		response: { data?: SmartOfficeFindFirstTaskResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstTaskOrThrow": {
		input: SmartOfficeFindFirstTaskOrThrowInput;
		response: { data?: SmartOfficeFindFirstTaskOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstUser": {
		input: SmartOfficeFindFirstUserInput;
		response: { data?: SmartOfficeFindFirstUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindFirstUserOrThrow": {
		input: SmartOfficeFindFirstUserOrThrowInput;
		response: { data?: SmartOfficeFindFirstUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindManyClient": {
		input: SmartOfficeFindManyClientInput;
		response: { data?: SmartOfficeFindManyClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindManySale": {
		input: SmartOfficeFindManySaleInput;
		response: { data?: SmartOfficeFindManySaleResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindManyTask": {
		input: SmartOfficeFindManyTaskInput;
		response: { data?: SmartOfficeFindManyTaskResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindManyUser": {
		input: SmartOfficeFindManyUserInput;
		response: { data?: SmartOfficeFindManyUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueClient": {
		input: SmartOfficeFindUniqueClientInput;
		response: { data?: SmartOfficeFindUniqueClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueClientOrThrow": {
		input: SmartOfficeFindUniqueClientOrThrowInput;
		response: { data?: SmartOfficeFindUniqueClientOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueSale": {
		input: SmartOfficeFindUniqueSaleInput;
		response: { data?: SmartOfficeFindUniqueSaleResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueSaleOrThrow": {
		input: SmartOfficeFindUniqueSaleOrThrowInput;
		response: { data?: SmartOfficeFindUniqueSaleOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueTask": {
		input: SmartOfficeFindUniqueTaskInput;
		response: { data?: SmartOfficeFindUniqueTaskResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueTaskOrThrow": {
		input: SmartOfficeFindUniqueTaskOrThrowInput;
		response: { data?: SmartOfficeFindUniqueTaskOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueUser": {
		input: SmartOfficeFindUniqueUserInput;
		response: { data?: SmartOfficeFindUniqueUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/FindUniqueUserOrThrow": {
		input: SmartOfficeFindUniqueUserOrThrowInput;
		response: { data?: SmartOfficeFindUniqueUserOrThrowResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/GroupByClient": {
		input: SmartOfficeGroupByClientInput;
		response: { data?: SmartOfficeGroupByClientResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/GroupBySale": {
		input: SmartOfficeGroupBySaleInput;
		response: { data?: SmartOfficeGroupBySaleResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/GroupByTask": {
		input: SmartOfficeGroupByTaskInput;
		response: { data?: SmartOfficeGroupByTaskResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/GroupByUser": {
		input: SmartOfficeGroupByUserInput;
		response: { data?: SmartOfficeGroupByUserResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/QueryRaw": {
		input: SmartOfficeQueryRawInput;
		response: { data?: SmartOfficeQueryRawResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"smartOffice/QueryRawJSON": {
		input: SmartOfficeQueryRawJSONInput;
		response: { data?: SmartOfficeQueryRawJSONResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"users/CountUsers": {
		input?: undefined;
		response: { data?: UsersCountUsersResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"users/GetAllUsers": {
		input?: undefined;
		response: { data?: UsersGetAllUsersResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"weather/GetCityById": {
		input: WeatherGetCityByIdInput;
		response: { data?: WeatherGetCityByIdResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"weather/GetCityByName": {
		input: WeatherGetCityByNameInput;
		response: { data?: WeatherGetCityByNameResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"openai/extract-website-metadata": {
		input: OpenaiExtract_website_metadataInput;
		response: { data?: OpenaiExtract_website_metadataResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"openai/load-url": {
		input: OpenaiLoad_urlInput;
		response: { data?: OpenaiLoad_urlResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"openai/summarize-url-content": {
		input: OpenaiSummarize_url_contentInput;
		response: { data?: OpenaiSummarize_url_contentResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"openai/summary": {
		input: OpenaiSummaryInput;
		response: { data?: OpenaiSummaryResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"openai/weather": {
		input: OpenaiWeatherInput;
		response: { data?: OpenaiWeatherResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
	"users/get": {
		input: UsersGetInput;
		response: { data?: UsersGetResponse["data"]; error?: ClientOperationErrors };
		liveQuery: true;
		requiresAuthentication: false;
	};
};

export interface Operations
	extends OperationsDefinition<Queries, Mutations, Subscriptions, LiveQueries, UserRole, {}> {}
