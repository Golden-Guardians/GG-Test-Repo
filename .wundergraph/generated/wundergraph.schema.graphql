# Code generated by "wunderctl"; DO NOT EDIT.

schema {
  query: Query
  mutation: Mutation
}

directive @weather_cacheControl(maxAge: Int, scope: weather_CacheControlScope) on FIELD_DEFINITION | INTERFACE | OBJECT

"""
The @removeNullVariables directive allows you to remove variables with null value from your GraphQL Query or Mutation Operations.

A potential use-case could be that you have a graphql upstream which is not accepting null values for variables.
By enabling this directive all variables with null values will be removed from upstream query.

query ($say: String, $name: String) @removeNullVariables {
	hello(say: $say, name: $name)
}

Directive will transform variables json and remove top level null values.
{ "say": null, "name": "world" }

So upstream will receive the following variables:

{ "name": "world" }
"""
directive @removeNullVariables on QUERY | MUTATION

directive @hooksVariable on VARIABLE_DEFINITION

directive @jsonSchema(
  """
  The value of both of these keywords MUST be a string.
  
  Both of these keywords can be used to decorate a user interface with
  information about the data produced by this user interface.  A title
  will preferably be short, whereas a description will provide
  explanation about the purpose of the instance described by this
  schema.
  """
  title: String
  """
  The value of both of these keywords MUST be a string.
  
  Both of these keywords can be used to decorate a user interface with
  information about the data produced by this user interface.  A title
  will preferably be short, whereas a description will provide
  explanation about the purpose of the instance described by this
  schema.
  """
  description: String
  """
  The value of "multipleOf" MUST be a number, strictly greater than 0.
  
  A numeric instance is valid only if division by this keyword's value
  results in an integer.
  """
  multipleOf: Int
  """
  The value of "maximum" MUST be a number, representing an inclusive
  upper limit for a numeric instance.
  
  If the instance is a number, then this keyword validates only if the
  instance is less than or exactly equal to "maximum".
  """
  maximum: Int
  """
  The value of "exclusiveMaximum" MUST be number, representing an
  exclusive upper limit for a numeric instance.
  
  If the instance is a number, then the instance is valid only if it
  has a value strictly less than (not equal to) "exclusiveMaximum".
  """
  exclusiveMaximum: Int
  """
  The value of "minimum" MUST be a number, representing an inclusive
  lower limit for a numeric instance.
  
  If the instance is a number, then this keyword validates only if the
  instance is greater than or exactly equal to "minimum".
  """
  minimum: Int
  """
  The value of "exclusiveMinimum" MUST be number, representing an
  exclusive lower limit for a numeric instance.
  
  If the instance is a number, then the instance is valid only if it
  has a value strictly greater than (not equal to) "exclusiveMinimum".
  """
  exclusiveMinimum: Int
  """
  The value of this keyword MUST be a non-negative integer.
  
  A string instance is valid against this keyword if its length is less
  than, or equal to, the value of this keyword.
  
  The length of a string instance is defined as the number of its
  characters as defined by RFC 7159 [RFC7159].
  """
  maxLength: Int
  """
  The value of this keyword MUST be a non-negative integer.
  
  A string instance is valid against this keyword if its length is
  greater than, or equal to, the value of this keyword.
  
  The length of a string instance is defined as the number of its
  characters as defined by RFC 7159 [RFC7159].
  
  Omitting this keyword has the same behavior as a value of 0.
  """
  minLength: Int
  """
  The value of this keyword MUST be a string.  This string SHOULD be a
  valid regular expression, according to the ECMA 262 regular
  expression dialect.
  
  A string instance is considered valid if the regular expression
  matches the instance successfully.  Recall: regular expressions are
  not implicitly anchored.
  """
  pattern: String
  """
  The value of this keyword MUST be a non-negative integer.
  
  An array instance is valid against "maxItems" if its size is less
  than, or equal to, the value of this keyword.
  """
  maxItems: Int
  """
  The value of this keyword MUST be a non-negative integer.
  
  An array instance is valid against "minItems" if its size is greater
  than, or equal to, the value of this keyword.
  
  Omitting this keyword has the same behavior as a value of 0.
  """
  minItems: Int
  """
  The value of this keyword MUST be a boolean.
  
  If this keyword has boolean value false, the instance validates
  successfully.  If it has boolean value true, the instance validates
  successfully if all of its elements are unique.
  
  Omitting this keyword has the same behavior as a value of false.
  """
  uniqueItems: Boolean
  commonPattern: COMMON_REGEX_PATTERN
  """Optional field to apply the JSON schema to"""
  on: String
) repeatable on VARIABLE_DEFINITION

directive @rbac(
  "the user must match all roles"
  requireMatchAll: [WG_ROLE]
  "the user must match at least one of the roles"
  requireMatchAny: [WG_ROLE]
  "the user must not match all of the roles"
  denyMatchAll: [WG_ROLE]
  "the user must not match any of the roles"
  denyMatchAny: [WG_ROLE]
) on QUERY | MUTATION | SUBSCRIPTION

"""
The @fromClaim directive sets the variable to the value retrieved from the given a claim.
Adding this directive makes the operation require authentication.
"""
directive @fromClaim(name: WG_CLAIM, on: String = "") repeatable on VARIABLE_DEFINITION

"""
The directive @injectCurrentDateTime injects a DateTime string of the current date and time into the variable.
This variable MUST be a string compatible scalar. 

The default format, is: ISO 8601
If no format is chosen, the default format is used.
Custom formats are allowed by specifying a format conforming to the Golang specification for specifying a date time format.
"""
directive @injectCurrentDateTime(
  format: WunderGraphDateTimeFormat = ISO8601
  """
  customFormat must conform to the Golang specification for specifying a date time format
  """
  customFormat: String
  on: String = ""
) repeatable on VARIABLE_DEFINITION

"""
The directive @injectGeneratedUUID injects a generated UUID into the variable.
This variable MUST be a string.
At the same time, it removes the variable from the input definition,
disallowing the user to supply it.

This means, the UUID is 100% generated server-side and can be considered untempered.
"""
directive @injectGeneratedUUID(on: String = "") repeatable on VARIABLE_DEFINITION

"""
The @internalOperation Directive marks an Operation as internal.
By doing so, the Operation is no longer accessible from the public API.
It can only be accessed by internal services, like hooks.
"""
directive @internalOperation on QUERY | MUTATION | SUBSCRIPTION

"""
The directive @injectEnvironmentVariable allows you to inject an environment variable into the variable definition.
"""
directive @injectEnvironmentVariable(name: String!, on: String = "") repeatable on VARIABLE_DEFINITION

"""
The @export directive instructs the Execution Planner to export the field during the execution into the variable of the 'as' argument.
As the execution is depth first, a field can only be used after it has been exported.
Additionally, a field can only be used after using the '_join' field or on a different data source.
It's not possible to export a field and use it in for the same data source.

Note that the @export directive only works on fields that return a single value.
It's not possible to export a list or object field.
"""
directive @export(
  """The argument 'as' is the name of the variable to export the field to."""
  as: String!
) on FIELD

"""
The directive @internal marks a variable definition as internal so that clients can't access it.
The field is also not visible in the public API.
It's only being used as an internal variable to export fields into.
"""
directive @internal on VARIABLE_DEFINITION

"""
The @transform directive allows to apply transformations to the response.
By applying the directive, the shape of the response can be altered,
which will also modify the JSON-Schema of the response.
That is, you will keep full type safety and code-generation for transformed fields.
"""
directive @transform(
  """
  Using the 'get' transformation allows you to extract a nested field using a JSON path.
  This is useful to unnest data, e.g. when using the '_join' field, which adds an extra layer of nesting.
  
  Example:
  
  query GetName {
      name: me @transform(get: "info.name") {
          info {
              name
          }
      }
  }
  
  Before the transformation, the resolve looks like this:
  
  {
      "name": {
          "info": {
              "name": "John Doe"
          }
      }
  }
  
  With the transformation applied, the response will be reshaped like this:
  
  {
      "name": "John Doe"
  }
  """
  get: String
) on FIELD

"""
The @requireAuthentication Directive marks an Operation to require authentication.
Without authentication, the operation will return an Unauthorized error with status code 401.
"""
directive @requireAuthentication on QUERY | MUTATION | SUBSCRIPTION

type countries_Continent {
  code: ID!
  countries: [countries_Country!]!
  name: String!
  _join: Query!
}

input countries_ContinentFilterInput {
  code: countries_StringQueryOperatorInput
}

type countries_Country {
  awsRegion: String!
  capital: String
  code: ID!
  continent: countries_Continent!
  currencies: [String!]!
  currency: String
  emoji: String!
  emojiU: String!
  languages: [countries_Language!]!
  name(lang: String): String!
  native: String!
  phone: String!
  phones: [String!]!
  states: [countries_State!]!
  subdivisions: [countries_Subdivision!]!
  _join: Query!
}

input countries_CountryFilterInput {
  code: countries_StringQueryOperatorInput
  continent: countries_StringQueryOperatorInput
  currency: countries_StringQueryOperatorInput
  name: countries_StringQueryOperatorInput
}

type countries_Language {
  code: ID!
  name: String!
  native: String!
  rtl: Boolean!
  _join: Query!
}

input countries_LanguageFilterInput {
  code: countries_StringQueryOperatorInput
}

type Query {
  countries_continent(code: ID!): countries_Continent
  countries_continents(filter: countries_ContinentFilterInput = {}): [countries_Continent!]!
  countries_countries(filter: countries_CountryFilterInput = {}): [countries_Country!]!
  countries_country(code: ID!): countries_Country
  countries_language(code: ID!): countries_Language
  countries_languages(filter: countries_LanguageFilterInput = {}): [countries_Language!]!
  customerCommunication_findFirstAccount(where: customerCommunication_AccountWhereInput, orderBy: [customerCommunication_AccountOrderByWithRelationInput], cursor: customerCommunication_AccountWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_AccountScalarFieldEnum]): customerCommunication_Account
  customerCommunication_findFirstAccountOrThrow(where: customerCommunication_AccountWhereInput, orderBy: [customerCommunication_AccountOrderByWithRelationInput], cursor: customerCommunication_AccountWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_AccountScalarFieldEnum]): customerCommunication_Account
  customerCommunication_findManyAccount(where: customerCommunication_AccountWhereInput, orderBy: [customerCommunication_AccountOrderByWithRelationInput], cursor: customerCommunication_AccountWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_AccountScalarFieldEnum]): [customerCommunication_Account]!
  customerCommunication_aggregateAccount(where: customerCommunication_AccountWhereInput, orderBy: [customerCommunication_AccountOrderByWithRelationInput], cursor: customerCommunication_AccountWhereUniqueInput, take: Int, skip: Int): customerCommunication_AggregateAccount!
  customerCommunication_groupByAccount(where: customerCommunication_AccountWhereInput, orderBy: [customerCommunication_AccountOrderByWithAggregationInput], by: [customerCommunication_AccountScalarFieldEnum]!, having: customerCommunication_AccountScalarWhereWithAggregatesInput, take: Int, skip: Int): [customerCommunication_AccountGroupByOutputType]!
  customerCommunication_findUniqueAccount(where: customerCommunication_AccountWhereUniqueInput!): customerCommunication_Account
  customerCommunication_findUniqueAccountOrThrow(where: customerCommunication_AccountWhereUniqueInput!): customerCommunication_Account
  customerCommunication_findFirstSession(where: customerCommunication_SessionWhereInput, orderBy: [customerCommunication_SessionOrderByWithRelationInput], cursor: customerCommunication_SessionWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_SessionScalarFieldEnum]): customerCommunication_Session
  customerCommunication_findFirstSessionOrThrow(where: customerCommunication_SessionWhereInput, orderBy: [customerCommunication_SessionOrderByWithRelationInput], cursor: customerCommunication_SessionWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_SessionScalarFieldEnum]): customerCommunication_Session
  customerCommunication_findManySession(where: customerCommunication_SessionWhereInput, orderBy: [customerCommunication_SessionOrderByWithRelationInput], cursor: customerCommunication_SessionWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_SessionScalarFieldEnum]): [customerCommunication_Session]!
  customerCommunication_aggregateSession(where: customerCommunication_SessionWhereInput, orderBy: [customerCommunication_SessionOrderByWithRelationInput], cursor: customerCommunication_SessionWhereUniqueInput, take: Int, skip: Int): customerCommunication_AggregateSession!
  customerCommunication_groupBySession(where: customerCommunication_SessionWhereInput, orderBy: [customerCommunication_SessionOrderByWithAggregationInput], by: [customerCommunication_SessionScalarFieldEnum]!, having: customerCommunication_SessionScalarWhereWithAggregatesInput, take: Int, skip: Int): [customerCommunication_SessionGroupByOutputType]!
  customerCommunication_findUniqueSession(where: customerCommunication_SessionWhereUniqueInput!): customerCommunication_Session
  customerCommunication_findUniqueSessionOrThrow(where: customerCommunication_SessionWhereUniqueInput!): customerCommunication_Session
  customerCommunication_findFirstVerificationToken(where: customerCommunication_VerificationTokenWhereInput, orderBy: [customerCommunication_VerificationTokenOrderByWithRelationInput], cursor: customerCommunication_VerificationTokenWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_VerificationTokenScalarFieldEnum]): customerCommunication_VerificationToken
  customerCommunication_findFirstVerificationTokenOrThrow(where: customerCommunication_VerificationTokenWhereInput, orderBy: [customerCommunication_VerificationTokenOrderByWithRelationInput], cursor: customerCommunication_VerificationTokenWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_VerificationTokenScalarFieldEnum]): customerCommunication_VerificationToken
  customerCommunication_findManyVerificationToken(where: customerCommunication_VerificationTokenWhereInput, orderBy: [customerCommunication_VerificationTokenOrderByWithRelationInput], cursor: customerCommunication_VerificationTokenWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_VerificationTokenScalarFieldEnum]): [customerCommunication_VerificationToken]!
  customerCommunication_aggregateVerificationToken(where: customerCommunication_VerificationTokenWhereInput, orderBy: [customerCommunication_VerificationTokenOrderByWithRelationInput], cursor: customerCommunication_VerificationTokenWhereUniqueInput, take: Int, skip: Int): customerCommunication_AggregateVerificationToken!
  customerCommunication_groupByVerificationToken(where: customerCommunication_VerificationTokenWhereInput, orderBy: [customerCommunication_VerificationTokenOrderByWithAggregationInput], by: [customerCommunication_VerificationTokenScalarFieldEnum]!, having: customerCommunication_VerificationTokenScalarWhereWithAggregatesInput, take: Int, skip: Int): [customerCommunication_VerificationTokenGroupByOutputType]!
  customerCommunication_findUniqueVerificationToken(where: customerCommunication_VerificationTokenWhereUniqueInput!): customerCommunication_VerificationToken
  customerCommunication_findUniqueVerificationTokenOrThrow(where: customerCommunication_VerificationTokenWhereUniqueInput!): customerCommunication_VerificationToken
  customerCommunication_findFirstUser(where: customerCommunication_UserWhereInput, orderBy: [customerCommunication_UserOrderByWithRelationInput], cursor: customerCommunication_UserWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_UserScalarFieldEnum]): customerCommunication_User
  customerCommunication_findFirstUserOrThrow(where: customerCommunication_UserWhereInput, orderBy: [customerCommunication_UserOrderByWithRelationInput], cursor: customerCommunication_UserWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_UserScalarFieldEnum]): customerCommunication_User
  customerCommunication_findManyUser(where: customerCommunication_UserWhereInput, orderBy: [customerCommunication_UserOrderByWithRelationInput], cursor: customerCommunication_UserWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_UserScalarFieldEnum]): [customerCommunication_User]!
  customerCommunication_aggregateUser(where: customerCommunication_UserWhereInput, orderBy: [customerCommunication_UserOrderByWithRelationInput], cursor: customerCommunication_UserWhereUniqueInput, take: Int, skip: Int): customerCommunication_AggregateUser!
  customerCommunication_groupByUser(where: customerCommunication_UserWhereInput, orderBy: [customerCommunication_UserOrderByWithAggregationInput], by: [customerCommunication_UserScalarFieldEnum]!, having: customerCommunication_UserScalarWhereWithAggregatesInput, take: Int, skip: Int): [customerCommunication_UserGroupByOutputType]!
  customerCommunication_findUniqueUser(where: customerCommunication_UserWhereUniqueInput!): customerCommunication_User
  customerCommunication_findUniqueUserOrThrow(where: customerCommunication_UserWhereUniqueInput!): customerCommunication_User
  customerCommunication_findFirstInteraction(where: customerCommunication_InteractionWhereInput, orderBy: [customerCommunication_InteractionOrderByWithRelationInput], cursor: customerCommunication_InteractionWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_InteractionScalarFieldEnum]): customerCommunication_Interaction
  customerCommunication_findFirstInteractionOrThrow(where: customerCommunication_InteractionWhereInput, orderBy: [customerCommunication_InteractionOrderByWithRelationInput], cursor: customerCommunication_InteractionWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_InteractionScalarFieldEnum]): customerCommunication_Interaction
  customerCommunication_findManyInteraction(where: customerCommunication_InteractionWhereInput, orderBy: [customerCommunication_InteractionOrderByWithRelationInput], cursor: customerCommunication_InteractionWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_InteractionScalarFieldEnum]): [customerCommunication_Interaction]!
  customerCommunication_aggregateInteraction(where: customerCommunication_InteractionWhereInput, orderBy: [customerCommunication_InteractionOrderByWithRelationInput], cursor: customerCommunication_InteractionWhereUniqueInput, take: Int, skip: Int): customerCommunication_AggregateInteraction!
  customerCommunication_groupByInteraction(where: customerCommunication_InteractionWhereInput, orderBy: [customerCommunication_InteractionOrderByWithAggregationInput], by: [customerCommunication_InteractionScalarFieldEnum]!, having: customerCommunication_InteractionScalarWhereWithAggregatesInput, take: Int, skip: Int): [customerCommunication_InteractionGroupByOutputType]!
  customerCommunication_findUniqueInteraction(where: customerCommunication_InteractionWhereUniqueInput!): customerCommunication_Interaction
  customerCommunication_findUniqueInteractionOrThrow(where: customerCommunication_InteractionWhereUniqueInput!): customerCommunication_Interaction
  customerCommunication_findFirstWidget(where: customerCommunication_WidgetWhereInput, orderBy: [customerCommunication_WidgetOrderByWithRelationInput], cursor: customerCommunication_WidgetWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_WidgetScalarFieldEnum]): customerCommunication_Widget
  customerCommunication_findFirstWidgetOrThrow(where: customerCommunication_WidgetWhereInput, orderBy: [customerCommunication_WidgetOrderByWithRelationInput], cursor: customerCommunication_WidgetWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_WidgetScalarFieldEnum]): customerCommunication_Widget
  customerCommunication_findManyWidget(where: customerCommunication_WidgetWhereInput, orderBy: [customerCommunication_WidgetOrderByWithRelationInput], cursor: customerCommunication_WidgetWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_WidgetScalarFieldEnum]): [customerCommunication_Widget]!
  customerCommunication_aggregateWidget(where: customerCommunication_WidgetWhereInput, orderBy: [customerCommunication_WidgetOrderByWithRelationInput], cursor: customerCommunication_WidgetWhereUniqueInput, take: Int, skip: Int): customerCommunication_AggregateWidget!
  customerCommunication_groupByWidget(where: customerCommunication_WidgetWhereInput, orderBy: [customerCommunication_WidgetOrderByWithAggregationInput], by: [customerCommunication_WidgetScalarFieldEnum]!, having: customerCommunication_WidgetScalarWhereWithAggregatesInput, take: Int, skip: Int): [customerCommunication_WidgetGroupByOutputType]!
  customerCommunication_findUniqueWidget(where: customerCommunication_WidgetWhereUniqueInput!): customerCommunication_Widget
  customerCommunication_findUniqueWidgetOrThrow(where: customerCommunication_WidgetWhereUniqueInput!): customerCommunication_Widget
  customerCommunication_findFirstFilter(where: customerCommunication_FilterWhereInput, orderBy: [customerCommunication_FilterOrderByWithRelationInput], cursor: customerCommunication_FilterWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_FilterScalarFieldEnum]): customerCommunication_Filter
  customerCommunication_findFirstFilterOrThrow(where: customerCommunication_FilterWhereInput, orderBy: [customerCommunication_FilterOrderByWithRelationInput], cursor: customerCommunication_FilterWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_FilterScalarFieldEnum]): customerCommunication_Filter
  customerCommunication_findManyFilter(where: customerCommunication_FilterWhereInput, orderBy: [customerCommunication_FilterOrderByWithRelationInput], cursor: customerCommunication_FilterWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_FilterScalarFieldEnum]): [customerCommunication_Filter]!
  customerCommunication_aggregateFilter(where: customerCommunication_FilterWhereInput, orderBy: [customerCommunication_FilterOrderByWithRelationInput], cursor: customerCommunication_FilterWhereUniqueInput, take: Int, skip: Int): customerCommunication_AggregateFilter!
  customerCommunication_groupByFilter(where: customerCommunication_FilterWhereInput, orderBy: [customerCommunication_FilterOrderByWithAggregationInput], by: [customerCommunication_FilterScalarFieldEnum]!, having: customerCommunication_FilterScalarWhereWithAggregatesInput, take: Int, skip: Int): [customerCommunication_FilterGroupByOutputType]!
  customerCommunication_findUniqueFilter(where: customerCommunication_FilterWhereUniqueInput!): customerCommunication_Filter
  customerCommunication_findUniqueFilterOrThrow(where: customerCommunication_FilterWhereUniqueInput!): customerCommunication_Filter
  customerCommunication_queryRaw(query: String!, parameters: [String]): [_Row!]!
  customerCommunication_queryRawJSON(query: String!, parameters: [String]): JSON
  weather_getCityById(config: weather_ConfigInput, id: [String!]): [weather_City]
  weather_getCityByName(config: weather_ConfigInput, country: String, name: String!): weather_City
  clientPortal_findFirstClient(where: clientPortal_ClientWhereInput, orderBy: [clientPortal_ClientOrderByWithRelationInput], cursor: clientPortal_ClientWhereUniqueInput, take: Int, skip: Int, distinct: [clientPortal_ClientScalarFieldEnum]): clientPortal_Client
  clientPortal_findFirstClientOrThrow(where: clientPortal_ClientWhereInput, orderBy: [clientPortal_ClientOrderByWithRelationInput], cursor: clientPortal_ClientWhereUniqueInput, take: Int, skip: Int, distinct: [clientPortal_ClientScalarFieldEnum]): clientPortal_Client
  clientPortal_findManyClient(where: clientPortal_ClientWhereInput, orderBy: [clientPortal_ClientOrderByWithRelationInput], cursor: clientPortal_ClientWhereUniqueInput, take: Int, skip: Int, distinct: [clientPortal_ClientScalarFieldEnum]): [clientPortal_Client]!
  clientPortal_aggregateClient(where: clientPortal_ClientWhereInput, orderBy: [clientPortal_ClientOrderByWithRelationInput], cursor: clientPortal_ClientWhereUniqueInput, take: Int, skip: Int): clientPortal_AggregateClient!
  clientPortal_groupByClient(where: clientPortal_ClientWhereInput, orderBy: [clientPortal_ClientOrderByWithAggregationInput], by: [clientPortal_ClientScalarFieldEnum]!, having: clientPortal_ClientScalarWhereWithAggregatesInput, take: Int, skip: Int): [clientPortal_ClientGroupByOutputType]!
  clientPortal_findUniqueClient(where: clientPortal_ClientWhereUniqueInput!): clientPortal_Client
  clientPortal_findUniqueClientOrThrow(where: clientPortal_ClientWhereUniqueInput!): clientPortal_Client
  clientPortal_findFirstService(where: clientPortal_ServiceWhereInput, orderBy: [clientPortal_ServiceOrderByWithRelationInput], cursor: clientPortal_ServiceWhereUniqueInput, take: Int, skip: Int, distinct: [clientPortal_ServiceScalarFieldEnum]): clientPortal_Service
  clientPortal_findFirstServiceOrThrow(where: clientPortal_ServiceWhereInput, orderBy: [clientPortal_ServiceOrderByWithRelationInput], cursor: clientPortal_ServiceWhereUniqueInput, take: Int, skip: Int, distinct: [clientPortal_ServiceScalarFieldEnum]): clientPortal_Service
  clientPortal_findManyService(where: clientPortal_ServiceWhereInput, orderBy: [clientPortal_ServiceOrderByWithRelationInput], cursor: clientPortal_ServiceWhereUniqueInput, take: Int, skip: Int, distinct: [clientPortal_ServiceScalarFieldEnum]): [clientPortal_Service]!
  clientPortal_aggregateService(where: clientPortal_ServiceWhereInput, orderBy: [clientPortal_ServiceOrderByWithRelationInput], cursor: clientPortal_ServiceWhereUniqueInput, take: Int, skip: Int): clientPortal_AggregateService!
  clientPortal_groupByService(where: clientPortal_ServiceWhereInput, orderBy: [clientPortal_ServiceOrderByWithAggregationInput], by: [clientPortal_ServiceScalarFieldEnum]!, having: clientPortal_ServiceScalarWhereWithAggregatesInput, take: Int, skip: Int): [clientPortal_ServiceGroupByOutputType]!
  clientPortal_findUniqueService(where: clientPortal_ServiceWhereUniqueInput!): clientPortal_Service
  clientPortal_findUniqueServiceOrThrow(where: clientPortal_ServiceWhereUniqueInput!): clientPortal_Service
  clientPortal_findFirstActivity(where: clientPortal_ActivityWhereInput, orderBy: [clientPortal_ActivityOrderByWithRelationInput], cursor: clientPortal_ActivityWhereUniqueInput, take: Int, skip: Int, distinct: [clientPortal_ActivityScalarFieldEnum]): clientPortal_Activity
  clientPortal_findFirstActivityOrThrow(where: clientPortal_ActivityWhereInput, orderBy: [clientPortal_ActivityOrderByWithRelationInput], cursor: clientPortal_ActivityWhereUniqueInput, take: Int, skip: Int, distinct: [clientPortal_ActivityScalarFieldEnum]): clientPortal_Activity
  clientPortal_findManyActivity(where: clientPortal_ActivityWhereInput, orderBy: [clientPortal_ActivityOrderByWithRelationInput], cursor: clientPortal_ActivityWhereUniqueInput, take: Int, skip: Int, distinct: [clientPortal_ActivityScalarFieldEnum]): [clientPortal_Activity]!
  clientPortal_aggregateActivity(where: clientPortal_ActivityWhereInput, orderBy: [clientPortal_ActivityOrderByWithRelationInput], cursor: clientPortal_ActivityWhereUniqueInput, take: Int, skip: Int): clientPortal_AggregateActivity!
  clientPortal_groupByActivity(where: clientPortal_ActivityWhereInput, orderBy: [clientPortal_ActivityOrderByWithAggregationInput], by: [clientPortal_ActivityScalarFieldEnum]!, having: clientPortal_ActivityScalarWhereWithAggregatesInput, take: Int, skip: Int): [clientPortal_ActivityGroupByOutputType]!
  clientPortal_findUniqueActivity(where: clientPortal_ActivityWhereUniqueInput!): clientPortal_Activity
  clientPortal_findUniqueActivityOrThrow(where: clientPortal_ActivityWhereUniqueInput!): clientPortal_Activity
  clientPortal_queryRaw(query: String!, parameters: [String]): [_Row!]!
  clientPortal_queryRawJSON(query: String!, parameters: [String]): JSON
  gpac_findFirstUser(where: gpac_UserWhereInput, orderBy: [gpac_UserOrderByWithRelationInput], cursor: gpac_UserWhereUniqueInput, take: Int, skip: Int, distinct: [gpac_UserScalarFieldEnum]): gpac_User
  gpac_findFirstUserOrThrow(where: gpac_UserWhereInput, orderBy: [gpac_UserOrderByWithRelationInput], cursor: gpac_UserWhereUniqueInput, take: Int, skip: Int, distinct: [gpac_UserScalarFieldEnum]): gpac_User
  gpac_findManyUser(where: gpac_UserWhereInput, orderBy: [gpac_UserOrderByWithRelationInput], cursor: gpac_UserWhereUniqueInput, take: Int, skip: Int, distinct: [gpac_UserScalarFieldEnum]): [gpac_User]!
  gpac_aggregateUser(where: gpac_UserWhereInput, orderBy: [gpac_UserOrderByWithRelationInput], cursor: gpac_UserWhereUniqueInput, take: Int, skip: Int): gpac_AggregateUser!
  gpac_groupByUser(where: gpac_UserWhereInput, orderBy: [gpac_UserOrderByWithAggregationInput], by: [gpac_UserScalarFieldEnum]!, having: gpac_UserScalarWhereWithAggregatesInput, take: Int, skip: Int): [gpac_UserGroupByOutputType]!
  gpac_findUniqueUser(where: gpac_UserWhereUniqueInput!): gpac_User
  gpac_findUniqueUserOrThrow(where: gpac_UserWhereUniqueInput!): gpac_User
  gpac_findFirstPolicy(where: gpac_PolicyWhereInput, orderBy: [gpac_PolicyOrderByWithRelationInput], cursor: gpac_PolicyWhereUniqueInput, take: Int, skip: Int, distinct: [gpac_PolicyScalarFieldEnum]): gpac_Policy
  gpac_findFirstPolicyOrThrow(where: gpac_PolicyWhereInput, orderBy: [gpac_PolicyOrderByWithRelationInput], cursor: gpac_PolicyWhereUniqueInput, take: Int, skip: Int, distinct: [gpac_PolicyScalarFieldEnum]): gpac_Policy
  gpac_findManyPolicy(where: gpac_PolicyWhereInput, orderBy: [gpac_PolicyOrderByWithRelationInput], cursor: gpac_PolicyWhereUniqueInput, take: Int, skip: Int, distinct: [gpac_PolicyScalarFieldEnum]): [gpac_Policy]!
  gpac_aggregatePolicy(where: gpac_PolicyWhereInput, orderBy: [gpac_PolicyOrderByWithRelationInput], cursor: gpac_PolicyWhereUniqueInput, take: Int, skip: Int): gpac_AggregatePolicy!
  gpac_groupByPolicy(where: gpac_PolicyWhereInput, orderBy: [gpac_PolicyOrderByWithAggregationInput], by: [gpac_PolicyScalarFieldEnum]!, having: gpac_PolicyScalarWhereWithAggregatesInput, take: Int, skip: Int): [gpac_PolicyGroupByOutputType]!
  gpac_findUniquePolicy(where: gpac_PolicyWhereUniqueInput!): gpac_Policy
  gpac_findUniquePolicyOrThrow(where: gpac_PolicyWhereUniqueInput!): gpac_Policy
  gpac_findFirstAdminAction(where: gpac_AdminActionWhereInput, orderBy: [gpac_AdminActionOrderByWithRelationInput], cursor: gpac_AdminActionWhereUniqueInput, take: Int, skip: Int, distinct: [gpac_AdminActionScalarFieldEnum]): gpac_AdminAction
  gpac_findFirstAdminActionOrThrow(where: gpac_AdminActionWhereInput, orderBy: [gpac_AdminActionOrderByWithRelationInput], cursor: gpac_AdminActionWhereUniqueInput, take: Int, skip: Int, distinct: [gpac_AdminActionScalarFieldEnum]): gpac_AdminAction
  gpac_findManyAdminAction(where: gpac_AdminActionWhereInput, orderBy: [gpac_AdminActionOrderByWithRelationInput], cursor: gpac_AdminActionWhereUniqueInput, take: Int, skip: Int, distinct: [gpac_AdminActionScalarFieldEnum]): [gpac_AdminAction]!
  gpac_aggregateAdminAction(where: gpac_AdminActionWhereInput, orderBy: [gpac_AdminActionOrderByWithRelationInput], cursor: gpac_AdminActionWhereUniqueInput, take: Int, skip: Int): gpac_AggregateAdminAction!
  gpac_groupByAdminAction(where: gpac_AdminActionWhereInput, orderBy: [gpac_AdminActionOrderByWithAggregationInput], by: [gpac_AdminActionScalarFieldEnum]!, having: gpac_AdminActionScalarWhereWithAggregatesInput, take: Int, skip: Int): [gpac_AdminActionGroupByOutputType]!
  gpac_findUniqueAdminAction(where: gpac_AdminActionWhereUniqueInput!): gpac_AdminAction
  gpac_findUniqueAdminActionOrThrow(where: gpac_AdminActionWhereUniqueInput!): gpac_AdminAction
  gpac_queryRaw(query: String!, parameters: [String]): [_Row!]!
  gpac_queryRawJSON(query: String!, parameters: [String]): JSON
  guardianOnline_findFirstUser(where: guardianOnline_UserWhereInput, orderBy: [guardianOnline_UserOrderByWithRelationInput], cursor: guardianOnline_UserWhereUniqueInput, take: Int, skip: Int, distinct: [guardianOnline_UserScalarFieldEnum]): guardianOnline_User
  guardianOnline_findFirstUserOrThrow(where: guardianOnline_UserWhereInput, orderBy: [guardianOnline_UserOrderByWithRelationInput], cursor: guardianOnline_UserWhereUniqueInput, take: Int, skip: Int, distinct: [guardianOnline_UserScalarFieldEnum]): guardianOnline_User
  guardianOnline_findManyUser(where: guardianOnline_UserWhereInput, orderBy: [guardianOnline_UserOrderByWithRelationInput], cursor: guardianOnline_UserWhereUniqueInput, take: Int, skip: Int, distinct: [guardianOnline_UserScalarFieldEnum]): [guardianOnline_User]!
  guardianOnline_aggregateUser(where: guardianOnline_UserWhereInput, orderBy: [guardianOnline_UserOrderByWithRelationInput], cursor: guardianOnline_UserWhereUniqueInput, take: Int, skip: Int): guardianOnline_AggregateUser!
  guardianOnline_groupByUser(where: guardianOnline_UserWhereInput, orderBy: [guardianOnline_UserOrderByWithAggregationInput], by: [guardianOnline_UserScalarFieldEnum]!, having: guardianOnline_UserScalarWhereWithAggregatesInput, take: Int, skip: Int): [guardianOnline_UserGroupByOutputType]!
  guardianOnline_findUniqueUser(where: guardianOnline_UserWhereUniqueInput!): guardianOnline_User
  guardianOnline_findUniqueUserOrThrow(where: guardianOnline_UserWhereUniqueInput!): guardianOnline_User
  guardianOnline_findFirstFeature(where: guardianOnline_FeatureWhereInput, orderBy: [guardianOnline_FeatureOrderByWithRelationInput], cursor: guardianOnline_FeatureWhereUniqueInput, take: Int, skip: Int, distinct: [guardianOnline_FeatureScalarFieldEnum]): guardianOnline_Feature
  guardianOnline_findFirstFeatureOrThrow(where: guardianOnline_FeatureWhereInput, orderBy: [guardianOnline_FeatureOrderByWithRelationInput], cursor: guardianOnline_FeatureWhereUniqueInput, take: Int, skip: Int, distinct: [guardianOnline_FeatureScalarFieldEnum]): guardianOnline_Feature
  guardianOnline_findManyFeature(where: guardianOnline_FeatureWhereInput, orderBy: [guardianOnline_FeatureOrderByWithRelationInput], cursor: guardianOnline_FeatureWhereUniqueInput, take: Int, skip: Int, distinct: [guardianOnline_FeatureScalarFieldEnum]): [guardianOnline_Feature]!
  guardianOnline_aggregateFeature(where: guardianOnline_FeatureWhereInput, orderBy: [guardianOnline_FeatureOrderByWithRelationInput], cursor: guardianOnline_FeatureWhereUniqueInput, take: Int, skip: Int): guardianOnline_AggregateFeature!
  guardianOnline_groupByFeature(where: guardianOnline_FeatureWhereInput, orderBy: [guardianOnline_FeatureOrderByWithAggregationInput], by: [guardianOnline_FeatureScalarFieldEnum]!, having: guardianOnline_FeatureScalarWhereWithAggregatesInput, take: Int, skip: Int): [guardianOnline_FeatureGroupByOutputType]!
  guardianOnline_findUniqueFeature(where: guardianOnline_FeatureWhereUniqueInput!): guardianOnline_Feature
  guardianOnline_findUniqueFeatureOrThrow(where: guardianOnline_FeatureWhereUniqueInput!): guardianOnline_Feature
  guardianOnline_findFirstUserLog(where: guardianOnline_UserLogWhereInput, orderBy: [guardianOnline_UserLogOrderByWithRelationInput], cursor: guardianOnline_UserLogWhereUniqueInput, take: Int, skip: Int, distinct: [guardianOnline_UserLogScalarFieldEnum]): guardianOnline_UserLog
  guardianOnline_findFirstUserLogOrThrow(where: guardianOnline_UserLogWhereInput, orderBy: [guardianOnline_UserLogOrderByWithRelationInput], cursor: guardianOnline_UserLogWhereUniqueInput, take: Int, skip: Int, distinct: [guardianOnline_UserLogScalarFieldEnum]): guardianOnline_UserLog
  guardianOnline_findManyUserLog(where: guardianOnline_UserLogWhereInput, orderBy: [guardianOnline_UserLogOrderByWithRelationInput], cursor: guardianOnline_UserLogWhereUniqueInput, take: Int, skip: Int, distinct: [guardianOnline_UserLogScalarFieldEnum]): [guardianOnline_UserLog]!
  guardianOnline_aggregateUserLog(where: guardianOnline_UserLogWhereInput, orderBy: [guardianOnline_UserLogOrderByWithRelationInput], cursor: guardianOnline_UserLogWhereUniqueInput, take: Int, skip: Int): guardianOnline_AggregateUserLog!
  guardianOnline_groupByUserLog(where: guardianOnline_UserLogWhereInput, orderBy: [guardianOnline_UserLogOrderByWithAggregationInput], by: [guardianOnline_UserLogScalarFieldEnum]!, having: guardianOnline_UserLogScalarWhereWithAggregatesInput, take: Int, skip: Int): [guardianOnline_UserLogGroupByOutputType]!
  guardianOnline_findUniqueUserLog(where: guardianOnline_UserLogWhereUniqueInput!): guardianOnline_UserLog
  guardianOnline_findUniqueUserLogOrThrow(where: guardianOnline_UserLogWhereUniqueInput!): guardianOnline_UserLog
  guardianOnline_queryRaw(query: String!, parameters: [String]): [_Row!]!
  guardianOnline_queryRawJSON(query: String!, parameters: [String]): JSON
  livingBalanceSheet_findFirstUser(where: livingBalanceSheet_UserWhereInput, orderBy: [livingBalanceSheet_UserOrderByWithRelationInput], cursor: livingBalanceSheet_UserWhereUniqueInput, take: Int, skip: Int, distinct: [livingBalanceSheet_UserScalarFieldEnum]): livingBalanceSheet_User
  livingBalanceSheet_findFirstUserOrThrow(where: livingBalanceSheet_UserWhereInput, orderBy: [livingBalanceSheet_UserOrderByWithRelationInput], cursor: livingBalanceSheet_UserWhereUniqueInput, take: Int, skip: Int, distinct: [livingBalanceSheet_UserScalarFieldEnum]): livingBalanceSheet_User
  livingBalanceSheet_findManyUser(where: livingBalanceSheet_UserWhereInput, orderBy: [livingBalanceSheet_UserOrderByWithRelationInput], cursor: livingBalanceSheet_UserWhereUniqueInput, take: Int, skip: Int, distinct: [livingBalanceSheet_UserScalarFieldEnum]): [livingBalanceSheet_User]!
  livingBalanceSheet_aggregateUser(where: livingBalanceSheet_UserWhereInput, orderBy: [livingBalanceSheet_UserOrderByWithRelationInput], cursor: livingBalanceSheet_UserWhereUniqueInput, take: Int, skip: Int): livingBalanceSheet_AggregateUser!
  livingBalanceSheet_groupByUser(where: livingBalanceSheet_UserWhereInput, orderBy: [livingBalanceSheet_UserOrderByWithAggregationInput], by: [livingBalanceSheet_UserScalarFieldEnum]!, having: livingBalanceSheet_UserScalarWhereWithAggregatesInput, take: Int, skip: Int): [livingBalanceSheet_UserGroupByOutputType]!
  livingBalanceSheet_findUniqueUser(where: livingBalanceSheet_UserWhereUniqueInput!): livingBalanceSheet_User
  livingBalanceSheet_findUniqueUserOrThrow(where: livingBalanceSheet_UserWhereUniqueInput!): livingBalanceSheet_User
  livingBalanceSheet_findFirstAsset(where: livingBalanceSheet_AssetWhereInput, orderBy: [livingBalanceSheet_AssetOrderByWithRelationInput], cursor: livingBalanceSheet_AssetWhereUniqueInput, take: Int, skip: Int, distinct: [livingBalanceSheet_AssetScalarFieldEnum]): livingBalanceSheet_Asset
  livingBalanceSheet_findFirstAssetOrThrow(where: livingBalanceSheet_AssetWhereInput, orderBy: [livingBalanceSheet_AssetOrderByWithRelationInput], cursor: livingBalanceSheet_AssetWhereUniqueInput, take: Int, skip: Int, distinct: [livingBalanceSheet_AssetScalarFieldEnum]): livingBalanceSheet_Asset
  livingBalanceSheet_findManyAsset(where: livingBalanceSheet_AssetWhereInput, orderBy: [livingBalanceSheet_AssetOrderByWithRelationInput], cursor: livingBalanceSheet_AssetWhereUniqueInput, take: Int, skip: Int, distinct: [livingBalanceSheet_AssetScalarFieldEnum]): [livingBalanceSheet_Asset]!
  livingBalanceSheet_aggregateAsset(where: livingBalanceSheet_AssetWhereInput, orderBy: [livingBalanceSheet_AssetOrderByWithRelationInput], cursor: livingBalanceSheet_AssetWhereUniqueInput, take: Int, skip: Int): livingBalanceSheet_AggregateAsset!
  livingBalanceSheet_groupByAsset(where: livingBalanceSheet_AssetWhereInput, orderBy: [livingBalanceSheet_AssetOrderByWithAggregationInput], by: [livingBalanceSheet_AssetScalarFieldEnum]!, having: livingBalanceSheet_AssetScalarWhereWithAggregatesInput, take: Int, skip: Int): [livingBalanceSheet_AssetGroupByOutputType]!
  livingBalanceSheet_findUniqueAsset(where: livingBalanceSheet_AssetWhereUniqueInput!): livingBalanceSheet_Asset
  livingBalanceSheet_findUniqueAssetOrThrow(where: livingBalanceSheet_AssetWhereUniqueInput!): livingBalanceSheet_Asset
  livingBalanceSheet_findFirstLiability(where: livingBalanceSheet_LiabilityWhereInput, orderBy: [livingBalanceSheet_LiabilityOrderByWithRelationInput], cursor: livingBalanceSheet_LiabilityWhereUniqueInput, take: Int, skip: Int, distinct: [livingBalanceSheet_LiabilityScalarFieldEnum]): livingBalanceSheet_Liability
  livingBalanceSheet_findFirstLiabilityOrThrow(where: livingBalanceSheet_LiabilityWhereInput, orderBy: [livingBalanceSheet_LiabilityOrderByWithRelationInput], cursor: livingBalanceSheet_LiabilityWhereUniqueInput, take: Int, skip: Int, distinct: [livingBalanceSheet_LiabilityScalarFieldEnum]): livingBalanceSheet_Liability
  livingBalanceSheet_findManyLiability(where: livingBalanceSheet_LiabilityWhereInput, orderBy: [livingBalanceSheet_LiabilityOrderByWithRelationInput], cursor: livingBalanceSheet_LiabilityWhereUniqueInput, take: Int, skip: Int, distinct: [livingBalanceSheet_LiabilityScalarFieldEnum]): [livingBalanceSheet_Liability]!
  livingBalanceSheet_aggregateLiability(where: livingBalanceSheet_LiabilityWhereInput, orderBy: [livingBalanceSheet_LiabilityOrderByWithRelationInput], cursor: livingBalanceSheet_LiabilityWhereUniqueInput, take: Int, skip: Int): livingBalanceSheet_AggregateLiability!
  livingBalanceSheet_groupByLiability(where: livingBalanceSheet_LiabilityWhereInput, orderBy: [livingBalanceSheet_LiabilityOrderByWithAggregationInput], by: [livingBalanceSheet_LiabilityScalarFieldEnum]!, having: livingBalanceSheet_LiabilityScalarWhereWithAggregatesInput, take: Int, skip: Int): [livingBalanceSheet_LiabilityGroupByOutputType]!
  livingBalanceSheet_findUniqueLiability(where: livingBalanceSheet_LiabilityWhereUniqueInput!): livingBalanceSheet_Liability
  livingBalanceSheet_findUniqueLiabilityOrThrow(where: livingBalanceSheet_LiabilityWhereUniqueInput!): livingBalanceSheet_Liability
  livingBalanceSheet_findFirstFinancialGoal(where: livingBalanceSheet_FinancialGoalWhereInput, orderBy: [livingBalanceSheet_FinancialGoalOrderByWithRelationInput], cursor: livingBalanceSheet_FinancialGoalWhereUniqueInput, take: Int, skip: Int, distinct: [livingBalanceSheet_FinancialGoalScalarFieldEnum]): livingBalanceSheet_FinancialGoal
  livingBalanceSheet_findFirstFinancialGoalOrThrow(where: livingBalanceSheet_FinancialGoalWhereInput, orderBy: [livingBalanceSheet_FinancialGoalOrderByWithRelationInput], cursor: livingBalanceSheet_FinancialGoalWhereUniqueInput, take: Int, skip: Int, distinct: [livingBalanceSheet_FinancialGoalScalarFieldEnum]): livingBalanceSheet_FinancialGoal
  livingBalanceSheet_findManyFinancialGoal(where: livingBalanceSheet_FinancialGoalWhereInput, orderBy: [livingBalanceSheet_FinancialGoalOrderByWithRelationInput], cursor: livingBalanceSheet_FinancialGoalWhereUniqueInput, take: Int, skip: Int, distinct: [livingBalanceSheet_FinancialGoalScalarFieldEnum]): [livingBalanceSheet_FinancialGoal]!
  livingBalanceSheet_aggregateFinancialGoal(where: livingBalanceSheet_FinancialGoalWhereInput, orderBy: [livingBalanceSheet_FinancialGoalOrderByWithRelationInput], cursor: livingBalanceSheet_FinancialGoalWhereUniqueInput, take: Int, skip: Int): livingBalanceSheet_AggregateFinancialGoal!
  livingBalanceSheet_groupByFinancialGoal(where: livingBalanceSheet_FinancialGoalWhereInput, orderBy: [livingBalanceSheet_FinancialGoalOrderByWithAggregationInput], by: [livingBalanceSheet_FinancialGoalScalarFieldEnum]!, having: livingBalanceSheet_FinancialGoalScalarWhereWithAggregatesInput, take: Int, skip: Int): [livingBalanceSheet_FinancialGoalGroupByOutputType]!
  livingBalanceSheet_findUniqueFinancialGoal(where: livingBalanceSheet_FinancialGoalWhereUniqueInput!): livingBalanceSheet_FinancialGoal
  livingBalanceSheet_findUniqueFinancialGoalOrThrow(where: livingBalanceSheet_FinancialGoalWhereUniqueInput!): livingBalanceSheet_FinancialGoal
  livingBalanceSheet_queryRaw(query: String!, parameters: [String]): [_Row!]!
  livingBalanceSheet_queryRawJSON(query: String!, parameters: [String]): JSON
  smartOffice_findFirstUser(where: smartOffice_UserWhereInput, orderBy: [smartOffice_UserOrderByWithRelationInput], cursor: smartOffice_UserWhereUniqueInput, take: Int, skip: Int, distinct: [smartOffice_UserScalarFieldEnum]): smartOffice_User
  smartOffice_findFirstUserOrThrow(where: smartOffice_UserWhereInput, orderBy: [smartOffice_UserOrderByWithRelationInput], cursor: smartOffice_UserWhereUniqueInput, take: Int, skip: Int, distinct: [smartOffice_UserScalarFieldEnum]): smartOffice_User
  smartOffice_findManyUser(where: smartOffice_UserWhereInput, orderBy: [smartOffice_UserOrderByWithRelationInput], cursor: smartOffice_UserWhereUniqueInput, take: Int, skip: Int, distinct: [smartOffice_UserScalarFieldEnum]): [smartOffice_User]!
  smartOffice_aggregateUser(where: smartOffice_UserWhereInput, orderBy: [smartOffice_UserOrderByWithRelationInput], cursor: smartOffice_UserWhereUniqueInput, take: Int, skip: Int): smartOffice_AggregateUser!
  smartOffice_groupByUser(where: smartOffice_UserWhereInput, orderBy: [smartOffice_UserOrderByWithAggregationInput], by: [smartOffice_UserScalarFieldEnum]!, having: smartOffice_UserScalarWhereWithAggregatesInput, take: Int, skip: Int): [smartOffice_UserGroupByOutputType]!
  smartOffice_findUniqueUser(where: smartOffice_UserWhereUniqueInput!): smartOffice_User
  smartOffice_findUniqueUserOrThrow(where: smartOffice_UserWhereUniqueInput!): smartOffice_User
  smartOffice_findFirstClient(where: smartOffice_ClientWhereInput, orderBy: [smartOffice_ClientOrderByWithRelationInput], cursor: smartOffice_ClientWhereUniqueInput, take: Int, skip: Int, distinct: [smartOffice_ClientScalarFieldEnum]): smartOffice_Client
  smartOffice_findFirstClientOrThrow(where: smartOffice_ClientWhereInput, orderBy: [smartOffice_ClientOrderByWithRelationInput], cursor: smartOffice_ClientWhereUniqueInput, take: Int, skip: Int, distinct: [smartOffice_ClientScalarFieldEnum]): smartOffice_Client
  smartOffice_findManyClient(where: smartOffice_ClientWhereInput, orderBy: [smartOffice_ClientOrderByWithRelationInput], cursor: smartOffice_ClientWhereUniqueInput, take: Int, skip: Int, distinct: [smartOffice_ClientScalarFieldEnum]): [smartOffice_Client]!
  smartOffice_aggregateClient(where: smartOffice_ClientWhereInput, orderBy: [smartOffice_ClientOrderByWithRelationInput], cursor: smartOffice_ClientWhereUniqueInput, take: Int, skip: Int): smartOffice_AggregateClient!
  smartOffice_groupByClient(where: smartOffice_ClientWhereInput, orderBy: [smartOffice_ClientOrderByWithAggregationInput], by: [smartOffice_ClientScalarFieldEnum]!, having: smartOffice_ClientScalarWhereWithAggregatesInput, take: Int, skip: Int): [smartOffice_ClientGroupByOutputType]!
  smartOffice_findUniqueClient(where: smartOffice_ClientWhereUniqueInput!): smartOffice_Client
  smartOffice_findUniqueClientOrThrow(where: smartOffice_ClientWhereUniqueInput!): smartOffice_Client
  smartOffice_findFirstTask(where: smartOffice_TaskWhereInput, orderBy: [smartOffice_TaskOrderByWithRelationInput], cursor: smartOffice_TaskWhereUniqueInput, take: Int, skip: Int, distinct: [smartOffice_TaskScalarFieldEnum]): smartOffice_Task
  smartOffice_findFirstTaskOrThrow(where: smartOffice_TaskWhereInput, orderBy: [smartOffice_TaskOrderByWithRelationInput], cursor: smartOffice_TaskWhereUniqueInput, take: Int, skip: Int, distinct: [smartOffice_TaskScalarFieldEnum]): smartOffice_Task
  smartOffice_findManyTask(where: smartOffice_TaskWhereInput, orderBy: [smartOffice_TaskOrderByWithRelationInput], cursor: smartOffice_TaskWhereUniqueInput, take: Int, skip: Int, distinct: [smartOffice_TaskScalarFieldEnum]): [smartOffice_Task]!
  smartOffice_aggregateTask(where: smartOffice_TaskWhereInput, orderBy: [smartOffice_TaskOrderByWithRelationInput], cursor: smartOffice_TaskWhereUniqueInput, take: Int, skip: Int): smartOffice_AggregateTask!
  smartOffice_groupByTask(where: smartOffice_TaskWhereInput, orderBy: [smartOffice_TaskOrderByWithAggregationInput], by: [smartOffice_TaskScalarFieldEnum]!, having: smartOffice_TaskScalarWhereWithAggregatesInput, take: Int, skip: Int): [smartOffice_TaskGroupByOutputType]!
  smartOffice_findUniqueTask(where: smartOffice_TaskWhereUniqueInput!): smartOffice_Task
  smartOffice_findUniqueTaskOrThrow(where: smartOffice_TaskWhereUniqueInput!): smartOffice_Task
  smartOffice_findFirstSale(where: smartOffice_SaleWhereInput, orderBy: [smartOffice_SaleOrderByWithRelationInput], cursor: smartOffice_SaleWhereUniqueInput, take: Int, skip: Int, distinct: [smartOffice_SaleScalarFieldEnum]): smartOffice_Sale
  smartOffice_findFirstSaleOrThrow(where: smartOffice_SaleWhereInput, orderBy: [smartOffice_SaleOrderByWithRelationInput], cursor: smartOffice_SaleWhereUniqueInput, take: Int, skip: Int, distinct: [smartOffice_SaleScalarFieldEnum]): smartOffice_Sale
  smartOffice_findManySale(where: smartOffice_SaleWhereInput, orderBy: [smartOffice_SaleOrderByWithRelationInput], cursor: smartOffice_SaleWhereUniqueInput, take: Int, skip: Int, distinct: [smartOffice_SaleScalarFieldEnum]): [smartOffice_Sale]!
  smartOffice_aggregateSale(where: smartOffice_SaleWhereInput, orderBy: [smartOffice_SaleOrderByWithRelationInput], cursor: smartOffice_SaleWhereUniqueInput, take: Int, skip: Int): smartOffice_AggregateSale!
  smartOffice_groupBySale(where: smartOffice_SaleWhereInput, orderBy: [smartOffice_SaleOrderByWithAggregationInput], by: [smartOffice_SaleScalarFieldEnum]!, having: smartOffice_SaleScalarWhereWithAggregatesInput, take: Int, skip: Int): [smartOffice_SaleGroupByOutputType]!
  smartOffice_findUniqueSale(where: smartOffice_SaleWhereUniqueInput!): smartOffice_Sale
  smartOffice_findUniqueSaleOrThrow(where: smartOffice_SaleWhereUniqueInput!): smartOffice_Sale
  smartOffice_queryRaw(query: String!, parameters: [String]): [_Row!]!
  smartOffice_queryRawJSON(query: String!, parameters: [String]): JSON
}

type countries_State {
  code: String
  country: countries_Country!
  name: String!
  _join: Query!
}

input countries_StringQueryOperatorInput {
  eq: String
  in: [String!]
  ne: String
  nin: [String!]
  regex: String
}

type countries_Subdivision {
  code: ID!
  emoji: String
  name: String!
  _join: Query!
}

input customerCommunication_NestedStringFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: customerCommunication_NestedStringFilter
}

input customerCommunication_StringFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: customerCommunication_NestedStringFilter
}

input customerCommunication_NestedStringNullableFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: customerCommunication_NestedStringNullableFilter
}

input customerCommunication_StringNullableFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: customerCommunication_NestedStringNullableFilter
}

input customerCommunication_NestedIntNullableFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: customerCommunication_NestedIntNullableFilter
}

input customerCommunication_IntNullableFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: customerCommunication_NestedIntNullableFilter
}

input customerCommunication_NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: customerCommunication_NestedDateTimeFilter
}

input customerCommunication_DateTimeFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: customerCommunication_NestedDateTimeFilter
}

input customerCommunication_NestedDateTimeNullableFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: customerCommunication_NestedDateTimeNullableFilter
}

input customerCommunication_DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: customerCommunication_NestedDateTimeNullableFilter
}

enum customerCommunication_UserType {
  CALL_CENTER_REP
  CUSTOMER
  FINANCIAL_REP
}

input customerCommunication_EnumUserTypeFilter {
  equals: customerCommunication_UserType
  in: [customerCommunication_UserType]
  notIn: [customerCommunication_UserType]
  not: customerCommunication_UserType
}

enum customerCommunication_InteractionType {
  CALL
  CHAT
  EMAIL
  WEB_USAGE
  IVR_HUGO_USAGE
  OUTBOUND_CORRESPONDENCE
  MARKETING_MATERIAL
  TEXT
}

input customerCommunication_EnumInteractionTypeFilter {
  equals: customerCommunication_InteractionType
  in: [customerCommunication_InteractionType]
  notIn: [customerCommunication_InteractionType]
  not: customerCommunication_InteractionType
}

input customerCommunication_WidgetWhereInput {
  AND: customerCommunication_WidgetWhereInput
  OR: [customerCommunication_WidgetWhereInput]
  NOT: customerCommunication_WidgetWhereInput
  id: customerCommunication_StringFilter
  embeddedIn: customerCommunication_StringFilter
  interactions: customerCommunication_InteractionListRelationFilter
}

input customerCommunication_WidgetRelationFilter {
  is: customerCommunication_WidgetWhereInput
  isNot: customerCommunication_WidgetWhereInput
}

input customerCommunication_InteractionWhereInput {
  AND: customerCommunication_InteractionWhereInput
  OR: [customerCommunication_InteractionWhereInput]
  NOT: customerCommunication_InteractionWhereInput
  id: customerCommunication_StringFilter
  interactionType: customerCommunication_EnumInteractionTypeFilter
  content: customerCommunication_StringFilter
  timestamp: customerCommunication_DateTimeFilter
  userId: customerCommunication_StringFilter
  widgetId: customerCommunication_StringNullableFilter
  user: customerCommunication_UserRelationFilter
  Widget: customerCommunication_WidgetRelationFilter
}

input customerCommunication_InteractionListRelationFilter {
  every: customerCommunication_InteractionWhereInput
  some: customerCommunication_InteractionWhereInput
  none: customerCommunication_InteractionWhereInput
}

input customerCommunication_AccountListRelationFilter {
  every: customerCommunication_AccountWhereInput
  some: customerCommunication_AccountWhereInput
  none: customerCommunication_AccountWhereInput
}

input customerCommunication_SessionWhereInput {
  AND: customerCommunication_SessionWhereInput
  OR: [customerCommunication_SessionWhereInput]
  NOT: customerCommunication_SessionWhereInput
  id: customerCommunication_StringFilter
  sessionToken: customerCommunication_StringFilter
  userId: customerCommunication_StringFilter
  expires: customerCommunication_DateTimeFilter
  user: customerCommunication_UserRelationFilter
}

input customerCommunication_SessionListRelationFilter {
  every: customerCommunication_SessionWhereInput
  some: customerCommunication_SessionWhereInput
  none: customerCommunication_SessionWhereInput
}

input customerCommunication_UserWhereInput {
  AND: customerCommunication_UserWhereInput
  OR: [customerCommunication_UserWhereInput]
  NOT: customerCommunication_UserWhereInput
  id: customerCommunication_StringFilter
  name: customerCommunication_StringNullableFilter
  email: customerCommunication_StringNullableFilter
  emailVerified: customerCommunication_DateTimeNullableFilter
  image: customerCommunication_StringNullableFilter
  createdAt: customerCommunication_DateTimeFilter
  updatedAt: customerCommunication_DateTimeFilter
  userType: customerCommunication_EnumUserTypeFilter
  stripeCustomerId: customerCommunication_StringNullableFilter
  stripeSubscriptionId: customerCommunication_StringNullableFilter
  stripePriceId: customerCommunication_StringNullableFilter
  stripeCurrentPeriodEnd: customerCommunication_DateTimeNullableFilter
  interactions: customerCommunication_InteractionListRelationFilter
  accounts: customerCommunication_AccountListRelationFilter
  sessions: customerCommunication_SessionListRelationFilter
}

input customerCommunication_UserRelationFilter {
  is: customerCommunication_UserWhereInput
  isNot: customerCommunication_UserWhereInput
}

input customerCommunication_AccountWhereInput {
  AND: customerCommunication_AccountWhereInput
  OR: [customerCommunication_AccountWhereInput]
  NOT: customerCommunication_AccountWhereInput
  id: customerCommunication_StringFilter
  userId: customerCommunication_StringFilter
  type: customerCommunication_StringFilter
  provider: customerCommunication_StringFilter
  providerAccountId: customerCommunication_StringFilter
  refresh_token: customerCommunication_StringNullableFilter
  access_token: customerCommunication_StringNullableFilter
  expires_at: customerCommunication_IntNullableFilter
  token_type: customerCommunication_StringNullableFilter
  scope: customerCommunication_StringNullableFilter
  id_token: customerCommunication_StringNullableFilter
  session_state: customerCommunication_StringNullableFilter
  createdAt: customerCommunication_DateTimeFilter
  updatedAt: customerCommunication_DateTimeFilter
  user: customerCommunication_UserRelationFilter
}

enum customerCommunication_SortOrder {
  asc
  desc
}

input customerCommunication_InteractionOrderByRelationAggregateInput {
  _count: customerCommunication_SortOrder
}

input customerCommunication_AccountOrderByRelationAggregateInput {
  _count: customerCommunication_SortOrder
}

input customerCommunication_SessionOrderByRelationAggregateInput {
  _count: customerCommunication_SortOrder
}

input customerCommunication_UserOrderByWithRelationInput {
  id: customerCommunication_SortOrder
  name: customerCommunication_SortOrder
  email: customerCommunication_SortOrder
  emailVerified: customerCommunication_SortOrder
  image: customerCommunication_SortOrder
  createdAt: customerCommunication_SortOrder
  updatedAt: customerCommunication_SortOrder
  userType: customerCommunication_SortOrder
  stripeCustomerId: customerCommunication_SortOrder
  stripeSubscriptionId: customerCommunication_SortOrder
  stripePriceId: customerCommunication_SortOrder
  stripeCurrentPeriodEnd: customerCommunication_SortOrder
  interactions: customerCommunication_InteractionOrderByRelationAggregateInput
  accounts: customerCommunication_AccountOrderByRelationAggregateInput
  sessions: customerCommunication_SessionOrderByRelationAggregateInput
}

input customerCommunication_AccountOrderByWithRelationInput {
  id: customerCommunication_SortOrder
  userId: customerCommunication_SortOrder
  type: customerCommunication_SortOrder
  provider: customerCommunication_SortOrder
  providerAccountId: customerCommunication_SortOrder
  refresh_token: customerCommunication_SortOrder
  access_token: customerCommunication_SortOrder
  expires_at: customerCommunication_SortOrder
  token_type: customerCommunication_SortOrder
  scope: customerCommunication_SortOrder
  id_token: customerCommunication_SortOrder
  session_state: customerCommunication_SortOrder
  createdAt: customerCommunication_SortOrder
  updatedAt: customerCommunication_SortOrder
  user: customerCommunication_UserOrderByWithRelationInput
}

input customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput {
  provider: String!
  providerAccountId: String!
}

input customerCommunication_AccountWhereUniqueInput {
  id: String
  provider_providerAccountId: customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput
}

enum customerCommunication_AccountScalarFieldEnum {
  id
  userId
  type
  provider
  providerAccountId
  refresh_token
  access_token
  expires_at
  token_type
  scope
  id_token
  session_state
  createdAt
  updatedAt
}

input customerCommunication_WidgetOrderByWithRelationInput {
  id: customerCommunication_SortOrder
  embeddedIn: customerCommunication_SortOrder
  interactions: customerCommunication_InteractionOrderByRelationAggregateInput
}

input customerCommunication_InteractionOrderByWithRelationInput {
  id: customerCommunication_SortOrder
  interactionType: customerCommunication_SortOrder
  content: customerCommunication_SortOrder
  timestamp: customerCommunication_SortOrder
  userId: customerCommunication_SortOrder
  widgetId: customerCommunication_SortOrder
  user: customerCommunication_UserOrderByWithRelationInput
  Widget: customerCommunication_WidgetOrderByWithRelationInput
}

input customerCommunication_InteractionWhereUniqueInput {
  id: String
}

enum customerCommunication_InteractionScalarFieldEnum {
  id
  interactionType
  content
  timestamp
  userId
  widgetId
}

type customerCommunication_WidgetCountOutputType {
  interactions: Int!
  _join: Query!
}

type customerCommunication_Widget {
  id: String!
  embeddedIn: String!
  interactions(where: customerCommunication_InteractionWhereInput, orderBy: [customerCommunication_InteractionOrderByWithRelationInput], cursor: customerCommunication_InteractionWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_InteractionScalarFieldEnum]): [customerCommunication_Interaction]
  _count: customerCommunication_WidgetCountOutputType!
  _join: Query!
}

type customerCommunication_Interaction {
  id: String!
  interactionType: customerCommunication_InteractionType!
  content: String!
  timestamp: DateTime!
  userId: String!
  widgetId: String
  user: customerCommunication_User!
  Widget: customerCommunication_Widget
  _join: Query!
}

input customerCommunication_SessionOrderByWithRelationInput {
  id: customerCommunication_SortOrder
  sessionToken: customerCommunication_SortOrder
  userId: customerCommunication_SortOrder
  expires: customerCommunication_SortOrder
  user: customerCommunication_UserOrderByWithRelationInput
}

input customerCommunication_SessionWhereUniqueInput {
  id: String
  sessionToken: String
}

enum customerCommunication_SessionScalarFieldEnum {
  id
  sessionToken
  userId
  expires
}

type customerCommunication_Session {
  id: String!
  sessionToken: String!
  userId: String!
  expires: DateTime!
  user: customerCommunication_User!
  _join: Query!
}

type customerCommunication_UserCountOutputType {
  interactions: Int!
  accounts: Int!
  sessions: Int!
  _join: Query!
}

type customerCommunication_User {
  id: String!
  name: String
  email: String
  emailVerified: DateTime
  image: String
  createdAt: DateTime!
  updatedAt: DateTime!
  userType: customerCommunication_UserType!
  stripeCustomerId: String
  stripeSubscriptionId: String
  stripePriceId: String
  stripeCurrentPeriodEnd: DateTime
  interactions(where: customerCommunication_InteractionWhereInput, orderBy: [customerCommunication_InteractionOrderByWithRelationInput], cursor: customerCommunication_InteractionWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_InteractionScalarFieldEnum]): [customerCommunication_Interaction]
  accounts(where: customerCommunication_AccountWhereInput, orderBy: [customerCommunication_AccountOrderByWithRelationInput], cursor: customerCommunication_AccountWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_AccountScalarFieldEnum]): [customerCommunication_Account]
  sessions(where: customerCommunication_SessionWhereInput, orderBy: [customerCommunication_SessionOrderByWithRelationInput], cursor: customerCommunication_SessionWhereUniqueInput, take: Int, skip: Int, distinct: [customerCommunication_SessionScalarFieldEnum]): [customerCommunication_Session]
  _count: customerCommunication_UserCountOutputType!
  _join: Query!
}

type customerCommunication_Account {
  id: String!
  userId: String!
  type: String!
  provider: String!
  providerAccountId: String!
  refresh_token: String
  access_token: String
  expires_at: Int
  token_type: String
  scope: String
  id_token: String
  session_state: String
  createdAt: DateTime!
  updatedAt: DateTime!
  user: customerCommunication_User!
  _join: Query!
}

type customerCommunication_AccountCountAggregateOutputType {
  id: Int!
  userId: Int!
  type: Int!
  provider: Int!
  providerAccountId: Int!
  refresh_token: Int!
  access_token: Int!
  expires_at: Int!
  token_type: Int!
  scope: Int!
  id_token: Int!
  session_state: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
  _join: Query!
}

type customerCommunication_AccountAvgAggregateOutputType {
  expires_at: Float
  _join: Query!
}

type customerCommunication_AccountSumAggregateOutputType {
  expires_at: Int
  _join: Query!
}

type customerCommunication_AccountMinAggregateOutputType {
  id: String
  userId: String
  type: String
  provider: String
  providerAccountId: String
  refresh_token: String
  access_token: String
  expires_at: Int
  token_type: String
  scope: String
  id_token: String
  session_state: String
  createdAt: DateTime
  updatedAt: DateTime
  _join: Query!
}

type customerCommunication_AccountMaxAggregateOutputType {
  id: String
  userId: String
  type: String
  provider: String
  providerAccountId: String
  refresh_token: String
  access_token: String
  expires_at: Int
  token_type: String
  scope: String
  id_token: String
  session_state: String
  createdAt: DateTime
  updatedAt: DateTime
  _join: Query!
}

type customerCommunication_AggregateAccount {
  _count: customerCommunication_AccountCountAggregateOutputType
  _avg: customerCommunication_AccountAvgAggregateOutputType
  _sum: customerCommunication_AccountSumAggregateOutputType
  _min: customerCommunication_AccountMinAggregateOutputType
  _max: customerCommunication_AccountMaxAggregateOutputType
  _join: Query!
}

input customerCommunication_AccountCountOrderByAggregateInput {
  id: customerCommunication_SortOrder
  userId: customerCommunication_SortOrder
  type: customerCommunication_SortOrder
  provider: customerCommunication_SortOrder
  providerAccountId: customerCommunication_SortOrder
  refresh_token: customerCommunication_SortOrder
  access_token: customerCommunication_SortOrder
  expires_at: customerCommunication_SortOrder
  token_type: customerCommunication_SortOrder
  scope: customerCommunication_SortOrder
  id_token: customerCommunication_SortOrder
  session_state: customerCommunication_SortOrder
  createdAt: customerCommunication_SortOrder
  updatedAt: customerCommunication_SortOrder
}

input customerCommunication_AccountAvgOrderByAggregateInput {
  expires_at: customerCommunication_SortOrder
}

input customerCommunication_AccountMaxOrderByAggregateInput {
  id: customerCommunication_SortOrder
  userId: customerCommunication_SortOrder
  type: customerCommunication_SortOrder
  provider: customerCommunication_SortOrder
  providerAccountId: customerCommunication_SortOrder
  refresh_token: customerCommunication_SortOrder
  access_token: customerCommunication_SortOrder
  expires_at: customerCommunication_SortOrder
  token_type: customerCommunication_SortOrder
  scope: customerCommunication_SortOrder
  id_token: customerCommunication_SortOrder
  session_state: customerCommunication_SortOrder
  createdAt: customerCommunication_SortOrder
  updatedAt: customerCommunication_SortOrder
}

input customerCommunication_AccountMinOrderByAggregateInput {
  id: customerCommunication_SortOrder
  userId: customerCommunication_SortOrder
  type: customerCommunication_SortOrder
  provider: customerCommunication_SortOrder
  providerAccountId: customerCommunication_SortOrder
  refresh_token: customerCommunication_SortOrder
  access_token: customerCommunication_SortOrder
  expires_at: customerCommunication_SortOrder
  token_type: customerCommunication_SortOrder
  scope: customerCommunication_SortOrder
  id_token: customerCommunication_SortOrder
  session_state: customerCommunication_SortOrder
  createdAt: customerCommunication_SortOrder
  updatedAt: customerCommunication_SortOrder
}

input customerCommunication_AccountSumOrderByAggregateInput {
  expires_at: customerCommunication_SortOrder
}

input customerCommunication_AccountOrderByWithAggregationInput {
  id: customerCommunication_SortOrder
  userId: customerCommunication_SortOrder
  type: customerCommunication_SortOrder
  provider: customerCommunication_SortOrder
  providerAccountId: customerCommunication_SortOrder
  refresh_token: customerCommunication_SortOrder
  access_token: customerCommunication_SortOrder
  expires_at: customerCommunication_SortOrder
  token_type: customerCommunication_SortOrder
  scope: customerCommunication_SortOrder
  id_token: customerCommunication_SortOrder
  session_state: customerCommunication_SortOrder
  createdAt: customerCommunication_SortOrder
  updatedAt: customerCommunication_SortOrder
  _count: customerCommunication_AccountCountOrderByAggregateInput
  _avg: customerCommunication_AccountAvgOrderByAggregateInput
  _max: customerCommunication_AccountMaxOrderByAggregateInput
  _min: customerCommunication_AccountMinOrderByAggregateInput
  _sum: customerCommunication_AccountSumOrderByAggregateInput
}

input customerCommunication_NestedIntFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: customerCommunication_NestedIntFilter
}

input customerCommunication_NestedStringWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: customerCommunication_NestedStringWithAggregatesFilter
  _count: customerCommunication_NestedIntFilter
  _min: customerCommunication_NestedStringFilter
  _max: customerCommunication_NestedStringFilter
}

input customerCommunication_StringWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: customerCommunication_NestedStringWithAggregatesFilter
  _count: customerCommunication_NestedIntFilter
  _min: customerCommunication_NestedStringFilter
  _max: customerCommunication_NestedStringFilter
}

input customerCommunication_NestedStringNullableWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: customerCommunication_NestedStringNullableWithAggregatesFilter
  _count: customerCommunication_NestedIntNullableFilter
  _min: customerCommunication_NestedStringNullableFilter
  _max: customerCommunication_NestedStringNullableFilter
}

input customerCommunication_StringNullableWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: customerCommunication_NestedStringNullableWithAggregatesFilter
  _count: customerCommunication_NestedIntNullableFilter
  _min: customerCommunication_NestedStringNullableFilter
  _max: customerCommunication_NestedStringNullableFilter
}

input customerCommunication_NestedFloatNullableFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: customerCommunication_NestedFloatNullableFilter
}

input customerCommunication_NestedIntNullableWithAggregatesFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: customerCommunication_NestedIntNullableWithAggregatesFilter
  _count: customerCommunication_NestedIntNullableFilter
  _avg: customerCommunication_NestedFloatNullableFilter
  _sum: customerCommunication_NestedIntNullableFilter
  _min: customerCommunication_NestedIntNullableFilter
  _max: customerCommunication_NestedIntNullableFilter
}

input customerCommunication_IntNullableWithAggregatesFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: customerCommunication_NestedIntNullableWithAggregatesFilter
  _count: customerCommunication_NestedIntNullableFilter
  _avg: customerCommunication_NestedFloatNullableFilter
  _sum: customerCommunication_NestedIntNullableFilter
  _min: customerCommunication_NestedIntNullableFilter
  _max: customerCommunication_NestedIntNullableFilter
}

input customerCommunication_NestedDateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: customerCommunication_NestedDateTimeWithAggregatesFilter
  _count: customerCommunication_NestedIntFilter
  _min: customerCommunication_NestedDateTimeFilter
  _max: customerCommunication_NestedDateTimeFilter
}

input customerCommunication_DateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: customerCommunication_NestedDateTimeWithAggregatesFilter
  _count: customerCommunication_NestedIntFilter
  _min: customerCommunication_NestedDateTimeFilter
  _max: customerCommunication_NestedDateTimeFilter
}

input customerCommunication_AccountScalarWhereWithAggregatesInput {
  AND: customerCommunication_AccountScalarWhereWithAggregatesInput
  OR: [customerCommunication_AccountScalarWhereWithAggregatesInput]
  NOT: customerCommunication_AccountScalarWhereWithAggregatesInput
  id: customerCommunication_StringWithAggregatesFilter
  userId: customerCommunication_StringWithAggregatesFilter
  type: customerCommunication_StringWithAggregatesFilter
  provider: customerCommunication_StringWithAggregatesFilter
  providerAccountId: customerCommunication_StringWithAggregatesFilter
  refresh_token: customerCommunication_StringNullableWithAggregatesFilter
  access_token: customerCommunication_StringNullableWithAggregatesFilter
  expires_at: customerCommunication_IntNullableWithAggregatesFilter
  token_type: customerCommunication_StringNullableWithAggregatesFilter
  scope: customerCommunication_StringNullableWithAggregatesFilter
  id_token: customerCommunication_StringNullableWithAggregatesFilter
  session_state: customerCommunication_StringNullableWithAggregatesFilter
  createdAt: customerCommunication_DateTimeWithAggregatesFilter
  updatedAt: customerCommunication_DateTimeWithAggregatesFilter
}

type customerCommunication_AccountGroupByOutputType {
  id: String!
  userId: String!
  type: String!
  provider: String!
  providerAccountId: String!
  refresh_token: String
  access_token: String
  expires_at: Int
  token_type: String
  scope: String
  id_token: String
  session_state: String
  createdAt: DateTime!
  updatedAt: DateTime!
  _count: customerCommunication_AccountCountAggregateOutputType
  _avg: customerCommunication_AccountAvgAggregateOutputType
  _sum: customerCommunication_AccountSumAggregateOutputType
  _min: customerCommunication_AccountMinAggregateOutputType
  _max: customerCommunication_AccountMaxAggregateOutputType
  _join: Query!
}

type customerCommunication_SessionCountAggregateOutputType {
  id: Int!
  sessionToken: Int!
  userId: Int!
  expires: Int!
  _all: Int!
  _join: Query!
}

type customerCommunication_SessionMinAggregateOutputType {
  id: String
  sessionToken: String
  userId: String
  expires: DateTime
  _join: Query!
}

type customerCommunication_SessionMaxAggregateOutputType {
  id: String
  sessionToken: String
  userId: String
  expires: DateTime
  _join: Query!
}

type customerCommunication_AggregateSession {
  _count: customerCommunication_SessionCountAggregateOutputType
  _min: customerCommunication_SessionMinAggregateOutputType
  _max: customerCommunication_SessionMaxAggregateOutputType
  _join: Query!
}

input customerCommunication_SessionCountOrderByAggregateInput {
  id: customerCommunication_SortOrder
  sessionToken: customerCommunication_SortOrder
  userId: customerCommunication_SortOrder
  expires: customerCommunication_SortOrder
}

input customerCommunication_SessionMaxOrderByAggregateInput {
  id: customerCommunication_SortOrder
  sessionToken: customerCommunication_SortOrder
  userId: customerCommunication_SortOrder
  expires: customerCommunication_SortOrder
}

input customerCommunication_SessionMinOrderByAggregateInput {
  id: customerCommunication_SortOrder
  sessionToken: customerCommunication_SortOrder
  userId: customerCommunication_SortOrder
  expires: customerCommunication_SortOrder
}

input customerCommunication_SessionOrderByWithAggregationInput {
  id: customerCommunication_SortOrder
  sessionToken: customerCommunication_SortOrder
  userId: customerCommunication_SortOrder
  expires: customerCommunication_SortOrder
  _count: customerCommunication_SessionCountOrderByAggregateInput
  _max: customerCommunication_SessionMaxOrderByAggregateInput
  _min: customerCommunication_SessionMinOrderByAggregateInput
}

input customerCommunication_SessionScalarWhereWithAggregatesInput {
  AND: customerCommunication_SessionScalarWhereWithAggregatesInput
  OR: [customerCommunication_SessionScalarWhereWithAggregatesInput]
  NOT: customerCommunication_SessionScalarWhereWithAggregatesInput
  id: customerCommunication_StringWithAggregatesFilter
  sessionToken: customerCommunication_StringWithAggregatesFilter
  userId: customerCommunication_StringWithAggregatesFilter
  expires: customerCommunication_DateTimeWithAggregatesFilter
}

type customerCommunication_SessionGroupByOutputType {
  id: String!
  sessionToken: String!
  userId: String!
  expires: DateTime!
  _count: customerCommunication_SessionCountAggregateOutputType
  _min: customerCommunication_SessionMinAggregateOutputType
  _max: customerCommunication_SessionMaxAggregateOutputType
  _join: Query!
}

input customerCommunication_VerificationTokenWhereInput {
  AND: customerCommunication_VerificationTokenWhereInput
  OR: [customerCommunication_VerificationTokenWhereInput]
  NOT: customerCommunication_VerificationTokenWhereInput
  identifier: customerCommunication_StringFilter
  token: customerCommunication_StringFilter
  expires: customerCommunication_DateTimeFilter
}

input customerCommunication_VerificationTokenOrderByWithRelationInput {
  identifier: customerCommunication_SortOrder
  token: customerCommunication_SortOrder
  expires: customerCommunication_SortOrder
}

input customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput {
  identifier: String!
  token: String!
}

input customerCommunication_VerificationTokenWhereUniqueInput {
  token: String
  identifier_token: customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput
}

enum customerCommunication_VerificationTokenScalarFieldEnum {
  identifier
  token
  expires
}

type customerCommunication_VerificationToken {
  identifier: String!
  token: String!
  expires: DateTime!
  _join: Query!
}

type customerCommunication_VerificationTokenCountAggregateOutputType {
  identifier: Int!
  token: Int!
  expires: Int!
  _all: Int!
  _join: Query!
}

type customerCommunication_VerificationTokenMinAggregateOutputType {
  identifier: String
  token: String
  expires: DateTime
  _join: Query!
}

type customerCommunication_VerificationTokenMaxAggregateOutputType {
  identifier: String
  token: String
  expires: DateTime
  _join: Query!
}

type customerCommunication_AggregateVerificationToken {
  _count: customerCommunication_VerificationTokenCountAggregateOutputType
  _min: customerCommunication_VerificationTokenMinAggregateOutputType
  _max: customerCommunication_VerificationTokenMaxAggregateOutputType
  _join: Query!
}

input customerCommunication_VerificationTokenCountOrderByAggregateInput {
  identifier: customerCommunication_SortOrder
  token: customerCommunication_SortOrder
  expires: customerCommunication_SortOrder
}

input customerCommunication_VerificationTokenMaxOrderByAggregateInput {
  identifier: customerCommunication_SortOrder
  token: customerCommunication_SortOrder
  expires: customerCommunication_SortOrder
}

input customerCommunication_VerificationTokenMinOrderByAggregateInput {
  identifier: customerCommunication_SortOrder
  token: customerCommunication_SortOrder
  expires: customerCommunication_SortOrder
}

input customerCommunication_VerificationTokenOrderByWithAggregationInput {
  identifier: customerCommunication_SortOrder
  token: customerCommunication_SortOrder
  expires: customerCommunication_SortOrder
  _count: customerCommunication_VerificationTokenCountOrderByAggregateInput
  _max: customerCommunication_VerificationTokenMaxOrderByAggregateInput
  _min: customerCommunication_VerificationTokenMinOrderByAggregateInput
}

input customerCommunication_VerificationTokenScalarWhereWithAggregatesInput {
  AND: customerCommunication_VerificationTokenScalarWhereWithAggregatesInput
  OR: [customerCommunication_VerificationTokenScalarWhereWithAggregatesInput]
  NOT: customerCommunication_VerificationTokenScalarWhereWithAggregatesInput
  identifier: customerCommunication_StringWithAggregatesFilter
  token: customerCommunication_StringWithAggregatesFilter
  expires: customerCommunication_DateTimeWithAggregatesFilter
}

type customerCommunication_VerificationTokenGroupByOutputType {
  identifier: String!
  token: String!
  expires: DateTime!
  _count: customerCommunication_VerificationTokenCountAggregateOutputType
  _min: customerCommunication_VerificationTokenMinAggregateOutputType
  _max: customerCommunication_VerificationTokenMaxAggregateOutputType
  _join: Query!
}

input customerCommunication_UserWhereUniqueInput {
  id: String
  email: String
  stripeCustomerId: String
  stripeSubscriptionId: String
}

enum customerCommunication_UserScalarFieldEnum {
  id
  name
  email
  emailVerified
  image
  createdAt
  updatedAt
  userType
  stripeCustomerId
  stripeSubscriptionId
  stripePriceId
  stripeCurrentPeriodEnd
}

type customerCommunication_UserCountAggregateOutputType {
  id: Int!
  name: Int!
  email: Int!
  emailVerified: Int!
  image: Int!
  createdAt: Int!
  updatedAt: Int!
  userType: Int!
  stripeCustomerId: Int!
  stripeSubscriptionId: Int!
  stripePriceId: Int!
  stripeCurrentPeriodEnd: Int!
  _all: Int!
  _join: Query!
}

type customerCommunication_UserMinAggregateOutputType {
  id: String
  name: String
  email: String
  emailVerified: DateTime
  image: String
  createdAt: DateTime
  updatedAt: DateTime
  userType: customerCommunication_UserType
  stripeCustomerId: String
  stripeSubscriptionId: String
  stripePriceId: String
  stripeCurrentPeriodEnd: DateTime
  _join: Query!
}

type customerCommunication_UserMaxAggregateOutputType {
  id: String
  name: String
  email: String
  emailVerified: DateTime
  image: String
  createdAt: DateTime
  updatedAt: DateTime
  userType: customerCommunication_UserType
  stripeCustomerId: String
  stripeSubscriptionId: String
  stripePriceId: String
  stripeCurrentPeriodEnd: DateTime
  _join: Query!
}

type customerCommunication_AggregateUser {
  _count: customerCommunication_UserCountAggregateOutputType
  _min: customerCommunication_UserMinAggregateOutputType
  _max: customerCommunication_UserMaxAggregateOutputType
  _join: Query!
}

input customerCommunication_UserCountOrderByAggregateInput {
  id: customerCommunication_SortOrder
  name: customerCommunication_SortOrder
  email: customerCommunication_SortOrder
  emailVerified: customerCommunication_SortOrder
  image: customerCommunication_SortOrder
  createdAt: customerCommunication_SortOrder
  updatedAt: customerCommunication_SortOrder
  userType: customerCommunication_SortOrder
  stripeCustomerId: customerCommunication_SortOrder
  stripeSubscriptionId: customerCommunication_SortOrder
  stripePriceId: customerCommunication_SortOrder
  stripeCurrentPeriodEnd: customerCommunication_SortOrder
}

input customerCommunication_UserMaxOrderByAggregateInput {
  id: customerCommunication_SortOrder
  name: customerCommunication_SortOrder
  email: customerCommunication_SortOrder
  emailVerified: customerCommunication_SortOrder
  image: customerCommunication_SortOrder
  createdAt: customerCommunication_SortOrder
  updatedAt: customerCommunication_SortOrder
  userType: customerCommunication_SortOrder
  stripeCustomerId: customerCommunication_SortOrder
  stripeSubscriptionId: customerCommunication_SortOrder
  stripePriceId: customerCommunication_SortOrder
  stripeCurrentPeriodEnd: customerCommunication_SortOrder
}

input customerCommunication_UserMinOrderByAggregateInput {
  id: customerCommunication_SortOrder
  name: customerCommunication_SortOrder
  email: customerCommunication_SortOrder
  emailVerified: customerCommunication_SortOrder
  image: customerCommunication_SortOrder
  createdAt: customerCommunication_SortOrder
  updatedAt: customerCommunication_SortOrder
  userType: customerCommunication_SortOrder
  stripeCustomerId: customerCommunication_SortOrder
  stripeSubscriptionId: customerCommunication_SortOrder
  stripePriceId: customerCommunication_SortOrder
  stripeCurrentPeriodEnd: customerCommunication_SortOrder
}

input customerCommunication_UserOrderByWithAggregationInput {
  id: customerCommunication_SortOrder
  name: customerCommunication_SortOrder
  email: customerCommunication_SortOrder
  emailVerified: customerCommunication_SortOrder
  image: customerCommunication_SortOrder
  createdAt: customerCommunication_SortOrder
  updatedAt: customerCommunication_SortOrder
  userType: customerCommunication_SortOrder
  stripeCustomerId: customerCommunication_SortOrder
  stripeSubscriptionId: customerCommunication_SortOrder
  stripePriceId: customerCommunication_SortOrder
  stripeCurrentPeriodEnd: customerCommunication_SortOrder
  _count: customerCommunication_UserCountOrderByAggregateInput
  _max: customerCommunication_UserMaxOrderByAggregateInput
  _min: customerCommunication_UserMinOrderByAggregateInput
}

input customerCommunication_NestedDateTimeNullableWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: customerCommunication_NestedDateTimeNullableWithAggregatesFilter
  _count: customerCommunication_NestedIntNullableFilter
  _min: customerCommunication_NestedDateTimeNullableFilter
  _max: customerCommunication_NestedDateTimeNullableFilter
}

input customerCommunication_DateTimeNullableWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: customerCommunication_NestedDateTimeNullableWithAggregatesFilter
  _count: customerCommunication_NestedIntNullableFilter
  _min: customerCommunication_NestedDateTimeNullableFilter
  _max: customerCommunication_NestedDateTimeNullableFilter
}

input customerCommunication_NestedEnumUserTypeFilter {
  equals: customerCommunication_UserType
  in: [customerCommunication_UserType]
  notIn: [customerCommunication_UserType]
  not: customerCommunication_UserType
}

input customerCommunication_EnumUserTypeWithAggregatesFilter {
  equals: customerCommunication_UserType
  in: [customerCommunication_UserType]
  notIn: [customerCommunication_UserType]
  not: customerCommunication_UserType
  _count: customerCommunication_NestedIntFilter
  _min: customerCommunication_NestedEnumUserTypeFilter
  _max: customerCommunication_NestedEnumUserTypeFilter
}

input customerCommunication_UserScalarWhereWithAggregatesInput {
  AND: customerCommunication_UserScalarWhereWithAggregatesInput
  OR: [customerCommunication_UserScalarWhereWithAggregatesInput]
  NOT: customerCommunication_UserScalarWhereWithAggregatesInput
  id: customerCommunication_StringWithAggregatesFilter
  name: customerCommunication_StringNullableWithAggregatesFilter
  email: customerCommunication_StringNullableWithAggregatesFilter
  emailVerified: customerCommunication_DateTimeNullableWithAggregatesFilter
  image: customerCommunication_StringNullableWithAggregatesFilter
  createdAt: customerCommunication_DateTimeWithAggregatesFilter
  updatedAt: customerCommunication_DateTimeWithAggregatesFilter
  userType: customerCommunication_EnumUserTypeWithAggregatesFilter
  stripeCustomerId: customerCommunication_StringNullableWithAggregatesFilter
  stripeSubscriptionId: customerCommunication_StringNullableWithAggregatesFilter
  stripePriceId: customerCommunication_StringNullableWithAggregatesFilter
  stripeCurrentPeriodEnd: customerCommunication_DateTimeNullableWithAggregatesFilter
}

type customerCommunication_UserGroupByOutputType {
  id: String!
  name: String
  email: String
  emailVerified: DateTime
  image: String
  createdAt: DateTime!
  updatedAt: DateTime!
  userType: customerCommunication_UserType!
  stripeCustomerId: String
  stripeSubscriptionId: String
  stripePriceId: String
  stripeCurrentPeriodEnd: DateTime
  _count: customerCommunication_UserCountAggregateOutputType
  _min: customerCommunication_UserMinAggregateOutputType
  _max: customerCommunication_UserMaxAggregateOutputType
  _join: Query!
}

type customerCommunication_InteractionCountAggregateOutputType {
  id: Int!
  interactionType: Int!
  content: Int!
  timestamp: Int!
  userId: Int!
  widgetId: Int!
  _all: Int!
  _join: Query!
}

type customerCommunication_InteractionMinAggregateOutputType {
  id: String
  interactionType: customerCommunication_InteractionType
  content: String
  timestamp: DateTime
  userId: String
  widgetId: String
  _join: Query!
}

type customerCommunication_InteractionMaxAggregateOutputType {
  id: String
  interactionType: customerCommunication_InteractionType
  content: String
  timestamp: DateTime
  userId: String
  widgetId: String
  _join: Query!
}

type customerCommunication_AggregateInteraction {
  _count: customerCommunication_InteractionCountAggregateOutputType
  _min: customerCommunication_InteractionMinAggregateOutputType
  _max: customerCommunication_InteractionMaxAggregateOutputType
  _join: Query!
}

input customerCommunication_InteractionCountOrderByAggregateInput {
  id: customerCommunication_SortOrder
  interactionType: customerCommunication_SortOrder
  content: customerCommunication_SortOrder
  timestamp: customerCommunication_SortOrder
  userId: customerCommunication_SortOrder
  widgetId: customerCommunication_SortOrder
}

input customerCommunication_InteractionMaxOrderByAggregateInput {
  id: customerCommunication_SortOrder
  interactionType: customerCommunication_SortOrder
  content: customerCommunication_SortOrder
  timestamp: customerCommunication_SortOrder
  userId: customerCommunication_SortOrder
  widgetId: customerCommunication_SortOrder
}

input customerCommunication_InteractionMinOrderByAggregateInput {
  id: customerCommunication_SortOrder
  interactionType: customerCommunication_SortOrder
  content: customerCommunication_SortOrder
  timestamp: customerCommunication_SortOrder
  userId: customerCommunication_SortOrder
  widgetId: customerCommunication_SortOrder
}

input customerCommunication_InteractionOrderByWithAggregationInput {
  id: customerCommunication_SortOrder
  interactionType: customerCommunication_SortOrder
  content: customerCommunication_SortOrder
  timestamp: customerCommunication_SortOrder
  userId: customerCommunication_SortOrder
  widgetId: customerCommunication_SortOrder
  _count: customerCommunication_InteractionCountOrderByAggregateInput
  _max: customerCommunication_InteractionMaxOrderByAggregateInput
  _min: customerCommunication_InteractionMinOrderByAggregateInput
}

input customerCommunication_NestedEnumInteractionTypeFilter {
  equals: customerCommunication_InteractionType
  in: [customerCommunication_InteractionType]
  notIn: [customerCommunication_InteractionType]
  not: customerCommunication_InteractionType
}

input customerCommunication_EnumInteractionTypeWithAggregatesFilter {
  equals: customerCommunication_InteractionType
  in: [customerCommunication_InteractionType]
  notIn: [customerCommunication_InteractionType]
  not: customerCommunication_InteractionType
  _count: customerCommunication_NestedIntFilter
  _min: customerCommunication_NestedEnumInteractionTypeFilter
  _max: customerCommunication_NestedEnumInteractionTypeFilter
}

input customerCommunication_InteractionScalarWhereWithAggregatesInput {
  AND: customerCommunication_InteractionScalarWhereWithAggregatesInput
  OR: [customerCommunication_InteractionScalarWhereWithAggregatesInput]
  NOT: customerCommunication_InteractionScalarWhereWithAggregatesInput
  id: customerCommunication_StringWithAggregatesFilter
  interactionType: customerCommunication_EnumInteractionTypeWithAggregatesFilter
  content: customerCommunication_StringWithAggregatesFilter
  timestamp: customerCommunication_DateTimeWithAggregatesFilter
  userId: customerCommunication_StringWithAggregatesFilter
  widgetId: customerCommunication_StringNullableWithAggregatesFilter
}

type customerCommunication_InteractionGroupByOutputType {
  id: String!
  interactionType: customerCommunication_InteractionType!
  content: String!
  timestamp: DateTime!
  userId: String!
  widgetId: String
  _count: customerCommunication_InteractionCountAggregateOutputType
  _min: customerCommunication_InteractionMinAggregateOutputType
  _max: customerCommunication_InteractionMaxAggregateOutputType
  _join: Query!
}

input customerCommunication_WidgetWhereUniqueInput {
  id: String
}

enum customerCommunication_WidgetScalarFieldEnum {
  id
  embeddedIn
}

type customerCommunication_WidgetCountAggregateOutputType {
  id: Int!
  embeddedIn: Int!
  _all: Int!
  _join: Query!
}

type customerCommunication_WidgetMinAggregateOutputType {
  id: String
  embeddedIn: String
  _join: Query!
}

type customerCommunication_WidgetMaxAggregateOutputType {
  id: String
  embeddedIn: String
  _join: Query!
}

type customerCommunication_AggregateWidget {
  _count: customerCommunication_WidgetCountAggregateOutputType
  _min: customerCommunication_WidgetMinAggregateOutputType
  _max: customerCommunication_WidgetMaxAggregateOutputType
  _join: Query!
}

input customerCommunication_WidgetCountOrderByAggregateInput {
  id: customerCommunication_SortOrder
  embeddedIn: customerCommunication_SortOrder
}

input customerCommunication_WidgetMaxOrderByAggregateInput {
  id: customerCommunication_SortOrder
  embeddedIn: customerCommunication_SortOrder
}

input customerCommunication_WidgetMinOrderByAggregateInput {
  id: customerCommunication_SortOrder
  embeddedIn: customerCommunication_SortOrder
}

input customerCommunication_WidgetOrderByWithAggregationInput {
  id: customerCommunication_SortOrder
  embeddedIn: customerCommunication_SortOrder
  _count: customerCommunication_WidgetCountOrderByAggregateInput
  _max: customerCommunication_WidgetMaxOrderByAggregateInput
  _min: customerCommunication_WidgetMinOrderByAggregateInput
}

input customerCommunication_WidgetScalarWhereWithAggregatesInput {
  AND: customerCommunication_WidgetScalarWhereWithAggregatesInput
  OR: [customerCommunication_WidgetScalarWhereWithAggregatesInput]
  NOT: customerCommunication_WidgetScalarWhereWithAggregatesInput
  id: customerCommunication_StringWithAggregatesFilter
  embeddedIn: customerCommunication_StringWithAggregatesFilter
}

type customerCommunication_WidgetGroupByOutputType {
  id: String!
  embeddedIn: String!
  _count: customerCommunication_WidgetCountAggregateOutputType
  _min: customerCommunication_WidgetMinAggregateOutputType
  _max: customerCommunication_WidgetMaxAggregateOutputType
  _join: Query!
}

enum customerCommunication_AudienceType {
  CALL_CENTER
  CLIENT_PORTAL
  GUARDIAN_ONLINE
  GPAC
  SMART_OFFICE
  LIVING_BALANCE_SHEET
}

input customerCommunication_EnumAudienceTypeFilter {
  equals: customerCommunication_AudienceType
  in: [customerCommunication_AudienceType]
  notIn: [customerCommunication_AudienceType]
  not: customerCommunication_AudienceType
}

enum customerCommunication_OutputType {
  CALLS
  CHATS
  EMAILS
  WEB_USAGE
  IVR_HUGO_USAGE
  OUTBOUND_CORRESPONDENCE
  MARKETING_MATERIALS
  TEXTS
}

input customerCommunication_EnumOutputTypeFilter {
  equals: customerCommunication_OutputType
  in: [customerCommunication_OutputType]
  notIn: [customerCommunication_OutputType]
  not: customerCommunication_OutputType
}

input customerCommunication_FilterWhereInput {
  AND: customerCommunication_FilterWhereInput
  OR: [customerCommunication_FilterWhereInput]
  NOT: customerCommunication_FilterWhereInput
  id: customerCommunication_StringFilter
  audience: customerCommunication_EnumAudienceTypeFilter
  output: customerCommunication_EnumOutputTypeFilter
}

input customerCommunication_FilterOrderByWithRelationInput {
  id: customerCommunication_SortOrder
  audience: customerCommunication_SortOrder
  output: customerCommunication_SortOrder
}

input customerCommunication_FilterWhereUniqueInput {
  id: String
}

enum customerCommunication_FilterScalarFieldEnum {
  id
  audience
  output
}

type customerCommunication_Filter {
  id: String!
  audience: customerCommunication_AudienceType!
  output: customerCommunication_OutputType!
  _join: Query!
}

type customerCommunication_FilterCountAggregateOutputType {
  id: Int!
  audience: Int!
  output: Int!
  _all: Int!
  _join: Query!
}

type customerCommunication_FilterMinAggregateOutputType {
  id: String
  audience: customerCommunication_AudienceType
  output: customerCommunication_OutputType
  _join: Query!
}

type customerCommunication_FilterMaxAggregateOutputType {
  id: String
  audience: customerCommunication_AudienceType
  output: customerCommunication_OutputType
  _join: Query!
}

type customerCommunication_AggregateFilter {
  _count: customerCommunication_FilterCountAggregateOutputType
  _min: customerCommunication_FilterMinAggregateOutputType
  _max: customerCommunication_FilterMaxAggregateOutputType
  _join: Query!
}

input customerCommunication_FilterCountOrderByAggregateInput {
  id: customerCommunication_SortOrder
  audience: customerCommunication_SortOrder
  output: customerCommunication_SortOrder
}

input customerCommunication_FilterMaxOrderByAggregateInput {
  id: customerCommunication_SortOrder
  audience: customerCommunication_SortOrder
  output: customerCommunication_SortOrder
}

input customerCommunication_FilterMinOrderByAggregateInput {
  id: customerCommunication_SortOrder
  audience: customerCommunication_SortOrder
  output: customerCommunication_SortOrder
}

input customerCommunication_FilterOrderByWithAggregationInput {
  id: customerCommunication_SortOrder
  audience: customerCommunication_SortOrder
  output: customerCommunication_SortOrder
  _count: customerCommunication_FilterCountOrderByAggregateInput
  _max: customerCommunication_FilterMaxOrderByAggregateInput
  _min: customerCommunication_FilterMinOrderByAggregateInput
}

input customerCommunication_NestedEnumAudienceTypeFilter {
  equals: customerCommunication_AudienceType
  in: [customerCommunication_AudienceType]
  notIn: [customerCommunication_AudienceType]
  not: customerCommunication_AudienceType
}

input customerCommunication_EnumAudienceTypeWithAggregatesFilter {
  equals: customerCommunication_AudienceType
  in: [customerCommunication_AudienceType]
  notIn: [customerCommunication_AudienceType]
  not: customerCommunication_AudienceType
  _count: customerCommunication_NestedIntFilter
  _min: customerCommunication_NestedEnumAudienceTypeFilter
  _max: customerCommunication_NestedEnumAudienceTypeFilter
}

input customerCommunication_NestedEnumOutputTypeFilter {
  equals: customerCommunication_OutputType
  in: [customerCommunication_OutputType]
  notIn: [customerCommunication_OutputType]
  not: customerCommunication_OutputType
}

input customerCommunication_EnumOutputTypeWithAggregatesFilter {
  equals: customerCommunication_OutputType
  in: [customerCommunication_OutputType]
  notIn: [customerCommunication_OutputType]
  not: customerCommunication_OutputType
  _count: customerCommunication_NestedIntFilter
  _min: customerCommunication_NestedEnumOutputTypeFilter
  _max: customerCommunication_NestedEnumOutputTypeFilter
}

input customerCommunication_FilterScalarWhereWithAggregatesInput {
  AND: customerCommunication_FilterScalarWhereWithAggregatesInput
  OR: [customerCommunication_FilterScalarWhereWithAggregatesInput]
  NOT: customerCommunication_FilterScalarWhereWithAggregatesInput
  id: customerCommunication_StringWithAggregatesFilter
  audience: customerCommunication_EnumAudienceTypeWithAggregatesFilter
  output: customerCommunication_EnumOutputTypeWithAggregatesFilter
}

type customerCommunication_FilterGroupByOutputType {
  id: String!
  audience: customerCommunication_AudienceType!
  output: customerCommunication_OutputType!
  _count: customerCommunication_FilterCountAggregateOutputType
  _min: customerCommunication_FilterMinAggregateOutputType
  _max: customerCommunication_FilterMaxAggregateOutputType
  _join: Query!
}

input customerCommunication_WidgetCreateWithoutInteractionsInput {
  id: String
  embeddedIn: String!
}

input customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput {
  where: customerCommunication_WidgetWhereUniqueInput!
  create: customerCommunication_WidgetCreateWithoutInteractionsInput!
}

input customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput {
  create: customerCommunication_WidgetCreateWithoutInteractionsInput
  connectOrCreate: customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput
  connect: customerCommunication_WidgetWhereUniqueInput
}

input customerCommunication_InteractionCreateWithoutUserInput {
  id: String
  interactionType: customerCommunication_InteractionType!
  content: String!
  timestamp: DateTime!
  Widget: customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput
}

input customerCommunication_InteractionCreateOrConnectWithoutUserInput {
  where: customerCommunication_InteractionWhereUniqueInput!
  create: customerCommunication_InteractionCreateWithoutUserInput!
}

input customerCommunication_InteractionCreateManyUserInput {
  id: String
  interactionType: customerCommunication_InteractionType!
  content: String!
  timestamp: DateTime!
  widgetId: String
}

input customerCommunication_InteractionCreateManyUserInputEnvelope {
  data: customerCommunication_InteractionCreateManyUserInput!
  skipDuplicates: Boolean
}

input customerCommunication_InteractionCreateNestedManyWithoutUserInput {
  create: customerCommunication_InteractionCreateWithoutUserInput
  connectOrCreate: customerCommunication_InteractionCreateOrConnectWithoutUserInput
  createMany: customerCommunication_InteractionCreateManyUserInputEnvelope
  connect: customerCommunication_InteractionWhereUniqueInput
}

input customerCommunication_SessionCreateWithoutUserInput {
  id: String
  sessionToken: String!
  expires: DateTime!
}

input customerCommunication_SessionCreateOrConnectWithoutUserInput {
  where: customerCommunication_SessionWhereUniqueInput!
  create: customerCommunication_SessionCreateWithoutUserInput!
}

input customerCommunication_SessionCreateManyUserInput {
  id: String
  sessionToken: String!
  expires: DateTime!
}

input customerCommunication_SessionCreateManyUserInputEnvelope {
  data: customerCommunication_SessionCreateManyUserInput!
  skipDuplicates: Boolean
}

input customerCommunication_SessionCreateNestedManyWithoutUserInput {
  create: customerCommunication_SessionCreateWithoutUserInput
  connectOrCreate: customerCommunication_SessionCreateOrConnectWithoutUserInput
  createMany: customerCommunication_SessionCreateManyUserInputEnvelope
  connect: customerCommunication_SessionWhereUniqueInput
}

input customerCommunication_UserCreateWithoutAccountsInput {
  id: String
  name: String
  email: String
  emailVerified: DateTime
  image: String
  createdAt: DateTime
  updatedAt: DateTime
  userType: customerCommunication_UserType!
  stripeCustomerId: String
  stripeSubscriptionId: String
  stripePriceId: String
  stripeCurrentPeriodEnd: DateTime
  interactions: customerCommunication_InteractionCreateNestedManyWithoutUserInput
  sessions: customerCommunication_SessionCreateNestedManyWithoutUserInput
}

input customerCommunication_UserCreateOrConnectWithoutAccountsInput {
  where: customerCommunication_UserWhereUniqueInput!
  create: customerCommunication_UserCreateWithoutAccountsInput!
}

input customerCommunication_UserCreateNestedOneWithoutAccountsInput {
  create: customerCommunication_UserCreateWithoutAccountsInput
  connectOrCreate: customerCommunication_UserCreateOrConnectWithoutAccountsInput
  connect: customerCommunication_UserWhereUniqueInput
}

input customerCommunication_AccountCreateInput {
  id: String
  type: String!
  provider: String!
  providerAccountId: String!
  refresh_token: String
  access_token: String
  expires_at: Int
  token_type: String
  scope: String
  id_token: String
  session_state: String
  createdAt: DateTime
  updatedAt: DateTime
  user: customerCommunication_UserCreateNestedOneWithoutAccountsInput!
}

input customerCommunication_StringFieldUpdateOperationsInput {
  set: String
}

input customerCommunication_NullableStringFieldUpdateOperationsInput {
  set: String
}

input customerCommunication_NullableIntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input customerCommunication_DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input customerCommunication_NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input customerCommunication_WidgetUpdateWithoutInteractionsInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  embeddedIn: customerCommunication_StringFieldUpdateOperationsInput
}

input customerCommunication_WidgetUpsertWithoutInteractionsInput {
  update: customerCommunication_WidgetUpdateWithoutInteractionsInput!
  create: customerCommunication_WidgetCreateWithoutInteractionsInput!
}

input customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput {
  create: customerCommunication_WidgetCreateWithoutInteractionsInput
  connectOrCreate: customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput
  upsert: customerCommunication_WidgetUpsertWithoutInteractionsInput
  disconnect: Boolean
  delete: Boolean
  connect: customerCommunication_WidgetWhereUniqueInput
  update: customerCommunication_WidgetUpdateWithoutInteractionsInput
}

input customerCommunication_InteractionUpdateWithoutUserInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  interactionType: customerCommunication_InteractionType
  content: customerCommunication_StringFieldUpdateOperationsInput
  timestamp: customerCommunication_DateTimeFieldUpdateOperationsInput
  Widget: customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput
}

input customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput {
  where: customerCommunication_InteractionWhereUniqueInput!
  update: customerCommunication_InteractionUpdateWithoutUserInput!
  create: customerCommunication_InteractionCreateWithoutUserInput!
}

input customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput {
  where: customerCommunication_InteractionWhereUniqueInput!
  data: customerCommunication_InteractionUpdateWithoutUserInput!
}

input customerCommunication_InteractionScalarWhereInput {
  AND: customerCommunication_InteractionScalarWhereInput
  OR: [customerCommunication_InteractionScalarWhereInput]
  NOT: customerCommunication_InteractionScalarWhereInput
  id: customerCommunication_StringFilter
  interactionType: customerCommunication_EnumInteractionTypeFilter
  content: customerCommunication_StringFilter
  timestamp: customerCommunication_DateTimeFilter
  userId: customerCommunication_StringFilter
  widgetId: customerCommunication_StringNullableFilter
}

input customerCommunication_InteractionUpdateManyMutationInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  interactionType: customerCommunication_InteractionType
  content: customerCommunication_StringFieldUpdateOperationsInput
  timestamp: customerCommunication_DateTimeFieldUpdateOperationsInput
}

input customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput {
  where: customerCommunication_InteractionScalarWhereInput!
  data: customerCommunication_InteractionUpdateManyMutationInput!
}

input customerCommunication_InteractionUpdateManyWithoutUserNestedInput {
  create: customerCommunication_InteractionCreateWithoutUserInput
  connectOrCreate: customerCommunication_InteractionCreateOrConnectWithoutUserInput
  upsert: customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput
  createMany: customerCommunication_InteractionCreateManyUserInputEnvelope
  set: customerCommunication_InteractionWhereUniqueInput
  disconnect: customerCommunication_InteractionWhereUniqueInput
  delete: customerCommunication_InteractionWhereUniqueInput
  connect: customerCommunication_InteractionWhereUniqueInput
  update: customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput
  updateMany: customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput
  deleteMany: customerCommunication_InteractionScalarWhereInput
}

input customerCommunication_SessionUpdateWithoutUserInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  sessionToken: customerCommunication_StringFieldUpdateOperationsInput
  expires: customerCommunication_DateTimeFieldUpdateOperationsInput
}

input customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput {
  where: customerCommunication_SessionWhereUniqueInput!
  update: customerCommunication_SessionUpdateWithoutUserInput!
  create: customerCommunication_SessionCreateWithoutUserInput!
}

input customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput {
  where: customerCommunication_SessionWhereUniqueInput!
  data: customerCommunication_SessionUpdateWithoutUserInput!
}

input customerCommunication_SessionScalarWhereInput {
  AND: customerCommunication_SessionScalarWhereInput
  OR: [customerCommunication_SessionScalarWhereInput]
  NOT: customerCommunication_SessionScalarWhereInput
  id: customerCommunication_StringFilter
  sessionToken: customerCommunication_StringFilter
  userId: customerCommunication_StringFilter
  expires: customerCommunication_DateTimeFilter
}

input customerCommunication_SessionUpdateManyMutationInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  sessionToken: customerCommunication_StringFieldUpdateOperationsInput
  expires: customerCommunication_DateTimeFieldUpdateOperationsInput
}

input customerCommunication_SessionUpdateManyWithWhereWithoutUserInput {
  where: customerCommunication_SessionScalarWhereInput!
  data: customerCommunication_SessionUpdateManyMutationInput!
}

input customerCommunication_SessionUpdateManyWithoutUserNestedInput {
  create: customerCommunication_SessionCreateWithoutUserInput
  connectOrCreate: customerCommunication_SessionCreateOrConnectWithoutUserInput
  upsert: customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput
  createMany: customerCommunication_SessionCreateManyUserInputEnvelope
  set: customerCommunication_SessionWhereUniqueInput
  disconnect: customerCommunication_SessionWhereUniqueInput
  delete: customerCommunication_SessionWhereUniqueInput
  connect: customerCommunication_SessionWhereUniqueInput
  update: customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput
  updateMany: customerCommunication_SessionUpdateManyWithWhereWithoutUserInput
  deleteMany: customerCommunication_SessionScalarWhereInput
}

input customerCommunication_UserUpdateWithoutAccountsInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  name: customerCommunication_NullableStringFieldUpdateOperationsInput
  email: customerCommunication_NullableStringFieldUpdateOperationsInput
  emailVerified: customerCommunication_NullableDateTimeFieldUpdateOperationsInput
  image: customerCommunication_NullableStringFieldUpdateOperationsInput
  createdAt: customerCommunication_DateTimeFieldUpdateOperationsInput
  updatedAt: customerCommunication_DateTimeFieldUpdateOperationsInput
  userType: customerCommunication_UserType
  stripeCustomerId: customerCommunication_NullableStringFieldUpdateOperationsInput
  stripeSubscriptionId: customerCommunication_NullableStringFieldUpdateOperationsInput
  stripePriceId: customerCommunication_NullableStringFieldUpdateOperationsInput
  stripeCurrentPeriodEnd: customerCommunication_NullableDateTimeFieldUpdateOperationsInput
  interactions: customerCommunication_InteractionUpdateManyWithoutUserNestedInput
  sessions: customerCommunication_SessionUpdateManyWithoutUserNestedInput
}

input customerCommunication_UserUpsertWithoutAccountsInput {
  update: customerCommunication_UserUpdateWithoutAccountsInput!
  create: customerCommunication_UserCreateWithoutAccountsInput!
}

input customerCommunication_UserUpdateOneRequiredWithoutAccountsNestedInput {
  create: customerCommunication_UserCreateWithoutAccountsInput
  connectOrCreate: customerCommunication_UserCreateOrConnectWithoutAccountsInput
  upsert: customerCommunication_UserUpsertWithoutAccountsInput
  connect: customerCommunication_UserWhereUniqueInput
  update: customerCommunication_UserUpdateWithoutAccountsInput
}

input customerCommunication_AccountUpdateInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  type: customerCommunication_StringFieldUpdateOperationsInput
  provider: customerCommunication_StringFieldUpdateOperationsInput
  providerAccountId: customerCommunication_StringFieldUpdateOperationsInput
  refresh_token: customerCommunication_NullableStringFieldUpdateOperationsInput
  access_token: customerCommunication_NullableStringFieldUpdateOperationsInput
  expires_at: customerCommunication_NullableIntFieldUpdateOperationsInput
  token_type: customerCommunication_NullableStringFieldUpdateOperationsInput
  scope: customerCommunication_NullableStringFieldUpdateOperationsInput
  id_token: customerCommunication_NullableStringFieldUpdateOperationsInput
  session_state: customerCommunication_NullableStringFieldUpdateOperationsInput
  createdAt: customerCommunication_DateTimeFieldUpdateOperationsInput
  updatedAt: customerCommunication_DateTimeFieldUpdateOperationsInput
  user: customerCommunication_UserUpdateOneRequiredWithoutAccountsNestedInput
}

input customerCommunication_AccountCreateManyInput {
  id: String
  userId: String!
  type: String!
  provider: String!
  providerAccountId: String!
  refresh_token: String
  access_token: String
  expires_at: Int
  token_type: String
  scope: String
  id_token: String
  session_state: String
  createdAt: DateTime
  updatedAt: DateTime
}

type customerCommunication_AffectedRowsOutput {
  count: Int!
  _join: Query!
}

input customerCommunication_AccountUpdateManyMutationInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  type: customerCommunication_StringFieldUpdateOperationsInput
  provider: customerCommunication_StringFieldUpdateOperationsInput
  providerAccountId: customerCommunication_StringFieldUpdateOperationsInput
  refresh_token: customerCommunication_NullableStringFieldUpdateOperationsInput
  access_token: customerCommunication_NullableStringFieldUpdateOperationsInput
  expires_at: customerCommunication_NullableIntFieldUpdateOperationsInput
  token_type: customerCommunication_NullableStringFieldUpdateOperationsInput
  scope: customerCommunication_NullableStringFieldUpdateOperationsInput
  id_token: customerCommunication_NullableStringFieldUpdateOperationsInput
  session_state: customerCommunication_NullableStringFieldUpdateOperationsInput
  createdAt: customerCommunication_DateTimeFieldUpdateOperationsInput
  updatedAt: customerCommunication_DateTimeFieldUpdateOperationsInput
}

input customerCommunication_AccountCreateWithoutUserInput {
  id: String
  type: String!
  provider: String!
  providerAccountId: String!
  refresh_token: String
  access_token: String
  expires_at: Int
  token_type: String
  scope: String
  id_token: String
  session_state: String
  createdAt: DateTime
  updatedAt: DateTime
}

input customerCommunication_AccountCreateOrConnectWithoutUserInput {
  where: customerCommunication_AccountWhereUniqueInput!
  create: customerCommunication_AccountCreateWithoutUserInput!
}

input customerCommunication_AccountCreateManyUserInput {
  id: String
  type: String!
  provider: String!
  providerAccountId: String!
  refresh_token: String
  access_token: String
  expires_at: Int
  token_type: String
  scope: String
  id_token: String
  session_state: String
  createdAt: DateTime
  updatedAt: DateTime
}

input customerCommunication_AccountCreateManyUserInputEnvelope {
  data: customerCommunication_AccountCreateManyUserInput!
  skipDuplicates: Boolean
}

input customerCommunication_AccountCreateNestedManyWithoutUserInput {
  create: customerCommunication_AccountCreateWithoutUserInput
  connectOrCreate: customerCommunication_AccountCreateOrConnectWithoutUserInput
  createMany: customerCommunication_AccountCreateManyUserInputEnvelope
  connect: customerCommunication_AccountWhereUniqueInput
}

input customerCommunication_UserCreateWithoutSessionsInput {
  id: String
  name: String
  email: String
  emailVerified: DateTime
  image: String
  createdAt: DateTime
  updatedAt: DateTime
  userType: customerCommunication_UserType!
  stripeCustomerId: String
  stripeSubscriptionId: String
  stripePriceId: String
  stripeCurrentPeriodEnd: DateTime
  interactions: customerCommunication_InteractionCreateNestedManyWithoutUserInput
  accounts: customerCommunication_AccountCreateNestedManyWithoutUserInput
}

input customerCommunication_UserCreateOrConnectWithoutSessionsInput {
  where: customerCommunication_UserWhereUniqueInput!
  create: customerCommunication_UserCreateWithoutSessionsInput!
}

input customerCommunication_UserCreateNestedOneWithoutSessionsInput {
  create: customerCommunication_UserCreateWithoutSessionsInput
  connectOrCreate: customerCommunication_UserCreateOrConnectWithoutSessionsInput
  connect: customerCommunication_UserWhereUniqueInput
}

input customerCommunication_SessionCreateInput {
  id: String
  sessionToken: String!
  expires: DateTime!
  user: customerCommunication_UserCreateNestedOneWithoutSessionsInput!
}

input customerCommunication_AccountUpdateWithoutUserInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  type: customerCommunication_StringFieldUpdateOperationsInput
  provider: customerCommunication_StringFieldUpdateOperationsInput
  providerAccountId: customerCommunication_StringFieldUpdateOperationsInput
  refresh_token: customerCommunication_NullableStringFieldUpdateOperationsInput
  access_token: customerCommunication_NullableStringFieldUpdateOperationsInput
  expires_at: customerCommunication_NullableIntFieldUpdateOperationsInput
  token_type: customerCommunication_NullableStringFieldUpdateOperationsInput
  scope: customerCommunication_NullableStringFieldUpdateOperationsInput
  id_token: customerCommunication_NullableStringFieldUpdateOperationsInput
  session_state: customerCommunication_NullableStringFieldUpdateOperationsInput
  createdAt: customerCommunication_DateTimeFieldUpdateOperationsInput
  updatedAt: customerCommunication_DateTimeFieldUpdateOperationsInput
}

input customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput {
  where: customerCommunication_AccountWhereUniqueInput!
  update: customerCommunication_AccountUpdateWithoutUserInput!
  create: customerCommunication_AccountCreateWithoutUserInput!
}

input customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput {
  where: customerCommunication_AccountWhereUniqueInput!
  data: customerCommunication_AccountUpdateWithoutUserInput!
}

input customerCommunication_AccountScalarWhereInput {
  AND: customerCommunication_AccountScalarWhereInput
  OR: [customerCommunication_AccountScalarWhereInput]
  NOT: customerCommunication_AccountScalarWhereInput
  id: customerCommunication_StringFilter
  userId: customerCommunication_StringFilter
  type: customerCommunication_StringFilter
  provider: customerCommunication_StringFilter
  providerAccountId: customerCommunication_StringFilter
  refresh_token: customerCommunication_StringNullableFilter
  access_token: customerCommunication_StringNullableFilter
  expires_at: customerCommunication_IntNullableFilter
  token_type: customerCommunication_StringNullableFilter
  scope: customerCommunication_StringNullableFilter
  id_token: customerCommunication_StringNullableFilter
  session_state: customerCommunication_StringNullableFilter
  createdAt: customerCommunication_DateTimeFilter
  updatedAt: customerCommunication_DateTimeFilter
}

input customerCommunication_AccountUpdateManyWithWhereWithoutUserInput {
  where: customerCommunication_AccountScalarWhereInput!
  data: customerCommunication_AccountUpdateManyMutationInput!
}

input customerCommunication_AccountUpdateManyWithoutUserNestedInput {
  create: customerCommunication_AccountCreateWithoutUserInput
  connectOrCreate: customerCommunication_AccountCreateOrConnectWithoutUserInput
  upsert: customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput
  createMany: customerCommunication_AccountCreateManyUserInputEnvelope
  set: customerCommunication_AccountWhereUniqueInput
  disconnect: customerCommunication_AccountWhereUniqueInput
  delete: customerCommunication_AccountWhereUniqueInput
  connect: customerCommunication_AccountWhereUniqueInput
  update: customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput
  updateMany: customerCommunication_AccountUpdateManyWithWhereWithoutUserInput
  deleteMany: customerCommunication_AccountScalarWhereInput
}

input customerCommunication_UserUpdateWithoutSessionsInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  name: customerCommunication_NullableStringFieldUpdateOperationsInput
  email: customerCommunication_NullableStringFieldUpdateOperationsInput
  emailVerified: customerCommunication_NullableDateTimeFieldUpdateOperationsInput
  image: customerCommunication_NullableStringFieldUpdateOperationsInput
  createdAt: customerCommunication_DateTimeFieldUpdateOperationsInput
  updatedAt: customerCommunication_DateTimeFieldUpdateOperationsInput
  userType: customerCommunication_UserType
  stripeCustomerId: customerCommunication_NullableStringFieldUpdateOperationsInput
  stripeSubscriptionId: customerCommunication_NullableStringFieldUpdateOperationsInput
  stripePriceId: customerCommunication_NullableStringFieldUpdateOperationsInput
  stripeCurrentPeriodEnd: customerCommunication_NullableDateTimeFieldUpdateOperationsInput
  interactions: customerCommunication_InteractionUpdateManyWithoutUserNestedInput
  accounts: customerCommunication_AccountUpdateManyWithoutUserNestedInput
}

input customerCommunication_UserUpsertWithoutSessionsInput {
  update: customerCommunication_UserUpdateWithoutSessionsInput!
  create: customerCommunication_UserCreateWithoutSessionsInput!
}

input customerCommunication_UserUpdateOneRequiredWithoutSessionsNestedInput {
  create: customerCommunication_UserCreateWithoutSessionsInput
  connectOrCreate: customerCommunication_UserCreateOrConnectWithoutSessionsInput
  upsert: customerCommunication_UserUpsertWithoutSessionsInput
  connect: customerCommunication_UserWhereUniqueInput
  update: customerCommunication_UserUpdateWithoutSessionsInput
}

input customerCommunication_SessionUpdateInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  sessionToken: customerCommunication_StringFieldUpdateOperationsInput
  expires: customerCommunication_DateTimeFieldUpdateOperationsInput
  user: customerCommunication_UserUpdateOneRequiredWithoutSessionsNestedInput
}

input customerCommunication_SessionCreateManyInput {
  id: String
  sessionToken: String!
  userId: String!
  expires: DateTime!
}

input customerCommunication_VerificationTokenCreateInput {
  identifier: String!
  token: String!
  expires: DateTime!
}

input customerCommunication_VerificationTokenUpdateInput {
  identifier: customerCommunication_StringFieldUpdateOperationsInput
  token: customerCommunication_StringFieldUpdateOperationsInput
  expires: customerCommunication_DateTimeFieldUpdateOperationsInput
}

input customerCommunication_VerificationTokenCreateManyInput {
  identifier: String!
  token: String!
  expires: DateTime!
}

input customerCommunication_VerificationTokenUpdateManyMutationInput {
  identifier: customerCommunication_StringFieldUpdateOperationsInput
  token: customerCommunication_StringFieldUpdateOperationsInput
  expires: customerCommunication_DateTimeFieldUpdateOperationsInput
}

input customerCommunication_UserCreateInput {
  id: String
  name: String
  email: String
  emailVerified: DateTime
  image: String
  createdAt: DateTime
  updatedAt: DateTime
  userType: customerCommunication_UserType!
  stripeCustomerId: String
  stripeSubscriptionId: String
  stripePriceId: String
  stripeCurrentPeriodEnd: DateTime
  interactions: customerCommunication_InteractionCreateNestedManyWithoutUserInput
  accounts: customerCommunication_AccountCreateNestedManyWithoutUserInput
  sessions: customerCommunication_SessionCreateNestedManyWithoutUserInput
}

input customerCommunication_UserUpdateInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  name: customerCommunication_NullableStringFieldUpdateOperationsInput
  email: customerCommunication_NullableStringFieldUpdateOperationsInput
  emailVerified: customerCommunication_NullableDateTimeFieldUpdateOperationsInput
  image: customerCommunication_NullableStringFieldUpdateOperationsInput
  createdAt: customerCommunication_DateTimeFieldUpdateOperationsInput
  updatedAt: customerCommunication_DateTimeFieldUpdateOperationsInput
  userType: customerCommunication_UserType
  stripeCustomerId: customerCommunication_NullableStringFieldUpdateOperationsInput
  stripeSubscriptionId: customerCommunication_NullableStringFieldUpdateOperationsInput
  stripePriceId: customerCommunication_NullableStringFieldUpdateOperationsInput
  stripeCurrentPeriodEnd: customerCommunication_NullableDateTimeFieldUpdateOperationsInput
  interactions: customerCommunication_InteractionUpdateManyWithoutUserNestedInput
  accounts: customerCommunication_AccountUpdateManyWithoutUserNestedInput
  sessions: customerCommunication_SessionUpdateManyWithoutUserNestedInput
}

input customerCommunication_UserCreateManyInput {
  id: String
  name: String
  email: String
  emailVerified: DateTime
  image: String
  createdAt: DateTime
  updatedAt: DateTime
  userType: customerCommunication_UserType!
  stripeCustomerId: String
  stripeSubscriptionId: String
  stripePriceId: String
  stripeCurrentPeriodEnd: DateTime
}

input customerCommunication_UserUpdateManyMutationInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  name: customerCommunication_NullableStringFieldUpdateOperationsInput
  email: customerCommunication_NullableStringFieldUpdateOperationsInput
  emailVerified: customerCommunication_NullableDateTimeFieldUpdateOperationsInput
  image: customerCommunication_NullableStringFieldUpdateOperationsInput
  createdAt: customerCommunication_DateTimeFieldUpdateOperationsInput
  updatedAt: customerCommunication_DateTimeFieldUpdateOperationsInput
  userType: customerCommunication_UserType
  stripeCustomerId: customerCommunication_NullableStringFieldUpdateOperationsInput
  stripeSubscriptionId: customerCommunication_NullableStringFieldUpdateOperationsInput
  stripePriceId: customerCommunication_NullableStringFieldUpdateOperationsInput
  stripeCurrentPeriodEnd: customerCommunication_NullableDateTimeFieldUpdateOperationsInput
}

input customerCommunication_UserCreateWithoutInteractionsInput {
  id: String
  name: String
  email: String
  emailVerified: DateTime
  image: String
  createdAt: DateTime
  updatedAt: DateTime
  userType: customerCommunication_UserType!
  stripeCustomerId: String
  stripeSubscriptionId: String
  stripePriceId: String
  stripeCurrentPeriodEnd: DateTime
  accounts: customerCommunication_AccountCreateNestedManyWithoutUserInput
  sessions: customerCommunication_SessionCreateNestedManyWithoutUserInput
}

input customerCommunication_UserCreateOrConnectWithoutInteractionsInput {
  where: customerCommunication_UserWhereUniqueInput!
  create: customerCommunication_UserCreateWithoutInteractionsInput!
}

input customerCommunication_UserCreateNestedOneWithoutInteractionsInput {
  create: customerCommunication_UserCreateWithoutInteractionsInput
  connectOrCreate: customerCommunication_UserCreateOrConnectWithoutInteractionsInput
  connect: customerCommunication_UserWhereUniqueInput
}

input customerCommunication_InteractionCreateInput {
  id: String
  interactionType: customerCommunication_InteractionType!
  content: String!
  timestamp: DateTime!
  user: customerCommunication_UserCreateNestedOneWithoutInteractionsInput!
  Widget: customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput
}

input customerCommunication_UserUpdateWithoutInteractionsInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  name: customerCommunication_NullableStringFieldUpdateOperationsInput
  email: customerCommunication_NullableStringFieldUpdateOperationsInput
  emailVerified: customerCommunication_NullableDateTimeFieldUpdateOperationsInput
  image: customerCommunication_NullableStringFieldUpdateOperationsInput
  createdAt: customerCommunication_DateTimeFieldUpdateOperationsInput
  updatedAt: customerCommunication_DateTimeFieldUpdateOperationsInput
  userType: customerCommunication_UserType
  stripeCustomerId: customerCommunication_NullableStringFieldUpdateOperationsInput
  stripeSubscriptionId: customerCommunication_NullableStringFieldUpdateOperationsInput
  stripePriceId: customerCommunication_NullableStringFieldUpdateOperationsInput
  stripeCurrentPeriodEnd: customerCommunication_NullableDateTimeFieldUpdateOperationsInput
  accounts: customerCommunication_AccountUpdateManyWithoutUserNestedInput
  sessions: customerCommunication_SessionUpdateManyWithoutUserNestedInput
}

input customerCommunication_UserUpsertWithoutInteractionsInput {
  update: customerCommunication_UserUpdateWithoutInteractionsInput!
  create: customerCommunication_UserCreateWithoutInteractionsInput!
}

input customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput {
  create: customerCommunication_UserCreateWithoutInteractionsInput
  connectOrCreate: customerCommunication_UserCreateOrConnectWithoutInteractionsInput
  upsert: customerCommunication_UserUpsertWithoutInteractionsInput
  connect: customerCommunication_UserWhereUniqueInput
  update: customerCommunication_UserUpdateWithoutInteractionsInput
}

input customerCommunication_InteractionUpdateInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  interactionType: customerCommunication_InteractionType
  content: customerCommunication_StringFieldUpdateOperationsInput
  timestamp: customerCommunication_DateTimeFieldUpdateOperationsInput
  user: customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput
  Widget: customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput
}

input customerCommunication_InteractionCreateManyInput {
  id: String
  interactionType: customerCommunication_InteractionType!
  content: String!
  timestamp: DateTime!
  userId: String!
  widgetId: String
}

input customerCommunication_InteractionCreateWithoutWidgetInput {
  id: String
  interactionType: customerCommunication_InteractionType!
  content: String!
  timestamp: DateTime!
  user: customerCommunication_UserCreateNestedOneWithoutInteractionsInput!
}

input customerCommunication_InteractionCreateOrConnectWithoutWidgetInput {
  where: customerCommunication_InteractionWhereUniqueInput!
  create: customerCommunication_InteractionCreateWithoutWidgetInput!
}

input customerCommunication_InteractionCreateManyWidgetInput {
  id: String
  interactionType: customerCommunication_InteractionType!
  content: String!
  timestamp: DateTime!
  userId: String!
}

input customerCommunication_InteractionCreateManyWidgetInputEnvelope {
  data: customerCommunication_InteractionCreateManyWidgetInput!
  skipDuplicates: Boolean
}

input customerCommunication_InteractionCreateNestedManyWithoutWidgetInput {
  create: customerCommunication_InteractionCreateWithoutWidgetInput
  connectOrCreate: customerCommunication_InteractionCreateOrConnectWithoutWidgetInput
  createMany: customerCommunication_InteractionCreateManyWidgetInputEnvelope
  connect: customerCommunication_InteractionWhereUniqueInput
}

input customerCommunication_WidgetCreateInput {
  id: String
  embeddedIn: String!
  interactions: customerCommunication_InteractionCreateNestedManyWithoutWidgetInput
}

input customerCommunication_InteractionUpdateWithoutWidgetInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  interactionType: customerCommunication_InteractionType
  content: customerCommunication_StringFieldUpdateOperationsInput
  timestamp: customerCommunication_DateTimeFieldUpdateOperationsInput
  user: customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput
}

input customerCommunication_InteractionUpsertWithWhereUniqueWithoutWidgetInput {
  where: customerCommunication_InteractionWhereUniqueInput!
  update: customerCommunication_InteractionUpdateWithoutWidgetInput!
  create: customerCommunication_InteractionCreateWithoutWidgetInput!
}

input customerCommunication_InteractionUpdateWithWhereUniqueWithoutWidgetInput {
  where: customerCommunication_InteractionWhereUniqueInput!
  data: customerCommunication_InteractionUpdateWithoutWidgetInput!
}

input customerCommunication_InteractionUpdateManyWithWhereWithoutWidgetInput {
  where: customerCommunication_InteractionScalarWhereInput!
  data: customerCommunication_InteractionUpdateManyMutationInput!
}

input customerCommunication_InteractionUpdateManyWithoutWidgetNestedInput {
  create: customerCommunication_InteractionCreateWithoutWidgetInput
  connectOrCreate: customerCommunication_InteractionCreateOrConnectWithoutWidgetInput
  upsert: customerCommunication_InteractionUpsertWithWhereUniqueWithoutWidgetInput
  createMany: customerCommunication_InteractionCreateManyWidgetInputEnvelope
  set: customerCommunication_InteractionWhereUniqueInput
  disconnect: customerCommunication_InteractionWhereUniqueInput
  delete: customerCommunication_InteractionWhereUniqueInput
  connect: customerCommunication_InteractionWhereUniqueInput
  update: customerCommunication_InteractionUpdateWithWhereUniqueWithoutWidgetInput
  updateMany: customerCommunication_InteractionUpdateManyWithWhereWithoutWidgetInput
  deleteMany: customerCommunication_InteractionScalarWhereInput
}

input customerCommunication_WidgetUpdateInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  embeddedIn: customerCommunication_StringFieldUpdateOperationsInput
  interactions: customerCommunication_InteractionUpdateManyWithoutWidgetNestedInput
}

input customerCommunication_WidgetCreateManyInput {
  id: String
  embeddedIn: String!
}

input customerCommunication_WidgetUpdateManyMutationInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  embeddedIn: customerCommunication_StringFieldUpdateOperationsInput
}

input customerCommunication_FilterCreateInput {
  id: String
  audience: customerCommunication_AudienceType!
  output: customerCommunication_OutputType!
}

input customerCommunication_FilterUpdateInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  audience: customerCommunication_AudienceType
  output: customerCommunication_OutputType
}

input customerCommunication_FilterCreateManyInput {
  id: String
  audience: customerCommunication_AudienceType!
  output: customerCommunication_OutputType!
}

input customerCommunication_FilterUpdateManyMutationInput {
  id: customerCommunication_StringFieldUpdateOperationsInput
  audience: customerCommunication_AudienceType
  output: customerCommunication_OutputType
}

type Mutation {
  customerCommunication_createOneAccount(data: customerCommunication_AccountCreateInput!): customerCommunication_Account
  customerCommunication_upsertOneAccount(where: customerCommunication_AccountWhereUniqueInput!, create: customerCommunication_AccountCreateInput!, update: customerCommunication_AccountUpdateInput!): customerCommunication_Account
  customerCommunication_createManyAccount(data: [customerCommunication_AccountCreateManyInput]!, skipDuplicates: Boolean): customerCommunication_AffectedRowsOutput
  customerCommunication_deleteOneAccount(where: customerCommunication_AccountWhereUniqueInput!): customerCommunication_Account
  customerCommunication_updateOneAccount(data: customerCommunication_AccountUpdateInput!, where: customerCommunication_AccountWhereUniqueInput!): customerCommunication_Account
  customerCommunication_updateManyAccount(data: customerCommunication_AccountUpdateManyMutationInput!, where: customerCommunication_AccountWhereInput): customerCommunication_AffectedRowsOutput
  customerCommunication_deleteManyAccount(where: customerCommunication_AccountWhereInput): customerCommunication_AffectedRowsOutput
  customerCommunication_createOneSession(data: customerCommunication_SessionCreateInput!): customerCommunication_Session
  customerCommunication_upsertOneSession(where: customerCommunication_SessionWhereUniqueInput!, create: customerCommunication_SessionCreateInput!, update: customerCommunication_SessionUpdateInput!): customerCommunication_Session
  customerCommunication_createManySession(data: [customerCommunication_SessionCreateManyInput]!, skipDuplicates: Boolean): customerCommunication_AffectedRowsOutput
  customerCommunication_deleteOneSession(where: customerCommunication_SessionWhereUniqueInput!): customerCommunication_Session
  customerCommunication_updateOneSession(data: customerCommunication_SessionUpdateInput!, where: customerCommunication_SessionWhereUniqueInput!): customerCommunication_Session
  customerCommunication_updateManySession(data: customerCommunication_SessionUpdateManyMutationInput!, where: customerCommunication_SessionWhereInput): customerCommunication_AffectedRowsOutput
  customerCommunication_deleteManySession(where: customerCommunication_SessionWhereInput): customerCommunication_AffectedRowsOutput
  customerCommunication_createOneVerificationToken(data: customerCommunication_VerificationTokenCreateInput!): customerCommunication_VerificationToken
  customerCommunication_upsertOneVerificationToken(where: customerCommunication_VerificationTokenWhereUniqueInput!, create: customerCommunication_VerificationTokenCreateInput!, update: customerCommunication_VerificationTokenUpdateInput!): customerCommunication_VerificationToken
  customerCommunication_createManyVerificationToken(data: [customerCommunication_VerificationTokenCreateManyInput]!, skipDuplicates: Boolean): customerCommunication_AffectedRowsOutput
  customerCommunication_deleteOneVerificationToken(where: customerCommunication_VerificationTokenWhereUniqueInput!): customerCommunication_VerificationToken
  customerCommunication_updateOneVerificationToken(data: customerCommunication_VerificationTokenUpdateInput!, where: customerCommunication_VerificationTokenWhereUniqueInput!): customerCommunication_VerificationToken
  customerCommunication_updateManyVerificationToken(data: customerCommunication_VerificationTokenUpdateManyMutationInput!, where: customerCommunication_VerificationTokenWhereInput): customerCommunication_AffectedRowsOutput
  customerCommunication_deleteManyVerificationToken(where: customerCommunication_VerificationTokenWhereInput): customerCommunication_AffectedRowsOutput
  customerCommunication_createOneUser(data: customerCommunication_UserCreateInput!): customerCommunication_User
  customerCommunication_upsertOneUser(where: customerCommunication_UserWhereUniqueInput!, create: customerCommunication_UserCreateInput!, update: customerCommunication_UserUpdateInput!): customerCommunication_User
  customerCommunication_createManyUser(data: [customerCommunication_UserCreateManyInput]!, skipDuplicates: Boolean): customerCommunication_AffectedRowsOutput
  customerCommunication_deleteOneUser(where: customerCommunication_UserWhereUniqueInput!): customerCommunication_User
  customerCommunication_updateOneUser(data: customerCommunication_UserUpdateInput!, where: customerCommunication_UserWhereUniqueInput!): customerCommunication_User
  customerCommunication_updateManyUser(data: customerCommunication_UserUpdateManyMutationInput!, where: customerCommunication_UserWhereInput): customerCommunication_AffectedRowsOutput
  customerCommunication_deleteManyUser(where: customerCommunication_UserWhereInput): customerCommunication_AffectedRowsOutput
  customerCommunication_createOneInteraction(data: customerCommunication_InteractionCreateInput!): customerCommunication_Interaction
  customerCommunication_upsertOneInteraction(where: customerCommunication_InteractionWhereUniqueInput!, create: customerCommunication_InteractionCreateInput!, update: customerCommunication_InteractionUpdateInput!): customerCommunication_Interaction
  customerCommunication_createManyInteraction(data: [customerCommunication_InteractionCreateManyInput]!, skipDuplicates: Boolean): customerCommunication_AffectedRowsOutput
  customerCommunication_deleteOneInteraction(where: customerCommunication_InteractionWhereUniqueInput!): customerCommunication_Interaction
  customerCommunication_updateOneInteraction(data: customerCommunication_InteractionUpdateInput!, where: customerCommunication_InteractionWhereUniqueInput!): customerCommunication_Interaction
  customerCommunication_updateManyInteraction(data: customerCommunication_InteractionUpdateManyMutationInput!, where: customerCommunication_InteractionWhereInput): customerCommunication_AffectedRowsOutput
  customerCommunication_deleteManyInteraction(where: customerCommunication_InteractionWhereInput): customerCommunication_AffectedRowsOutput
  customerCommunication_createOneWidget(data: customerCommunication_WidgetCreateInput!): customerCommunication_Widget
  customerCommunication_upsertOneWidget(where: customerCommunication_WidgetWhereUniqueInput!, create: customerCommunication_WidgetCreateInput!, update: customerCommunication_WidgetUpdateInput!): customerCommunication_Widget
  customerCommunication_createManyWidget(data: [customerCommunication_WidgetCreateManyInput]!, skipDuplicates: Boolean): customerCommunication_AffectedRowsOutput
  customerCommunication_deleteOneWidget(where: customerCommunication_WidgetWhereUniqueInput!): customerCommunication_Widget
  customerCommunication_updateOneWidget(data: customerCommunication_WidgetUpdateInput!, where: customerCommunication_WidgetWhereUniqueInput!): customerCommunication_Widget
  customerCommunication_updateManyWidget(data: customerCommunication_WidgetUpdateManyMutationInput!, where: customerCommunication_WidgetWhereInput): customerCommunication_AffectedRowsOutput
  customerCommunication_deleteManyWidget(where: customerCommunication_WidgetWhereInput): customerCommunication_AffectedRowsOutput
  customerCommunication_createOneFilter(data: customerCommunication_FilterCreateInput!): customerCommunication_Filter
  customerCommunication_upsertOneFilter(where: customerCommunication_FilterWhereUniqueInput!, create: customerCommunication_FilterCreateInput!, update: customerCommunication_FilterUpdateInput!): customerCommunication_Filter
  customerCommunication_createManyFilter(data: [customerCommunication_FilterCreateManyInput]!, skipDuplicates: Boolean): customerCommunication_AffectedRowsOutput
  customerCommunication_deleteOneFilter(where: customerCommunication_FilterWhereUniqueInput!): customerCommunication_Filter
  customerCommunication_updateOneFilter(data: customerCommunication_FilterUpdateInput!, where: customerCommunication_FilterWhereUniqueInput!): customerCommunication_Filter
  customerCommunication_updateManyFilter(data: customerCommunication_FilterUpdateManyMutationInput!, where: customerCommunication_FilterWhereInput): customerCommunication_AffectedRowsOutput
  customerCommunication_deleteManyFilter(where: customerCommunication_FilterWhereInput): customerCommunication_AffectedRowsOutput
  customerCommunication_executeRaw(query: String!, parameters: [String]): Int!
  clientPortal_createOneClient(data: clientPortal_ClientCreateInput!): clientPortal_Client
  clientPortal_upsertOneClient(where: clientPortal_ClientWhereUniqueInput!, create: clientPortal_ClientCreateInput!, update: clientPortal_ClientUpdateInput!): clientPortal_Client
  clientPortal_createManyClient(data: [clientPortal_ClientCreateManyInput]!, skipDuplicates: Boolean): clientPortal_AffectedRowsOutput
  clientPortal_deleteOneClient(where: clientPortal_ClientWhereUniqueInput!): clientPortal_Client
  clientPortal_updateOneClient(data: clientPortal_ClientUpdateInput!, where: clientPortal_ClientWhereUniqueInput!): clientPortal_Client
  clientPortal_updateManyClient(data: clientPortal_ClientUpdateManyMutationInput!, where: clientPortal_ClientWhereInput): clientPortal_AffectedRowsOutput
  clientPortal_deleteManyClient(where: clientPortal_ClientWhereInput): clientPortal_AffectedRowsOutput
  clientPortal_createOneService(data: clientPortal_ServiceCreateInput!): clientPortal_Service
  clientPortal_upsertOneService(where: clientPortal_ServiceWhereUniqueInput!, create: clientPortal_ServiceCreateInput!, update: clientPortal_ServiceUpdateInput!): clientPortal_Service
  clientPortal_createManyService(data: [clientPortal_ServiceCreateManyInput]!, skipDuplicates: Boolean): clientPortal_AffectedRowsOutput
  clientPortal_deleteOneService(where: clientPortal_ServiceWhereUniqueInput!): clientPortal_Service
  clientPortal_updateOneService(data: clientPortal_ServiceUpdateInput!, where: clientPortal_ServiceWhereUniqueInput!): clientPortal_Service
  clientPortal_updateManyService(data: clientPortal_ServiceUpdateManyMutationInput!, where: clientPortal_ServiceWhereInput): clientPortal_AffectedRowsOutput
  clientPortal_deleteManyService(where: clientPortal_ServiceWhereInput): clientPortal_AffectedRowsOutput
  clientPortal_createOneActivity(data: clientPortal_ActivityCreateInput!): clientPortal_Activity
  clientPortal_upsertOneActivity(where: clientPortal_ActivityWhereUniqueInput!, create: clientPortal_ActivityCreateInput!, update: clientPortal_ActivityUpdateInput!): clientPortal_Activity
  clientPortal_createManyActivity(data: [clientPortal_ActivityCreateManyInput]!, skipDuplicates: Boolean): clientPortal_AffectedRowsOutput
  clientPortal_deleteOneActivity(where: clientPortal_ActivityWhereUniqueInput!): clientPortal_Activity
  clientPortal_updateOneActivity(data: clientPortal_ActivityUpdateInput!, where: clientPortal_ActivityWhereUniqueInput!): clientPortal_Activity
  clientPortal_updateManyActivity(data: clientPortal_ActivityUpdateManyMutationInput!, where: clientPortal_ActivityWhereInput): clientPortal_AffectedRowsOutput
  clientPortal_deleteManyActivity(where: clientPortal_ActivityWhereInput): clientPortal_AffectedRowsOutput
  clientPortal_executeRaw(query: String!, parameters: [String]): Int!
  gpac_createOneUser(data: gpac_UserCreateInput!): gpac_User
  gpac_upsertOneUser(where: gpac_UserWhereUniqueInput!, create: gpac_UserCreateInput!, update: gpac_UserUpdateInput!): gpac_User
  gpac_createManyUser(data: [gpac_UserCreateManyInput]!, skipDuplicates: Boolean): gpac_AffectedRowsOutput
  gpac_deleteOneUser(where: gpac_UserWhereUniqueInput!): gpac_User
  gpac_updateOneUser(data: gpac_UserUpdateInput!, where: gpac_UserWhereUniqueInput!): gpac_User
  gpac_updateManyUser(data: gpac_UserUpdateManyMutationInput!, where: gpac_UserWhereInput): gpac_AffectedRowsOutput
  gpac_deleteManyUser(where: gpac_UserWhereInput): gpac_AffectedRowsOutput
  gpac_createOnePolicy(data: gpac_PolicyCreateInput!): gpac_Policy
  gpac_upsertOnePolicy(where: gpac_PolicyWhereUniqueInput!, create: gpac_PolicyCreateInput!, update: gpac_PolicyUpdateInput!): gpac_Policy
  gpac_createManyPolicy(data: [gpac_PolicyCreateManyInput]!, skipDuplicates: Boolean): gpac_AffectedRowsOutput
  gpac_deleteOnePolicy(where: gpac_PolicyWhereUniqueInput!): gpac_Policy
  gpac_updateOnePolicy(data: gpac_PolicyUpdateInput!, where: gpac_PolicyWhereUniqueInput!): gpac_Policy
  gpac_updateManyPolicy(data: gpac_PolicyUpdateManyMutationInput!, where: gpac_PolicyWhereInput): gpac_AffectedRowsOutput
  gpac_deleteManyPolicy(where: gpac_PolicyWhereInput): gpac_AffectedRowsOutput
  gpac_createOneAdminAction(data: gpac_AdminActionCreateInput!): gpac_AdminAction
  gpac_upsertOneAdminAction(where: gpac_AdminActionWhereUniqueInput!, create: gpac_AdminActionCreateInput!, update: gpac_AdminActionUpdateInput!): gpac_AdminAction
  gpac_createManyAdminAction(data: [gpac_AdminActionCreateManyInput]!, skipDuplicates: Boolean): gpac_AffectedRowsOutput
  gpac_deleteOneAdminAction(where: gpac_AdminActionWhereUniqueInput!): gpac_AdminAction
  gpac_updateOneAdminAction(data: gpac_AdminActionUpdateInput!, where: gpac_AdminActionWhereUniqueInput!): gpac_AdminAction
  gpac_updateManyAdminAction(data: gpac_AdminActionUpdateManyMutationInput!, where: gpac_AdminActionWhereInput): gpac_AffectedRowsOutput
  gpac_deleteManyAdminAction(where: gpac_AdminActionWhereInput): gpac_AffectedRowsOutput
  gpac_executeRaw(query: String!, parameters: [String]): Int!
  guardianOnline_createOneUser(data: guardianOnline_UserCreateInput!): guardianOnline_User
  guardianOnline_upsertOneUser(where: guardianOnline_UserWhereUniqueInput!, create: guardianOnline_UserCreateInput!, update: guardianOnline_UserUpdateInput!): guardianOnline_User
  guardianOnline_createManyUser(data: [guardianOnline_UserCreateManyInput]!, skipDuplicates: Boolean): guardianOnline_AffectedRowsOutput
  guardianOnline_deleteOneUser(where: guardianOnline_UserWhereUniqueInput!): guardianOnline_User
  guardianOnline_updateOneUser(data: guardianOnline_UserUpdateInput!, where: guardianOnline_UserWhereUniqueInput!): guardianOnline_User
  guardianOnline_updateManyUser(data: guardianOnline_UserUpdateManyMutationInput!, where: guardianOnline_UserWhereInput): guardianOnline_AffectedRowsOutput
  guardianOnline_deleteManyUser(where: guardianOnline_UserWhereInput): guardianOnline_AffectedRowsOutput
  guardianOnline_createOneFeature(data: guardianOnline_FeatureCreateInput!): guardianOnline_Feature
  guardianOnline_upsertOneFeature(where: guardianOnline_FeatureWhereUniqueInput!, create: guardianOnline_FeatureCreateInput!, update: guardianOnline_FeatureUpdateInput!): guardianOnline_Feature
  guardianOnline_createManyFeature(data: [guardianOnline_FeatureCreateManyInput]!, skipDuplicates: Boolean): guardianOnline_AffectedRowsOutput
  guardianOnline_deleteOneFeature(where: guardianOnline_FeatureWhereUniqueInput!): guardianOnline_Feature
  guardianOnline_updateOneFeature(data: guardianOnline_FeatureUpdateInput!, where: guardianOnline_FeatureWhereUniqueInput!): guardianOnline_Feature
  guardianOnline_updateManyFeature(data: guardianOnline_FeatureUpdateManyMutationInput!, where: guardianOnline_FeatureWhereInput): guardianOnline_AffectedRowsOutput
  guardianOnline_deleteManyFeature(where: guardianOnline_FeatureWhereInput): guardianOnline_AffectedRowsOutput
  guardianOnline_createOneUserLog(data: guardianOnline_UserLogCreateInput!): guardianOnline_UserLog
  guardianOnline_upsertOneUserLog(where: guardianOnline_UserLogWhereUniqueInput!, create: guardianOnline_UserLogCreateInput!, update: guardianOnline_UserLogUpdateInput!): guardianOnline_UserLog
  guardianOnline_createManyUserLog(data: [guardianOnline_UserLogCreateManyInput]!, skipDuplicates: Boolean): guardianOnline_AffectedRowsOutput
  guardianOnline_deleteOneUserLog(where: guardianOnline_UserLogWhereUniqueInput!): guardianOnline_UserLog
  guardianOnline_updateOneUserLog(data: guardianOnline_UserLogUpdateInput!, where: guardianOnline_UserLogWhereUniqueInput!): guardianOnline_UserLog
  guardianOnline_updateManyUserLog(data: guardianOnline_UserLogUpdateManyMutationInput!, where: guardianOnline_UserLogWhereInput): guardianOnline_AffectedRowsOutput
  guardianOnline_deleteManyUserLog(where: guardianOnline_UserLogWhereInput): guardianOnline_AffectedRowsOutput
  guardianOnline_executeRaw(query: String!, parameters: [String]): Int!
  livingBalanceSheet_createOneUser(data: livingBalanceSheet_UserCreateInput!): livingBalanceSheet_User
  livingBalanceSheet_upsertOneUser(where: livingBalanceSheet_UserWhereUniqueInput!, create: livingBalanceSheet_UserCreateInput!, update: livingBalanceSheet_UserUpdateInput!): livingBalanceSheet_User
  livingBalanceSheet_createManyUser(data: [livingBalanceSheet_UserCreateManyInput]!, skipDuplicates: Boolean): livingBalanceSheet_AffectedRowsOutput
  livingBalanceSheet_deleteOneUser(where: livingBalanceSheet_UserWhereUniqueInput!): livingBalanceSheet_User
  livingBalanceSheet_updateOneUser(data: livingBalanceSheet_UserUpdateInput!, where: livingBalanceSheet_UserWhereUniqueInput!): livingBalanceSheet_User
  livingBalanceSheet_updateManyUser(data: livingBalanceSheet_UserUpdateManyMutationInput!, where: livingBalanceSheet_UserWhereInput): livingBalanceSheet_AffectedRowsOutput
  livingBalanceSheet_deleteManyUser(where: livingBalanceSheet_UserWhereInput): livingBalanceSheet_AffectedRowsOutput
  livingBalanceSheet_createOneAsset(data: livingBalanceSheet_AssetCreateInput!): livingBalanceSheet_Asset
  livingBalanceSheet_upsertOneAsset(where: livingBalanceSheet_AssetWhereUniqueInput!, create: livingBalanceSheet_AssetCreateInput!, update: livingBalanceSheet_AssetUpdateInput!): livingBalanceSheet_Asset
  livingBalanceSheet_createManyAsset(data: [livingBalanceSheet_AssetCreateManyInput]!, skipDuplicates: Boolean): livingBalanceSheet_AffectedRowsOutput
  livingBalanceSheet_deleteOneAsset(where: livingBalanceSheet_AssetWhereUniqueInput!): livingBalanceSheet_Asset
  livingBalanceSheet_updateOneAsset(data: livingBalanceSheet_AssetUpdateInput!, where: livingBalanceSheet_AssetWhereUniqueInput!): livingBalanceSheet_Asset
  livingBalanceSheet_updateManyAsset(data: livingBalanceSheet_AssetUpdateManyMutationInput!, where: livingBalanceSheet_AssetWhereInput): livingBalanceSheet_AffectedRowsOutput
  livingBalanceSheet_deleteManyAsset(where: livingBalanceSheet_AssetWhereInput): livingBalanceSheet_AffectedRowsOutput
  livingBalanceSheet_createOneLiability(data: livingBalanceSheet_LiabilityCreateInput!): livingBalanceSheet_Liability
  livingBalanceSheet_upsertOneLiability(where: livingBalanceSheet_LiabilityWhereUniqueInput!, create: livingBalanceSheet_LiabilityCreateInput!, update: livingBalanceSheet_LiabilityUpdateInput!): livingBalanceSheet_Liability
  livingBalanceSheet_createManyLiability(data: [livingBalanceSheet_LiabilityCreateManyInput]!, skipDuplicates: Boolean): livingBalanceSheet_AffectedRowsOutput
  livingBalanceSheet_deleteOneLiability(where: livingBalanceSheet_LiabilityWhereUniqueInput!): livingBalanceSheet_Liability
  livingBalanceSheet_updateOneLiability(data: livingBalanceSheet_LiabilityUpdateInput!, where: livingBalanceSheet_LiabilityWhereUniqueInput!): livingBalanceSheet_Liability
  livingBalanceSheet_updateManyLiability(data: livingBalanceSheet_LiabilityUpdateManyMutationInput!, where: livingBalanceSheet_LiabilityWhereInput): livingBalanceSheet_AffectedRowsOutput
  livingBalanceSheet_deleteManyLiability(where: livingBalanceSheet_LiabilityWhereInput): livingBalanceSheet_AffectedRowsOutput
  livingBalanceSheet_createOneFinancialGoal(data: livingBalanceSheet_FinancialGoalCreateInput!): livingBalanceSheet_FinancialGoal
  livingBalanceSheet_upsertOneFinancialGoal(where: livingBalanceSheet_FinancialGoalWhereUniqueInput!, create: livingBalanceSheet_FinancialGoalCreateInput!, update: livingBalanceSheet_FinancialGoalUpdateInput!): livingBalanceSheet_FinancialGoal
  livingBalanceSheet_createManyFinancialGoal(data: [livingBalanceSheet_FinancialGoalCreateManyInput]!, skipDuplicates: Boolean): livingBalanceSheet_AffectedRowsOutput
  livingBalanceSheet_deleteOneFinancialGoal(where: livingBalanceSheet_FinancialGoalWhereUniqueInput!): livingBalanceSheet_FinancialGoal
  livingBalanceSheet_updateOneFinancialGoal(data: livingBalanceSheet_FinancialGoalUpdateInput!, where: livingBalanceSheet_FinancialGoalWhereUniqueInput!): livingBalanceSheet_FinancialGoal
  livingBalanceSheet_updateManyFinancialGoal(data: livingBalanceSheet_FinancialGoalUpdateManyMutationInput!, where: livingBalanceSheet_FinancialGoalWhereInput): livingBalanceSheet_AffectedRowsOutput
  livingBalanceSheet_deleteManyFinancialGoal(where: livingBalanceSheet_FinancialGoalWhereInput): livingBalanceSheet_AffectedRowsOutput
  livingBalanceSheet_executeRaw(query: String!, parameters: [String]): Int!
  smartOffice_createOneUser(data: smartOffice_UserCreateInput!): smartOffice_User
  smartOffice_upsertOneUser(where: smartOffice_UserWhereUniqueInput!, create: smartOffice_UserCreateInput!, update: smartOffice_UserUpdateInput!): smartOffice_User
  smartOffice_createManyUser(data: [smartOffice_UserCreateManyInput]!, skipDuplicates: Boolean): smartOffice_AffectedRowsOutput
  smartOffice_deleteOneUser(where: smartOffice_UserWhereUniqueInput!): smartOffice_User
  smartOffice_updateOneUser(data: smartOffice_UserUpdateInput!, where: smartOffice_UserWhereUniqueInput!): smartOffice_User
  smartOffice_updateManyUser(data: smartOffice_UserUpdateManyMutationInput!, where: smartOffice_UserWhereInput): smartOffice_AffectedRowsOutput
  smartOffice_deleteManyUser(where: smartOffice_UserWhereInput): smartOffice_AffectedRowsOutput
  smartOffice_createOneClient(data: smartOffice_ClientCreateInput!): smartOffice_Client
  smartOffice_upsertOneClient(where: smartOffice_ClientWhereUniqueInput!, create: smartOffice_ClientCreateInput!, update: smartOffice_ClientUpdateInput!): smartOffice_Client
  smartOffice_createManyClient(data: [smartOffice_ClientCreateManyInput]!, skipDuplicates: Boolean): smartOffice_AffectedRowsOutput
  smartOffice_deleteOneClient(where: smartOffice_ClientWhereUniqueInput!): smartOffice_Client
  smartOffice_updateOneClient(data: smartOffice_ClientUpdateInput!, where: smartOffice_ClientWhereUniqueInput!): smartOffice_Client
  smartOffice_updateManyClient(data: smartOffice_ClientUpdateManyMutationInput!, where: smartOffice_ClientWhereInput): smartOffice_AffectedRowsOutput
  smartOffice_deleteManyClient(where: smartOffice_ClientWhereInput): smartOffice_AffectedRowsOutput
  smartOffice_createOneTask(data: smartOffice_TaskCreateInput!): smartOffice_Task
  smartOffice_upsertOneTask(where: smartOffice_TaskWhereUniqueInput!, create: smartOffice_TaskCreateInput!, update: smartOffice_TaskUpdateInput!): smartOffice_Task
  smartOffice_createManyTask(data: [smartOffice_TaskCreateManyInput]!, skipDuplicates: Boolean): smartOffice_AffectedRowsOutput
  smartOffice_deleteOneTask(where: smartOffice_TaskWhereUniqueInput!): smartOffice_Task
  smartOffice_updateOneTask(data: smartOffice_TaskUpdateInput!, where: smartOffice_TaskWhereUniqueInput!): smartOffice_Task
  smartOffice_updateManyTask(data: smartOffice_TaskUpdateManyMutationInput!, where: smartOffice_TaskWhereInput): smartOffice_AffectedRowsOutput
  smartOffice_deleteManyTask(where: smartOffice_TaskWhereInput): smartOffice_AffectedRowsOutput
  smartOffice_createOneSale(data: smartOffice_SaleCreateInput!): smartOffice_Sale
  smartOffice_upsertOneSale(where: smartOffice_SaleWhereUniqueInput!, create: smartOffice_SaleCreateInput!, update: smartOffice_SaleUpdateInput!): smartOffice_Sale
  smartOffice_createManySale(data: [smartOffice_SaleCreateManyInput]!, skipDuplicates: Boolean): smartOffice_AffectedRowsOutput
  smartOffice_deleteOneSale(where: smartOffice_SaleWhereUniqueInput!): smartOffice_Sale
  smartOffice_updateOneSale(data: smartOffice_SaleUpdateInput!, where: smartOffice_SaleWhereUniqueInput!): smartOffice_Sale
  smartOffice_updateManySale(data: smartOffice_SaleUpdateManyMutationInput!, where: smartOffice_SaleWhereInput): smartOffice_AffectedRowsOutput
  smartOffice_deleteManySale(where: smartOffice_SaleWhereInput): smartOffice_AffectedRowsOutput
  smartOffice_executeRaw(query: String!, parameters: [String]): Int!
}

scalar DateTime

scalar JSON

scalar UUID

scalar BigInt

scalar customerCommunication_Bytes

type _Row {
  ID: ID!
  Int: Int!
  Float: Float!
  String: String!
  Boolean: Boolean!
  DateTime: DateTime!
  JSON: JSON!
  Object: _Row!
  Array: [_Row!]!
  OptionalID: ID
  OptionalInt: Int
  OptionalFloat: Float
  OptionalString: String
  OptionalBoolean: Boolean
  OptionalDateTime: DateTime
  OptionalJSON: JSON
  OptionalObject: _Row
  OptionalArray: [_Row!]
  _join: Query!
}

enum weather_CacheControlScope {
  PRIVATE
  PUBLIC
}

type weather_City {
  coord: weather_Coordinates
  country: String
  id: ID
  name: String
  weather: weather_Weather
  _join: Query!
}

type weather_Clouds {
  all: Int
  humidity: Int
  visibility: Int
  _join: Query!
}

input weather_ConfigInput {
  lang: weather_Language
  units: weather_Unit
}

type weather_Coordinates {
  lat: Float
  lon: Float
  _join: Query!
}

enum weather_Language {
  af
  al
  ar
  az
  bg
  ca
  cz
  da
  de
  el
  en
  es
  eu
  fa
  fi
  fr
  gl
  he
  hi
  hr
  hu
  id
  it
  ja
  kr
  la
  lt
  mk
  nl
  no
  pl
  pt
  pt_br
  ro
  ru
  se
  sk
  sl
  sp
  sr
  sv
  th
  tr
  ua
  uk
  vi
  zh_cn
  zh_tw
  zu
}

type weather_Summary {
  description: String
  icon: String
  title: String
  _join: Query!
}

type weather_Temperature {
  actual: Float
  feelsLike: Float
  max: Float
  min: Float
  _join: Query!
}

enum weather_Unit {
  imperial
  kelvin
  metric
}

"""The `Upload` scalar type represents a file upload."""
scalar weather_Upload

type weather_Weather {
  clouds: weather_Clouds
  summary: weather_Summary
  temperature: weather_Temperature
  timestamp: Int
  wind: weather_Wind
  _join: Query!
}

type weather_Wind {
  deg: Int
  speed: Float
  _join: Query!
}

input clientPortal_NestedStringFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: clientPortal_NestedStringFilter
}

input clientPortal_StringFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: clientPortal_NestedStringFilter
}

enum clientPortal_ServiceType {
  GENERAL_ACCESS
  QUOTES
  TRANSACTIONS
}

input clientPortal_EnumServiceTypeFilter {
  equals: clientPortal_ServiceType
  in: [clientPortal_ServiceType]
  notIn: [clientPortal_ServiceType]
  not: clientPortal_ServiceType
}

input clientPortal_JsonFilter {
  equals: JSON
  path: String
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_contains: JSON
  array_starts_with: JSON
  array_ends_with: JSON
  lt: JSON
  lte: JSON
  gt: JSON
  gte: JSON
  not: JSON
}

input clientPortal_ClientRelationFilter {
  is: clientPortal_ClientWhereInput
  isNot: clientPortal_ClientWhereInput
}

input clientPortal_ServiceWhereInput {
  AND: clientPortal_ServiceWhereInput
  OR: [clientPortal_ServiceWhereInput]
  NOT: clientPortal_ServiceWhereInput
  id: clientPortal_StringFilter
  serviceType: clientPortal_EnumServiceTypeFilter
  content: clientPortal_JsonFilter
  clientId: clientPortal_StringFilter
  client: clientPortal_ClientRelationFilter
}

input clientPortal_ServiceListRelationFilter {
  every: clientPortal_ServiceWhereInput
  some: clientPortal_ServiceWhereInput
  none: clientPortal_ServiceWhereInput
}

enum clientPortal_ActivityType {
  LOGIN
  LOGOUT
  SERVICE_ACCESS
  QUOTE_REQUEST
  TRANSACTION
}

input clientPortal_EnumActivityTypeFilter {
  equals: clientPortal_ActivityType
  in: [clientPortal_ActivityType]
  notIn: [clientPortal_ActivityType]
  not: clientPortal_ActivityType
}

input clientPortal_NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: clientPortal_NestedDateTimeFilter
}

input clientPortal_DateTimeFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: clientPortal_NestedDateTimeFilter
}

input clientPortal_ActivityWhereInput {
  AND: clientPortal_ActivityWhereInput
  OR: [clientPortal_ActivityWhereInput]
  NOT: clientPortal_ActivityWhereInput
  id: clientPortal_StringFilter
  activityType: clientPortal_EnumActivityTypeFilter
  timestamp: clientPortal_DateTimeFilter
  details: clientPortal_JsonFilter
  clientId: clientPortal_StringFilter
  client: clientPortal_ClientRelationFilter
}

input clientPortal_ActivityListRelationFilter {
  every: clientPortal_ActivityWhereInput
  some: clientPortal_ActivityWhereInput
  none: clientPortal_ActivityWhereInput
}

input clientPortal_ClientWhereInput {
  AND: clientPortal_ClientWhereInput
  OR: [clientPortal_ClientWhereInput]
  NOT: clientPortal_ClientWhereInput
  id: clientPortal_StringFilter
  username: clientPortal_StringFilter
  password: clientPortal_StringFilter
  services: clientPortal_ServiceListRelationFilter
  activities: clientPortal_ActivityListRelationFilter
}

enum clientPortal_SortOrder {
  asc
  desc
}

input clientPortal_ServiceOrderByRelationAggregateInput {
  _count: clientPortal_SortOrder
}

input clientPortal_ActivityOrderByRelationAggregateInput {
  _count: clientPortal_SortOrder
}

input clientPortal_ClientOrderByWithRelationInput {
  id: clientPortal_SortOrder
  username: clientPortal_SortOrder
  password: clientPortal_SortOrder
  services: clientPortal_ServiceOrderByRelationAggregateInput
  activities: clientPortal_ActivityOrderByRelationAggregateInput
}

input clientPortal_ClientWhereUniqueInput {
  id: String
}

enum clientPortal_ClientScalarFieldEnum {
  id
  username
  password
}

input clientPortal_ServiceOrderByWithRelationInput {
  id: clientPortal_SortOrder
  serviceType: clientPortal_SortOrder
  content: clientPortal_SortOrder
  clientId: clientPortal_SortOrder
  client: clientPortal_ClientOrderByWithRelationInput
}

input clientPortal_ServiceWhereUniqueInput {
  id: String
}

enum clientPortal_ServiceScalarFieldEnum {
  id
  serviceType
  content
  clientId
}

type clientPortal_Service {
  id: String!
  serviceType: clientPortal_ServiceType!
  content: JSON!
  clientId: String!
  client: clientPortal_Client!
  _join: Query!
}

input clientPortal_ActivityOrderByWithRelationInput {
  id: clientPortal_SortOrder
  activityType: clientPortal_SortOrder
  timestamp: clientPortal_SortOrder
  details: clientPortal_SortOrder
  clientId: clientPortal_SortOrder
  client: clientPortal_ClientOrderByWithRelationInput
}

input clientPortal_ActivityWhereUniqueInput {
  id: String
}

enum clientPortal_ActivityScalarFieldEnum {
  id
  activityType
  timestamp
  details
  clientId
}

type clientPortal_Activity {
  id: String!
  activityType: clientPortal_ActivityType!
  timestamp: DateTime!
  details: JSON!
  clientId: String!
  client: clientPortal_Client!
  _join: Query!
}

type clientPortal_ClientCountOutputType {
  services: Int!
  activities: Int!
  _join: Query!
}

type clientPortal_Client {
  id: String!
  username: String!
  password: String!
  services(where: clientPortal_ServiceWhereInput, orderBy: [clientPortal_ServiceOrderByWithRelationInput], cursor: clientPortal_ServiceWhereUniqueInput, take: Int, skip: Int, distinct: [clientPortal_ServiceScalarFieldEnum]): [clientPortal_Service]
  activities(where: clientPortal_ActivityWhereInput, orderBy: [clientPortal_ActivityOrderByWithRelationInput], cursor: clientPortal_ActivityWhereUniqueInput, take: Int, skip: Int, distinct: [clientPortal_ActivityScalarFieldEnum]): [clientPortal_Activity]
  _count: clientPortal_ClientCountOutputType!
  _join: Query!
}

type clientPortal_ClientCountAggregateOutputType {
  id: Int!
  username: Int!
  password: Int!
  _all: Int!
  _join: Query!
}

type clientPortal_ClientMinAggregateOutputType {
  id: String
  username: String
  password: String
  _join: Query!
}

type clientPortal_ClientMaxAggregateOutputType {
  id: String
  username: String
  password: String
  _join: Query!
}

type clientPortal_AggregateClient {
  _count: clientPortal_ClientCountAggregateOutputType
  _min: clientPortal_ClientMinAggregateOutputType
  _max: clientPortal_ClientMaxAggregateOutputType
  _join: Query!
}

input clientPortal_ClientCountOrderByAggregateInput {
  id: clientPortal_SortOrder
  username: clientPortal_SortOrder
  password: clientPortal_SortOrder
}

input clientPortal_ClientMaxOrderByAggregateInput {
  id: clientPortal_SortOrder
  username: clientPortal_SortOrder
  password: clientPortal_SortOrder
}

input clientPortal_ClientMinOrderByAggregateInput {
  id: clientPortal_SortOrder
  username: clientPortal_SortOrder
  password: clientPortal_SortOrder
}

input clientPortal_ClientOrderByWithAggregationInput {
  id: clientPortal_SortOrder
  username: clientPortal_SortOrder
  password: clientPortal_SortOrder
  _count: clientPortal_ClientCountOrderByAggregateInput
  _max: clientPortal_ClientMaxOrderByAggregateInput
  _min: clientPortal_ClientMinOrderByAggregateInput
}

input clientPortal_NestedIntFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: clientPortal_NestedIntFilter
}

input clientPortal_NestedStringWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: clientPortal_NestedStringWithAggregatesFilter
  _count: clientPortal_NestedIntFilter
  _min: clientPortal_NestedStringFilter
  _max: clientPortal_NestedStringFilter
}

input clientPortal_StringWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: clientPortal_NestedStringWithAggregatesFilter
  _count: clientPortal_NestedIntFilter
  _min: clientPortal_NestedStringFilter
  _max: clientPortal_NestedStringFilter
}

input clientPortal_ClientScalarWhereWithAggregatesInput {
  AND: clientPortal_ClientScalarWhereWithAggregatesInput
  OR: [clientPortal_ClientScalarWhereWithAggregatesInput]
  NOT: clientPortal_ClientScalarWhereWithAggregatesInput
  id: clientPortal_StringWithAggregatesFilter
  username: clientPortal_StringWithAggregatesFilter
  password: clientPortal_StringWithAggregatesFilter
}

type clientPortal_ClientGroupByOutputType {
  id: String!
  username: String!
  password: String!
  _count: clientPortal_ClientCountAggregateOutputType
  _min: clientPortal_ClientMinAggregateOutputType
  _max: clientPortal_ClientMaxAggregateOutputType
  _join: Query!
}

type clientPortal_ServiceCountAggregateOutputType {
  id: Int!
  serviceType: Int!
  content: Int!
  clientId: Int!
  _all: Int!
  _join: Query!
}

type clientPortal_ServiceMinAggregateOutputType {
  id: String
  serviceType: clientPortal_ServiceType
  clientId: String
  _join: Query!
}

type clientPortal_ServiceMaxAggregateOutputType {
  id: String
  serviceType: clientPortal_ServiceType
  clientId: String
  _join: Query!
}

type clientPortal_AggregateService {
  _count: clientPortal_ServiceCountAggregateOutputType
  _min: clientPortal_ServiceMinAggregateOutputType
  _max: clientPortal_ServiceMaxAggregateOutputType
  _join: Query!
}

input clientPortal_ServiceCountOrderByAggregateInput {
  id: clientPortal_SortOrder
  serviceType: clientPortal_SortOrder
  content: clientPortal_SortOrder
  clientId: clientPortal_SortOrder
}

input clientPortal_ServiceMaxOrderByAggregateInput {
  id: clientPortal_SortOrder
  serviceType: clientPortal_SortOrder
  clientId: clientPortal_SortOrder
}

input clientPortal_ServiceMinOrderByAggregateInput {
  id: clientPortal_SortOrder
  serviceType: clientPortal_SortOrder
  clientId: clientPortal_SortOrder
}

input clientPortal_ServiceOrderByWithAggregationInput {
  id: clientPortal_SortOrder
  serviceType: clientPortal_SortOrder
  content: clientPortal_SortOrder
  clientId: clientPortal_SortOrder
  _count: clientPortal_ServiceCountOrderByAggregateInput
  _max: clientPortal_ServiceMaxOrderByAggregateInput
  _min: clientPortal_ServiceMinOrderByAggregateInput
}

input clientPortal_NestedEnumServiceTypeFilter {
  equals: clientPortal_ServiceType
  in: [clientPortal_ServiceType]
  notIn: [clientPortal_ServiceType]
  not: clientPortal_ServiceType
}

input clientPortal_EnumServiceTypeWithAggregatesFilter {
  equals: clientPortal_ServiceType
  in: [clientPortal_ServiceType]
  notIn: [clientPortal_ServiceType]
  not: clientPortal_ServiceType
  _count: clientPortal_NestedIntFilter
  _min: clientPortal_NestedEnumServiceTypeFilter
  _max: clientPortal_NestedEnumServiceTypeFilter
}

input clientPortal_NestedJsonFilter {
  equals: JSON
  path: String
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_contains: JSON
  array_starts_with: JSON
  array_ends_with: JSON
  lt: JSON
  lte: JSON
  gt: JSON
  gte: JSON
  not: JSON
}

input clientPortal_JsonWithAggregatesFilter {
  equals: JSON
  path: String
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_contains: JSON
  array_starts_with: JSON
  array_ends_with: JSON
  lt: JSON
  lte: JSON
  gt: JSON
  gte: JSON
  not: JSON
  _count: clientPortal_NestedIntFilter
  _min: clientPortal_NestedJsonFilter
  _max: clientPortal_NestedJsonFilter
}

input clientPortal_ServiceScalarWhereWithAggregatesInput {
  AND: clientPortal_ServiceScalarWhereWithAggregatesInput
  OR: [clientPortal_ServiceScalarWhereWithAggregatesInput]
  NOT: clientPortal_ServiceScalarWhereWithAggregatesInput
  id: clientPortal_StringWithAggregatesFilter
  serviceType: clientPortal_EnumServiceTypeWithAggregatesFilter
  content: clientPortal_JsonWithAggregatesFilter
  clientId: clientPortal_StringWithAggregatesFilter
}

type clientPortal_ServiceGroupByOutputType {
  id: String!
  serviceType: clientPortal_ServiceType!
  content: JSON!
  clientId: String!
  _count: clientPortal_ServiceCountAggregateOutputType
  _min: clientPortal_ServiceMinAggregateOutputType
  _max: clientPortal_ServiceMaxAggregateOutputType
  _join: Query!
}

type clientPortal_ActivityCountAggregateOutputType {
  id: Int!
  activityType: Int!
  timestamp: Int!
  details: Int!
  clientId: Int!
  _all: Int!
  _join: Query!
}

type clientPortal_ActivityMinAggregateOutputType {
  id: String
  activityType: clientPortal_ActivityType
  timestamp: DateTime
  clientId: String
  _join: Query!
}

type clientPortal_ActivityMaxAggregateOutputType {
  id: String
  activityType: clientPortal_ActivityType
  timestamp: DateTime
  clientId: String
  _join: Query!
}

type clientPortal_AggregateActivity {
  _count: clientPortal_ActivityCountAggregateOutputType
  _min: clientPortal_ActivityMinAggregateOutputType
  _max: clientPortal_ActivityMaxAggregateOutputType
  _join: Query!
}

input clientPortal_ActivityCountOrderByAggregateInput {
  id: clientPortal_SortOrder
  activityType: clientPortal_SortOrder
  timestamp: clientPortal_SortOrder
  details: clientPortal_SortOrder
  clientId: clientPortal_SortOrder
}

input clientPortal_ActivityMaxOrderByAggregateInput {
  id: clientPortal_SortOrder
  activityType: clientPortal_SortOrder
  timestamp: clientPortal_SortOrder
  clientId: clientPortal_SortOrder
}

input clientPortal_ActivityMinOrderByAggregateInput {
  id: clientPortal_SortOrder
  activityType: clientPortal_SortOrder
  timestamp: clientPortal_SortOrder
  clientId: clientPortal_SortOrder
}

input clientPortal_ActivityOrderByWithAggregationInput {
  id: clientPortal_SortOrder
  activityType: clientPortal_SortOrder
  timestamp: clientPortal_SortOrder
  details: clientPortal_SortOrder
  clientId: clientPortal_SortOrder
  _count: clientPortal_ActivityCountOrderByAggregateInput
  _max: clientPortal_ActivityMaxOrderByAggregateInput
  _min: clientPortal_ActivityMinOrderByAggregateInput
}

input clientPortal_NestedEnumActivityTypeFilter {
  equals: clientPortal_ActivityType
  in: [clientPortal_ActivityType]
  notIn: [clientPortal_ActivityType]
  not: clientPortal_ActivityType
}

input clientPortal_EnumActivityTypeWithAggregatesFilter {
  equals: clientPortal_ActivityType
  in: [clientPortal_ActivityType]
  notIn: [clientPortal_ActivityType]
  not: clientPortal_ActivityType
  _count: clientPortal_NestedIntFilter
  _min: clientPortal_NestedEnumActivityTypeFilter
  _max: clientPortal_NestedEnumActivityTypeFilter
}

input clientPortal_NestedDateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: clientPortal_NestedDateTimeWithAggregatesFilter
  _count: clientPortal_NestedIntFilter
  _min: clientPortal_NestedDateTimeFilter
  _max: clientPortal_NestedDateTimeFilter
}

input clientPortal_DateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: clientPortal_NestedDateTimeWithAggregatesFilter
  _count: clientPortal_NestedIntFilter
  _min: clientPortal_NestedDateTimeFilter
  _max: clientPortal_NestedDateTimeFilter
}

input clientPortal_ActivityScalarWhereWithAggregatesInput {
  AND: clientPortal_ActivityScalarWhereWithAggregatesInput
  OR: [clientPortal_ActivityScalarWhereWithAggregatesInput]
  NOT: clientPortal_ActivityScalarWhereWithAggregatesInput
  id: clientPortal_StringWithAggregatesFilter
  activityType: clientPortal_EnumActivityTypeWithAggregatesFilter
  timestamp: clientPortal_DateTimeWithAggregatesFilter
  details: clientPortal_JsonWithAggregatesFilter
  clientId: clientPortal_StringWithAggregatesFilter
}

type clientPortal_ActivityGroupByOutputType {
  id: String!
  activityType: clientPortal_ActivityType!
  timestamp: DateTime!
  details: JSON!
  clientId: String!
  _count: clientPortal_ActivityCountAggregateOutputType
  _min: clientPortal_ActivityMinAggregateOutputType
  _max: clientPortal_ActivityMaxAggregateOutputType
  _join: Query!
}

input clientPortal_ServiceCreateWithoutClientInput {
  id: String
  serviceType: clientPortal_ServiceType!
  content: JSON!
}

input clientPortal_ServiceCreateOrConnectWithoutClientInput {
  where: clientPortal_ServiceWhereUniqueInput!
  create: clientPortal_ServiceCreateWithoutClientInput!
}

input clientPortal_ServiceCreateManyClientInput {
  id: String
  serviceType: clientPortal_ServiceType!
  content: JSON!
}

input clientPortal_ServiceCreateManyClientInputEnvelope {
  data: clientPortal_ServiceCreateManyClientInput!
  skipDuplicates: Boolean
}

input clientPortal_ServiceCreateNestedManyWithoutClientInput {
  create: clientPortal_ServiceCreateWithoutClientInput
  connectOrCreate: clientPortal_ServiceCreateOrConnectWithoutClientInput
  createMany: clientPortal_ServiceCreateManyClientInputEnvelope
  connect: clientPortal_ServiceWhereUniqueInput
}

input clientPortal_ActivityCreateWithoutClientInput {
  id: String
  activityType: clientPortal_ActivityType!
  timestamp: DateTime!
  details: JSON!
}

input clientPortal_ActivityCreateOrConnectWithoutClientInput {
  where: clientPortal_ActivityWhereUniqueInput!
  create: clientPortal_ActivityCreateWithoutClientInput!
}

input clientPortal_ActivityCreateManyClientInput {
  id: String
  activityType: clientPortal_ActivityType!
  timestamp: DateTime!
  details: JSON!
}

input clientPortal_ActivityCreateManyClientInputEnvelope {
  data: clientPortal_ActivityCreateManyClientInput!
  skipDuplicates: Boolean
}

input clientPortal_ActivityCreateNestedManyWithoutClientInput {
  create: clientPortal_ActivityCreateWithoutClientInput
  connectOrCreate: clientPortal_ActivityCreateOrConnectWithoutClientInput
  createMany: clientPortal_ActivityCreateManyClientInputEnvelope
  connect: clientPortal_ActivityWhereUniqueInput
}

input clientPortal_ClientCreateInput {
  id: String
  username: String!
  password: String!
  services: clientPortal_ServiceCreateNestedManyWithoutClientInput
  activities: clientPortal_ActivityCreateNestedManyWithoutClientInput
}

input clientPortal_StringFieldUpdateOperationsInput {
  set: String
}

input clientPortal_ServiceUpdateWithoutClientInput {
  id: clientPortal_StringFieldUpdateOperationsInput
  serviceType: clientPortal_ServiceType
  content: JSON
}

input clientPortal_ServiceUpsertWithWhereUniqueWithoutClientInput {
  where: clientPortal_ServiceWhereUniqueInput!
  update: clientPortal_ServiceUpdateWithoutClientInput!
  create: clientPortal_ServiceCreateWithoutClientInput!
}

input clientPortal_ServiceUpdateWithWhereUniqueWithoutClientInput {
  where: clientPortal_ServiceWhereUniqueInput!
  data: clientPortal_ServiceUpdateWithoutClientInput!
}

input clientPortal_ServiceScalarWhereInput {
  AND: clientPortal_ServiceScalarWhereInput
  OR: [clientPortal_ServiceScalarWhereInput]
  NOT: clientPortal_ServiceScalarWhereInput
  id: clientPortal_StringFilter
  serviceType: clientPortal_EnumServiceTypeFilter
  content: clientPortal_JsonFilter
  clientId: clientPortal_StringFilter
}

input clientPortal_ServiceUpdateManyMutationInput {
  id: clientPortal_StringFieldUpdateOperationsInput
  serviceType: clientPortal_ServiceType
  content: JSON
}

input clientPortal_ServiceUpdateManyWithWhereWithoutClientInput {
  where: clientPortal_ServiceScalarWhereInput!
  data: clientPortal_ServiceUpdateManyMutationInput!
}

input clientPortal_ServiceUpdateManyWithoutClientNestedInput {
  create: clientPortal_ServiceCreateWithoutClientInput
  connectOrCreate: clientPortal_ServiceCreateOrConnectWithoutClientInput
  upsert: clientPortal_ServiceUpsertWithWhereUniqueWithoutClientInput
  createMany: clientPortal_ServiceCreateManyClientInputEnvelope
  set: clientPortal_ServiceWhereUniqueInput
  disconnect: clientPortal_ServiceWhereUniqueInput
  delete: clientPortal_ServiceWhereUniqueInput
  connect: clientPortal_ServiceWhereUniqueInput
  update: clientPortal_ServiceUpdateWithWhereUniqueWithoutClientInput
  updateMany: clientPortal_ServiceUpdateManyWithWhereWithoutClientInput
  deleteMany: clientPortal_ServiceScalarWhereInput
}

input clientPortal_DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input clientPortal_ActivityUpdateWithoutClientInput {
  id: clientPortal_StringFieldUpdateOperationsInput
  activityType: clientPortal_ActivityType
  timestamp: clientPortal_DateTimeFieldUpdateOperationsInput
  details: JSON
}

input clientPortal_ActivityUpsertWithWhereUniqueWithoutClientInput {
  where: clientPortal_ActivityWhereUniqueInput!
  update: clientPortal_ActivityUpdateWithoutClientInput!
  create: clientPortal_ActivityCreateWithoutClientInput!
}

input clientPortal_ActivityUpdateWithWhereUniqueWithoutClientInput {
  where: clientPortal_ActivityWhereUniqueInput!
  data: clientPortal_ActivityUpdateWithoutClientInput!
}

input clientPortal_ActivityScalarWhereInput {
  AND: clientPortal_ActivityScalarWhereInput
  OR: [clientPortal_ActivityScalarWhereInput]
  NOT: clientPortal_ActivityScalarWhereInput
  id: clientPortal_StringFilter
  activityType: clientPortal_EnumActivityTypeFilter
  timestamp: clientPortal_DateTimeFilter
  details: clientPortal_JsonFilter
  clientId: clientPortal_StringFilter
}

input clientPortal_ActivityUpdateManyMutationInput {
  id: clientPortal_StringFieldUpdateOperationsInput
  activityType: clientPortal_ActivityType
  timestamp: clientPortal_DateTimeFieldUpdateOperationsInput
  details: JSON
}

input clientPortal_ActivityUpdateManyWithWhereWithoutClientInput {
  where: clientPortal_ActivityScalarWhereInput!
  data: clientPortal_ActivityUpdateManyMutationInput!
}

input clientPortal_ActivityUpdateManyWithoutClientNestedInput {
  create: clientPortal_ActivityCreateWithoutClientInput
  connectOrCreate: clientPortal_ActivityCreateOrConnectWithoutClientInput
  upsert: clientPortal_ActivityUpsertWithWhereUniqueWithoutClientInput
  createMany: clientPortal_ActivityCreateManyClientInputEnvelope
  set: clientPortal_ActivityWhereUniqueInput
  disconnect: clientPortal_ActivityWhereUniqueInput
  delete: clientPortal_ActivityWhereUniqueInput
  connect: clientPortal_ActivityWhereUniqueInput
  update: clientPortal_ActivityUpdateWithWhereUniqueWithoutClientInput
  updateMany: clientPortal_ActivityUpdateManyWithWhereWithoutClientInput
  deleteMany: clientPortal_ActivityScalarWhereInput
}

input clientPortal_ClientUpdateInput {
  id: clientPortal_StringFieldUpdateOperationsInput
  username: clientPortal_StringFieldUpdateOperationsInput
  password: clientPortal_StringFieldUpdateOperationsInput
  services: clientPortal_ServiceUpdateManyWithoutClientNestedInput
  activities: clientPortal_ActivityUpdateManyWithoutClientNestedInput
}

input clientPortal_ClientCreateManyInput {
  id: String
  username: String!
  password: String!
}

type clientPortal_AffectedRowsOutput {
  count: Int!
  _join: Query!
}

input clientPortal_ClientUpdateManyMutationInput {
  id: clientPortal_StringFieldUpdateOperationsInput
  username: clientPortal_StringFieldUpdateOperationsInput
  password: clientPortal_StringFieldUpdateOperationsInput
}

input clientPortal_ClientCreateWithoutServicesInput {
  id: String
  username: String!
  password: String!
  activities: clientPortal_ActivityCreateNestedManyWithoutClientInput
}

input clientPortal_ClientCreateOrConnectWithoutServicesInput {
  where: clientPortal_ClientWhereUniqueInput!
  create: clientPortal_ClientCreateWithoutServicesInput!
}

input clientPortal_ClientCreateNestedOneWithoutServicesInput {
  create: clientPortal_ClientCreateWithoutServicesInput
  connectOrCreate: clientPortal_ClientCreateOrConnectWithoutServicesInput
  connect: clientPortal_ClientWhereUniqueInput
}

input clientPortal_ServiceCreateInput {
  id: String
  serviceType: clientPortal_ServiceType!
  content: JSON!
  client: clientPortal_ClientCreateNestedOneWithoutServicesInput!
}

input clientPortal_ClientUpdateWithoutServicesInput {
  id: clientPortal_StringFieldUpdateOperationsInput
  username: clientPortal_StringFieldUpdateOperationsInput
  password: clientPortal_StringFieldUpdateOperationsInput
  activities: clientPortal_ActivityUpdateManyWithoutClientNestedInput
}

input clientPortal_ClientUpsertWithoutServicesInput {
  update: clientPortal_ClientUpdateWithoutServicesInput!
  create: clientPortal_ClientCreateWithoutServicesInput!
}

input clientPortal_ClientUpdateOneRequiredWithoutServicesNestedInput {
  create: clientPortal_ClientCreateWithoutServicesInput
  connectOrCreate: clientPortal_ClientCreateOrConnectWithoutServicesInput
  upsert: clientPortal_ClientUpsertWithoutServicesInput
  connect: clientPortal_ClientWhereUniqueInput
  update: clientPortal_ClientUpdateWithoutServicesInput
}

input clientPortal_ServiceUpdateInput {
  id: clientPortal_StringFieldUpdateOperationsInput
  serviceType: clientPortal_ServiceType
  content: JSON
  client: clientPortal_ClientUpdateOneRequiredWithoutServicesNestedInput
}

input clientPortal_ServiceCreateManyInput {
  id: String
  serviceType: clientPortal_ServiceType!
  content: JSON!
  clientId: String!
}

input clientPortal_ClientCreateWithoutActivitiesInput {
  id: String
  username: String!
  password: String!
  services: clientPortal_ServiceCreateNestedManyWithoutClientInput
}

input clientPortal_ClientCreateOrConnectWithoutActivitiesInput {
  where: clientPortal_ClientWhereUniqueInput!
  create: clientPortal_ClientCreateWithoutActivitiesInput!
}

input clientPortal_ClientCreateNestedOneWithoutActivitiesInput {
  create: clientPortal_ClientCreateWithoutActivitiesInput
  connectOrCreate: clientPortal_ClientCreateOrConnectWithoutActivitiesInput
  connect: clientPortal_ClientWhereUniqueInput
}

input clientPortal_ActivityCreateInput {
  id: String
  activityType: clientPortal_ActivityType!
  timestamp: DateTime!
  details: JSON!
  client: clientPortal_ClientCreateNestedOneWithoutActivitiesInput!
}

input clientPortal_ClientUpdateWithoutActivitiesInput {
  id: clientPortal_StringFieldUpdateOperationsInput
  username: clientPortal_StringFieldUpdateOperationsInput
  password: clientPortal_StringFieldUpdateOperationsInput
  services: clientPortal_ServiceUpdateManyWithoutClientNestedInput
}

input clientPortal_ClientUpsertWithoutActivitiesInput {
  update: clientPortal_ClientUpdateWithoutActivitiesInput!
  create: clientPortal_ClientCreateWithoutActivitiesInput!
}

input clientPortal_ClientUpdateOneRequiredWithoutActivitiesNestedInput {
  create: clientPortal_ClientCreateWithoutActivitiesInput
  connectOrCreate: clientPortal_ClientCreateOrConnectWithoutActivitiesInput
  upsert: clientPortal_ClientUpsertWithoutActivitiesInput
  connect: clientPortal_ClientWhereUniqueInput
  update: clientPortal_ClientUpdateWithoutActivitiesInput
}

input clientPortal_ActivityUpdateInput {
  id: clientPortal_StringFieldUpdateOperationsInput
  activityType: clientPortal_ActivityType
  timestamp: clientPortal_DateTimeFieldUpdateOperationsInput
  details: JSON
  client: clientPortal_ClientUpdateOneRequiredWithoutActivitiesNestedInput
}

input clientPortal_ActivityCreateManyInput {
  id: String
  activityType: clientPortal_ActivityType!
  timestamp: DateTime!
  details: JSON!
  clientId: String!
}

scalar clientPortal_Bytes

input gpac_NestedStringFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: gpac_NestedStringFilter
}

input gpac_StringFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: gpac_NestedStringFilter
}

enum gpac_UserRole {
  ADMIN
  POLICY_HOLDER
  AGENT
  UNDERWRITER
}

input gpac_EnumUserRoleFilter {
  equals: gpac_UserRole
  in: [gpac_UserRole]
  notIn: [gpac_UserRole]
  not: gpac_UserRole
}

enum gpac_PolicyType {
  LIFE_INSURANCE
  HEALTH_INSURANCE
  AUTO_INSURANCE
}

input gpac_EnumPolicyTypeFilter {
  equals: gpac_PolicyType
  in: [gpac_PolicyType]
  notIn: [gpac_PolicyType]
  not: gpac_PolicyType
}

enum gpac_PolicyStatus {
  ACTIVE
  PENDING
  LAPSED
  CANCELLED
}

input gpac_EnumPolicyStatusFilter {
  equals: gpac_PolicyStatus
  in: [gpac_PolicyStatus]
  notIn: [gpac_PolicyStatus]
  not: gpac_PolicyStatus
}

input gpac_JsonFilter {
  equals: JSON
  path: String
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_contains: JSON
  array_starts_with: JSON
  array_ends_with: JSON
  lt: JSON
  lte: JSON
  gt: JSON
  gte: JSON
  not: JSON
}

input gpac_UserRelationFilter {
  is: gpac_UserWhereInput
  isNot: gpac_UserWhereInput
}

input gpac_PolicyWhereInput {
  AND: gpac_PolicyWhereInput
  OR: [gpac_PolicyWhereInput]
  NOT: gpac_PolicyWhereInput
  id: gpac_StringFilter
  policyType: gpac_EnumPolicyTypeFilter
  status: gpac_EnumPolicyStatusFilter
  details: gpac_JsonFilter
  userId: gpac_StringFilter
  user: gpac_UserRelationFilter
}

input gpac_PolicyListRelationFilter {
  every: gpac_PolicyWhereInput
  some: gpac_PolicyWhereInput
  none: gpac_PolicyWhereInput
}

enum gpac_ActionType {
  POLICY_CREATION
  POLICY_MODIFICATION
  POLICY_CANCELLATION
  USER_REGISTRATION
}

input gpac_EnumActionTypeFilter {
  equals: gpac_ActionType
  in: [gpac_ActionType]
  notIn: [gpac_ActionType]
  not: gpac_ActionType
}

input gpac_NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: gpac_NestedDateTimeFilter
}

input gpac_DateTimeFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: gpac_NestedDateTimeFilter
}

input gpac_AdminActionWhereInput {
  AND: gpac_AdminActionWhereInput
  OR: [gpac_AdminActionWhereInput]
  NOT: gpac_AdminActionWhereInput
  id: gpac_StringFilter
  actionType: gpac_EnumActionTypeFilter
  timestamp: gpac_DateTimeFilter
  details: gpac_JsonFilter
  userId: gpac_StringFilter
  user: gpac_UserRelationFilter
}

input gpac_AdminActionListRelationFilter {
  every: gpac_AdminActionWhereInput
  some: gpac_AdminActionWhereInput
  none: gpac_AdminActionWhereInput
}

input gpac_UserWhereInput {
  AND: gpac_UserWhereInput
  OR: [gpac_UserWhereInput]
  NOT: gpac_UserWhereInput
  id: gpac_StringFilter
  username: gpac_StringFilter
  password: gpac_StringFilter
  role: gpac_EnumUserRoleFilter
  policies: gpac_PolicyListRelationFilter
  actions: gpac_AdminActionListRelationFilter
}

enum gpac_SortOrder {
  asc
  desc
}

input gpac_PolicyOrderByRelationAggregateInput {
  _count: gpac_SortOrder
}

input gpac_AdminActionOrderByRelationAggregateInput {
  _count: gpac_SortOrder
}

input gpac_UserOrderByWithRelationInput {
  id: gpac_SortOrder
  username: gpac_SortOrder
  password: gpac_SortOrder
  role: gpac_SortOrder
  policies: gpac_PolicyOrderByRelationAggregateInput
  actions: gpac_AdminActionOrderByRelationAggregateInput
}

input gpac_UserWhereUniqueInput {
  id: String
}

enum gpac_UserScalarFieldEnum {
  id
  username
  password
  role
}

input gpac_PolicyOrderByWithRelationInput {
  id: gpac_SortOrder
  policyType: gpac_SortOrder
  status: gpac_SortOrder
  details: gpac_SortOrder
  userId: gpac_SortOrder
  user: gpac_UserOrderByWithRelationInput
}

input gpac_PolicyWhereUniqueInput {
  id: String
}

enum gpac_PolicyScalarFieldEnum {
  id
  policyType
  status
  details
  userId
}

type gpac_Policy {
  id: String!
  policyType: gpac_PolicyType!
  status: gpac_PolicyStatus!
  details: JSON!
  userId: String!
  user: gpac_User!
  _join: Query!
}

input gpac_AdminActionOrderByWithRelationInput {
  id: gpac_SortOrder
  actionType: gpac_SortOrder
  timestamp: gpac_SortOrder
  details: gpac_SortOrder
  userId: gpac_SortOrder
  user: gpac_UserOrderByWithRelationInput
}

input gpac_AdminActionWhereUniqueInput {
  id: String
}

enum gpac_AdminActionScalarFieldEnum {
  id
  actionType
  timestamp
  details
  userId
}

type gpac_AdminAction {
  id: String!
  actionType: gpac_ActionType!
  timestamp: DateTime!
  details: JSON!
  userId: String!
  user: gpac_User!
  _join: Query!
}

type gpac_UserCountOutputType {
  policies: Int!
  actions: Int!
  _join: Query!
}

type gpac_User {
  id: String!
  username: String!
  password: String!
  role: gpac_UserRole!
  policies(where: gpac_PolicyWhereInput, orderBy: [gpac_PolicyOrderByWithRelationInput], cursor: gpac_PolicyWhereUniqueInput, take: Int, skip: Int, distinct: [gpac_PolicyScalarFieldEnum]): [gpac_Policy]
  actions(where: gpac_AdminActionWhereInput, orderBy: [gpac_AdminActionOrderByWithRelationInput], cursor: gpac_AdminActionWhereUniqueInput, take: Int, skip: Int, distinct: [gpac_AdminActionScalarFieldEnum]): [gpac_AdminAction]
  _count: gpac_UserCountOutputType!
  _join: Query!
}

type gpac_UserCountAggregateOutputType {
  id: Int!
  username: Int!
  password: Int!
  role: Int!
  _all: Int!
  _join: Query!
}

type gpac_UserMinAggregateOutputType {
  id: String
  username: String
  password: String
  role: gpac_UserRole
  _join: Query!
}

type gpac_UserMaxAggregateOutputType {
  id: String
  username: String
  password: String
  role: gpac_UserRole
  _join: Query!
}

type gpac_AggregateUser {
  _count: gpac_UserCountAggregateOutputType
  _min: gpac_UserMinAggregateOutputType
  _max: gpac_UserMaxAggregateOutputType
  _join: Query!
}

input gpac_UserCountOrderByAggregateInput {
  id: gpac_SortOrder
  username: gpac_SortOrder
  password: gpac_SortOrder
  role: gpac_SortOrder
}

input gpac_UserMaxOrderByAggregateInput {
  id: gpac_SortOrder
  username: gpac_SortOrder
  password: gpac_SortOrder
  role: gpac_SortOrder
}

input gpac_UserMinOrderByAggregateInput {
  id: gpac_SortOrder
  username: gpac_SortOrder
  password: gpac_SortOrder
  role: gpac_SortOrder
}

input gpac_UserOrderByWithAggregationInput {
  id: gpac_SortOrder
  username: gpac_SortOrder
  password: gpac_SortOrder
  role: gpac_SortOrder
  _count: gpac_UserCountOrderByAggregateInput
  _max: gpac_UserMaxOrderByAggregateInput
  _min: gpac_UserMinOrderByAggregateInput
}

input gpac_NestedIntFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: gpac_NestedIntFilter
}

input gpac_NestedStringWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: gpac_NestedStringWithAggregatesFilter
  _count: gpac_NestedIntFilter
  _min: gpac_NestedStringFilter
  _max: gpac_NestedStringFilter
}

input gpac_StringWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: gpac_NestedStringWithAggregatesFilter
  _count: gpac_NestedIntFilter
  _min: gpac_NestedStringFilter
  _max: gpac_NestedStringFilter
}

input gpac_NestedEnumUserRoleFilter {
  equals: gpac_UserRole
  in: [gpac_UserRole]
  notIn: [gpac_UserRole]
  not: gpac_UserRole
}

input gpac_EnumUserRoleWithAggregatesFilter {
  equals: gpac_UserRole
  in: [gpac_UserRole]
  notIn: [gpac_UserRole]
  not: gpac_UserRole
  _count: gpac_NestedIntFilter
  _min: gpac_NestedEnumUserRoleFilter
  _max: gpac_NestedEnumUserRoleFilter
}

input gpac_UserScalarWhereWithAggregatesInput {
  AND: gpac_UserScalarWhereWithAggregatesInput
  OR: [gpac_UserScalarWhereWithAggregatesInput]
  NOT: gpac_UserScalarWhereWithAggregatesInput
  id: gpac_StringWithAggregatesFilter
  username: gpac_StringWithAggregatesFilter
  password: gpac_StringWithAggregatesFilter
  role: gpac_EnumUserRoleWithAggregatesFilter
}

type gpac_UserGroupByOutputType {
  id: String!
  username: String!
  password: String!
  role: gpac_UserRole!
  _count: gpac_UserCountAggregateOutputType
  _min: gpac_UserMinAggregateOutputType
  _max: gpac_UserMaxAggregateOutputType
  _join: Query!
}

type gpac_PolicyCountAggregateOutputType {
  id: Int!
  policyType: Int!
  status: Int!
  details: Int!
  userId: Int!
  _all: Int!
  _join: Query!
}

type gpac_PolicyMinAggregateOutputType {
  id: String
  policyType: gpac_PolicyType
  status: gpac_PolicyStatus
  userId: String
  _join: Query!
}

type gpac_PolicyMaxAggregateOutputType {
  id: String
  policyType: gpac_PolicyType
  status: gpac_PolicyStatus
  userId: String
  _join: Query!
}

type gpac_AggregatePolicy {
  _count: gpac_PolicyCountAggregateOutputType
  _min: gpac_PolicyMinAggregateOutputType
  _max: gpac_PolicyMaxAggregateOutputType
  _join: Query!
}

input gpac_PolicyCountOrderByAggregateInput {
  id: gpac_SortOrder
  policyType: gpac_SortOrder
  status: gpac_SortOrder
  details: gpac_SortOrder
  userId: gpac_SortOrder
}

input gpac_PolicyMaxOrderByAggregateInput {
  id: gpac_SortOrder
  policyType: gpac_SortOrder
  status: gpac_SortOrder
  userId: gpac_SortOrder
}

input gpac_PolicyMinOrderByAggregateInput {
  id: gpac_SortOrder
  policyType: gpac_SortOrder
  status: gpac_SortOrder
  userId: gpac_SortOrder
}

input gpac_PolicyOrderByWithAggregationInput {
  id: gpac_SortOrder
  policyType: gpac_SortOrder
  status: gpac_SortOrder
  details: gpac_SortOrder
  userId: gpac_SortOrder
  _count: gpac_PolicyCountOrderByAggregateInput
  _max: gpac_PolicyMaxOrderByAggregateInput
  _min: gpac_PolicyMinOrderByAggregateInput
}

input gpac_NestedEnumPolicyTypeFilter {
  equals: gpac_PolicyType
  in: [gpac_PolicyType]
  notIn: [gpac_PolicyType]
  not: gpac_PolicyType
}

input gpac_EnumPolicyTypeWithAggregatesFilter {
  equals: gpac_PolicyType
  in: [gpac_PolicyType]
  notIn: [gpac_PolicyType]
  not: gpac_PolicyType
  _count: gpac_NestedIntFilter
  _min: gpac_NestedEnumPolicyTypeFilter
  _max: gpac_NestedEnumPolicyTypeFilter
}

input gpac_NestedEnumPolicyStatusFilter {
  equals: gpac_PolicyStatus
  in: [gpac_PolicyStatus]
  notIn: [gpac_PolicyStatus]
  not: gpac_PolicyStatus
}

input gpac_EnumPolicyStatusWithAggregatesFilter {
  equals: gpac_PolicyStatus
  in: [gpac_PolicyStatus]
  notIn: [gpac_PolicyStatus]
  not: gpac_PolicyStatus
  _count: gpac_NestedIntFilter
  _min: gpac_NestedEnumPolicyStatusFilter
  _max: gpac_NestedEnumPolicyStatusFilter
}

input gpac_NestedJsonFilter {
  equals: JSON
  path: String
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_contains: JSON
  array_starts_with: JSON
  array_ends_with: JSON
  lt: JSON
  lte: JSON
  gt: JSON
  gte: JSON
  not: JSON
}

input gpac_JsonWithAggregatesFilter {
  equals: JSON
  path: String
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_contains: JSON
  array_starts_with: JSON
  array_ends_with: JSON
  lt: JSON
  lte: JSON
  gt: JSON
  gte: JSON
  not: JSON
  _count: gpac_NestedIntFilter
  _min: gpac_NestedJsonFilter
  _max: gpac_NestedJsonFilter
}

input gpac_PolicyScalarWhereWithAggregatesInput {
  AND: gpac_PolicyScalarWhereWithAggregatesInput
  OR: [gpac_PolicyScalarWhereWithAggregatesInput]
  NOT: gpac_PolicyScalarWhereWithAggregatesInput
  id: gpac_StringWithAggregatesFilter
  policyType: gpac_EnumPolicyTypeWithAggregatesFilter
  status: gpac_EnumPolicyStatusWithAggregatesFilter
  details: gpac_JsonWithAggregatesFilter
  userId: gpac_StringWithAggregatesFilter
}

type gpac_PolicyGroupByOutputType {
  id: String!
  policyType: gpac_PolicyType!
  status: gpac_PolicyStatus!
  details: JSON!
  userId: String!
  _count: gpac_PolicyCountAggregateOutputType
  _min: gpac_PolicyMinAggregateOutputType
  _max: gpac_PolicyMaxAggregateOutputType
  _join: Query!
}

type gpac_AdminActionCountAggregateOutputType {
  id: Int!
  actionType: Int!
  timestamp: Int!
  details: Int!
  userId: Int!
  _all: Int!
  _join: Query!
}

type gpac_AdminActionMinAggregateOutputType {
  id: String
  actionType: gpac_ActionType
  timestamp: DateTime
  userId: String
  _join: Query!
}

type gpac_AdminActionMaxAggregateOutputType {
  id: String
  actionType: gpac_ActionType
  timestamp: DateTime
  userId: String
  _join: Query!
}

type gpac_AggregateAdminAction {
  _count: gpac_AdminActionCountAggregateOutputType
  _min: gpac_AdminActionMinAggregateOutputType
  _max: gpac_AdminActionMaxAggregateOutputType
  _join: Query!
}

input gpac_AdminActionCountOrderByAggregateInput {
  id: gpac_SortOrder
  actionType: gpac_SortOrder
  timestamp: gpac_SortOrder
  details: gpac_SortOrder
  userId: gpac_SortOrder
}

input gpac_AdminActionMaxOrderByAggregateInput {
  id: gpac_SortOrder
  actionType: gpac_SortOrder
  timestamp: gpac_SortOrder
  userId: gpac_SortOrder
}

input gpac_AdminActionMinOrderByAggregateInput {
  id: gpac_SortOrder
  actionType: gpac_SortOrder
  timestamp: gpac_SortOrder
  userId: gpac_SortOrder
}

input gpac_AdminActionOrderByWithAggregationInput {
  id: gpac_SortOrder
  actionType: gpac_SortOrder
  timestamp: gpac_SortOrder
  details: gpac_SortOrder
  userId: gpac_SortOrder
  _count: gpac_AdminActionCountOrderByAggregateInput
  _max: gpac_AdminActionMaxOrderByAggregateInput
  _min: gpac_AdminActionMinOrderByAggregateInput
}

input gpac_NestedEnumActionTypeFilter {
  equals: gpac_ActionType
  in: [gpac_ActionType]
  notIn: [gpac_ActionType]
  not: gpac_ActionType
}

input gpac_EnumActionTypeWithAggregatesFilter {
  equals: gpac_ActionType
  in: [gpac_ActionType]
  notIn: [gpac_ActionType]
  not: gpac_ActionType
  _count: gpac_NestedIntFilter
  _min: gpac_NestedEnumActionTypeFilter
  _max: gpac_NestedEnumActionTypeFilter
}

input gpac_NestedDateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: gpac_NestedDateTimeWithAggregatesFilter
  _count: gpac_NestedIntFilter
  _min: gpac_NestedDateTimeFilter
  _max: gpac_NestedDateTimeFilter
}

input gpac_DateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: gpac_NestedDateTimeWithAggregatesFilter
  _count: gpac_NestedIntFilter
  _min: gpac_NestedDateTimeFilter
  _max: gpac_NestedDateTimeFilter
}

input gpac_AdminActionScalarWhereWithAggregatesInput {
  AND: gpac_AdminActionScalarWhereWithAggregatesInput
  OR: [gpac_AdminActionScalarWhereWithAggregatesInput]
  NOT: gpac_AdminActionScalarWhereWithAggregatesInput
  id: gpac_StringWithAggregatesFilter
  actionType: gpac_EnumActionTypeWithAggregatesFilter
  timestamp: gpac_DateTimeWithAggregatesFilter
  details: gpac_JsonWithAggregatesFilter
  userId: gpac_StringWithAggregatesFilter
}

type gpac_AdminActionGroupByOutputType {
  id: String!
  actionType: gpac_ActionType!
  timestamp: DateTime!
  details: JSON!
  userId: String!
  _count: gpac_AdminActionCountAggregateOutputType
  _min: gpac_AdminActionMinAggregateOutputType
  _max: gpac_AdminActionMaxAggregateOutputType
  _join: Query!
}

input gpac_PolicyCreateWithoutUserInput {
  id: String
  policyType: gpac_PolicyType!
  status: gpac_PolicyStatus!
  details: JSON!
}

input gpac_PolicyCreateOrConnectWithoutUserInput {
  where: gpac_PolicyWhereUniqueInput!
  create: gpac_PolicyCreateWithoutUserInput!
}

input gpac_PolicyCreateManyUserInput {
  id: String
  policyType: gpac_PolicyType!
  status: gpac_PolicyStatus!
  details: JSON!
}

input gpac_PolicyCreateManyUserInputEnvelope {
  data: gpac_PolicyCreateManyUserInput!
  skipDuplicates: Boolean
}

input gpac_PolicyCreateNestedManyWithoutUserInput {
  create: gpac_PolicyCreateWithoutUserInput
  connectOrCreate: gpac_PolicyCreateOrConnectWithoutUserInput
  createMany: gpac_PolicyCreateManyUserInputEnvelope
  connect: gpac_PolicyWhereUniqueInput
}

input gpac_AdminActionCreateWithoutUserInput {
  id: String
  actionType: gpac_ActionType!
  timestamp: DateTime!
  details: JSON!
}

input gpac_AdminActionCreateOrConnectWithoutUserInput {
  where: gpac_AdminActionWhereUniqueInput!
  create: gpac_AdminActionCreateWithoutUserInput!
}

input gpac_AdminActionCreateManyUserInput {
  id: String
  actionType: gpac_ActionType!
  timestamp: DateTime!
  details: JSON!
}

input gpac_AdminActionCreateManyUserInputEnvelope {
  data: gpac_AdminActionCreateManyUserInput!
  skipDuplicates: Boolean
}

input gpac_AdminActionCreateNestedManyWithoutUserInput {
  create: gpac_AdminActionCreateWithoutUserInput
  connectOrCreate: gpac_AdminActionCreateOrConnectWithoutUserInput
  createMany: gpac_AdminActionCreateManyUserInputEnvelope
  connect: gpac_AdminActionWhereUniqueInput
}

input gpac_UserCreateInput {
  id: String
  username: String!
  password: String!
  role: gpac_UserRole!
  policies: gpac_PolicyCreateNestedManyWithoutUserInput
  actions: gpac_AdminActionCreateNestedManyWithoutUserInput
}

input gpac_StringFieldUpdateOperationsInput {
  set: String
}

input gpac_PolicyUpdateWithoutUserInput {
  id: gpac_StringFieldUpdateOperationsInput
  policyType: gpac_PolicyType
  status: gpac_PolicyStatus
  details: JSON
}

input gpac_PolicyUpsertWithWhereUniqueWithoutUserInput {
  where: gpac_PolicyWhereUniqueInput!
  update: gpac_PolicyUpdateWithoutUserInput!
  create: gpac_PolicyCreateWithoutUserInput!
}

input gpac_PolicyUpdateWithWhereUniqueWithoutUserInput {
  where: gpac_PolicyWhereUniqueInput!
  data: gpac_PolicyUpdateWithoutUserInput!
}

input gpac_PolicyScalarWhereInput {
  AND: gpac_PolicyScalarWhereInput
  OR: [gpac_PolicyScalarWhereInput]
  NOT: gpac_PolicyScalarWhereInput
  id: gpac_StringFilter
  policyType: gpac_EnumPolicyTypeFilter
  status: gpac_EnumPolicyStatusFilter
  details: gpac_JsonFilter
  userId: gpac_StringFilter
}

input gpac_PolicyUpdateManyMutationInput {
  id: gpac_StringFieldUpdateOperationsInput
  policyType: gpac_PolicyType
  status: gpac_PolicyStatus
  details: JSON
}

input gpac_PolicyUpdateManyWithWhereWithoutUserInput {
  where: gpac_PolicyScalarWhereInput!
  data: gpac_PolicyUpdateManyMutationInput!
}

input gpac_PolicyUpdateManyWithoutUserNestedInput {
  create: gpac_PolicyCreateWithoutUserInput
  connectOrCreate: gpac_PolicyCreateOrConnectWithoutUserInput
  upsert: gpac_PolicyUpsertWithWhereUniqueWithoutUserInput
  createMany: gpac_PolicyCreateManyUserInputEnvelope
  set: gpac_PolicyWhereUniqueInput
  disconnect: gpac_PolicyWhereUniqueInput
  delete: gpac_PolicyWhereUniqueInput
  connect: gpac_PolicyWhereUniqueInput
  update: gpac_PolicyUpdateWithWhereUniqueWithoutUserInput
  updateMany: gpac_PolicyUpdateManyWithWhereWithoutUserInput
  deleteMany: gpac_PolicyScalarWhereInput
}

input gpac_DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input gpac_AdminActionUpdateWithoutUserInput {
  id: gpac_StringFieldUpdateOperationsInput
  actionType: gpac_ActionType
  timestamp: gpac_DateTimeFieldUpdateOperationsInput
  details: JSON
}

input gpac_AdminActionUpsertWithWhereUniqueWithoutUserInput {
  where: gpac_AdminActionWhereUniqueInput!
  update: gpac_AdminActionUpdateWithoutUserInput!
  create: gpac_AdminActionCreateWithoutUserInput!
}

input gpac_AdminActionUpdateWithWhereUniqueWithoutUserInput {
  where: gpac_AdminActionWhereUniqueInput!
  data: gpac_AdminActionUpdateWithoutUserInput!
}

input gpac_AdminActionScalarWhereInput {
  AND: gpac_AdminActionScalarWhereInput
  OR: [gpac_AdminActionScalarWhereInput]
  NOT: gpac_AdminActionScalarWhereInput
  id: gpac_StringFilter
  actionType: gpac_EnumActionTypeFilter
  timestamp: gpac_DateTimeFilter
  details: gpac_JsonFilter
  userId: gpac_StringFilter
}

input gpac_AdminActionUpdateManyMutationInput {
  id: gpac_StringFieldUpdateOperationsInput
  actionType: gpac_ActionType
  timestamp: gpac_DateTimeFieldUpdateOperationsInput
  details: JSON
}

input gpac_AdminActionUpdateManyWithWhereWithoutUserInput {
  where: gpac_AdminActionScalarWhereInput!
  data: gpac_AdminActionUpdateManyMutationInput!
}

input gpac_AdminActionUpdateManyWithoutUserNestedInput {
  create: gpac_AdminActionCreateWithoutUserInput
  connectOrCreate: gpac_AdminActionCreateOrConnectWithoutUserInput
  upsert: gpac_AdminActionUpsertWithWhereUniqueWithoutUserInput
  createMany: gpac_AdminActionCreateManyUserInputEnvelope
  set: gpac_AdminActionWhereUniqueInput
  disconnect: gpac_AdminActionWhereUniqueInput
  delete: gpac_AdminActionWhereUniqueInput
  connect: gpac_AdminActionWhereUniqueInput
  update: gpac_AdminActionUpdateWithWhereUniqueWithoutUserInput
  updateMany: gpac_AdminActionUpdateManyWithWhereWithoutUserInput
  deleteMany: gpac_AdminActionScalarWhereInput
}

input gpac_UserUpdateInput {
  id: gpac_StringFieldUpdateOperationsInput
  username: gpac_StringFieldUpdateOperationsInput
  password: gpac_StringFieldUpdateOperationsInput
  role: gpac_UserRole
  policies: gpac_PolicyUpdateManyWithoutUserNestedInput
  actions: gpac_AdminActionUpdateManyWithoutUserNestedInput
}

input gpac_UserCreateManyInput {
  id: String
  username: String!
  password: String!
  role: gpac_UserRole!
}

type gpac_AffectedRowsOutput {
  count: Int!
  _join: Query!
}

input gpac_UserUpdateManyMutationInput {
  id: gpac_StringFieldUpdateOperationsInput
  username: gpac_StringFieldUpdateOperationsInput
  password: gpac_StringFieldUpdateOperationsInput
  role: gpac_UserRole
}

input gpac_UserCreateWithoutPoliciesInput {
  id: String
  username: String!
  password: String!
  role: gpac_UserRole!
  actions: gpac_AdminActionCreateNestedManyWithoutUserInput
}

input gpac_UserCreateOrConnectWithoutPoliciesInput {
  where: gpac_UserWhereUniqueInput!
  create: gpac_UserCreateWithoutPoliciesInput!
}

input gpac_UserCreateNestedOneWithoutPoliciesInput {
  create: gpac_UserCreateWithoutPoliciesInput
  connectOrCreate: gpac_UserCreateOrConnectWithoutPoliciesInput
  connect: gpac_UserWhereUniqueInput
}

input gpac_PolicyCreateInput {
  id: String
  policyType: gpac_PolicyType!
  status: gpac_PolicyStatus!
  details: JSON!
  user: gpac_UserCreateNestedOneWithoutPoliciesInput!
}

input gpac_UserUpdateWithoutPoliciesInput {
  id: gpac_StringFieldUpdateOperationsInput
  username: gpac_StringFieldUpdateOperationsInput
  password: gpac_StringFieldUpdateOperationsInput
  role: gpac_UserRole
  actions: gpac_AdminActionUpdateManyWithoutUserNestedInput
}

input gpac_UserUpsertWithoutPoliciesInput {
  update: gpac_UserUpdateWithoutPoliciesInput!
  create: gpac_UserCreateWithoutPoliciesInput!
}

input gpac_UserUpdateOneRequiredWithoutPoliciesNestedInput {
  create: gpac_UserCreateWithoutPoliciesInput
  connectOrCreate: gpac_UserCreateOrConnectWithoutPoliciesInput
  upsert: gpac_UserUpsertWithoutPoliciesInput
  connect: gpac_UserWhereUniqueInput
  update: gpac_UserUpdateWithoutPoliciesInput
}

input gpac_PolicyUpdateInput {
  id: gpac_StringFieldUpdateOperationsInput
  policyType: gpac_PolicyType
  status: gpac_PolicyStatus
  details: JSON
  user: gpac_UserUpdateOneRequiredWithoutPoliciesNestedInput
}

input gpac_PolicyCreateManyInput {
  id: String
  policyType: gpac_PolicyType!
  status: gpac_PolicyStatus!
  details: JSON!
  userId: String!
}

input gpac_UserCreateWithoutActionsInput {
  id: String
  username: String!
  password: String!
  role: gpac_UserRole!
  policies: gpac_PolicyCreateNestedManyWithoutUserInput
}

input gpac_UserCreateOrConnectWithoutActionsInput {
  where: gpac_UserWhereUniqueInput!
  create: gpac_UserCreateWithoutActionsInput!
}

input gpac_UserCreateNestedOneWithoutActionsInput {
  create: gpac_UserCreateWithoutActionsInput
  connectOrCreate: gpac_UserCreateOrConnectWithoutActionsInput
  connect: gpac_UserWhereUniqueInput
}

input gpac_AdminActionCreateInput {
  id: String
  actionType: gpac_ActionType!
  timestamp: DateTime!
  details: JSON!
  user: gpac_UserCreateNestedOneWithoutActionsInput!
}

input gpac_UserUpdateWithoutActionsInput {
  id: gpac_StringFieldUpdateOperationsInput
  username: gpac_StringFieldUpdateOperationsInput
  password: gpac_StringFieldUpdateOperationsInput
  role: gpac_UserRole
  policies: gpac_PolicyUpdateManyWithoutUserNestedInput
}

input gpac_UserUpsertWithoutActionsInput {
  update: gpac_UserUpdateWithoutActionsInput!
  create: gpac_UserCreateWithoutActionsInput!
}

input gpac_UserUpdateOneRequiredWithoutActionsNestedInput {
  create: gpac_UserCreateWithoutActionsInput
  connectOrCreate: gpac_UserCreateOrConnectWithoutActionsInput
  upsert: gpac_UserUpsertWithoutActionsInput
  connect: gpac_UserWhereUniqueInput
  update: gpac_UserUpdateWithoutActionsInput
}

input gpac_AdminActionUpdateInput {
  id: gpac_StringFieldUpdateOperationsInput
  actionType: gpac_ActionType
  timestamp: gpac_DateTimeFieldUpdateOperationsInput
  details: JSON
  user: gpac_UserUpdateOneRequiredWithoutActionsNestedInput
}

input gpac_AdminActionCreateManyInput {
  id: String
  actionType: gpac_ActionType!
  timestamp: DateTime!
  details: JSON!
  userId: String!
}

scalar gpac_Bytes

input guardianOnline_NestedStringFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: guardianOnline_NestedStringFilter
}

input guardianOnline_StringFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: guardianOnline_NestedStringFilter
}

enum guardianOnline_UserRole {
  ADMIN
  AGENT
  CUSTOMER
  FINANCIAL_REP
}

input guardianOnline_EnumUserRoleFilter {
  equals: guardianOnline_UserRole
  in: [guardianOnline_UserRole]
  notIn: [guardianOnline_UserRole]
  not: guardianOnline_UserRole
}

enum guardianOnline_FeatureType {
  DASHBOARD
  ACCOUNT_SUMMARY
  NOTIFICATIONS
  DOCUMENTS
}

input guardianOnline_EnumFeatureTypeFilter {
  equals: guardianOnline_FeatureType
  in: [guardianOnline_FeatureType]
  notIn: [guardianOnline_FeatureType]
  not: guardianOnline_FeatureType
}

input guardianOnline_JsonFilter {
  equals: JSON
  path: String
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_contains: JSON
  array_starts_with: JSON
  array_ends_with: JSON
  lt: JSON
  lte: JSON
  gt: JSON
  gte: JSON
  not: JSON
}

input guardianOnline_UserRelationFilter {
  is: guardianOnline_UserWhereInput
  isNot: guardianOnline_UserWhereInput
}

input guardianOnline_FeatureWhereInput {
  AND: guardianOnline_FeatureWhereInput
  OR: [guardianOnline_FeatureWhereInput]
  NOT: guardianOnline_FeatureWhereInput
  id: guardianOnline_StringFilter
  featureType: guardianOnline_EnumFeatureTypeFilter
  content: guardianOnline_JsonFilter
  userId: guardianOnline_StringFilter
  user: guardianOnline_UserRelationFilter
}

input guardianOnline_FeatureListRelationFilter {
  every: guardianOnline_FeatureWhereInput
  some: guardianOnline_FeatureWhereInput
  none: guardianOnline_FeatureWhereInput
}

enum guardianOnline_LogType {
  LOGIN
  LOGOUT
  FEATURE_ACCESS
  DOCUMENT_DOWNLOAD
}

input guardianOnline_EnumLogTypeFilter {
  equals: guardianOnline_LogType
  in: [guardianOnline_LogType]
  notIn: [guardianOnline_LogType]
  not: guardianOnline_LogType
}

enum guardianOnline_ContentType {
  CALL
  CHAT
  EMAIL
  WEB_USAGE
  IVR_HUGO_USAGE
  OUTBOUND_CORRESPONDENCE
  MARKETING_MATERIAL
  TEXT
}

input guardianOnline_EnumContentTypeFilter {
  equals: guardianOnline_ContentType
  in: [guardianOnline_ContentType]
  notIn: [guardianOnline_ContentType]
  not: guardianOnline_ContentType
}

input guardianOnline_NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: guardianOnline_NestedDateTimeFilter
}

input guardianOnline_DateTimeFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: guardianOnline_NestedDateTimeFilter
}

input guardianOnline_UserLogWhereInput {
  AND: guardianOnline_UserLogWhereInput
  OR: [guardianOnline_UserLogWhereInput]
  NOT: guardianOnline_UserLogWhereInput
  id: guardianOnline_StringFilter
  logType: guardianOnline_EnumLogTypeFilter
  contentType: guardianOnline_EnumContentTypeFilter
  timestamp: guardianOnline_DateTimeFilter
  details: guardianOnline_JsonFilter
  userId: guardianOnline_StringFilter
  user: guardianOnline_UserRelationFilter
}

input guardianOnline_UserLogListRelationFilter {
  every: guardianOnline_UserLogWhereInput
  some: guardianOnline_UserLogWhereInput
  none: guardianOnline_UserLogWhereInput
}

input guardianOnline_UserWhereInput {
  AND: guardianOnline_UserWhereInput
  OR: [guardianOnline_UserWhereInput]
  NOT: guardianOnline_UserWhereInput
  id: guardianOnline_StringFilter
  username: guardianOnline_StringFilter
  password: guardianOnline_StringFilter
  role: guardianOnline_EnumUserRoleFilter
  features: guardianOnline_FeatureListRelationFilter
  logs: guardianOnline_UserLogListRelationFilter
}

enum guardianOnline_SortOrder {
  asc
  desc
}

input guardianOnline_FeatureOrderByRelationAggregateInput {
  _count: guardianOnline_SortOrder
}

input guardianOnline_UserLogOrderByRelationAggregateInput {
  _count: guardianOnline_SortOrder
}

input guardianOnline_UserOrderByWithRelationInput {
  id: guardianOnline_SortOrder
  username: guardianOnline_SortOrder
  password: guardianOnline_SortOrder
  role: guardianOnline_SortOrder
  features: guardianOnline_FeatureOrderByRelationAggregateInput
  logs: guardianOnline_UserLogOrderByRelationAggregateInput
}

input guardianOnline_UserWhereUniqueInput {
  id: String
}

enum guardianOnline_UserScalarFieldEnum {
  id
  username
  password
  role
}

input guardianOnline_FeatureOrderByWithRelationInput {
  id: guardianOnline_SortOrder
  featureType: guardianOnline_SortOrder
  content: guardianOnline_SortOrder
  userId: guardianOnline_SortOrder
  user: guardianOnline_UserOrderByWithRelationInput
}

input guardianOnline_FeatureWhereUniqueInput {
  id: String
}

enum guardianOnline_FeatureScalarFieldEnum {
  id
  featureType
  content
  userId
}

type guardianOnline_Feature {
  id: String!
  featureType: guardianOnline_FeatureType!
  content: JSON!
  userId: String!
  user: guardianOnline_User!
  _join: Query!
}

input guardianOnline_UserLogOrderByWithRelationInput {
  id: guardianOnline_SortOrder
  logType: guardianOnline_SortOrder
  contentType: guardianOnline_SortOrder
  timestamp: guardianOnline_SortOrder
  details: guardianOnline_SortOrder
  userId: guardianOnline_SortOrder
  user: guardianOnline_UserOrderByWithRelationInput
}

input guardianOnline_UserLogWhereUniqueInput {
  id: String
}

enum guardianOnline_UserLogScalarFieldEnum {
  id
  logType
  contentType
  timestamp
  details
  userId
}

type guardianOnline_UserLog {
  id: String!
  logType: guardianOnline_LogType!
  contentType: guardianOnline_ContentType!
  timestamp: DateTime!
  details: JSON!
  userId: String!
  user: guardianOnline_User!
  _join: Query!
}

type guardianOnline_UserCountOutputType {
  features: Int!
  logs: Int!
  _join: Query!
}

type guardianOnline_User {
  id: String!
  username: String!
  password: String!
  role: guardianOnline_UserRole!
  features(where: guardianOnline_FeatureWhereInput, orderBy: [guardianOnline_FeatureOrderByWithRelationInput], cursor: guardianOnline_FeatureWhereUniqueInput, take: Int, skip: Int, distinct: [guardianOnline_FeatureScalarFieldEnum]): [guardianOnline_Feature]
  logs(where: guardianOnline_UserLogWhereInput, orderBy: [guardianOnline_UserLogOrderByWithRelationInput], cursor: guardianOnline_UserLogWhereUniqueInput, take: Int, skip: Int, distinct: [guardianOnline_UserLogScalarFieldEnum]): [guardianOnline_UserLog]
  _count: guardianOnline_UserCountOutputType!
  _join: Query!
}

type guardianOnline_UserCountAggregateOutputType {
  id: Int!
  username: Int!
  password: Int!
  role: Int!
  _all: Int!
  _join: Query!
}

type guardianOnline_UserMinAggregateOutputType {
  id: String
  username: String
  password: String
  role: guardianOnline_UserRole
  _join: Query!
}

type guardianOnline_UserMaxAggregateOutputType {
  id: String
  username: String
  password: String
  role: guardianOnline_UserRole
  _join: Query!
}

type guardianOnline_AggregateUser {
  _count: guardianOnline_UserCountAggregateOutputType
  _min: guardianOnline_UserMinAggregateOutputType
  _max: guardianOnline_UserMaxAggregateOutputType
  _join: Query!
}

input guardianOnline_UserCountOrderByAggregateInput {
  id: guardianOnline_SortOrder
  username: guardianOnline_SortOrder
  password: guardianOnline_SortOrder
  role: guardianOnline_SortOrder
}

input guardianOnline_UserMaxOrderByAggregateInput {
  id: guardianOnline_SortOrder
  username: guardianOnline_SortOrder
  password: guardianOnline_SortOrder
  role: guardianOnline_SortOrder
}

input guardianOnline_UserMinOrderByAggregateInput {
  id: guardianOnline_SortOrder
  username: guardianOnline_SortOrder
  password: guardianOnline_SortOrder
  role: guardianOnline_SortOrder
}

input guardianOnline_UserOrderByWithAggregationInput {
  id: guardianOnline_SortOrder
  username: guardianOnline_SortOrder
  password: guardianOnline_SortOrder
  role: guardianOnline_SortOrder
  _count: guardianOnline_UserCountOrderByAggregateInput
  _max: guardianOnline_UserMaxOrderByAggregateInput
  _min: guardianOnline_UserMinOrderByAggregateInput
}

input guardianOnline_NestedIntFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: guardianOnline_NestedIntFilter
}

input guardianOnline_NestedStringWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: guardianOnline_NestedStringWithAggregatesFilter
  _count: guardianOnline_NestedIntFilter
  _min: guardianOnline_NestedStringFilter
  _max: guardianOnline_NestedStringFilter
}

input guardianOnline_StringWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: guardianOnline_NestedStringWithAggregatesFilter
  _count: guardianOnline_NestedIntFilter
  _min: guardianOnline_NestedStringFilter
  _max: guardianOnline_NestedStringFilter
}

input guardianOnline_NestedEnumUserRoleFilter {
  equals: guardianOnline_UserRole
  in: [guardianOnline_UserRole]
  notIn: [guardianOnline_UserRole]
  not: guardianOnline_UserRole
}

input guardianOnline_EnumUserRoleWithAggregatesFilter {
  equals: guardianOnline_UserRole
  in: [guardianOnline_UserRole]
  notIn: [guardianOnline_UserRole]
  not: guardianOnline_UserRole
  _count: guardianOnline_NestedIntFilter
  _min: guardianOnline_NestedEnumUserRoleFilter
  _max: guardianOnline_NestedEnumUserRoleFilter
}

input guardianOnline_UserScalarWhereWithAggregatesInput {
  AND: guardianOnline_UserScalarWhereWithAggregatesInput
  OR: [guardianOnline_UserScalarWhereWithAggregatesInput]
  NOT: guardianOnline_UserScalarWhereWithAggregatesInput
  id: guardianOnline_StringWithAggregatesFilter
  username: guardianOnline_StringWithAggregatesFilter
  password: guardianOnline_StringWithAggregatesFilter
  role: guardianOnline_EnumUserRoleWithAggregatesFilter
}

type guardianOnline_UserGroupByOutputType {
  id: String!
  username: String!
  password: String!
  role: guardianOnline_UserRole!
  _count: guardianOnline_UserCountAggregateOutputType
  _min: guardianOnline_UserMinAggregateOutputType
  _max: guardianOnline_UserMaxAggregateOutputType
  _join: Query!
}

type guardianOnline_FeatureCountAggregateOutputType {
  id: Int!
  featureType: Int!
  content: Int!
  userId: Int!
  _all: Int!
  _join: Query!
}

type guardianOnline_FeatureMinAggregateOutputType {
  id: String
  featureType: guardianOnline_FeatureType
  userId: String
  _join: Query!
}

type guardianOnline_FeatureMaxAggregateOutputType {
  id: String
  featureType: guardianOnline_FeatureType
  userId: String
  _join: Query!
}

type guardianOnline_AggregateFeature {
  _count: guardianOnline_FeatureCountAggregateOutputType
  _min: guardianOnline_FeatureMinAggregateOutputType
  _max: guardianOnline_FeatureMaxAggregateOutputType
  _join: Query!
}

input guardianOnline_FeatureCountOrderByAggregateInput {
  id: guardianOnline_SortOrder
  featureType: guardianOnline_SortOrder
  content: guardianOnline_SortOrder
  userId: guardianOnline_SortOrder
}

input guardianOnline_FeatureMaxOrderByAggregateInput {
  id: guardianOnline_SortOrder
  featureType: guardianOnline_SortOrder
  userId: guardianOnline_SortOrder
}

input guardianOnline_FeatureMinOrderByAggregateInput {
  id: guardianOnline_SortOrder
  featureType: guardianOnline_SortOrder
  userId: guardianOnline_SortOrder
}

input guardianOnline_FeatureOrderByWithAggregationInput {
  id: guardianOnline_SortOrder
  featureType: guardianOnline_SortOrder
  content: guardianOnline_SortOrder
  userId: guardianOnline_SortOrder
  _count: guardianOnline_FeatureCountOrderByAggregateInput
  _max: guardianOnline_FeatureMaxOrderByAggregateInput
  _min: guardianOnline_FeatureMinOrderByAggregateInput
}

input guardianOnline_NestedEnumFeatureTypeFilter {
  equals: guardianOnline_FeatureType
  in: [guardianOnline_FeatureType]
  notIn: [guardianOnline_FeatureType]
  not: guardianOnline_FeatureType
}

input guardianOnline_EnumFeatureTypeWithAggregatesFilter {
  equals: guardianOnline_FeatureType
  in: [guardianOnline_FeatureType]
  notIn: [guardianOnline_FeatureType]
  not: guardianOnline_FeatureType
  _count: guardianOnline_NestedIntFilter
  _min: guardianOnline_NestedEnumFeatureTypeFilter
  _max: guardianOnline_NestedEnumFeatureTypeFilter
}

input guardianOnline_NestedJsonFilter {
  equals: JSON
  path: String
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_contains: JSON
  array_starts_with: JSON
  array_ends_with: JSON
  lt: JSON
  lte: JSON
  gt: JSON
  gte: JSON
  not: JSON
}

input guardianOnline_JsonWithAggregatesFilter {
  equals: JSON
  path: String
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_contains: JSON
  array_starts_with: JSON
  array_ends_with: JSON
  lt: JSON
  lte: JSON
  gt: JSON
  gte: JSON
  not: JSON
  _count: guardianOnline_NestedIntFilter
  _min: guardianOnline_NestedJsonFilter
  _max: guardianOnline_NestedJsonFilter
}

input guardianOnline_FeatureScalarWhereWithAggregatesInput {
  AND: guardianOnline_FeatureScalarWhereWithAggregatesInput
  OR: [guardianOnline_FeatureScalarWhereWithAggregatesInput]
  NOT: guardianOnline_FeatureScalarWhereWithAggregatesInput
  id: guardianOnline_StringWithAggregatesFilter
  featureType: guardianOnline_EnumFeatureTypeWithAggregatesFilter
  content: guardianOnline_JsonWithAggregatesFilter
  userId: guardianOnline_StringWithAggregatesFilter
}

type guardianOnline_FeatureGroupByOutputType {
  id: String!
  featureType: guardianOnline_FeatureType!
  content: JSON!
  userId: String!
  _count: guardianOnline_FeatureCountAggregateOutputType
  _min: guardianOnline_FeatureMinAggregateOutputType
  _max: guardianOnline_FeatureMaxAggregateOutputType
  _join: Query!
}

type guardianOnline_UserLogCountAggregateOutputType {
  id: Int!
  logType: Int!
  contentType: Int!
  timestamp: Int!
  details: Int!
  userId: Int!
  _all: Int!
  _join: Query!
}

type guardianOnline_UserLogMinAggregateOutputType {
  id: String
  logType: guardianOnline_LogType
  contentType: guardianOnline_ContentType
  timestamp: DateTime
  userId: String
  _join: Query!
}

type guardianOnline_UserLogMaxAggregateOutputType {
  id: String
  logType: guardianOnline_LogType
  contentType: guardianOnline_ContentType
  timestamp: DateTime
  userId: String
  _join: Query!
}

type guardianOnline_AggregateUserLog {
  _count: guardianOnline_UserLogCountAggregateOutputType
  _min: guardianOnline_UserLogMinAggregateOutputType
  _max: guardianOnline_UserLogMaxAggregateOutputType
  _join: Query!
}

input guardianOnline_UserLogCountOrderByAggregateInput {
  id: guardianOnline_SortOrder
  logType: guardianOnline_SortOrder
  contentType: guardianOnline_SortOrder
  timestamp: guardianOnline_SortOrder
  details: guardianOnline_SortOrder
  userId: guardianOnline_SortOrder
}

input guardianOnline_UserLogMaxOrderByAggregateInput {
  id: guardianOnline_SortOrder
  logType: guardianOnline_SortOrder
  contentType: guardianOnline_SortOrder
  timestamp: guardianOnline_SortOrder
  userId: guardianOnline_SortOrder
}

input guardianOnline_UserLogMinOrderByAggregateInput {
  id: guardianOnline_SortOrder
  logType: guardianOnline_SortOrder
  contentType: guardianOnline_SortOrder
  timestamp: guardianOnline_SortOrder
  userId: guardianOnline_SortOrder
}

input guardianOnline_UserLogOrderByWithAggregationInput {
  id: guardianOnline_SortOrder
  logType: guardianOnline_SortOrder
  contentType: guardianOnline_SortOrder
  timestamp: guardianOnline_SortOrder
  details: guardianOnline_SortOrder
  userId: guardianOnline_SortOrder
  _count: guardianOnline_UserLogCountOrderByAggregateInput
  _max: guardianOnline_UserLogMaxOrderByAggregateInput
  _min: guardianOnline_UserLogMinOrderByAggregateInput
}

input guardianOnline_NestedEnumLogTypeFilter {
  equals: guardianOnline_LogType
  in: [guardianOnline_LogType]
  notIn: [guardianOnline_LogType]
  not: guardianOnline_LogType
}

input guardianOnline_EnumLogTypeWithAggregatesFilter {
  equals: guardianOnline_LogType
  in: [guardianOnline_LogType]
  notIn: [guardianOnline_LogType]
  not: guardianOnline_LogType
  _count: guardianOnline_NestedIntFilter
  _min: guardianOnline_NestedEnumLogTypeFilter
  _max: guardianOnline_NestedEnumLogTypeFilter
}

input guardianOnline_NestedEnumContentTypeFilter {
  equals: guardianOnline_ContentType
  in: [guardianOnline_ContentType]
  notIn: [guardianOnline_ContentType]
  not: guardianOnline_ContentType
}

input guardianOnline_EnumContentTypeWithAggregatesFilter {
  equals: guardianOnline_ContentType
  in: [guardianOnline_ContentType]
  notIn: [guardianOnline_ContentType]
  not: guardianOnline_ContentType
  _count: guardianOnline_NestedIntFilter
  _min: guardianOnline_NestedEnumContentTypeFilter
  _max: guardianOnline_NestedEnumContentTypeFilter
}

input guardianOnline_NestedDateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: guardianOnline_NestedDateTimeWithAggregatesFilter
  _count: guardianOnline_NestedIntFilter
  _min: guardianOnline_NestedDateTimeFilter
  _max: guardianOnline_NestedDateTimeFilter
}

input guardianOnline_DateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: guardianOnline_NestedDateTimeWithAggregatesFilter
  _count: guardianOnline_NestedIntFilter
  _min: guardianOnline_NestedDateTimeFilter
  _max: guardianOnline_NestedDateTimeFilter
}

input guardianOnline_UserLogScalarWhereWithAggregatesInput {
  AND: guardianOnline_UserLogScalarWhereWithAggregatesInput
  OR: [guardianOnline_UserLogScalarWhereWithAggregatesInput]
  NOT: guardianOnline_UserLogScalarWhereWithAggregatesInput
  id: guardianOnline_StringWithAggregatesFilter
  logType: guardianOnline_EnumLogTypeWithAggregatesFilter
  contentType: guardianOnline_EnumContentTypeWithAggregatesFilter
  timestamp: guardianOnline_DateTimeWithAggregatesFilter
  details: guardianOnline_JsonWithAggregatesFilter
  userId: guardianOnline_StringWithAggregatesFilter
}

type guardianOnline_UserLogGroupByOutputType {
  id: String!
  logType: guardianOnline_LogType!
  contentType: guardianOnline_ContentType!
  timestamp: DateTime!
  details: JSON!
  userId: String!
  _count: guardianOnline_UserLogCountAggregateOutputType
  _min: guardianOnline_UserLogMinAggregateOutputType
  _max: guardianOnline_UserLogMaxAggregateOutputType
  _join: Query!
}

input guardianOnline_FeatureCreateWithoutUserInput {
  id: String
  featureType: guardianOnline_FeatureType!
  content: JSON!
}

input guardianOnline_FeatureCreateOrConnectWithoutUserInput {
  where: guardianOnline_FeatureWhereUniqueInput!
  create: guardianOnline_FeatureCreateWithoutUserInput!
}

input guardianOnline_FeatureCreateManyUserInput {
  id: String
  featureType: guardianOnline_FeatureType!
  content: JSON!
}

input guardianOnline_FeatureCreateManyUserInputEnvelope {
  data: guardianOnline_FeatureCreateManyUserInput!
  skipDuplicates: Boolean
}

input guardianOnline_FeatureCreateNestedManyWithoutUserInput {
  create: guardianOnline_FeatureCreateWithoutUserInput
  connectOrCreate: guardianOnline_FeatureCreateOrConnectWithoutUserInput
  createMany: guardianOnline_FeatureCreateManyUserInputEnvelope
  connect: guardianOnline_FeatureWhereUniqueInput
}

input guardianOnline_UserLogCreateWithoutUserInput {
  id: String
  logType: guardianOnline_LogType!
  contentType: guardianOnline_ContentType!
  timestamp: DateTime!
  details: JSON!
}

input guardianOnline_UserLogCreateOrConnectWithoutUserInput {
  where: guardianOnline_UserLogWhereUniqueInput!
  create: guardianOnline_UserLogCreateWithoutUserInput!
}

input guardianOnline_UserLogCreateManyUserInput {
  id: String
  logType: guardianOnline_LogType!
  contentType: guardianOnline_ContentType!
  timestamp: DateTime!
  details: JSON!
}

input guardianOnline_UserLogCreateManyUserInputEnvelope {
  data: guardianOnline_UserLogCreateManyUserInput!
  skipDuplicates: Boolean
}

input guardianOnline_UserLogCreateNestedManyWithoutUserInput {
  create: guardianOnline_UserLogCreateWithoutUserInput
  connectOrCreate: guardianOnline_UserLogCreateOrConnectWithoutUserInput
  createMany: guardianOnline_UserLogCreateManyUserInputEnvelope
  connect: guardianOnline_UserLogWhereUniqueInput
}

input guardianOnline_UserCreateInput {
  id: String
  username: String!
  password: String!
  role: guardianOnline_UserRole!
  features: guardianOnline_FeatureCreateNestedManyWithoutUserInput
  logs: guardianOnline_UserLogCreateNestedManyWithoutUserInput
}

input guardianOnline_StringFieldUpdateOperationsInput {
  set: String
}

input guardianOnline_FeatureUpdateWithoutUserInput {
  id: guardianOnline_StringFieldUpdateOperationsInput
  featureType: guardianOnline_FeatureType
  content: JSON
}

input guardianOnline_FeatureUpsertWithWhereUniqueWithoutUserInput {
  where: guardianOnline_FeatureWhereUniqueInput!
  update: guardianOnline_FeatureUpdateWithoutUserInput!
  create: guardianOnline_FeatureCreateWithoutUserInput!
}

input guardianOnline_FeatureUpdateWithWhereUniqueWithoutUserInput {
  where: guardianOnline_FeatureWhereUniqueInput!
  data: guardianOnline_FeatureUpdateWithoutUserInput!
}

input guardianOnline_FeatureScalarWhereInput {
  AND: guardianOnline_FeatureScalarWhereInput
  OR: [guardianOnline_FeatureScalarWhereInput]
  NOT: guardianOnline_FeatureScalarWhereInput
  id: guardianOnline_StringFilter
  featureType: guardianOnline_EnumFeatureTypeFilter
  content: guardianOnline_JsonFilter
  userId: guardianOnline_StringFilter
}

input guardianOnline_FeatureUpdateManyMutationInput {
  id: guardianOnline_StringFieldUpdateOperationsInput
  featureType: guardianOnline_FeatureType
  content: JSON
}

input guardianOnline_FeatureUpdateManyWithWhereWithoutUserInput {
  where: guardianOnline_FeatureScalarWhereInput!
  data: guardianOnline_FeatureUpdateManyMutationInput!
}

input guardianOnline_FeatureUpdateManyWithoutUserNestedInput {
  create: guardianOnline_FeatureCreateWithoutUserInput
  connectOrCreate: guardianOnline_FeatureCreateOrConnectWithoutUserInput
  upsert: guardianOnline_FeatureUpsertWithWhereUniqueWithoutUserInput
  createMany: guardianOnline_FeatureCreateManyUserInputEnvelope
  set: guardianOnline_FeatureWhereUniqueInput
  disconnect: guardianOnline_FeatureWhereUniqueInput
  delete: guardianOnline_FeatureWhereUniqueInput
  connect: guardianOnline_FeatureWhereUniqueInput
  update: guardianOnline_FeatureUpdateWithWhereUniqueWithoutUserInput
  updateMany: guardianOnline_FeatureUpdateManyWithWhereWithoutUserInput
  deleteMany: guardianOnline_FeatureScalarWhereInput
}

input guardianOnline_DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input guardianOnline_UserLogUpdateWithoutUserInput {
  id: guardianOnline_StringFieldUpdateOperationsInput
  logType: guardianOnline_LogType
  contentType: guardianOnline_ContentType
  timestamp: guardianOnline_DateTimeFieldUpdateOperationsInput
  details: JSON
}

input guardianOnline_UserLogUpsertWithWhereUniqueWithoutUserInput {
  where: guardianOnline_UserLogWhereUniqueInput!
  update: guardianOnline_UserLogUpdateWithoutUserInput!
  create: guardianOnline_UserLogCreateWithoutUserInput!
}

input guardianOnline_UserLogUpdateWithWhereUniqueWithoutUserInput {
  where: guardianOnline_UserLogWhereUniqueInput!
  data: guardianOnline_UserLogUpdateWithoutUserInput!
}

input guardianOnline_UserLogScalarWhereInput {
  AND: guardianOnline_UserLogScalarWhereInput
  OR: [guardianOnline_UserLogScalarWhereInput]
  NOT: guardianOnline_UserLogScalarWhereInput
  id: guardianOnline_StringFilter
  logType: guardianOnline_EnumLogTypeFilter
  contentType: guardianOnline_EnumContentTypeFilter
  timestamp: guardianOnline_DateTimeFilter
  details: guardianOnline_JsonFilter
  userId: guardianOnline_StringFilter
}

input guardianOnline_UserLogUpdateManyMutationInput {
  id: guardianOnline_StringFieldUpdateOperationsInput
  logType: guardianOnline_LogType
  contentType: guardianOnline_ContentType
  timestamp: guardianOnline_DateTimeFieldUpdateOperationsInput
  details: JSON
}

input guardianOnline_UserLogUpdateManyWithWhereWithoutUserInput {
  where: guardianOnline_UserLogScalarWhereInput!
  data: guardianOnline_UserLogUpdateManyMutationInput!
}

input guardianOnline_UserLogUpdateManyWithoutUserNestedInput {
  create: guardianOnline_UserLogCreateWithoutUserInput
  connectOrCreate: guardianOnline_UserLogCreateOrConnectWithoutUserInput
  upsert: guardianOnline_UserLogUpsertWithWhereUniqueWithoutUserInput
  createMany: guardianOnline_UserLogCreateManyUserInputEnvelope
  set: guardianOnline_UserLogWhereUniqueInput
  disconnect: guardianOnline_UserLogWhereUniqueInput
  delete: guardianOnline_UserLogWhereUniqueInput
  connect: guardianOnline_UserLogWhereUniqueInput
  update: guardianOnline_UserLogUpdateWithWhereUniqueWithoutUserInput
  updateMany: guardianOnline_UserLogUpdateManyWithWhereWithoutUserInput
  deleteMany: guardianOnline_UserLogScalarWhereInput
}

input guardianOnline_UserUpdateInput {
  id: guardianOnline_StringFieldUpdateOperationsInput
  username: guardianOnline_StringFieldUpdateOperationsInput
  password: guardianOnline_StringFieldUpdateOperationsInput
  role: guardianOnline_UserRole
  features: guardianOnline_FeatureUpdateManyWithoutUserNestedInput
  logs: guardianOnline_UserLogUpdateManyWithoutUserNestedInput
}

input guardianOnline_UserCreateManyInput {
  id: String
  username: String!
  password: String!
  role: guardianOnline_UserRole!
}

type guardianOnline_AffectedRowsOutput {
  count: Int!
  _join: Query!
}

input guardianOnline_UserUpdateManyMutationInput {
  id: guardianOnline_StringFieldUpdateOperationsInput
  username: guardianOnline_StringFieldUpdateOperationsInput
  password: guardianOnline_StringFieldUpdateOperationsInput
  role: guardianOnline_UserRole
}

input guardianOnline_UserCreateWithoutFeaturesInput {
  id: String
  username: String!
  password: String!
  role: guardianOnline_UserRole!
  logs: guardianOnline_UserLogCreateNestedManyWithoutUserInput
}

input guardianOnline_UserCreateOrConnectWithoutFeaturesInput {
  where: guardianOnline_UserWhereUniqueInput!
  create: guardianOnline_UserCreateWithoutFeaturesInput!
}

input guardianOnline_UserCreateNestedOneWithoutFeaturesInput {
  create: guardianOnline_UserCreateWithoutFeaturesInput
  connectOrCreate: guardianOnline_UserCreateOrConnectWithoutFeaturesInput
  connect: guardianOnline_UserWhereUniqueInput
}

input guardianOnline_FeatureCreateInput {
  id: String
  featureType: guardianOnline_FeatureType!
  content: JSON!
  user: guardianOnline_UserCreateNestedOneWithoutFeaturesInput!
}

input guardianOnline_UserUpdateWithoutFeaturesInput {
  id: guardianOnline_StringFieldUpdateOperationsInput
  username: guardianOnline_StringFieldUpdateOperationsInput
  password: guardianOnline_StringFieldUpdateOperationsInput
  role: guardianOnline_UserRole
  logs: guardianOnline_UserLogUpdateManyWithoutUserNestedInput
}

input guardianOnline_UserUpsertWithoutFeaturesInput {
  update: guardianOnline_UserUpdateWithoutFeaturesInput!
  create: guardianOnline_UserCreateWithoutFeaturesInput!
}

input guardianOnline_UserUpdateOneRequiredWithoutFeaturesNestedInput {
  create: guardianOnline_UserCreateWithoutFeaturesInput
  connectOrCreate: guardianOnline_UserCreateOrConnectWithoutFeaturesInput
  upsert: guardianOnline_UserUpsertWithoutFeaturesInput
  connect: guardianOnline_UserWhereUniqueInput
  update: guardianOnline_UserUpdateWithoutFeaturesInput
}

input guardianOnline_FeatureUpdateInput {
  id: guardianOnline_StringFieldUpdateOperationsInput
  featureType: guardianOnline_FeatureType
  content: JSON
  user: guardianOnline_UserUpdateOneRequiredWithoutFeaturesNestedInput
}

input guardianOnline_FeatureCreateManyInput {
  id: String
  featureType: guardianOnline_FeatureType!
  content: JSON!
  userId: String!
}

input guardianOnline_UserCreateWithoutLogsInput {
  id: String
  username: String!
  password: String!
  role: guardianOnline_UserRole!
  features: guardianOnline_FeatureCreateNestedManyWithoutUserInput
}

input guardianOnline_UserCreateOrConnectWithoutLogsInput {
  where: guardianOnline_UserWhereUniqueInput!
  create: guardianOnline_UserCreateWithoutLogsInput!
}

input guardianOnline_UserCreateNestedOneWithoutLogsInput {
  create: guardianOnline_UserCreateWithoutLogsInput
  connectOrCreate: guardianOnline_UserCreateOrConnectWithoutLogsInput
  connect: guardianOnline_UserWhereUniqueInput
}

input guardianOnline_UserLogCreateInput {
  id: String
  logType: guardianOnline_LogType!
  contentType: guardianOnline_ContentType!
  timestamp: DateTime!
  details: JSON!
  user: guardianOnline_UserCreateNestedOneWithoutLogsInput!
}

input guardianOnline_UserUpdateWithoutLogsInput {
  id: guardianOnline_StringFieldUpdateOperationsInput
  username: guardianOnline_StringFieldUpdateOperationsInput
  password: guardianOnline_StringFieldUpdateOperationsInput
  role: guardianOnline_UserRole
  features: guardianOnline_FeatureUpdateManyWithoutUserNestedInput
}

input guardianOnline_UserUpsertWithoutLogsInput {
  update: guardianOnline_UserUpdateWithoutLogsInput!
  create: guardianOnline_UserCreateWithoutLogsInput!
}

input guardianOnline_UserUpdateOneRequiredWithoutLogsNestedInput {
  create: guardianOnline_UserCreateWithoutLogsInput
  connectOrCreate: guardianOnline_UserCreateOrConnectWithoutLogsInput
  upsert: guardianOnline_UserUpsertWithoutLogsInput
  connect: guardianOnline_UserWhereUniqueInput
  update: guardianOnline_UserUpdateWithoutLogsInput
}

input guardianOnline_UserLogUpdateInput {
  id: guardianOnline_StringFieldUpdateOperationsInput
  logType: guardianOnline_LogType
  contentType: guardianOnline_ContentType
  timestamp: guardianOnline_DateTimeFieldUpdateOperationsInput
  details: JSON
  user: guardianOnline_UserUpdateOneRequiredWithoutLogsNestedInput
}

input guardianOnline_UserLogCreateManyInput {
  id: String
  logType: guardianOnline_LogType!
  contentType: guardianOnline_ContentType!
  timestamp: DateTime!
  details: JSON!
  userId: String!
}

scalar guardianOnline_Bytes

input livingBalanceSheet_NestedStringFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: livingBalanceSheet_NestedStringFilter
}

input livingBalanceSheet_StringFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: livingBalanceSheet_NestedStringFilter
}

enum livingBalanceSheet_UserRole {
  ADMIN
  FINANCIAL_ADVISOR
  CLIENT
}

input livingBalanceSheet_EnumUserRoleFilter {
  equals: livingBalanceSheet_UserRole
  in: [livingBalanceSheet_UserRole]
  notIn: [livingBalanceSheet_UserRole]
  not: livingBalanceSheet_UserRole
}

enum livingBalanceSheet_AssetType {
  REAL_ESTATE
  STOCKS
  BONDS
  CASH
}

input livingBalanceSheet_EnumAssetTypeFilter {
  equals: livingBalanceSheet_AssetType
  in: [livingBalanceSheet_AssetType]
  notIn: [livingBalanceSheet_AssetType]
  not: livingBalanceSheet_AssetType
}

input livingBalanceSheet_NestedFloatFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: livingBalanceSheet_NestedFloatFilter
}

input livingBalanceSheet_FloatFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: livingBalanceSheet_NestedFloatFilter
}

input livingBalanceSheet_UserRelationFilter {
  is: livingBalanceSheet_UserWhereInput
  isNot: livingBalanceSheet_UserWhereInput
}

input livingBalanceSheet_AssetWhereInput {
  AND: livingBalanceSheet_AssetWhereInput
  OR: [livingBalanceSheet_AssetWhereInput]
  NOT: livingBalanceSheet_AssetWhereInput
  id: livingBalanceSheet_StringFilter
  assetType: livingBalanceSheet_EnumAssetTypeFilter
  value: livingBalanceSheet_FloatFilter
  userId: livingBalanceSheet_StringFilter
  user: livingBalanceSheet_UserRelationFilter
}

input livingBalanceSheet_AssetListRelationFilter {
  every: livingBalanceSheet_AssetWhereInput
  some: livingBalanceSheet_AssetWhereInput
  none: livingBalanceSheet_AssetWhereInput
}

enum livingBalanceSheet_LiabilityType {
  MORTGAGE
  LOAN
  CREDIT_CARD_DEBT
}

input livingBalanceSheet_EnumLiabilityTypeFilter {
  equals: livingBalanceSheet_LiabilityType
  in: [livingBalanceSheet_LiabilityType]
  notIn: [livingBalanceSheet_LiabilityType]
  not: livingBalanceSheet_LiabilityType
}

input livingBalanceSheet_LiabilityWhereInput {
  AND: livingBalanceSheet_LiabilityWhereInput
  OR: [livingBalanceSheet_LiabilityWhereInput]
  NOT: livingBalanceSheet_LiabilityWhereInput
  id: livingBalanceSheet_StringFilter
  liabilityType: livingBalanceSheet_EnumLiabilityTypeFilter
  amount: livingBalanceSheet_FloatFilter
  userId: livingBalanceSheet_StringFilter
  user: livingBalanceSheet_UserRelationFilter
}

input livingBalanceSheet_LiabilityListRelationFilter {
  every: livingBalanceSheet_LiabilityWhereInput
  some: livingBalanceSheet_LiabilityWhereInput
  none: livingBalanceSheet_LiabilityWhereInput
}

enum livingBalanceSheet_GoalType {
  RETIREMENT
  EDUCATION
  VACATION
  EMERGENCY_FUND
}

input livingBalanceSheet_EnumGoalTypeFilter {
  equals: livingBalanceSheet_GoalType
  in: [livingBalanceSheet_GoalType]
  notIn: [livingBalanceSheet_GoalType]
  not: livingBalanceSheet_GoalType
}

input livingBalanceSheet_NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: livingBalanceSheet_NestedDateTimeFilter
}

input livingBalanceSheet_DateTimeFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: livingBalanceSheet_NestedDateTimeFilter
}

input livingBalanceSheet_FinancialGoalWhereInput {
  AND: livingBalanceSheet_FinancialGoalWhereInput
  OR: [livingBalanceSheet_FinancialGoalWhereInput]
  NOT: livingBalanceSheet_FinancialGoalWhereInput
  id: livingBalanceSheet_StringFilter
  goalType: livingBalanceSheet_EnumGoalTypeFilter
  target: livingBalanceSheet_FloatFilter
  deadline: livingBalanceSheet_DateTimeFilter
  userId: livingBalanceSheet_StringFilter
  user: livingBalanceSheet_UserRelationFilter
}

input livingBalanceSheet_FinancialGoalListRelationFilter {
  every: livingBalanceSheet_FinancialGoalWhereInput
  some: livingBalanceSheet_FinancialGoalWhereInput
  none: livingBalanceSheet_FinancialGoalWhereInput
}

input livingBalanceSheet_UserWhereInput {
  AND: livingBalanceSheet_UserWhereInput
  OR: [livingBalanceSheet_UserWhereInput]
  NOT: livingBalanceSheet_UserWhereInput
  id: livingBalanceSheet_StringFilter
  username: livingBalanceSheet_StringFilter
  password: livingBalanceSheet_StringFilter
  role: livingBalanceSheet_EnumUserRoleFilter
  assets: livingBalanceSheet_AssetListRelationFilter
  liabilities: livingBalanceSheet_LiabilityListRelationFilter
  goals: livingBalanceSheet_FinancialGoalListRelationFilter
}

enum livingBalanceSheet_SortOrder {
  asc
  desc
}

input livingBalanceSheet_AssetOrderByRelationAggregateInput {
  _count: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_LiabilityOrderByRelationAggregateInput {
  _count: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_FinancialGoalOrderByRelationAggregateInput {
  _count: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_UserOrderByWithRelationInput {
  id: livingBalanceSheet_SortOrder
  username: livingBalanceSheet_SortOrder
  password: livingBalanceSheet_SortOrder
  role: livingBalanceSheet_SortOrder
  assets: livingBalanceSheet_AssetOrderByRelationAggregateInput
  liabilities: livingBalanceSheet_LiabilityOrderByRelationAggregateInput
  goals: livingBalanceSheet_FinancialGoalOrderByRelationAggregateInput
}

input livingBalanceSheet_UserWhereUniqueInput {
  id: String
}

enum livingBalanceSheet_UserScalarFieldEnum {
  id
  username
  password
  role
}

input livingBalanceSheet_AssetOrderByWithRelationInput {
  id: livingBalanceSheet_SortOrder
  assetType: livingBalanceSheet_SortOrder
  value: livingBalanceSheet_SortOrder
  userId: livingBalanceSheet_SortOrder
  user: livingBalanceSheet_UserOrderByWithRelationInput
}

input livingBalanceSheet_AssetWhereUniqueInput {
  id: String
}

enum livingBalanceSheet_AssetScalarFieldEnum {
  id
  assetType
  value
  userId
}

type livingBalanceSheet_Asset {
  id: String!
  assetType: livingBalanceSheet_AssetType!
  value: Float!
  userId: String!
  user: livingBalanceSheet_User!
  _join: Query!
}

input livingBalanceSheet_LiabilityOrderByWithRelationInput {
  id: livingBalanceSheet_SortOrder
  liabilityType: livingBalanceSheet_SortOrder
  amount: livingBalanceSheet_SortOrder
  userId: livingBalanceSheet_SortOrder
  user: livingBalanceSheet_UserOrderByWithRelationInput
}

input livingBalanceSheet_LiabilityWhereUniqueInput {
  id: String
}

enum livingBalanceSheet_LiabilityScalarFieldEnum {
  id
  liabilityType
  amount
  userId
}

type livingBalanceSheet_Liability {
  id: String!
  liabilityType: livingBalanceSheet_LiabilityType!
  amount: Float!
  userId: String!
  user: livingBalanceSheet_User!
  _join: Query!
}

input livingBalanceSheet_FinancialGoalOrderByWithRelationInput {
  id: livingBalanceSheet_SortOrder
  goalType: livingBalanceSheet_SortOrder
  target: livingBalanceSheet_SortOrder
  deadline: livingBalanceSheet_SortOrder
  userId: livingBalanceSheet_SortOrder
  user: livingBalanceSheet_UserOrderByWithRelationInput
}

input livingBalanceSheet_FinancialGoalWhereUniqueInput {
  id: String
}

enum livingBalanceSheet_FinancialGoalScalarFieldEnum {
  id
  goalType
  target
  deadline
  userId
}

type livingBalanceSheet_FinancialGoal {
  id: String!
  goalType: livingBalanceSheet_GoalType!
  target: Float!
  deadline: DateTime!
  userId: String!
  user: livingBalanceSheet_User!
  _join: Query!
}

type livingBalanceSheet_UserCountOutputType {
  assets: Int!
  liabilities: Int!
  goals: Int!
  _join: Query!
}

type livingBalanceSheet_User {
  id: String!
  username: String!
  password: String!
  role: livingBalanceSheet_UserRole!
  assets(where: livingBalanceSheet_AssetWhereInput, orderBy: [livingBalanceSheet_AssetOrderByWithRelationInput], cursor: livingBalanceSheet_AssetWhereUniqueInput, take: Int, skip: Int, distinct: [livingBalanceSheet_AssetScalarFieldEnum]): [livingBalanceSheet_Asset]
  liabilities(where: livingBalanceSheet_LiabilityWhereInput, orderBy: [livingBalanceSheet_LiabilityOrderByWithRelationInput], cursor: livingBalanceSheet_LiabilityWhereUniqueInput, take: Int, skip: Int, distinct: [livingBalanceSheet_LiabilityScalarFieldEnum]): [livingBalanceSheet_Liability]
  goals(where: livingBalanceSheet_FinancialGoalWhereInput, orderBy: [livingBalanceSheet_FinancialGoalOrderByWithRelationInput], cursor: livingBalanceSheet_FinancialGoalWhereUniqueInput, take: Int, skip: Int, distinct: [livingBalanceSheet_FinancialGoalScalarFieldEnum]): [livingBalanceSheet_FinancialGoal]
  _count: livingBalanceSheet_UserCountOutputType!
  _join: Query!
}

type livingBalanceSheet_UserCountAggregateOutputType {
  id: Int!
  username: Int!
  password: Int!
  role: Int!
  _all: Int!
  _join: Query!
}

type livingBalanceSheet_UserMinAggregateOutputType {
  id: String
  username: String
  password: String
  role: livingBalanceSheet_UserRole
  _join: Query!
}

type livingBalanceSheet_UserMaxAggregateOutputType {
  id: String
  username: String
  password: String
  role: livingBalanceSheet_UserRole
  _join: Query!
}

type livingBalanceSheet_AggregateUser {
  _count: livingBalanceSheet_UserCountAggregateOutputType
  _min: livingBalanceSheet_UserMinAggregateOutputType
  _max: livingBalanceSheet_UserMaxAggregateOutputType
  _join: Query!
}

input livingBalanceSheet_UserCountOrderByAggregateInput {
  id: livingBalanceSheet_SortOrder
  username: livingBalanceSheet_SortOrder
  password: livingBalanceSheet_SortOrder
  role: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_UserMaxOrderByAggregateInput {
  id: livingBalanceSheet_SortOrder
  username: livingBalanceSheet_SortOrder
  password: livingBalanceSheet_SortOrder
  role: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_UserMinOrderByAggregateInput {
  id: livingBalanceSheet_SortOrder
  username: livingBalanceSheet_SortOrder
  password: livingBalanceSheet_SortOrder
  role: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_UserOrderByWithAggregationInput {
  id: livingBalanceSheet_SortOrder
  username: livingBalanceSheet_SortOrder
  password: livingBalanceSheet_SortOrder
  role: livingBalanceSheet_SortOrder
  _count: livingBalanceSheet_UserCountOrderByAggregateInput
  _max: livingBalanceSheet_UserMaxOrderByAggregateInput
  _min: livingBalanceSheet_UserMinOrderByAggregateInput
}

input livingBalanceSheet_NestedIntFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: livingBalanceSheet_NestedIntFilter
}

input livingBalanceSheet_NestedStringWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: livingBalanceSheet_NestedStringWithAggregatesFilter
  _count: livingBalanceSheet_NestedIntFilter
  _min: livingBalanceSheet_NestedStringFilter
  _max: livingBalanceSheet_NestedStringFilter
}

input livingBalanceSheet_StringWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: livingBalanceSheet_NestedStringWithAggregatesFilter
  _count: livingBalanceSheet_NestedIntFilter
  _min: livingBalanceSheet_NestedStringFilter
  _max: livingBalanceSheet_NestedStringFilter
}

input livingBalanceSheet_NestedEnumUserRoleFilter {
  equals: livingBalanceSheet_UserRole
  in: [livingBalanceSheet_UserRole]
  notIn: [livingBalanceSheet_UserRole]
  not: livingBalanceSheet_UserRole
}

input livingBalanceSheet_EnumUserRoleWithAggregatesFilter {
  equals: livingBalanceSheet_UserRole
  in: [livingBalanceSheet_UserRole]
  notIn: [livingBalanceSheet_UserRole]
  not: livingBalanceSheet_UserRole
  _count: livingBalanceSheet_NestedIntFilter
  _min: livingBalanceSheet_NestedEnumUserRoleFilter
  _max: livingBalanceSheet_NestedEnumUserRoleFilter
}

input livingBalanceSheet_UserScalarWhereWithAggregatesInput {
  AND: livingBalanceSheet_UserScalarWhereWithAggregatesInput
  OR: [livingBalanceSheet_UserScalarWhereWithAggregatesInput]
  NOT: livingBalanceSheet_UserScalarWhereWithAggregatesInput
  id: livingBalanceSheet_StringWithAggregatesFilter
  username: livingBalanceSheet_StringWithAggregatesFilter
  password: livingBalanceSheet_StringWithAggregatesFilter
  role: livingBalanceSheet_EnumUserRoleWithAggregatesFilter
}

type livingBalanceSheet_UserGroupByOutputType {
  id: String!
  username: String!
  password: String!
  role: livingBalanceSheet_UserRole!
  _count: livingBalanceSheet_UserCountAggregateOutputType
  _min: livingBalanceSheet_UserMinAggregateOutputType
  _max: livingBalanceSheet_UserMaxAggregateOutputType
  _join: Query!
}

type livingBalanceSheet_AssetCountAggregateOutputType {
  id: Int!
  assetType: Int!
  value: Int!
  userId: Int!
  _all: Int!
  _join: Query!
}

type livingBalanceSheet_AssetAvgAggregateOutputType {
  value: Float
  _join: Query!
}

type livingBalanceSheet_AssetSumAggregateOutputType {
  value: Float
  _join: Query!
}

type livingBalanceSheet_AssetMinAggregateOutputType {
  id: String
  assetType: livingBalanceSheet_AssetType
  value: Float
  userId: String
  _join: Query!
}

type livingBalanceSheet_AssetMaxAggregateOutputType {
  id: String
  assetType: livingBalanceSheet_AssetType
  value: Float
  userId: String
  _join: Query!
}

type livingBalanceSheet_AggregateAsset {
  _count: livingBalanceSheet_AssetCountAggregateOutputType
  _avg: livingBalanceSheet_AssetAvgAggregateOutputType
  _sum: livingBalanceSheet_AssetSumAggregateOutputType
  _min: livingBalanceSheet_AssetMinAggregateOutputType
  _max: livingBalanceSheet_AssetMaxAggregateOutputType
  _join: Query!
}

input livingBalanceSheet_AssetCountOrderByAggregateInput {
  id: livingBalanceSheet_SortOrder
  assetType: livingBalanceSheet_SortOrder
  value: livingBalanceSheet_SortOrder
  userId: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_AssetAvgOrderByAggregateInput {
  value: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_AssetMaxOrderByAggregateInput {
  id: livingBalanceSheet_SortOrder
  assetType: livingBalanceSheet_SortOrder
  value: livingBalanceSheet_SortOrder
  userId: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_AssetMinOrderByAggregateInput {
  id: livingBalanceSheet_SortOrder
  assetType: livingBalanceSheet_SortOrder
  value: livingBalanceSheet_SortOrder
  userId: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_AssetSumOrderByAggregateInput {
  value: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_AssetOrderByWithAggregationInput {
  id: livingBalanceSheet_SortOrder
  assetType: livingBalanceSheet_SortOrder
  value: livingBalanceSheet_SortOrder
  userId: livingBalanceSheet_SortOrder
  _count: livingBalanceSheet_AssetCountOrderByAggregateInput
  _avg: livingBalanceSheet_AssetAvgOrderByAggregateInput
  _max: livingBalanceSheet_AssetMaxOrderByAggregateInput
  _min: livingBalanceSheet_AssetMinOrderByAggregateInput
  _sum: livingBalanceSheet_AssetSumOrderByAggregateInput
}

input livingBalanceSheet_NestedEnumAssetTypeFilter {
  equals: livingBalanceSheet_AssetType
  in: [livingBalanceSheet_AssetType]
  notIn: [livingBalanceSheet_AssetType]
  not: livingBalanceSheet_AssetType
}

input livingBalanceSheet_EnumAssetTypeWithAggregatesFilter {
  equals: livingBalanceSheet_AssetType
  in: [livingBalanceSheet_AssetType]
  notIn: [livingBalanceSheet_AssetType]
  not: livingBalanceSheet_AssetType
  _count: livingBalanceSheet_NestedIntFilter
  _min: livingBalanceSheet_NestedEnumAssetTypeFilter
  _max: livingBalanceSheet_NestedEnumAssetTypeFilter
}

input livingBalanceSheet_NestedFloatWithAggregatesFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: livingBalanceSheet_NestedFloatWithAggregatesFilter
  _count: livingBalanceSheet_NestedIntFilter
  _avg: livingBalanceSheet_NestedFloatFilter
  _sum: livingBalanceSheet_NestedFloatFilter
  _min: livingBalanceSheet_NestedFloatFilter
  _max: livingBalanceSheet_NestedFloatFilter
}

input livingBalanceSheet_FloatWithAggregatesFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: livingBalanceSheet_NestedFloatWithAggregatesFilter
  _count: livingBalanceSheet_NestedIntFilter
  _avg: livingBalanceSheet_NestedFloatFilter
  _sum: livingBalanceSheet_NestedFloatFilter
  _min: livingBalanceSheet_NestedFloatFilter
  _max: livingBalanceSheet_NestedFloatFilter
}

input livingBalanceSheet_AssetScalarWhereWithAggregatesInput {
  AND: livingBalanceSheet_AssetScalarWhereWithAggregatesInput
  OR: [livingBalanceSheet_AssetScalarWhereWithAggregatesInput]
  NOT: livingBalanceSheet_AssetScalarWhereWithAggregatesInput
  id: livingBalanceSheet_StringWithAggregatesFilter
  assetType: livingBalanceSheet_EnumAssetTypeWithAggregatesFilter
  value: livingBalanceSheet_FloatWithAggregatesFilter
  userId: livingBalanceSheet_StringWithAggregatesFilter
}

type livingBalanceSheet_AssetGroupByOutputType {
  id: String!
  assetType: livingBalanceSheet_AssetType!
  value: Float!
  userId: String!
  _count: livingBalanceSheet_AssetCountAggregateOutputType
  _avg: livingBalanceSheet_AssetAvgAggregateOutputType
  _sum: livingBalanceSheet_AssetSumAggregateOutputType
  _min: livingBalanceSheet_AssetMinAggregateOutputType
  _max: livingBalanceSheet_AssetMaxAggregateOutputType
  _join: Query!
}

type livingBalanceSheet_LiabilityCountAggregateOutputType {
  id: Int!
  liabilityType: Int!
  amount: Int!
  userId: Int!
  _all: Int!
  _join: Query!
}

type livingBalanceSheet_LiabilityAvgAggregateOutputType {
  amount: Float
  _join: Query!
}

type livingBalanceSheet_LiabilitySumAggregateOutputType {
  amount: Float
  _join: Query!
}

type livingBalanceSheet_LiabilityMinAggregateOutputType {
  id: String
  liabilityType: livingBalanceSheet_LiabilityType
  amount: Float
  userId: String
  _join: Query!
}

type livingBalanceSheet_LiabilityMaxAggregateOutputType {
  id: String
  liabilityType: livingBalanceSheet_LiabilityType
  amount: Float
  userId: String
  _join: Query!
}

type livingBalanceSheet_AggregateLiability {
  _count: livingBalanceSheet_LiabilityCountAggregateOutputType
  _avg: livingBalanceSheet_LiabilityAvgAggregateOutputType
  _sum: livingBalanceSheet_LiabilitySumAggregateOutputType
  _min: livingBalanceSheet_LiabilityMinAggregateOutputType
  _max: livingBalanceSheet_LiabilityMaxAggregateOutputType
  _join: Query!
}

input livingBalanceSheet_LiabilityCountOrderByAggregateInput {
  id: livingBalanceSheet_SortOrder
  liabilityType: livingBalanceSheet_SortOrder
  amount: livingBalanceSheet_SortOrder
  userId: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_LiabilityAvgOrderByAggregateInput {
  amount: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_LiabilityMaxOrderByAggregateInput {
  id: livingBalanceSheet_SortOrder
  liabilityType: livingBalanceSheet_SortOrder
  amount: livingBalanceSheet_SortOrder
  userId: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_LiabilityMinOrderByAggregateInput {
  id: livingBalanceSheet_SortOrder
  liabilityType: livingBalanceSheet_SortOrder
  amount: livingBalanceSheet_SortOrder
  userId: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_LiabilitySumOrderByAggregateInput {
  amount: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_LiabilityOrderByWithAggregationInput {
  id: livingBalanceSheet_SortOrder
  liabilityType: livingBalanceSheet_SortOrder
  amount: livingBalanceSheet_SortOrder
  userId: livingBalanceSheet_SortOrder
  _count: livingBalanceSheet_LiabilityCountOrderByAggregateInput
  _avg: livingBalanceSheet_LiabilityAvgOrderByAggregateInput
  _max: livingBalanceSheet_LiabilityMaxOrderByAggregateInput
  _min: livingBalanceSheet_LiabilityMinOrderByAggregateInput
  _sum: livingBalanceSheet_LiabilitySumOrderByAggregateInput
}

input livingBalanceSheet_NestedEnumLiabilityTypeFilter {
  equals: livingBalanceSheet_LiabilityType
  in: [livingBalanceSheet_LiabilityType]
  notIn: [livingBalanceSheet_LiabilityType]
  not: livingBalanceSheet_LiabilityType
}

input livingBalanceSheet_EnumLiabilityTypeWithAggregatesFilter {
  equals: livingBalanceSheet_LiabilityType
  in: [livingBalanceSheet_LiabilityType]
  notIn: [livingBalanceSheet_LiabilityType]
  not: livingBalanceSheet_LiabilityType
  _count: livingBalanceSheet_NestedIntFilter
  _min: livingBalanceSheet_NestedEnumLiabilityTypeFilter
  _max: livingBalanceSheet_NestedEnumLiabilityTypeFilter
}

input livingBalanceSheet_LiabilityScalarWhereWithAggregatesInput {
  AND: livingBalanceSheet_LiabilityScalarWhereWithAggregatesInput
  OR: [livingBalanceSheet_LiabilityScalarWhereWithAggregatesInput]
  NOT: livingBalanceSheet_LiabilityScalarWhereWithAggregatesInput
  id: livingBalanceSheet_StringWithAggregatesFilter
  liabilityType: livingBalanceSheet_EnumLiabilityTypeWithAggregatesFilter
  amount: livingBalanceSheet_FloatWithAggregatesFilter
  userId: livingBalanceSheet_StringWithAggregatesFilter
}

type livingBalanceSheet_LiabilityGroupByOutputType {
  id: String!
  liabilityType: livingBalanceSheet_LiabilityType!
  amount: Float!
  userId: String!
  _count: livingBalanceSheet_LiabilityCountAggregateOutputType
  _avg: livingBalanceSheet_LiabilityAvgAggregateOutputType
  _sum: livingBalanceSheet_LiabilitySumAggregateOutputType
  _min: livingBalanceSheet_LiabilityMinAggregateOutputType
  _max: livingBalanceSheet_LiabilityMaxAggregateOutputType
  _join: Query!
}

type livingBalanceSheet_FinancialGoalCountAggregateOutputType {
  id: Int!
  goalType: Int!
  target: Int!
  deadline: Int!
  userId: Int!
  _all: Int!
  _join: Query!
}

type livingBalanceSheet_FinancialGoalAvgAggregateOutputType {
  target: Float
  _join: Query!
}

type livingBalanceSheet_FinancialGoalSumAggregateOutputType {
  target: Float
  _join: Query!
}

type livingBalanceSheet_FinancialGoalMinAggregateOutputType {
  id: String
  goalType: livingBalanceSheet_GoalType
  target: Float
  deadline: DateTime
  userId: String
  _join: Query!
}

type livingBalanceSheet_FinancialGoalMaxAggregateOutputType {
  id: String
  goalType: livingBalanceSheet_GoalType
  target: Float
  deadline: DateTime
  userId: String
  _join: Query!
}

type livingBalanceSheet_AggregateFinancialGoal {
  _count: livingBalanceSheet_FinancialGoalCountAggregateOutputType
  _avg: livingBalanceSheet_FinancialGoalAvgAggregateOutputType
  _sum: livingBalanceSheet_FinancialGoalSumAggregateOutputType
  _min: livingBalanceSheet_FinancialGoalMinAggregateOutputType
  _max: livingBalanceSheet_FinancialGoalMaxAggregateOutputType
  _join: Query!
}

input livingBalanceSheet_FinancialGoalCountOrderByAggregateInput {
  id: livingBalanceSheet_SortOrder
  goalType: livingBalanceSheet_SortOrder
  target: livingBalanceSheet_SortOrder
  deadline: livingBalanceSheet_SortOrder
  userId: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_FinancialGoalAvgOrderByAggregateInput {
  target: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_FinancialGoalMaxOrderByAggregateInput {
  id: livingBalanceSheet_SortOrder
  goalType: livingBalanceSheet_SortOrder
  target: livingBalanceSheet_SortOrder
  deadline: livingBalanceSheet_SortOrder
  userId: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_FinancialGoalMinOrderByAggregateInput {
  id: livingBalanceSheet_SortOrder
  goalType: livingBalanceSheet_SortOrder
  target: livingBalanceSheet_SortOrder
  deadline: livingBalanceSheet_SortOrder
  userId: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_FinancialGoalSumOrderByAggregateInput {
  target: livingBalanceSheet_SortOrder
}

input livingBalanceSheet_FinancialGoalOrderByWithAggregationInput {
  id: livingBalanceSheet_SortOrder
  goalType: livingBalanceSheet_SortOrder
  target: livingBalanceSheet_SortOrder
  deadline: livingBalanceSheet_SortOrder
  userId: livingBalanceSheet_SortOrder
  _count: livingBalanceSheet_FinancialGoalCountOrderByAggregateInput
  _avg: livingBalanceSheet_FinancialGoalAvgOrderByAggregateInput
  _max: livingBalanceSheet_FinancialGoalMaxOrderByAggregateInput
  _min: livingBalanceSheet_FinancialGoalMinOrderByAggregateInput
  _sum: livingBalanceSheet_FinancialGoalSumOrderByAggregateInput
}

input livingBalanceSheet_NestedEnumGoalTypeFilter {
  equals: livingBalanceSheet_GoalType
  in: [livingBalanceSheet_GoalType]
  notIn: [livingBalanceSheet_GoalType]
  not: livingBalanceSheet_GoalType
}

input livingBalanceSheet_EnumGoalTypeWithAggregatesFilter {
  equals: livingBalanceSheet_GoalType
  in: [livingBalanceSheet_GoalType]
  notIn: [livingBalanceSheet_GoalType]
  not: livingBalanceSheet_GoalType
  _count: livingBalanceSheet_NestedIntFilter
  _min: livingBalanceSheet_NestedEnumGoalTypeFilter
  _max: livingBalanceSheet_NestedEnumGoalTypeFilter
}

input livingBalanceSheet_NestedDateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: livingBalanceSheet_NestedDateTimeWithAggregatesFilter
  _count: livingBalanceSheet_NestedIntFilter
  _min: livingBalanceSheet_NestedDateTimeFilter
  _max: livingBalanceSheet_NestedDateTimeFilter
}

input livingBalanceSheet_DateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: livingBalanceSheet_NestedDateTimeWithAggregatesFilter
  _count: livingBalanceSheet_NestedIntFilter
  _min: livingBalanceSheet_NestedDateTimeFilter
  _max: livingBalanceSheet_NestedDateTimeFilter
}

input livingBalanceSheet_FinancialGoalScalarWhereWithAggregatesInput {
  AND: livingBalanceSheet_FinancialGoalScalarWhereWithAggregatesInput
  OR: [livingBalanceSheet_FinancialGoalScalarWhereWithAggregatesInput]
  NOT: livingBalanceSheet_FinancialGoalScalarWhereWithAggregatesInput
  id: livingBalanceSheet_StringWithAggregatesFilter
  goalType: livingBalanceSheet_EnumGoalTypeWithAggregatesFilter
  target: livingBalanceSheet_FloatWithAggregatesFilter
  deadline: livingBalanceSheet_DateTimeWithAggregatesFilter
  userId: livingBalanceSheet_StringWithAggregatesFilter
}

type livingBalanceSheet_FinancialGoalGroupByOutputType {
  id: String!
  goalType: livingBalanceSheet_GoalType!
  target: Float!
  deadline: DateTime!
  userId: String!
  _count: livingBalanceSheet_FinancialGoalCountAggregateOutputType
  _avg: livingBalanceSheet_FinancialGoalAvgAggregateOutputType
  _sum: livingBalanceSheet_FinancialGoalSumAggregateOutputType
  _min: livingBalanceSheet_FinancialGoalMinAggregateOutputType
  _max: livingBalanceSheet_FinancialGoalMaxAggregateOutputType
  _join: Query!
}

input livingBalanceSheet_AssetCreateWithoutUserInput {
  id: String
  assetType: livingBalanceSheet_AssetType!
  value: Float!
}

input livingBalanceSheet_AssetCreateOrConnectWithoutUserInput {
  where: livingBalanceSheet_AssetWhereUniqueInput!
  create: livingBalanceSheet_AssetCreateWithoutUserInput!
}

input livingBalanceSheet_AssetCreateManyUserInput {
  id: String
  assetType: livingBalanceSheet_AssetType!
  value: Float!
}

input livingBalanceSheet_AssetCreateManyUserInputEnvelope {
  data: livingBalanceSheet_AssetCreateManyUserInput!
  skipDuplicates: Boolean
}

input livingBalanceSheet_AssetCreateNestedManyWithoutUserInput {
  create: livingBalanceSheet_AssetCreateWithoutUserInput
  connectOrCreate: livingBalanceSheet_AssetCreateOrConnectWithoutUserInput
  createMany: livingBalanceSheet_AssetCreateManyUserInputEnvelope
  connect: livingBalanceSheet_AssetWhereUniqueInput
}

input livingBalanceSheet_LiabilityCreateWithoutUserInput {
  id: String
  liabilityType: livingBalanceSheet_LiabilityType!
  amount: Float!
}

input livingBalanceSheet_LiabilityCreateOrConnectWithoutUserInput {
  where: livingBalanceSheet_LiabilityWhereUniqueInput!
  create: livingBalanceSheet_LiabilityCreateWithoutUserInput!
}

input livingBalanceSheet_LiabilityCreateManyUserInput {
  id: String
  liabilityType: livingBalanceSheet_LiabilityType!
  amount: Float!
}

input livingBalanceSheet_LiabilityCreateManyUserInputEnvelope {
  data: livingBalanceSheet_LiabilityCreateManyUserInput!
  skipDuplicates: Boolean
}

input livingBalanceSheet_LiabilityCreateNestedManyWithoutUserInput {
  create: livingBalanceSheet_LiabilityCreateWithoutUserInput
  connectOrCreate: livingBalanceSheet_LiabilityCreateOrConnectWithoutUserInput
  createMany: livingBalanceSheet_LiabilityCreateManyUserInputEnvelope
  connect: livingBalanceSheet_LiabilityWhereUniqueInput
}

input livingBalanceSheet_FinancialGoalCreateWithoutUserInput {
  id: String
  goalType: livingBalanceSheet_GoalType!
  target: Float!
  deadline: DateTime!
}

input livingBalanceSheet_FinancialGoalCreateOrConnectWithoutUserInput {
  where: livingBalanceSheet_FinancialGoalWhereUniqueInput!
  create: livingBalanceSheet_FinancialGoalCreateWithoutUserInput!
}

input livingBalanceSheet_FinancialGoalCreateManyUserInput {
  id: String
  goalType: livingBalanceSheet_GoalType!
  target: Float!
  deadline: DateTime!
}

input livingBalanceSheet_FinancialGoalCreateManyUserInputEnvelope {
  data: livingBalanceSheet_FinancialGoalCreateManyUserInput!
  skipDuplicates: Boolean
}

input livingBalanceSheet_FinancialGoalCreateNestedManyWithoutUserInput {
  create: livingBalanceSheet_FinancialGoalCreateWithoutUserInput
  connectOrCreate: livingBalanceSheet_FinancialGoalCreateOrConnectWithoutUserInput
  createMany: livingBalanceSheet_FinancialGoalCreateManyUserInputEnvelope
  connect: livingBalanceSheet_FinancialGoalWhereUniqueInput
}

input livingBalanceSheet_UserCreateInput {
  id: String
  username: String!
  password: String!
  role: livingBalanceSheet_UserRole!
  assets: livingBalanceSheet_AssetCreateNestedManyWithoutUserInput
  liabilities: livingBalanceSheet_LiabilityCreateNestedManyWithoutUserInput
  goals: livingBalanceSheet_FinancialGoalCreateNestedManyWithoutUserInput
}

input livingBalanceSheet_StringFieldUpdateOperationsInput {
  set: String
}

input livingBalanceSheet_FloatFieldUpdateOperationsInput {
  set: Float
  increment: Float
  decrement: Float
  multiply: Float
  divide: Float
}

input livingBalanceSheet_AssetUpdateWithoutUserInput {
  id: livingBalanceSheet_StringFieldUpdateOperationsInput
  assetType: livingBalanceSheet_AssetType
  value: livingBalanceSheet_FloatFieldUpdateOperationsInput
}

input livingBalanceSheet_AssetUpsertWithWhereUniqueWithoutUserInput {
  where: livingBalanceSheet_AssetWhereUniqueInput!
  update: livingBalanceSheet_AssetUpdateWithoutUserInput!
  create: livingBalanceSheet_AssetCreateWithoutUserInput!
}

input livingBalanceSheet_AssetUpdateWithWhereUniqueWithoutUserInput {
  where: livingBalanceSheet_AssetWhereUniqueInput!
  data: livingBalanceSheet_AssetUpdateWithoutUserInput!
}

input livingBalanceSheet_AssetScalarWhereInput {
  AND: livingBalanceSheet_AssetScalarWhereInput
  OR: [livingBalanceSheet_AssetScalarWhereInput]
  NOT: livingBalanceSheet_AssetScalarWhereInput
  id: livingBalanceSheet_StringFilter
  assetType: livingBalanceSheet_EnumAssetTypeFilter
  value: livingBalanceSheet_FloatFilter
  userId: livingBalanceSheet_StringFilter
}

input livingBalanceSheet_AssetUpdateManyMutationInput {
  id: livingBalanceSheet_StringFieldUpdateOperationsInput
  assetType: livingBalanceSheet_AssetType
  value: livingBalanceSheet_FloatFieldUpdateOperationsInput
}

input livingBalanceSheet_AssetUpdateManyWithWhereWithoutUserInput {
  where: livingBalanceSheet_AssetScalarWhereInput!
  data: livingBalanceSheet_AssetUpdateManyMutationInput!
}

input livingBalanceSheet_AssetUpdateManyWithoutUserNestedInput {
  create: livingBalanceSheet_AssetCreateWithoutUserInput
  connectOrCreate: livingBalanceSheet_AssetCreateOrConnectWithoutUserInput
  upsert: livingBalanceSheet_AssetUpsertWithWhereUniqueWithoutUserInput
  createMany: livingBalanceSheet_AssetCreateManyUserInputEnvelope
  set: livingBalanceSheet_AssetWhereUniqueInput
  disconnect: livingBalanceSheet_AssetWhereUniqueInput
  delete: livingBalanceSheet_AssetWhereUniqueInput
  connect: livingBalanceSheet_AssetWhereUniqueInput
  update: livingBalanceSheet_AssetUpdateWithWhereUniqueWithoutUserInput
  updateMany: livingBalanceSheet_AssetUpdateManyWithWhereWithoutUserInput
  deleteMany: livingBalanceSheet_AssetScalarWhereInput
}

input livingBalanceSheet_LiabilityUpdateWithoutUserInput {
  id: livingBalanceSheet_StringFieldUpdateOperationsInput
  liabilityType: livingBalanceSheet_LiabilityType
  amount: livingBalanceSheet_FloatFieldUpdateOperationsInput
}

input livingBalanceSheet_LiabilityUpsertWithWhereUniqueWithoutUserInput {
  where: livingBalanceSheet_LiabilityWhereUniqueInput!
  update: livingBalanceSheet_LiabilityUpdateWithoutUserInput!
  create: livingBalanceSheet_LiabilityCreateWithoutUserInput!
}

input livingBalanceSheet_LiabilityUpdateWithWhereUniqueWithoutUserInput {
  where: livingBalanceSheet_LiabilityWhereUniqueInput!
  data: livingBalanceSheet_LiabilityUpdateWithoutUserInput!
}

input livingBalanceSheet_LiabilityScalarWhereInput {
  AND: livingBalanceSheet_LiabilityScalarWhereInput
  OR: [livingBalanceSheet_LiabilityScalarWhereInput]
  NOT: livingBalanceSheet_LiabilityScalarWhereInput
  id: livingBalanceSheet_StringFilter
  liabilityType: livingBalanceSheet_EnumLiabilityTypeFilter
  amount: livingBalanceSheet_FloatFilter
  userId: livingBalanceSheet_StringFilter
}

input livingBalanceSheet_LiabilityUpdateManyMutationInput {
  id: livingBalanceSheet_StringFieldUpdateOperationsInput
  liabilityType: livingBalanceSheet_LiabilityType
  amount: livingBalanceSheet_FloatFieldUpdateOperationsInput
}

input livingBalanceSheet_LiabilityUpdateManyWithWhereWithoutUserInput {
  where: livingBalanceSheet_LiabilityScalarWhereInput!
  data: livingBalanceSheet_LiabilityUpdateManyMutationInput!
}

input livingBalanceSheet_LiabilityUpdateManyWithoutUserNestedInput {
  create: livingBalanceSheet_LiabilityCreateWithoutUserInput
  connectOrCreate: livingBalanceSheet_LiabilityCreateOrConnectWithoutUserInput
  upsert: livingBalanceSheet_LiabilityUpsertWithWhereUniqueWithoutUserInput
  createMany: livingBalanceSheet_LiabilityCreateManyUserInputEnvelope
  set: livingBalanceSheet_LiabilityWhereUniqueInput
  disconnect: livingBalanceSheet_LiabilityWhereUniqueInput
  delete: livingBalanceSheet_LiabilityWhereUniqueInput
  connect: livingBalanceSheet_LiabilityWhereUniqueInput
  update: livingBalanceSheet_LiabilityUpdateWithWhereUniqueWithoutUserInput
  updateMany: livingBalanceSheet_LiabilityUpdateManyWithWhereWithoutUserInput
  deleteMany: livingBalanceSheet_LiabilityScalarWhereInput
}

input livingBalanceSheet_DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input livingBalanceSheet_FinancialGoalUpdateWithoutUserInput {
  id: livingBalanceSheet_StringFieldUpdateOperationsInput
  goalType: livingBalanceSheet_GoalType
  target: livingBalanceSheet_FloatFieldUpdateOperationsInput
  deadline: livingBalanceSheet_DateTimeFieldUpdateOperationsInput
}

input livingBalanceSheet_FinancialGoalUpsertWithWhereUniqueWithoutUserInput {
  where: livingBalanceSheet_FinancialGoalWhereUniqueInput!
  update: livingBalanceSheet_FinancialGoalUpdateWithoutUserInput!
  create: livingBalanceSheet_FinancialGoalCreateWithoutUserInput!
}

input livingBalanceSheet_FinancialGoalUpdateWithWhereUniqueWithoutUserInput {
  where: livingBalanceSheet_FinancialGoalWhereUniqueInput!
  data: livingBalanceSheet_FinancialGoalUpdateWithoutUserInput!
}

input livingBalanceSheet_FinancialGoalScalarWhereInput {
  AND: livingBalanceSheet_FinancialGoalScalarWhereInput
  OR: [livingBalanceSheet_FinancialGoalScalarWhereInput]
  NOT: livingBalanceSheet_FinancialGoalScalarWhereInput
  id: livingBalanceSheet_StringFilter
  goalType: livingBalanceSheet_EnumGoalTypeFilter
  target: livingBalanceSheet_FloatFilter
  deadline: livingBalanceSheet_DateTimeFilter
  userId: livingBalanceSheet_StringFilter
}

input livingBalanceSheet_FinancialGoalUpdateManyMutationInput {
  id: livingBalanceSheet_StringFieldUpdateOperationsInput
  goalType: livingBalanceSheet_GoalType
  target: livingBalanceSheet_FloatFieldUpdateOperationsInput
  deadline: livingBalanceSheet_DateTimeFieldUpdateOperationsInput
}

input livingBalanceSheet_FinancialGoalUpdateManyWithWhereWithoutUserInput {
  where: livingBalanceSheet_FinancialGoalScalarWhereInput!
  data: livingBalanceSheet_FinancialGoalUpdateManyMutationInput!
}

input livingBalanceSheet_FinancialGoalUpdateManyWithoutUserNestedInput {
  create: livingBalanceSheet_FinancialGoalCreateWithoutUserInput
  connectOrCreate: livingBalanceSheet_FinancialGoalCreateOrConnectWithoutUserInput
  upsert: livingBalanceSheet_FinancialGoalUpsertWithWhereUniqueWithoutUserInput
  createMany: livingBalanceSheet_FinancialGoalCreateManyUserInputEnvelope
  set: livingBalanceSheet_FinancialGoalWhereUniqueInput
  disconnect: livingBalanceSheet_FinancialGoalWhereUniqueInput
  delete: livingBalanceSheet_FinancialGoalWhereUniqueInput
  connect: livingBalanceSheet_FinancialGoalWhereUniqueInput
  update: livingBalanceSheet_FinancialGoalUpdateWithWhereUniqueWithoutUserInput
  updateMany: livingBalanceSheet_FinancialGoalUpdateManyWithWhereWithoutUserInput
  deleteMany: livingBalanceSheet_FinancialGoalScalarWhereInput
}

input livingBalanceSheet_UserUpdateInput {
  id: livingBalanceSheet_StringFieldUpdateOperationsInput
  username: livingBalanceSheet_StringFieldUpdateOperationsInput
  password: livingBalanceSheet_StringFieldUpdateOperationsInput
  role: livingBalanceSheet_UserRole
  assets: livingBalanceSheet_AssetUpdateManyWithoutUserNestedInput
  liabilities: livingBalanceSheet_LiabilityUpdateManyWithoutUserNestedInput
  goals: livingBalanceSheet_FinancialGoalUpdateManyWithoutUserNestedInput
}

input livingBalanceSheet_UserCreateManyInput {
  id: String
  username: String!
  password: String!
  role: livingBalanceSheet_UserRole!
}

type livingBalanceSheet_AffectedRowsOutput {
  count: Int!
  _join: Query!
}

input livingBalanceSheet_UserUpdateManyMutationInput {
  id: livingBalanceSheet_StringFieldUpdateOperationsInput
  username: livingBalanceSheet_StringFieldUpdateOperationsInput
  password: livingBalanceSheet_StringFieldUpdateOperationsInput
  role: livingBalanceSheet_UserRole
}

input livingBalanceSheet_UserCreateWithoutAssetsInput {
  id: String
  username: String!
  password: String!
  role: livingBalanceSheet_UserRole!
  liabilities: livingBalanceSheet_LiabilityCreateNestedManyWithoutUserInput
  goals: livingBalanceSheet_FinancialGoalCreateNestedManyWithoutUserInput
}

input livingBalanceSheet_UserCreateOrConnectWithoutAssetsInput {
  where: livingBalanceSheet_UserWhereUniqueInput!
  create: livingBalanceSheet_UserCreateWithoutAssetsInput!
}

input livingBalanceSheet_UserCreateNestedOneWithoutAssetsInput {
  create: livingBalanceSheet_UserCreateWithoutAssetsInput
  connectOrCreate: livingBalanceSheet_UserCreateOrConnectWithoutAssetsInput
  connect: livingBalanceSheet_UserWhereUniqueInput
}

input livingBalanceSheet_AssetCreateInput {
  id: String
  assetType: livingBalanceSheet_AssetType!
  value: Float!
  user: livingBalanceSheet_UserCreateNestedOneWithoutAssetsInput!
}

input livingBalanceSheet_UserUpdateWithoutAssetsInput {
  id: livingBalanceSheet_StringFieldUpdateOperationsInput
  username: livingBalanceSheet_StringFieldUpdateOperationsInput
  password: livingBalanceSheet_StringFieldUpdateOperationsInput
  role: livingBalanceSheet_UserRole
  liabilities: livingBalanceSheet_LiabilityUpdateManyWithoutUserNestedInput
  goals: livingBalanceSheet_FinancialGoalUpdateManyWithoutUserNestedInput
}

input livingBalanceSheet_UserUpsertWithoutAssetsInput {
  update: livingBalanceSheet_UserUpdateWithoutAssetsInput!
  create: livingBalanceSheet_UserCreateWithoutAssetsInput!
}

input livingBalanceSheet_UserUpdateOneRequiredWithoutAssetsNestedInput {
  create: livingBalanceSheet_UserCreateWithoutAssetsInput
  connectOrCreate: livingBalanceSheet_UserCreateOrConnectWithoutAssetsInput
  upsert: livingBalanceSheet_UserUpsertWithoutAssetsInput
  connect: livingBalanceSheet_UserWhereUniqueInput
  update: livingBalanceSheet_UserUpdateWithoutAssetsInput
}

input livingBalanceSheet_AssetUpdateInput {
  id: livingBalanceSheet_StringFieldUpdateOperationsInput
  assetType: livingBalanceSheet_AssetType
  value: livingBalanceSheet_FloatFieldUpdateOperationsInput
  user: livingBalanceSheet_UserUpdateOneRequiredWithoutAssetsNestedInput
}

input livingBalanceSheet_AssetCreateManyInput {
  id: String
  assetType: livingBalanceSheet_AssetType!
  value: Float!
  userId: String!
}

input livingBalanceSheet_UserCreateWithoutLiabilitiesInput {
  id: String
  username: String!
  password: String!
  role: livingBalanceSheet_UserRole!
  assets: livingBalanceSheet_AssetCreateNestedManyWithoutUserInput
  goals: livingBalanceSheet_FinancialGoalCreateNestedManyWithoutUserInput
}

input livingBalanceSheet_UserCreateOrConnectWithoutLiabilitiesInput {
  where: livingBalanceSheet_UserWhereUniqueInput!
  create: livingBalanceSheet_UserCreateWithoutLiabilitiesInput!
}

input livingBalanceSheet_UserCreateNestedOneWithoutLiabilitiesInput {
  create: livingBalanceSheet_UserCreateWithoutLiabilitiesInput
  connectOrCreate: livingBalanceSheet_UserCreateOrConnectWithoutLiabilitiesInput
  connect: livingBalanceSheet_UserWhereUniqueInput
}

input livingBalanceSheet_LiabilityCreateInput {
  id: String
  liabilityType: livingBalanceSheet_LiabilityType!
  amount: Float!
  user: livingBalanceSheet_UserCreateNestedOneWithoutLiabilitiesInput!
}

input livingBalanceSheet_UserUpdateWithoutLiabilitiesInput {
  id: livingBalanceSheet_StringFieldUpdateOperationsInput
  username: livingBalanceSheet_StringFieldUpdateOperationsInput
  password: livingBalanceSheet_StringFieldUpdateOperationsInput
  role: livingBalanceSheet_UserRole
  assets: livingBalanceSheet_AssetUpdateManyWithoutUserNestedInput
  goals: livingBalanceSheet_FinancialGoalUpdateManyWithoutUserNestedInput
}

input livingBalanceSheet_UserUpsertWithoutLiabilitiesInput {
  update: livingBalanceSheet_UserUpdateWithoutLiabilitiesInput!
  create: livingBalanceSheet_UserCreateWithoutLiabilitiesInput!
}

input livingBalanceSheet_UserUpdateOneRequiredWithoutLiabilitiesNestedInput {
  create: livingBalanceSheet_UserCreateWithoutLiabilitiesInput
  connectOrCreate: livingBalanceSheet_UserCreateOrConnectWithoutLiabilitiesInput
  upsert: livingBalanceSheet_UserUpsertWithoutLiabilitiesInput
  connect: livingBalanceSheet_UserWhereUniqueInput
  update: livingBalanceSheet_UserUpdateWithoutLiabilitiesInput
}

input livingBalanceSheet_LiabilityUpdateInput {
  id: livingBalanceSheet_StringFieldUpdateOperationsInput
  liabilityType: livingBalanceSheet_LiabilityType
  amount: livingBalanceSheet_FloatFieldUpdateOperationsInput
  user: livingBalanceSheet_UserUpdateOneRequiredWithoutLiabilitiesNestedInput
}

input livingBalanceSheet_LiabilityCreateManyInput {
  id: String
  liabilityType: livingBalanceSheet_LiabilityType!
  amount: Float!
  userId: String!
}

input livingBalanceSheet_UserCreateWithoutGoalsInput {
  id: String
  username: String!
  password: String!
  role: livingBalanceSheet_UserRole!
  assets: livingBalanceSheet_AssetCreateNestedManyWithoutUserInput
  liabilities: livingBalanceSheet_LiabilityCreateNestedManyWithoutUserInput
}

input livingBalanceSheet_UserCreateOrConnectWithoutGoalsInput {
  where: livingBalanceSheet_UserWhereUniqueInput!
  create: livingBalanceSheet_UserCreateWithoutGoalsInput!
}

input livingBalanceSheet_UserCreateNestedOneWithoutGoalsInput {
  create: livingBalanceSheet_UserCreateWithoutGoalsInput
  connectOrCreate: livingBalanceSheet_UserCreateOrConnectWithoutGoalsInput
  connect: livingBalanceSheet_UserWhereUniqueInput
}

input livingBalanceSheet_FinancialGoalCreateInput {
  id: String
  goalType: livingBalanceSheet_GoalType!
  target: Float!
  deadline: DateTime!
  user: livingBalanceSheet_UserCreateNestedOneWithoutGoalsInput!
}

input livingBalanceSheet_UserUpdateWithoutGoalsInput {
  id: livingBalanceSheet_StringFieldUpdateOperationsInput
  username: livingBalanceSheet_StringFieldUpdateOperationsInput
  password: livingBalanceSheet_StringFieldUpdateOperationsInput
  role: livingBalanceSheet_UserRole
  assets: livingBalanceSheet_AssetUpdateManyWithoutUserNestedInput
  liabilities: livingBalanceSheet_LiabilityUpdateManyWithoutUserNestedInput
}

input livingBalanceSheet_UserUpsertWithoutGoalsInput {
  update: livingBalanceSheet_UserUpdateWithoutGoalsInput!
  create: livingBalanceSheet_UserCreateWithoutGoalsInput!
}

input livingBalanceSheet_UserUpdateOneRequiredWithoutGoalsNestedInput {
  create: livingBalanceSheet_UserCreateWithoutGoalsInput
  connectOrCreate: livingBalanceSheet_UserCreateOrConnectWithoutGoalsInput
  upsert: livingBalanceSheet_UserUpsertWithoutGoalsInput
  connect: livingBalanceSheet_UserWhereUniqueInput
  update: livingBalanceSheet_UserUpdateWithoutGoalsInput
}

input livingBalanceSheet_FinancialGoalUpdateInput {
  id: livingBalanceSheet_StringFieldUpdateOperationsInput
  goalType: livingBalanceSheet_GoalType
  target: livingBalanceSheet_FloatFieldUpdateOperationsInput
  deadline: livingBalanceSheet_DateTimeFieldUpdateOperationsInput
  user: livingBalanceSheet_UserUpdateOneRequiredWithoutGoalsNestedInput
}

input livingBalanceSheet_FinancialGoalCreateManyInput {
  id: String
  goalType: livingBalanceSheet_GoalType!
  target: Float!
  deadline: DateTime!
  userId: String!
}

scalar livingBalanceSheet_Bytes

input smartOffice_NestedStringFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: smartOffice_NestedStringFilter
}

input smartOffice_StringFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: smartOffice_NestedStringFilter
}

enum smartOffice_UserRole {
  ADMIN
  AGENT
  SALES_REP
}

input smartOffice_EnumUserRoleFilter {
  equals: smartOffice_UserRole
  in: [smartOffice_UserRole]
  notIn: [smartOffice_UserRole]
  not: smartOffice_UserRole
}

input smartOffice_UserRelationFilter {
  is: smartOffice_UserWhereInput
  isNot: smartOffice_UserWhereInput
}

input smartOffice_ClientWhereInput {
  AND: smartOffice_ClientWhereInput
  OR: [smartOffice_ClientWhereInput]
  NOT: smartOffice_ClientWhereInput
  id: smartOffice_StringFilter
  name: smartOffice_StringFilter
  email: smartOffice_StringFilter
  phone: smartOffice_StringFilter
  userId: smartOffice_StringFilter
  user: smartOffice_UserRelationFilter
}

input smartOffice_ClientListRelationFilter {
  every: smartOffice_ClientWhereInput
  some: smartOffice_ClientWhereInput
  none: smartOffice_ClientWhereInput
}

enum smartOffice_TaskType {
  MEETING
  CALL
  EMAIL
  FOLLOW_UP
}

input smartOffice_EnumTaskTypeFilter {
  equals: smartOffice_TaskType
  in: [smartOffice_TaskType]
  notIn: [smartOffice_TaskType]
  not: smartOffice_TaskType
}

enum smartOffice_TaskStatus {
  PENDING
  COMPLETED
  CANCELLED
}

input smartOffice_EnumTaskStatusFilter {
  equals: smartOffice_TaskStatus
  in: [smartOffice_TaskStatus]
  notIn: [smartOffice_TaskStatus]
  not: smartOffice_TaskStatus
}

input smartOffice_JsonFilter {
  equals: JSON
  path: String
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_contains: JSON
  array_starts_with: JSON
  array_ends_with: JSON
  lt: JSON
  lte: JSON
  gt: JSON
  gte: JSON
  not: JSON
}

input smartOffice_TaskWhereInput {
  AND: smartOffice_TaskWhereInput
  OR: [smartOffice_TaskWhereInput]
  NOT: smartOffice_TaskWhereInput
  id: smartOffice_StringFilter
  taskType: smartOffice_EnumTaskTypeFilter
  status: smartOffice_EnumTaskStatusFilter
  details: smartOffice_JsonFilter
  userId: smartOffice_StringFilter
  user: smartOffice_UserRelationFilter
}

input smartOffice_TaskListRelationFilter {
  every: smartOffice_TaskWhereInput
  some: smartOffice_TaskWhereInput
  none: smartOffice_TaskWhereInput
}

enum smartOffice_SaleType {
  NEW_POLICY
  RENEWAL
  UPGRADE
}

input smartOffice_EnumSaleTypeFilter {
  equals: smartOffice_SaleType
  in: [smartOffice_SaleType]
  notIn: [smartOffice_SaleType]
  not: smartOffice_SaleType
}

input smartOffice_NestedFloatFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: smartOffice_NestedFloatFilter
}

input smartOffice_FloatFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: smartOffice_NestedFloatFilter
}

input smartOffice_NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: smartOffice_NestedDateTimeFilter
}

input smartOffice_DateTimeFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: smartOffice_NestedDateTimeFilter
}

input smartOffice_SaleWhereInput {
  AND: smartOffice_SaleWhereInput
  OR: [smartOffice_SaleWhereInput]
  NOT: smartOffice_SaleWhereInput
  id: smartOffice_StringFilter
  saleType: smartOffice_EnumSaleTypeFilter
  amount: smartOffice_FloatFilter
  timestamp: smartOffice_DateTimeFilter
  userId: smartOffice_StringFilter
  user: smartOffice_UserRelationFilter
}

input smartOffice_SaleListRelationFilter {
  every: smartOffice_SaleWhereInput
  some: smartOffice_SaleWhereInput
  none: smartOffice_SaleWhereInput
}

input smartOffice_UserWhereInput {
  AND: smartOffice_UserWhereInput
  OR: [smartOffice_UserWhereInput]
  NOT: smartOffice_UserWhereInput
  id: smartOffice_StringFilter
  username: smartOffice_StringFilter
  password: smartOffice_StringFilter
  role: smartOffice_EnumUserRoleFilter
  clients: smartOffice_ClientListRelationFilter
  tasks: smartOffice_TaskListRelationFilter
  sales: smartOffice_SaleListRelationFilter
}

enum smartOffice_SortOrder {
  asc
  desc
}

input smartOffice_ClientOrderByRelationAggregateInput {
  _count: smartOffice_SortOrder
}

input smartOffice_TaskOrderByRelationAggregateInput {
  _count: smartOffice_SortOrder
}

input smartOffice_SaleOrderByRelationAggregateInput {
  _count: smartOffice_SortOrder
}

input smartOffice_UserOrderByWithRelationInput {
  id: smartOffice_SortOrder
  username: smartOffice_SortOrder
  password: smartOffice_SortOrder
  role: smartOffice_SortOrder
  clients: smartOffice_ClientOrderByRelationAggregateInput
  tasks: smartOffice_TaskOrderByRelationAggregateInput
  sales: smartOffice_SaleOrderByRelationAggregateInput
}

input smartOffice_UserWhereUniqueInput {
  id: String
}

enum smartOffice_UserScalarFieldEnum {
  id
  username
  password
  role
}

input smartOffice_ClientOrderByWithRelationInput {
  id: smartOffice_SortOrder
  name: smartOffice_SortOrder
  email: smartOffice_SortOrder
  phone: smartOffice_SortOrder
  userId: smartOffice_SortOrder
  user: smartOffice_UserOrderByWithRelationInput
}

input smartOffice_ClientWhereUniqueInput {
  id: String
}

enum smartOffice_ClientScalarFieldEnum {
  id
  name
  email
  phone
  userId
}

type smartOffice_Client {
  id: String!
  name: String!
  email: String!
  phone: String!
  userId: String!
  user: smartOffice_User!
  _join: Query!
}

input smartOffice_TaskOrderByWithRelationInput {
  id: smartOffice_SortOrder
  taskType: smartOffice_SortOrder
  status: smartOffice_SortOrder
  details: smartOffice_SortOrder
  userId: smartOffice_SortOrder
  user: smartOffice_UserOrderByWithRelationInput
}

input smartOffice_TaskWhereUniqueInput {
  id: String
}

enum smartOffice_TaskScalarFieldEnum {
  id
  taskType
  status
  details
  userId
}

type smartOffice_Task {
  id: String!
  taskType: smartOffice_TaskType!
  status: smartOffice_TaskStatus!
  details: JSON!
  userId: String!
  user: smartOffice_User!
  _join: Query!
}

input smartOffice_SaleOrderByWithRelationInput {
  id: smartOffice_SortOrder
  saleType: smartOffice_SortOrder
  amount: smartOffice_SortOrder
  timestamp: smartOffice_SortOrder
  userId: smartOffice_SortOrder
  user: smartOffice_UserOrderByWithRelationInput
}

input smartOffice_SaleWhereUniqueInput {
  id: String
}

enum smartOffice_SaleScalarFieldEnum {
  id
  saleType
  amount
  timestamp
  userId
}

type smartOffice_Sale {
  id: String!
  saleType: smartOffice_SaleType!
  amount: Float!
  timestamp: DateTime!
  userId: String!
  user: smartOffice_User!
  _join: Query!
}

type smartOffice_UserCountOutputType {
  clients: Int!
  tasks: Int!
  sales: Int!
  _join: Query!
}

type smartOffice_User {
  id: String!
  username: String!
  password: String!
  role: smartOffice_UserRole!
  clients(where: smartOffice_ClientWhereInput, orderBy: [smartOffice_ClientOrderByWithRelationInput], cursor: smartOffice_ClientWhereUniqueInput, take: Int, skip: Int, distinct: [smartOffice_ClientScalarFieldEnum]): [smartOffice_Client]
  tasks(where: smartOffice_TaskWhereInput, orderBy: [smartOffice_TaskOrderByWithRelationInput], cursor: smartOffice_TaskWhereUniqueInput, take: Int, skip: Int, distinct: [smartOffice_TaskScalarFieldEnum]): [smartOffice_Task]
  sales(where: smartOffice_SaleWhereInput, orderBy: [smartOffice_SaleOrderByWithRelationInput], cursor: smartOffice_SaleWhereUniqueInput, take: Int, skip: Int, distinct: [smartOffice_SaleScalarFieldEnum]): [smartOffice_Sale]
  _count: smartOffice_UserCountOutputType!
  _join: Query!
}

type smartOffice_UserCountAggregateOutputType {
  id: Int!
  username: Int!
  password: Int!
  role: Int!
  _all: Int!
  _join: Query!
}

type smartOffice_UserMinAggregateOutputType {
  id: String
  username: String
  password: String
  role: smartOffice_UserRole
  _join: Query!
}

type smartOffice_UserMaxAggregateOutputType {
  id: String
  username: String
  password: String
  role: smartOffice_UserRole
  _join: Query!
}

type smartOffice_AggregateUser {
  _count: smartOffice_UserCountAggregateOutputType
  _min: smartOffice_UserMinAggregateOutputType
  _max: smartOffice_UserMaxAggregateOutputType
  _join: Query!
}

input smartOffice_UserCountOrderByAggregateInput {
  id: smartOffice_SortOrder
  username: smartOffice_SortOrder
  password: smartOffice_SortOrder
  role: smartOffice_SortOrder
}

input smartOffice_UserMaxOrderByAggregateInput {
  id: smartOffice_SortOrder
  username: smartOffice_SortOrder
  password: smartOffice_SortOrder
  role: smartOffice_SortOrder
}

input smartOffice_UserMinOrderByAggregateInput {
  id: smartOffice_SortOrder
  username: smartOffice_SortOrder
  password: smartOffice_SortOrder
  role: smartOffice_SortOrder
}

input smartOffice_UserOrderByWithAggregationInput {
  id: smartOffice_SortOrder
  username: smartOffice_SortOrder
  password: smartOffice_SortOrder
  role: smartOffice_SortOrder
  _count: smartOffice_UserCountOrderByAggregateInput
  _max: smartOffice_UserMaxOrderByAggregateInput
  _min: smartOffice_UserMinOrderByAggregateInput
}

input smartOffice_NestedIntFilter {
  equals: Int
  in: [Int]
  notIn: [Int]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: smartOffice_NestedIntFilter
}

input smartOffice_NestedStringWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: smartOffice_NestedStringWithAggregatesFilter
  _count: smartOffice_NestedIntFilter
  _min: smartOffice_NestedStringFilter
  _max: smartOffice_NestedStringFilter
}

input smartOffice_StringWithAggregatesFilter {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: smartOffice_NestedStringWithAggregatesFilter
  _count: smartOffice_NestedIntFilter
  _min: smartOffice_NestedStringFilter
  _max: smartOffice_NestedStringFilter
}

input smartOffice_NestedEnumUserRoleFilter {
  equals: smartOffice_UserRole
  in: [smartOffice_UserRole]
  notIn: [smartOffice_UserRole]
  not: smartOffice_UserRole
}

input smartOffice_EnumUserRoleWithAggregatesFilter {
  equals: smartOffice_UserRole
  in: [smartOffice_UserRole]
  notIn: [smartOffice_UserRole]
  not: smartOffice_UserRole
  _count: smartOffice_NestedIntFilter
  _min: smartOffice_NestedEnumUserRoleFilter
  _max: smartOffice_NestedEnumUserRoleFilter
}

input smartOffice_UserScalarWhereWithAggregatesInput {
  AND: smartOffice_UserScalarWhereWithAggregatesInput
  OR: [smartOffice_UserScalarWhereWithAggregatesInput]
  NOT: smartOffice_UserScalarWhereWithAggregatesInput
  id: smartOffice_StringWithAggregatesFilter
  username: smartOffice_StringWithAggregatesFilter
  password: smartOffice_StringWithAggregatesFilter
  role: smartOffice_EnumUserRoleWithAggregatesFilter
}

type smartOffice_UserGroupByOutputType {
  id: String!
  username: String!
  password: String!
  role: smartOffice_UserRole!
  _count: smartOffice_UserCountAggregateOutputType
  _min: smartOffice_UserMinAggregateOutputType
  _max: smartOffice_UserMaxAggregateOutputType
  _join: Query!
}

type smartOffice_ClientCountAggregateOutputType {
  id: Int!
  name: Int!
  email: Int!
  phone: Int!
  userId: Int!
  _all: Int!
  _join: Query!
}

type smartOffice_ClientMinAggregateOutputType {
  id: String
  name: String
  email: String
  phone: String
  userId: String
  _join: Query!
}

type smartOffice_ClientMaxAggregateOutputType {
  id: String
  name: String
  email: String
  phone: String
  userId: String
  _join: Query!
}

type smartOffice_AggregateClient {
  _count: smartOffice_ClientCountAggregateOutputType
  _min: smartOffice_ClientMinAggregateOutputType
  _max: smartOffice_ClientMaxAggregateOutputType
  _join: Query!
}

input smartOffice_ClientCountOrderByAggregateInput {
  id: smartOffice_SortOrder
  name: smartOffice_SortOrder
  email: smartOffice_SortOrder
  phone: smartOffice_SortOrder
  userId: smartOffice_SortOrder
}

input smartOffice_ClientMaxOrderByAggregateInput {
  id: smartOffice_SortOrder
  name: smartOffice_SortOrder
  email: smartOffice_SortOrder
  phone: smartOffice_SortOrder
  userId: smartOffice_SortOrder
}

input smartOffice_ClientMinOrderByAggregateInput {
  id: smartOffice_SortOrder
  name: smartOffice_SortOrder
  email: smartOffice_SortOrder
  phone: smartOffice_SortOrder
  userId: smartOffice_SortOrder
}

input smartOffice_ClientOrderByWithAggregationInput {
  id: smartOffice_SortOrder
  name: smartOffice_SortOrder
  email: smartOffice_SortOrder
  phone: smartOffice_SortOrder
  userId: smartOffice_SortOrder
  _count: smartOffice_ClientCountOrderByAggregateInput
  _max: smartOffice_ClientMaxOrderByAggregateInput
  _min: smartOffice_ClientMinOrderByAggregateInput
}

input smartOffice_ClientScalarWhereWithAggregatesInput {
  AND: smartOffice_ClientScalarWhereWithAggregatesInput
  OR: [smartOffice_ClientScalarWhereWithAggregatesInput]
  NOT: smartOffice_ClientScalarWhereWithAggregatesInput
  id: smartOffice_StringWithAggregatesFilter
  name: smartOffice_StringWithAggregatesFilter
  email: smartOffice_StringWithAggregatesFilter
  phone: smartOffice_StringWithAggregatesFilter
  userId: smartOffice_StringWithAggregatesFilter
}

type smartOffice_ClientGroupByOutputType {
  id: String!
  name: String!
  email: String!
  phone: String!
  userId: String!
  _count: smartOffice_ClientCountAggregateOutputType
  _min: smartOffice_ClientMinAggregateOutputType
  _max: smartOffice_ClientMaxAggregateOutputType
  _join: Query!
}

type smartOffice_TaskCountAggregateOutputType {
  id: Int!
  taskType: Int!
  status: Int!
  details: Int!
  userId: Int!
  _all: Int!
  _join: Query!
}

type smartOffice_TaskMinAggregateOutputType {
  id: String
  taskType: smartOffice_TaskType
  status: smartOffice_TaskStatus
  userId: String
  _join: Query!
}

type smartOffice_TaskMaxAggregateOutputType {
  id: String
  taskType: smartOffice_TaskType
  status: smartOffice_TaskStatus
  userId: String
  _join: Query!
}

type smartOffice_AggregateTask {
  _count: smartOffice_TaskCountAggregateOutputType
  _min: smartOffice_TaskMinAggregateOutputType
  _max: smartOffice_TaskMaxAggregateOutputType
  _join: Query!
}

input smartOffice_TaskCountOrderByAggregateInput {
  id: smartOffice_SortOrder
  taskType: smartOffice_SortOrder
  status: smartOffice_SortOrder
  details: smartOffice_SortOrder
  userId: smartOffice_SortOrder
}

input smartOffice_TaskMaxOrderByAggregateInput {
  id: smartOffice_SortOrder
  taskType: smartOffice_SortOrder
  status: smartOffice_SortOrder
  userId: smartOffice_SortOrder
}

input smartOffice_TaskMinOrderByAggregateInput {
  id: smartOffice_SortOrder
  taskType: smartOffice_SortOrder
  status: smartOffice_SortOrder
  userId: smartOffice_SortOrder
}

input smartOffice_TaskOrderByWithAggregationInput {
  id: smartOffice_SortOrder
  taskType: smartOffice_SortOrder
  status: smartOffice_SortOrder
  details: smartOffice_SortOrder
  userId: smartOffice_SortOrder
  _count: smartOffice_TaskCountOrderByAggregateInput
  _max: smartOffice_TaskMaxOrderByAggregateInput
  _min: smartOffice_TaskMinOrderByAggregateInput
}

input smartOffice_NestedEnumTaskTypeFilter {
  equals: smartOffice_TaskType
  in: [smartOffice_TaskType]
  notIn: [smartOffice_TaskType]
  not: smartOffice_TaskType
}

input smartOffice_EnumTaskTypeWithAggregatesFilter {
  equals: smartOffice_TaskType
  in: [smartOffice_TaskType]
  notIn: [smartOffice_TaskType]
  not: smartOffice_TaskType
  _count: smartOffice_NestedIntFilter
  _min: smartOffice_NestedEnumTaskTypeFilter
  _max: smartOffice_NestedEnumTaskTypeFilter
}

input smartOffice_NestedEnumTaskStatusFilter {
  equals: smartOffice_TaskStatus
  in: [smartOffice_TaskStatus]
  notIn: [smartOffice_TaskStatus]
  not: smartOffice_TaskStatus
}

input smartOffice_EnumTaskStatusWithAggregatesFilter {
  equals: smartOffice_TaskStatus
  in: [smartOffice_TaskStatus]
  notIn: [smartOffice_TaskStatus]
  not: smartOffice_TaskStatus
  _count: smartOffice_NestedIntFilter
  _min: smartOffice_NestedEnumTaskStatusFilter
  _max: smartOffice_NestedEnumTaskStatusFilter
}

input smartOffice_NestedJsonFilter {
  equals: JSON
  path: String
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_contains: JSON
  array_starts_with: JSON
  array_ends_with: JSON
  lt: JSON
  lte: JSON
  gt: JSON
  gte: JSON
  not: JSON
}

input smartOffice_JsonWithAggregatesFilter {
  equals: JSON
  path: String
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_contains: JSON
  array_starts_with: JSON
  array_ends_with: JSON
  lt: JSON
  lte: JSON
  gt: JSON
  gte: JSON
  not: JSON
  _count: smartOffice_NestedIntFilter
  _min: smartOffice_NestedJsonFilter
  _max: smartOffice_NestedJsonFilter
}

input smartOffice_TaskScalarWhereWithAggregatesInput {
  AND: smartOffice_TaskScalarWhereWithAggregatesInput
  OR: [smartOffice_TaskScalarWhereWithAggregatesInput]
  NOT: smartOffice_TaskScalarWhereWithAggregatesInput
  id: smartOffice_StringWithAggregatesFilter
  taskType: smartOffice_EnumTaskTypeWithAggregatesFilter
  status: smartOffice_EnumTaskStatusWithAggregatesFilter
  details: smartOffice_JsonWithAggregatesFilter
  userId: smartOffice_StringWithAggregatesFilter
}

type smartOffice_TaskGroupByOutputType {
  id: String!
  taskType: smartOffice_TaskType!
  status: smartOffice_TaskStatus!
  details: JSON!
  userId: String!
  _count: smartOffice_TaskCountAggregateOutputType
  _min: smartOffice_TaskMinAggregateOutputType
  _max: smartOffice_TaskMaxAggregateOutputType
  _join: Query!
}

type smartOffice_SaleCountAggregateOutputType {
  id: Int!
  saleType: Int!
  amount: Int!
  timestamp: Int!
  userId: Int!
  _all: Int!
  _join: Query!
}

type smartOffice_SaleAvgAggregateOutputType {
  amount: Float
  _join: Query!
}

type smartOffice_SaleSumAggregateOutputType {
  amount: Float
  _join: Query!
}

type smartOffice_SaleMinAggregateOutputType {
  id: String
  saleType: smartOffice_SaleType
  amount: Float
  timestamp: DateTime
  userId: String
  _join: Query!
}

type smartOffice_SaleMaxAggregateOutputType {
  id: String
  saleType: smartOffice_SaleType
  amount: Float
  timestamp: DateTime
  userId: String
  _join: Query!
}

type smartOffice_AggregateSale {
  _count: smartOffice_SaleCountAggregateOutputType
  _avg: smartOffice_SaleAvgAggregateOutputType
  _sum: smartOffice_SaleSumAggregateOutputType
  _min: smartOffice_SaleMinAggregateOutputType
  _max: smartOffice_SaleMaxAggregateOutputType
  _join: Query!
}

input smartOffice_SaleCountOrderByAggregateInput {
  id: smartOffice_SortOrder
  saleType: smartOffice_SortOrder
  amount: smartOffice_SortOrder
  timestamp: smartOffice_SortOrder
  userId: smartOffice_SortOrder
}

input smartOffice_SaleAvgOrderByAggregateInput {
  amount: smartOffice_SortOrder
}

input smartOffice_SaleMaxOrderByAggregateInput {
  id: smartOffice_SortOrder
  saleType: smartOffice_SortOrder
  amount: smartOffice_SortOrder
  timestamp: smartOffice_SortOrder
  userId: smartOffice_SortOrder
}

input smartOffice_SaleMinOrderByAggregateInput {
  id: smartOffice_SortOrder
  saleType: smartOffice_SortOrder
  amount: smartOffice_SortOrder
  timestamp: smartOffice_SortOrder
  userId: smartOffice_SortOrder
}

input smartOffice_SaleSumOrderByAggregateInput {
  amount: smartOffice_SortOrder
}

input smartOffice_SaleOrderByWithAggregationInput {
  id: smartOffice_SortOrder
  saleType: smartOffice_SortOrder
  amount: smartOffice_SortOrder
  timestamp: smartOffice_SortOrder
  userId: smartOffice_SortOrder
  _count: smartOffice_SaleCountOrderByAggregateInput
  _avg: smartOffice_SaleAvgOrderByAggregateInput
  _max: smartOffice_SaleMaxOrderByAggregateInput
  _min: smartOffice_SaleMinOrderByAggregateInput
  _sum: smartOffice_SaleSumOrderByAggregateInput
}

input smartOffice_NestedEnumSaleTypeFilter {
  equals: smartOffice_SaleType
  in: [smartOffice_SaleType]
  notIn: [smartOffice_SaleType]
  not: smartOffice_SaleType
}

input smartOffice_EnumSaleTypeWithAggregatesFilter {
  equals: smartOffice_SaleType
  in: [smartOffice_SaleType]
  notIn: [smartOffice_SaleType]
  not: smartOffice_SaleType
  _count: smartOffice_NestedIntFilter
  _min: smartOffice_NestedEnumSaleTypeFilter
  _max: smartOffice_NestedEnumSaleTypeFilter
}

input smartOffice_NestedFloatWithAggregatesFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: smartOffice_NestedFloatWithAggregatesFilter
  _count: smartOffice_NestedIntFilter
  _avg: smartOffice_NestedFloatFilter
  _sum: smartOffice_NestedFloatFilter
  _min: smartOffice_NestedFloatFilter
  _max: smartOffice_NestedFloatFilter
}

input smartOffice_FloatWithAggregatesFilter {
  equals: Float
  in: [Float]
  notIn: [Float]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: smartOffice_NestedFloatWithAggregatesFilter
  _count: smartOffice_NestedIntFilter
  _avg: smartOffice_NestedFloatFilter
  _sum: smartOffice_NestedFloatFilter
  _min: smartOffice_NestedFloatFilter
  _max: smartOffice_NestedFloatFilter
}

input smartOffice_NestedDateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: smartOffice_NestedDateTimeWithAggregatesFilter
  _count: smartOffice_NestedIntFilter
  _min: smartOffice_NestedDateTimeFilter
  _max: smartOffice_NestedDateTimeFilter
}

input smartOffice_DateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime]
  notIn: [DateTime]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: smartOffice_NestedDateTimeWithAggregatesFilter
  _count: smartOffice_NestedIntFilter
  _min: smartOffice_NestedDateTimeFilter
  _max: smartOffice_NestedDateTimeFilter
}

input smartOffice_SaleScalarWhereWithAggregatesInput {
  AND: smartOffice_SaleScalarWhereWithAggregatesInput
  OR: [smartOffice_SaleScalarWhereWithAggregatesInput]
  NOT: smartOffice_SaleScalarWhereWithAggregatesInput
  id: smartOffice_StringWithAggregatesFilter
  saleType: smartOffice_EnumSaleTypeWithAggregatesFilter
  amount: smartOffice_FloatWithAggregatesFilter
  timestamp: smartOffice_DateTimeWithAggregatesFilter
  userId: smartOffice_StringWithAggregatesFilter
}

type smartOffice_SaleGroupByOutputType {
  id: String!
  saleType: smartOffice_SaleType!
  amount: Float!
  timestamp: DateTime!
  userId: String!
  _count: smartOffice_SaleCountAggregateOutputType
  _avg: smartOffice_SaleAvgAggregateOutputType
  _sum: smartOffice_SaleSumAggregateOutputType
  _min: smartOffice_SaleMinAggregateOutputType
  _max: smartOffice_SaleMaxAggregateOutputType
  _join: Query!
}

input smartOffice_ClientCreateWithoutUserInput {
  id: String
  name: String!
  email: String!
  phone: String!
}

input smartOffice_ClientCreateOrConnectWithoutUserInput {
  where: smartOffice_ClientWhereUniqueInput!
  create: smartOffice_ClientCreateWithoutUserInput!
}

input smartOffice_ClientCreateManyUserInput {
  id: String
  name: String!
  email: String!
  phone: String!
}

input smartOffice_ClientCreateManyUserInputEnvelope {
  data: smartOffice_ClientCreateManyUserInput!
  skipDuplicates: Boolean
}

input smartOffice_ClientCreateNestedManyWithoutUserInput {
  create: smartOffice_ClientCreateWithoutUserInput
  connectOrCreate: smartOffice_ClientCreateOrConnectWithoutUserInput
  createMany: smartOffice_ClientCreateManyUserInputEnvelope
  connect: smartOffice_ClientWhereUniqueInput
}

input smartOffice_TaskCreateWithoutUserInput {
  id: String
  taskType: smartOffice_TaskType!
  status: smartOffice_TaskStatus!
  details: JSON!
}

input smartOffice_TaskCreateOrConnectWithoutUserInput {
  where: smartOffice_TaskWhereUniqueInput!
  create: smartOffice_TaskCreateWithoutUserInput!
}

input smartOffice_TaskCreateManyUserInput {
  id: String
  taskType: smartOffice_TaskType!
  status: smartOffice_TaskStatus!
  details: JSON!
}

input smartOffice_TaskCreateManyUserInputEnvelope {
  data: smartOffice_TaskCreateManyUserInput!
  skipDuplicates: Boolean
}

input smartOffice_TaskCreateNestedManyWithoutUserInput {
  create: smartOffice_TaskCreateWithoutUserInput
  connectOrCreate: smartOffice_TaskCreateOrConnectWithoutUserInput
  createMany: smartOffice_TaskCreateManyUserInputEnvelope
  connect: smartOffice_TaskWhereUniqueInput
}

input smartOffice_SaleCreateWithoutUserInput {
  id: String
  saleType: smartOffice_SaleType!
  amount: Float!
  timestamp: DateTime!
}

input smartOffice_SaleCreateOrConnectWithoutUserInput {
  where: smartOffice_SaleWhereUniqueInput!
  create: smartOffice_SaleCreateWithoutUserInput!
}

input smartOffice_SaleCreateManyUserInput {
  id: String
  saleType: smartOffice_SaleType!
  amount: Float!
  timestamp: DateTime!
}

input smartOffice_SaleCreateManyUserInputEnvelope {
  data: smartOffice_SaleCreateManyUserInput!
  skipDuplicates: Boolean
}

input smartOffice_SaleCreateNestedManyWithoutUserInput {
  create: smartOffice_SaleCreateWithoutUserInput
  connectOrCreate: smartOffice_SaleCreateOrConnectWithoutUserInput
  createMany: smartOffice_SaleCreateManyUserInputEnvelope
  connect: smartOffice_SaleWhereUniqueInput
}

input smartOffice_UserCreateInput {
  id: String
  username: String!
  password: String!
  role: smartOffice_UserRole!
  clients: smartOffice_ClientCreateNestedManyWithoutUserInput
  tasks: smartOffice_TaskCreateNestedManyWithoutUserInput
  sales: smartOffice_SaleCreateNestedManyWithoutUserInput
}

input smartOffice_StringFieldUpdateOperationsInput {
  set: String
}

input smartOffice_ClientUpdateWithoutUserInput {
  id: smartOffice_StringFieldUpdateOperationsInput
  name: smartOffice_StringFieldUpdateOperationsInput
  email: smartOffice_StringFieldUpdateOperationsInput
  phone: smartOffice_StringFieldUpdateOperationsInput
}

input smartOffice_ClientUpsertWithWhereUniqueWithoutUserInput {
  where: smartOffice_ClientWhereUniqueInput!
  update: smartOffice_ClientUpdateWithoutUserInput!
  create: smartOffice_ClientCreateWithoutUserInput!
}

input smartOffice_ClientUpdateWithWhereUniqueWithoutUserInput {
  where: smartOffice_ClientWhereUniqueInput!
  data: smartOffice_ClientUpdateWithoutUserInput!
}

input smartOffice_ClientScalarWhereInput {
  AND: smartOffice_ClientScalarWhereInput
  OR: [smartOffice_ClientScalarWhereInput]
  NOT: smartOffice_ClientScalarWhereInput
  id: smartOffice_StringFilter
  name: smartOffice_StringFilter
  email: smartOffice_StringFilter
  phone: smartOffice_StringFilter
  userId: smartOffice_StringFilter
}

input smartOffice_ClientUpdateManyMutationInput {
  id: smartOffice_StringFieldUpdateOperationsInput
  name: smartOffice_StringFieldUpdateOperationsInput
  email: smartOffice_StringFieldUpdateOperationsInput
  phone: smartOffice_StringFieldUpdateOperationsInput
}

input smartOffice_ClientUpdateManyWithWhereWithoutUserInput {
  where: smartOffice_ClientScalarWhereInput!
  data: smartOffice_ClientUpdateManyMutationInput!
}

input smartOffice_ClientUpdateManyWithoutUserNestedInput {
  create: smartOffice_ClientCreateWithoutUserInput
  connectOrCreate: smartOffice_ClientCreateOrConnectWithoutUserInput
  upsert: smartOffice_ClientUpsertWithWhereUniqueWithoutUserInput
  createMany: smartOffice_ClientCreateManyUserInputEnvelope
  set: smartOffice_ClientWhereUniqueInput
  disconnect: smartOffice_ClientWhereUniqueInput
  delete: smartOffice_ClientWhereUniqueInput
  connect: smartOffice_ClientWhereUniqueInput
  update: smartOffice_ClientUpdateWithWhereUniqueWithoutUserInput
  updateMany: smartOffice_ClientUpdateManyWithWhereWithoutUserInput
  deleteMany: smartOffice_ClientScalarWhereInput
}

input smartOffice_TaskUpdateWithoutUserInput {
  id: smartOffice_StringFieldUpdateOperationsInput
  taskType: smartOffice_TaskType
  status: smartOffice_TaskStatus
  details: JSON
}

input smartOffice_TaskUpsertWithWhereUniqueWithoutUserInput {
  where: smartOffice_TaskWhereUniqueInput!
  update: smartOffice_TaskUpdateWithoutUserInput!
  create: smartOffice_TaskCreateWithoutUserInput!
}

input smartOffice_TaskUpdateWithWhereUniqueWithoutUserInput {
  where: smartOffice_TaskWhereUniqueInput!
  data: smartOffice_TaskUpdateWithoutUserInput!
}

input smartOffice_TaskScalarWhereInput {
  AND: smartOffice_TaskScalarWhereInput
  OR: [smartOffice_TaskScalarWhereInput]
  NOT: smartOffice_TaskScalarWhereInput
  id: smartOffice_StringFilter
  taskType: smartOffice_EnumTaskTypeFilter
  status: smartOffice_EnumTaskStatusFilter
  details: smartOffice_JsonFilter
  userId: smartOffice_StringFilter
}

input smartOffice_TaskUpdateManyMutationInput {
  id: smartOffice_StringFieldUpdateOperationsInput
  taskType: smartOffice_TaskType
  status: smartOffice_TaskStatus
  details: JSON
}

input smartOffice_TaskUpdateManyWithWhereWithoutUserInput {
  where: smartOffice_TaskScalarWhereInput!
  data: smartOffice_TaskUpdateManyMutationInput!
}

input smartOffice_TaskUpdateManyWithoutUserNestedInput {
  create: smartOffice_TaskCreateWithoutUserInput
  connectOrCreate: smartOffice_TaskCreateOrConnectWithoutUserInput
  upsert: smartOffice_TaskUpsertWithWhereUniqueWithoutUserInput
  createMany: smartOffice_TaskCreateManyUserInputEnvelope
  set: smartOffice_TaskWhereUniqueInput
  disconnect: smartOffice_TaskWhereUniqueInput
  delete: smartOffice_TaskWhereUniqueInput
  connect: smartOffice_TaskWhereUniqueInput
  update: smartOffice_TaskUpdateWithWhereUniqueWithoutUserInput
  updateMany: smartOffice_TaskUpdateManyWithWhereWithoutUserInput
  deleteMany: smartOffice_TaskScalarWhereInput
}

input smartOffice_FloatFieldUpdateOperationsInput {
  set: Float
  increment: Float
  decrement: Float
  multiply: Float
  divide: Float
}

input smartOffice_DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input smartOffice_SaleUpdateWithoutUserInput {
  id: smartOffice_StringFieldUpdateOperationsInput
  saleType: smartOffice_SaleType
  amount: smartOffice_FloatFieldUpdateOperationsInput
  timestamp: smartOffice_DateTimeFieldUpdateOperationsInput
}

input smartOffice_SaleUpsertWithWhereUniqueWithoutUserInput {
  where: smartOffice_SaleWhereUniqueInput!
  update: smartOffice_SaleUpdateWithoutUserInput!
  create: smartOffice_SaleCreateWithoutUserInput!
}

input smartOffice_SaleUpdateWithWhereUniqueWithoutUserInput {
  where: smartOffice_SaleWhereUniqueInput!
  data: smartOffice_SaleUpdateWithoutUserInput!
}

input smartOffice_SaleScalarWhereInput {
  AND: smartOffice_SaleScalarWhereInput
  OR: [smartOffice_SaleScalarWhereInput]
  NOT: smartOffice_SaleScalarWhereInput
  id: smartOffice_StringFilter
  saleType: smartOffice_EnumSaleTypeFilter
  amount: smartOffice_FloatFilter
  timestamp: smartOffice_DateTimeFilter
  userId: smartOffice_StringFilter
}

input smartOffice_SaleUpdateManyMutationInput {
  id: smartOffice_StringFieldUpdateOperationsInput
  saleType: smartOffice_SaleType
  amount: smartOffice_FloatFieldUpdateOperationsInput
  timestamp: smartOffice_DateTimeFieldUpdateOperationsInput
}

input smartOffice_SaleUpdateManyWithWhereWithoutUserInput {
  where: smartOffice_SaleScalarWhereInput!
  data: smartOffice_SaleUpdateManyMutationInput!
}

input smartOffice_SaleUpdateManyWithoutUserNestedInput {
  create: smartOffice_SaleCreateWithoutUserInput
  connectOrCreate: smartOffice_SaleCreateOrConnectWithoutUserInput
  upsert: smartOffice_SaleUpsertWithWhereUniqueWithoutUserInput
  createMany: smartOffice_SaleCreateManyUserInputEnvelope
  set: smartOffice_SaleWhereUniqueInput
  disconnect: smartOffice_SaleWhereUniqueInput
  delete: smartOffice_SaleWhereUniqueInput
  connect: smartOffice_SaleWhereUniqueInput
  update: smartOffice_SaleUpdateWithWhereUniqueWithoutUserInput
  updateMany: smartOffice_SaleUpdateManyWithWhereWithoutUserInput
  deleteMany: smartOffice_SaleScalarWhereInput
}

input smartOffice_UserUpdateInput {
  id: smartOffice_StringFieldUpdateOperationsInput
  username: smartOffice_StringFieldUpdateOperationsInput
  password: smartOffice_StringFieldUpdateOperationsInput
  role: smartOffice_UserRole
  clients: smartOffice_ClientUpdateManyWithoutUserNestedInput
  tasks: smartOffice_TaskUpdateManyWithoutUserNestedInput
  sales: smartOffice_SaleUpdateManyWithoutUserNestedInput
}

input smartOffice_UserCreateManyInput {
  id: String
  username: String!
  password: String!
  role: smartOffice_UserRole!
}

type smartOffice_AffectedRowsOutput {
  count: Int!
  _join: Query!
}

input smartOffice_UserUpdateManyMutationInput {
  id: smartOffice_StringFieldUpdateOperationsInput
  username: smartOffice_StringFieldUpdateOperationsInput
  password: smartOffice_StringFieldUpdateOperationsInput
  role: smartOffice_UserRole
}

input smartOffice_UserCreateWithoutClientsInput {
  id: String
  username: String!
  password: String!
  role: smartOffice_UserRole!
  tasks: smartOffice_TaskCreateNestedManyWithoutUserInput
  sales: smartOffice_SaleCreateNestedManyWithoutUserInput
}

input smartOffice_UserCreateOrConnectWithoutClientsInput {
  where: smartOffice_UserWhereUniqueInput!
  create: smartOffice_UserCreateWithoutClientsInput!
}

input smartOffice_UserCreateNestedOneWithoutClientsInput {
  create: smartOffice_UserCreateWithoutClientsInput
  connectOrCreate: smartOffice_UserCreateOrConnectWithoutClientsInput
  connect: smartOffice_UserWhereUniqueInput
}

input smartOffice_ClientCreateInput {
  id: String
  name: String!
  email: String!
  phone: String!
  user: smartOffice_UserCreateNestedOneWithoutClientsInput!
}

input smartOffice_UserUpdateWithoutClientsInput {
  id: smartOffice_StringFieldUpdateOperationsInput
  username: smartOffice_StringFieldUpdateOperationsInput
  password: smartOffice_StringFieldUpdateOperationsInput
  role: smartOffice_UserRole
  tasks: smartOffice_TaskUpdateManyWithoutUserNestedInput
  sales: smartOffice_SaleUpdateManyWithoutUserNestedInput
}

input smartOffice_UserUpsertWithoutClientsInput {
  update: smartOffice_UserUpdateWithoutClientsInput!
  create: smartOffice_UserCreateWithoutClientsInput!
}

input smartOffice_UserUpdateOneRequiredWithoutClientsNestedInput {
  create: smartOffice_UserCreateWithoutClientsInput
  connectOrCreate: smartOffice_UserCreateOrConnectWithoutClientsInput
  upsert: smartOffice_UserUpsertWithoutClientsInput
  connect: smartOffice_UserWhereUniqueInput
  update: smartOffice_UserUpdateWithoutClientsInput
}

input smartOffice_ClientUpdateInput {
  id: smartOffice_StringFieldUpdateOperationsInput
  name: smartOffice_StringFieldUpdateOperationsInput
  email: smartOffice_StringFieldUpdateOperationsInput
  phone: smartOffice_StringFieldUpdateOperationsInput
  user: smartOffice_UserUpdateOneRequiredWithoutClientsNestedInput
}

input smartOffice_ClientCreateManyInput {
  id: String
  name: String!
  email: String!
  phone: String!
  userId: String!
}

input smartOffice_UserCreateWithoutTasksInput {
  id: String
  username: String!
  password: String!
  role: smartOffice_UserRole!
  clients: smartOffice_ClientCreateNestedManyWithoutUserInput
  sales: smartOffice_SaleCreateNestedManyWithoutUserInput
}

input smartOffice_UserCreateOrConnectWithoutTasksInput {
  where: smartOffice_UserWhereUniqueInput!
  create: smartOffice_UserCreateWithoutTasksInput!
}

input smartOffice_UserCreateNestedOneWithoutTasksInput {
  create: smartOffice_UserCreateWithoutTasksInput
  connectOrCreate: smartOffice_UserCreateOrConnectWithoutTasksInput
  connect: smartOffice_UserWhereUniqueInput
}

input smartOffice_TaskCreateInput {
  id: String
  taskType: smartOffice_TaskType!
  status: smartOffice_TaskStatus!
  details: JSON!
  user: smartOffice_UserCreateNestedOneWithoutTasksInput!
}

input smartOffice_UserUpdateWithoutTasksInput {
  id: smartOffice_StringFieldUpdateOperationsInput
  username: smartOffice_StringFieldUpdateOperationsInput
  password: smartOffice_StringFieldUpdateOperationsInput
  role: smartOffice_UserRole
  clients: smartOffice_ClientUpdateManyWithoutUserNestedInput
  sales: smartOffice_SaleUpdateManyWithoutUserNestedInput
}

input smartOffice_UserUpsertWithoutTasksInput {
  update: smartOffice_UserUpdateWithoutTasksInput!
  create: smartOffice_UserCreateWithoutTasksInput!
}

input smartOffice_UserUpdateOneRequiredWithoutTasksNestedInput {
  create: smartOffice_UserCreateWithoutTasksInput
  connectOrCreate: smartOffice_UserCreateOrConnectWithoutTasksInput
  upsert: smartOffice_UserUpsertWithoutTasksInput
  connect: smartOffice_UserWhereUniqueInput
  update: smartOffice_UserUpdateWithoutTasksInput
}

input smartOffice_TaskUpdateInput {
  id: smartOffice_StringFieldUpdateOperationsInput
  taskType: smartOffice_TaskType
  status: smartOffice_TaskStatus
  details: JSON
  user: smartOffice_UserUpdateOneRequiredWithoutTasksNestedInput
}

input smartOffice_TaskCreateManyInput {
  id: String
  taskType: smartOffice_TaskType!
  status: smartOffice_TaskStatus!
  details: JSON!
  userId: String!
}

input smartOffice_UserCreateWithoutSalesInput {
  id: String
  username: String!
  password: String!
  role: smartOffice_UserRole!
  clients: smartOffice_ClientCreateNestedManyWithoutUserInput
  tasks: smartOffice_TaskCreateNestedManyWithoutUserInput
}

input smartOffice_UserCreateOrConnectWithoutSalesInput {
  where: smartOffice_UserWhereUniqueInput!
  create: smartOffice_UserCreateWithoutSalesInput!
}

input smartOffice_UserCreateNestedOneWithoutSalesInput {
  create: smartOffice_UserCreateWithoutSalesInput
  connectOrCreate: smartOffice_UserCreateOrConnectWithoutSalesInput
  connect: smartOffice_UserWhereUniqueInput
}

input smartOffice_SaleCreateInput {
  id: String
  saleType: smartOffice_SaleType!
  amount: Float!
  timestamp: DateTime!
  user: smartOffice_UserCreateNestedOneWithoutSalesInput!
}

input smartOffice_UserUpdateWithoutSalesInput {
  id: smartOffice_StringFieldUpdateOperationsInput
  username: smartOffice_StringFieldUpdateOperationsInput
  password: smartOffice_StringFieldUpdateOperationsInput
  role: smartOffice_UserRole
  clients: smartOffice_ClientUpdateManyWithoutUserNestedInput
  tasks: smartOffice_TaskUpdateManyWithoutUserNestedInput
}

input smartOffice_UserUpsertWithoutSalesInput {
  update: smartOffice_UserUpdateWithoutSalesInput!
  create: smartOffice_UserCreateWithoutSalesInput!
}

input smartOffice_UserUpdateOneRequiredWithoutSalesNestedInput {
  create: smartOffice_UserCreateWithoutSalesInput
  connectOrCreate: smartOffice_UserCreateOrConnectWithoutSalesInput
  upsert: smartOffice_UserUpsertWithoutSalesInput
  connect: smartOffice_UserWhereUniqueInput
  update: smartOffice_UserUpdateWithoutSalesInput
}

input smartOffice_SaleUpdateInput {
  id: smartOffice_StringFieldUpdateOperationsInput
  saleType: smartOffice_SaleType
  amount: smartOffice_FloatFieldUpdateOperationsInput
  timestamp: smartOffice_DateTimeFieldUpdateOperationsInput
  user: smartOffice_UserUpdateOneRequiredWithoutSalesNestedInput
}

input smartOffice_SaleCreateManyInput {
  id: String
  saleType: smartOffice_SaleType!
  amount: Float!
  timestamp: DateTime!
  userId: String!
}

scalar smartOffice_Bytes

enum COMMON_REGEX_PATTERN {
  EMAIL
  DOMAIN
}

enum WG_ROLE {
  admin
  user
}

"""Well known claims - https://www.iana.org/assignments/jwt/jwt.xhtml"""
enum WG_CLAIM {
  """iss"""
  ISSUER
  """deprecated alias for ISSUER"""
  PROVIDER
  """sub"""
  SUBJECT
  """alias for sub"""
  USERID
  """name"""
  NAME
  """given_name"""
  GIVEN_NAME
  """family_name"""
  FAMILY_NAME
  """middle_name"""
  MIDDLE_NAME
  """nickname"""
  NICKNAME
  """preferred_username"""
  PREFERRED_USERNAME
  """profile"""
  PROFILE
  """picture"""
  PICTURE
  """website"""
  WEBSITE
  """email"""
  EMAIL
  """email_verified"""
  EMAIL_VERIFIED
  """gender"""
  GENDER
  """birthdate"""
  BIRTH_DATE
  """zoneinfo"""
  ZONE_INFO
  """locale"""
  LOCALE
  """location"""
  LOCATION
}

enum WunderGraphDateTimeFormat {
  "2006-01-02T15:04:05-0700"
  ISO8601
  "Mon Jan _2 15:04:05 2006"
  ANSIC
  "Mon Jan _2 15:04:05 MST 2006"
  UnixDate
  "Mon Jan 02 15:04:05 -0700 2006"
  RubyDate
  "02 Jan 06 15:04 MST"
  RFC822
  "02 Jan 06 15:04 -0700"
  RFC822Z
  "Monday, 02-Jan-06 15:04:05 MST"
  RFC850
  "Mon, 02 Jan 2006 15:04:05 MST"
  RFC1123
  "Mon, 02 Jan 2006 15:04:05 -0700"
  RFC1123Z
  "2006-01-02T15:04:05Z07:00"
  RFC3339
  "2006-01-02T15:04:05.999999999Z07:00"
  RFC3339Nano
  "3:04PM"
  Kitchen
  "Jan _2 15:04:05"
  Stamp
  "Jan _2 15:04:05.000"
  StampMilli
  "Jan _2 15:04:05.000000"
  StampMicro
  "Jan _2 15:04:05.000000000"
  StampNano
}