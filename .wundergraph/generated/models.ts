// Code generated by wunderctl. DO NOT EDIT.

import type function_OpenaiExtract_website_metadata from "../operations/openai/extract-website-metadata";
import type function_OpenaiLoad_url from "../operations/openai/load-url";
import type function_OpenaiSummarize_url_content from "../operations/openai/summarize-url-content";
import type function_OpenaiSummary from "../operations/openai/summary";
import type function_OpenaiWeather from "../operations/openai/weather";
import type function_UsersGet from "../operations/users/get";
import type function_UsersSubscribe from "../operations/users/subscribe";
import type function_UsersUpdate from "../operations/users/update";
import type { ExtractInput, ExtractResponse } from "@wundergraph/sdk/operations";
import type { OperationErrors } from "./ts-operation-errors";
import type { GraphQLError } from "@wundergraph/sdk/client";

export interface countries_ContinentFilterInput {
	code?: countries_StringQueryOperatorInput;
}

export interface countries_StringQueryOperatorInput {
	eq?: string;
	in?: string[];
	ne?: string;
	nin?: string[];
	regex?: string;
}

export interface countries_CountryFilterInput {
	code?: countries_StringQueryOperatorInput;
	continent?: countries_StringQueryOperatorInput;
	currency?: countries_StringQueryOperatorInput;
	name?: countries_StringQueryOperatorInput;
}

export interface countries_LanguageFilterInput {
	code?: countries_StringQueryOperatorInput;
}

export interface db_AccountWhereInput {
	AND?: db_AccountWhereInput;
	OR?: db_AccountWhereInput[];
	NOT?: db_AccountWhereInput;
	id?: db_StringFilter;
	userId?: db_StringFilter;
	type?: db_StringFilter;
	provider?: db_StringFilter;
	providerAccountId?: db_StringFilter;
	refresh_token?: db_StringNullableFilter;
	access_token?: db_StringNullableFilter;
	expires_at?: db_IntNullableFilter;
	token_type?: db_StringNullableFilter;
	scope?: db_StringNullableFilter;
	id_token?: db_StringNullableFilter;
	session_state?: db_StringNullableFilter;
	createdAt?: db_DateTimeFilter;
	updatedAt?: db_DateTimeFilter;
	user?: db_UserRelationFilter;
}

export interface db_StringFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	contains?: string;
	startsWith?: string;
	endsWith?: string;
	not?: db_NestedStringFilter;
}

export interface db_NestedStringFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	contains?: string;
	startsWith?: string;
	endsWith?: string;
	not?: db_NestedStringFilter;
}

export interface db_StringNullableFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	contains?: string;
	startsWith?: string;
	endsWith?: string;
	not?: db_NestedStringNullableFilter;
}

export interface db_NestedStringNullableFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	contains?: string;
	startsWith?: string;
	endsWith?: string;
	not?: db_NestedStringNullableFilter;
}

export interface db_IntNullableFilter {
	equals?: number;
	in?: number[];
	notIn?: number[];
	lt?: number;
	lte?: number;
	gt?: number;
	gte?: number;
	not?: db_NestedIntNullableFilter;
}

export interface db_NestedIntNullableFilter {
	equals?: number;
	in?: number[];
	notIn?: number[];
	lt?: number;
	lte?: number;
	gt?: number;
	gte?: number;
	not?: db_NestedIntNullableFilter;
}

export interface db_DateTimeFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	not?: db_NestedDateTimeFilter;
}

export interface db_NestedDateTimeFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	not?: db_NestedDateTimeFilter;
}

export interface db_UserRelationFilter {
	is?: db_UserWhereInput;
	isNot?: db_UserWhereInput;
}

export interface db_UserWhereInput {
	AND?: db_UserWhereInput;
	OR?: db_UserWhereInput[];
	NOT?: db_UserWhereInput;
	id?: db_StringFilter;
	name?: db_StringNullableFilter;
	email?: db_StringNullableFilter;
	emailVerified?: db_DateTimeNullableFilter;
	image?: db_StringNullableFilter;
	createdAt?: db_DateTimeFilter;
	updatedAt?: db_DateTimeFilter;
	stripeCustomerId?: db_StringNullableFilter;
	stripeSubscriptionId?: db_StringNullableFilter;
	stripePriceId?: db_StringNullableFilter;
	stripeCurrentPeriodEnd?: db_DateTimeNullableFilter;
	accounts?: db_AccountListRelationFilter;
	sessions?: db_SessionListRelationFilter;
	Post?: db_PostListRelationFilter;
	Todo?: db_TodoListRelationFilter;
}

export interface db_DateTimeNullableFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	not?: db_NestedDateTimeNullableFilter;
}

export interface db_NestedDateTimeNullableFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	not?: db_NestedDateTimeNullableFilter;
}

export interface db_AccountListRelationFilter {
	every?: db_AccountWhereInput;
	some?: db_AccountWhereInput;
	none?: db_AccountWhereInput;
}

export interface db_SessionListRelationFilter {
	every?: db_SessionWhereInput;
	some?: db_SessionWhereInput;
	none?: db_SessionWhereInput;
}

export interface db_SessionWhereInput {
	AND?: db_SessionWhereInput;
	OR?: db_SessionWhereInput[];
	NOT?: db_SessionWhereInput;
	id?: db_StringFilter;
	sessionToken?: db_StringFilter;
	userId?: db_StringFilter;
	expires?: db_DateTimeFilter;
	user?: db_UserRelationFilter;
}

export interface db_PostListRelationFilter {
	every?: db_PostWhereInput;
	some?: db_PostWhereInput;
	none?: db_PostWhereInput;
}

export interface db_PostWhereInput {
	AND?: db_PostWhereInput;
	OR?: db_PostWhereInput[];
	NOT?: db_PostWhereInput;
	id?: db_StringFilter;
	title?: db_StringFilter;
	content?: db_JsonNullableFilter;
	published?: db_BoolFilter;
	createdAt?: db_DateTimeFilter;
	updatedAt?: db_DateTimeFilter;
	authorId?: db_StringFilter;
	author?: db_UserRelationFilter;
}

export interface db_JsonNullableFilter {
	equals?: JSONValue;
	path?: string;
	string_contains?: string;
	string_starts_with?: string;
	string_ends_with?: string;
	array_contains?: JSONValue;
	array_starts_with?: JSONValue;
	array_ends_with?: JSONValue;
	lt?: JSONValue;
	lte?: JSONValue;
	gt?: JSONValue;
	gte?: JSONValue;
	not?: JSONValue;
}

export interface db_BoolFilter {
	equals?: boolean;
	not?: db_NestedBoolFilter;
}

export interface db_NestedBoolFilter {
	equals?: boolean;
	not?: db_NestedBoolFilter;
}

export interface db_TodoListRelationFilter {
	every?: db_TodoWhereInput;
	some?: db_TodoWhereInput;
	none?: db_TodoWhereInput;
}

export interface db_TodoWhereInput {
	AND?: db_TodoWhereInput;
	OR?: db_TodoWhereInput[];
	NOT?: db_TodoWhereInput;
	id?: db_StringFilter;
	text?: db_StringFilter;
	isCompleted?: db_BoolFilter;
	createdAt?: db_DateTimeFilter;
	updatedAt?: db_DateTimeFilter;
	userId?: db_StringFilter;
	user?: db_UserRelationFilter;
}

export interface db_AccountOrderByWithRelationInput {
	id?: db_SortOrderValues;
	userId?: db_SortOrderValues;
	type?: db_SortOrderValues;
	provider?: db_SortOrderValues;
	providerAccountId?: db_SortOrderValues;
	refresh_token?: db_SortOrderValues;
	access_token?: db_SortOrderValues;
	expires_at?: db_SortOrderValues;
	token_type?: db_SortOrderValues;
	scope?: db_SortOrderValues;
	id_token?: db_SortOrderValues;
	session_state?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	user?: db_UserOrderByWithRelationInput;
}

export interface db_UserOrderByWithRelationInput {
	id?: db_SortOrderValues;
	name?: db_SortOrderValues;
	email?: db_SortOrderValues;
	emailVerified?: db_SortOrderValues;
	image?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	stripeCustomerId?: db_SortOrderValues;
	stripeSubscriptionId?: db_SortOrderValues;
	stripePriceId?: db_SortOrderValues;
	stripeCurrentPeriodEnd?: db_SortOrderValues;
	accounts?: db_AccountOrderByRelationAggregateInput;
	sessions?: db_SessionOrderByRelationAggregateInput;
	Post?: db_PostOrderByRelationAggregateInput;
	Todo?: db_TodoOrderByRelationAggregateInput;
}

export interface db_AccountOrderByRelationAggregateInput {
	_count?: db_SortOrderValues;
}

export interface db_SessionOrderByRelationAggregateInput {
	_count?: db_SortOrderValues;
}

export interface db_PostOrderByRelationAggregateInput {
	_count?: db_SortOrderValues;
}

export interface db_TodoOrderByRelationAggregateInput {
	_count?: db_SortOrderValues;
}

export interface db_AccountWhereUniqueInput {
	id?: string;
	provider_providerAccountId?: db_AccountProviderProviderAccountIdCompoundUniqueInput;
}

export interface db_AccountProviderProviderAccountIdCompoundUniqueInput {
	provider?: string;
	providerAccountId?: string;
}

export interface db_PostOrderByWithRelationInput {
	id?: db_SortOrderValues;
	title?: db_SortOrderValues;
	content?: db_SortOrderValues;
	published?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	authorId?: db_SortOrderValues;
	author?: db_UserOrderByWithRelationInput;
}

export interface db_PostWhereUniqueInput {
	id?: string;
}

export interface db_SessionOrderByWithRelationInput {
	id?: db_SortOrderValues;
	sessionToken?: db_SortOrderValues;
	userId?: db_SortOrderValues;
	expires?: db_SortOrderValues;
	user?: db_UserOrderByWithRelationInput;
}

export interface db_SessionWhereUniqueInput {
	id?: string;
	sessionToken?: string;
}

export interface db_TodoOrderByWithRelationInput {
	id?: db_SortOrderValues;
	text?: db_SortOrderValues;
	isCompleted?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	userId?: db_SortOrderValues;
	user?: db_UserOrderByWithRelationInput;
}

export interface db_TodoWhereUniqueInput {
	id?: string;
}

export interface db_UserWhereUniqueInput {
	id?: string;
	email?: string;
	stripeCustomerId?: string;
	stripeSubscriptionId?: string;
}

export interface db_VerificationTokenWhereInput {
	AND?: db_VerificationTokenWhereInput;
	OR?: db_VerificationTokenWhereInput[];
	NOT?: db_VerificationTokenWhereInput;
	identifier?: db_StringFilter;
	token?: db_StringFilter;
	expires?: db_DateTimeFilter;
}

export interface db_VerificationTokenOrderByWithRelationInput {
	identifier?: db_SortOrderValues;
	token?: db_SortOrderValues;
	expires?: db_SortOrderValues;
}

export interface db_VerificationTokenWhereUniqueInput {
	token?: string;
	identifier_token?: db_VerificationTokenIdentifierTokenCompoundUniqueInput;
}

export interface db_VerificationTokenIdentifierTokenCompoundUniqueInput {
	identifier?: string;
	token?: string;
}

export interface db_AccountCreateManyInput {
	id?: string;
	userId?: string;
	type?: string;
	provider?: string;
	providerAccountId?: string;
	refresh_token?: string;
	access_token?: string;
	expires_at?: number;
	token_type?: string;
	scope?: string;
	id_token?: string;
	session_state?: string;
	createdAt?: string;
	updatedAt?: string;
}

export interface db_PostCreateManyInput {
	id?: string;
	title?: string;
	content?: db_NullableJsonNullValueInputValues;
	published?: boolean;
	createdAt?: string;
	updatedAt?: string;
	authorId?: string;
}

export interface db_SessionCreateManyInput {
	id?: string;
	sessionToken?: string;
	userId?: string;
	expires?: string;
}

export interface db_TodoCreateManyInput {
	id?: string;
	text?: string;
	isCompleted?: boolean;
	createdAt?: string;
	updatedAt?: string;
	userId?: string;
}

export interface db_UserCreateManyInput {
	id?: string;
	name?: string;
	email?: string;
	emailVerified?: string;
	image?: string;
	createdAt?: string;
	updatedAt?: string;
	stripeCustomerId?: string;
	stripeSubscriptionId?: string;
	stripePriceId?: string;
	stripeCurrentPeriodEnd?: string;
}

export interface db_VerificationTokenCreateManyInput {
	identifier?: string;
	token?: string;
	expires?: string;
}

export interface db_AccountCreateInput {
	id?: string;
	type: string;
	provider: string;
	providerAccountId: string;
	refresh_token?: string;
	access_token?: string;
	expires_at?: number;
	token_type?: string;
	scope?: string;
	id_token?: string;
	session_state?: string;
	createdAt?: string;
	updatedAt?: string;
	user: db_UserCreateNestedOneWithoutAccountsInput;
}

export interface db_UserCreateNestedOneWithoutAccountsInput {
	create?: db_UserCreateWithoutAccountsInput;
	connectOrCreate?: db_UserCreateOrConnectWithoutAccountsInput;
	connect?: db_UserWhereUniqueInput;
}

export interface db_UserCreateWithoutAccountsInput {
	id?: string;
	name?: string;
	email?: string;
	emailVerified?: string;
	image?: string;
	createdAt?: string;
	updatedAt?: string;
	stripeCustomerId?: string;
	stripeSubscriptionId?: string;
	stripePriceId?: string;
	stripeCurrentPeriodEnd?: string;
	sessions?: db_SessionCreateNestedManyWithoutUserInput;
	Post?: db_PostCreateNestedManyWithoutAuthorInput;
	Todo?: db_TodoCreateNestedManyWithoutUserInput;
}

export interface db_SessionCreateNestedManyWithoutUserInput {
	create?: db_SessionCreateWithoutUserInput;
	connectOrCreate?: db_SessionCreateOrConnectWithoutUserInput;
	createMany?: db_SessionCreateManyUserInputEnvelope;
	connect?: db_SessionWhereUniqueInput;
}

export interface db_SessionCreateWithoutUserInput {
	id?: string;
	sessionToken?: string;
	expires?: string;
}

export interface db_SessionCreateOrConnectWithoutUserInput {
	where?: db_SessionWhereUniqueInput;
	create?: db_SessionCreateWithoutUserInput;
}

export interface db_SessionCreateManyUserInputEnvelope {
	data?: db_SessionCreateManyUserInput;
	skipDuplicates?: boolean;
}

export interface db_SessionCreateManyUserInput {
	id?: string;
	sessionToken: string;
	expires: string;
}

export interface db_PostCreateNestedManyWithoutAuthorInput {
	create?: db_PostCreateWithoutAuthorInput;
	connectOrCreate?: db_PostCreateOrConnectWithoutAuthorInput;
	createMany?: db_PostCreateManyAuthorInputEnvelope;
	connect?: db_PostWhereUniqueInput;
}

export interface db_PostCreateWithoutAuthorInput {
	id?: string;
	title?: string;
	content?: db_NullableJsonNullValueInputValues;
	published?: boolean;
	createdAt?: string;
	updatedAt?: string;
}

export interface db_PostCreateOrConnectWithoutAuthorInput {
	where?: db_PostWhereUniqueInput;
	create?: db_PostCreateWithoutAuthorInput;
}

export interface db_PostCreateManyAuthorInputEnvelope {
	data?: db_PostCreateManyAuthorInput;
	skipDuplicates?: boolean;
}

export interface db_PostCreateManyAuthorInput {
	id?: string;
	title: string;
	content?: db_NullableJsonNullValueInputValues;
	published?: boolean;
	createdAt?: string;
	updatedAt?: string;
}

export interface db_TodoCreateNestedManyWithoutUserInput {
	create?: db_TodoCreateWithoutUserInput;
	connectOrCreate?: db_TodoCreateOrConnectWithoutUserInput;
	createMany?: db_TodoCreateManyUserInputEnvelope;
	connect?: db_TodoWhereUniqueInput;
}

export interface db_TodoCreateWithoutUserInput {
	id?: string;
	text?: string;
	isCompleted?: boolean;
	createdAt?: string;
	updatedAt?: string;
}

export interface db_TodoCreateOrConnectWithoutUserInput {
	where?: db_TodoWhereUniqueInput;
	create?: db_TodoCreateWithoutUserInput;
}

export interface db_TodoCreateManyUserInputEnvelope {
	data?: db_TodoCreateManyUserInput;
	skipDuplicates?: boolean;
}

export interface db_TodoCreateManyUserInput {
	id?: string;
	text: string;
	isCompleted?: boolean;
	createdAt?: string;
	updatedAt?: string;
}

export interface db_UserCreateOrConnectWithoutAccountsInput {
	where?: db_UserWhereUniqueInput;
	create?: db_UserCreateWithoutAccountsInput;
}

export interface db_PostCreateInput {
	id?: string;
	title: string;
	content?: db_NullableJsonNullValueInputValues;
	published?: boolean;
	createdAt?: string;
	updatedAt?: string;
	author: db_UserCreateNestedOneWithoutPostInput;
}

export interface db_UserCreateNestedOneWithoutPostInput {
	create?: db_UserCreateWithoutPostInput;
	connectOrCreate?: db_UserCreateOrConnectWithoutPostInput;
	connect?: db_UserWhereUniqueInput;
}

export interface db_UserCreateWithoutPostInput {
	id?: string;
	name?: string;
	email?: string;
	emailVerified?: string;
	image?: string;
	createdAt?: string;
	updatedAt?: string;
	stripeCustomerId?: string;
	stripeSubscriptionId?: string;
	stripePriceId?: string;
	stripeCurrentPeriodEnd?: string;
	accounts?: db_AccountCreateNestedManyWithoutUserInput;
	sessions?: db_SessionCreateNestedManyWithoutUserInput;
	Todo?: db_TodoCreateNestedManyWithoutUserInput;
}

export interface db_AccountCreateNestedManyWithoutUserInput {
	create?: db_AccountCreateWithoutUserInput;
	connectOrCreate?: db_AccountCreateOrConnectWithoutUserInput;
	createMany?: db_AccountCreateManyUserInputEnvelope;
	connect?: db_AccountWhereUniqueInput;
}

export interface db_AccountCreateWithoutUserInput {
	id?: string;
	type?: string;
	provider?: string;
	providerAccountId?: string;
	refresh_token?: string;
	access_token?: string;
	expires_at?: number;
	token_type?: string;
	scope?: string;
	id_token?: string;
	session_state?: string;
	createdAt?: string;
	updatedAt?: string;
}

export interface db_AccountCreateOrConnectWithoutUserInput {
	where?: db_AccountWhereUniqueInput;
	create?: db_AccountCreateWithoutUserInput;
}

export interface db_AccountCreateManyUserInputEnvelope {
	data?: db_AccountCreateManyUserInput;
	skipDuplicates?: boolean;
}

export interface db_AccountCreateManyUserInput {
	id?: string;
	type: string;
	provider: string;
	providerAccountId: string;
	refresh_token?: string;
	access_token?: string;
	expires_at?: number;
	token_type?: string;
	scope?: string;
	id_token?: string;
	session_state?: string;
	createdAt?: string;
	updatedAt?: string;
}

export interface db_UserCreateOrConnectWithoutPostInput {
	where?: db_UserWhereUniqueInput;
	create?: db_UserCreateWithoutPostInput;
}

export interface db_SessionCreateInput {
	id?: string;
	sessionToken: string;
	expires: string;
	user: db_UserCreateNestedOneWithoutSessionsInput;
}

export interface db_UserCreateNestedOneWithoutSessionsInput {
	create?: db_UserCreateWithoutSessionsInput;
	connectOrCreate?: db_UserCreateOrConnectWithoutSessionsInput;
	connect?: db_UserWhereUniqueInput;
}

export interface db_UserCreateWithoutSessionsInput {
	id?: string;
	name?: string;
	email?: string;
	emailVerified?: string;
	image?: string;
	createdAt?: string;
	updatedAt?: string;
	stripeCustomerId?: string;
	stripeSubscriptionId?: string;
	stripePriceId?: string;
	stripeCurrentPeriodEnd?: string;
	accounts?: db_AccountCreateNestedManyWithoutUserInput;
	Post?: db_PostCreateNestedManyWithoutAuthorInput;
	Todo?: db_TodoCreateNestedManyWithoutUserInput;
}

export interface db_UserCreateOrConnectWithoutSessionsInput {
	where?: db_UserWhereUniqueInput;
	create?: db_UserCreateWithoutSessionsInput;
}

export interface db_TodoCreateInput {
	id?: string;
	text: string;
	isCompleted?: boolean;
	createdAt?: string;
	updatedAt?: string;
	user: db_UserCreateNestedOneWithoutTodoInput;
}

export interface db_UserCreateNestedOneWithoutTodoInput {
	create?: db_UserCreateWithoutTodoInput;
	connectOrCreate?: db_UserCreateOrConnectWithoutTodoInput;
	connect?: db_UserWhereUniqueInput;
}

export interface db_UserCreateWithoutTodoInput {
	id?: string;
	name?: string;
	email?: string;
	emailVerified?: string;
	image?: string;
	createdAt?: string;
	updatedAt?: string;
	stripeCustomerId?: string;
	stripeSubscriptionId?: string;
	stripePriceId?: string;
	stripeCurrentPeriodEnd?: string;
	accounts?: db_AccountCreateNestedManyWithoutUserInput;
	sessions?: db_SessionCreateNestedManyWithoutUserInput;
	Post?: db_PostCreateNestedManyWithoutAuthorInput;
}

export interface db_UserCreateOrConnectWithoutTodoInput {
	where?: db_UserWhereUniqueInput;
	create?: db_UserCreateWithoutTodoInput;
}

export interface db_UserCreateInput {
	id?: string;
	name?: string;
	email?: string;
	emailVerified?: string;
	image?: string;
	createdAt?: string;
	updatedAt?: string;
	stripeCustomerId?: string;
	stripeSubscriptionId?: string;
	stripePriceId?: string;
	stripeCurrentPeriodEnd?: string;
	accounts?: db_AccountCreateNestedManyWithoutUserInput;
	sessions?: db_SessionCreateNestedManyWithoutUserInput;
	Post?: db_PostCreateNestedManyWithoutAuthorInput;
	Todo?: db_TodoCreateNestedManyWithoutUserInput;
}

export interface db_VerificationTokenCreateInput {
	identifier: string;
	token: string;
	expires: string;
}

export interface db_AccountOrderByWithAggregationInput {
	id?: db_SortOrderValues;
	userId?: db_SortOrderValues;
	type?: db_SortOrderValues;
	provider?: db_SortOrderValues;
	providerAccountId?: db_SortOrderValues;
	refresh_token?: db_SortOrderValues;
	access_token?: db_SortOrderValues;
	expires_at?: db_SortOrderValues;
	token_type?: db_SortOrderValues;
	scope?: db_SortOrderValues;
	id_token?: db_SortOrderValues;
	session_state?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	_count?: db_AccountCountOrderByAggregateInput;
	_avg?: db_AccountAvgOrderByAggregateInput;
	_max?: db_AccountMaxOrderByAggregateInput;
	_min?: db_AccountMinOrderByAggregateInput;
	_sum?: db_AccountSumOrderByAggregateInput;
}

export interface db_AccountCountOrderByAggregateInput {
	id?: db_SortOrderValues;
	userId?: db_SortOrderValues;
	type?: db_SortOrderValues;
	provider?: db_SortOrderValues;
	providerAccountId?: db_SortOrderValues;
	refresh_token?: db_SortOrderValues;
	access_token?: db_SortOrderValues;
	expires_at?: db_SortOrderValues;
	token_type?: db_SortOrderValues;
	scope?: db_SortOrderValues;
	id_token?: db_SortOrderValues;
	session_state?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
}

export interface db_AccountAvgOrderByAggregateInput {
	expires_at?: db_SortOrderValues;
}

export interface db_AccountMaxOrderByAggregateInput {
	id?: db_SortOrderValues;
	userId?: db_SortOrderValues;
	type?: db_SortOrderValues;
	provider?: db_SortOrderValues;
	providerAccountId?: db_SortOrderValues;
	refresh_token?: db_SortOrderValues;
	access_token?: db_SortOrderValues;
	expires_at?: db_SortOrderValues;
	token_type?: db_SortOrderValues;
	scope?: db_SortOrderValues;
	id_token?: db_SortOrderValues;
	session_state?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
}

export interface db_AccountMinOrderByAggregateInput {
	id?: db_SortOrderValues;
	userId?: db_SortOrderValues;
	type?: db_SortOrderValues;
	provider?: db_SortOrderValues;
	providerAccountId?: db_SortOrderValues;
	refresh_token?: db_SortOrderValues;
	access_token?: db_SortOrderValues;
	expires_at?: db_SortOrderValues;
	token_type?: db_SortOrderValues;
	scope?: db_SortOrderValues;
	id_token?: db_SortOrderValues;
	session_state?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
}

export interface db_AccountSumOrderByAggregateInput {
	expires_at?: db_SortOrderValues;
}

export interface db_AccountScalarWhereWithAggregatesInput {
	AND?: db_AccountScalarWhereWithAggregatesInput;
	OR?: db_AccountScalarWhereWithAggregatesInput[];
	NOT?: db_AccountScalarWhereWithAggregatesInput;
	id?: db_StringWithAggregatesFilter;
	userId?: db_StringWithAggregatesFilter;
	type?: db_StringWithAggregatesFilter;
	provider?: db_StringWithAggregatesFilter;
	providerAccountId?: db_StringWithAggregatesFilter;
	refresh_token?: db_StringNullableWithAggregatesFilter;
	access_token?: db_StringNullableWithAggregatesFilter;
	expires_at?: db_IntNullableWithAggregatesFilter;
	token_type?: db_StringNullableWithAggregatesFilter;
	scope?: db_StringNullableWithAggregatesFilter;
	id_token?: db_StringNullableWithAggregatesFilter;
	session_state?: db_StringNullableWithAggregatesFilter;
	createdAt?: db_DateTimeWithAggregatesFilter;
	updatedAt?: db_DateTimeWithAggregatesFilter;
}

export interface db_StringWithAggregatesFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	contains?: string;
	startsWith?: string;
	endsWith?: string;
	not?: db_NestedStringWithAggregatesFilter;
	_count?: db_NestedIntFilter;
	_min?: db_NestedStringFilter;
	_max?: db_NestedStringFilter;
}

export interface db_NestedStringWithAggregatesFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	contains?: string;
	startsWith?: string;
	endsWith?: string;
	not?: db_NestedStringWithAggregatesFilter;
	_count?: db_NestedIntFilter;
	_min?: db_NestedStringFilter;
	_max?: db_NestedStringFilter;
}

export interface db_NestedIntFilter {
	equals?: number;
	in?: number[];
	notIn?: number[];
	lt?: number;
	lte?: number;
	gt?: number;
	gte?: number;
	not?: db_NestedIntFilter;
}

export interface db_StringNullableWithAggregatesFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	contains?: string;
	startsWith?: string;
	endsWith?: string;
	not?: db_NestedStringNullableWithAggregatesFilter;
	_count?: db_NestedIntNullableFilter;
	_min?: db_NestedStringNullableFilter;
	_max?: db_NestedStringNullableFilter;
}

export interface db_NestedStringNullableWithAggregatesFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	contains?: string;
	startsWith?: string;
	endsWith?: string;
	not?: db_NestedStringNullableWithAggregatesFilter;
	_count?: db_NestedIntNullableFilter;
	_min?: db_NestedStringNullableFilter;
	_max?: db_NestedStringNullableFilter;
}

export interface db_IntNullableWithAggregatesFilter {
	equals?: number;
	in?: number[];
	notIn?: number[];
	lt?: number;
	lte?: number;
	gt?: number;
	gte?: number;
	not?: db_NestedIntNullableWithAggregatesFilter;
	_count?: db_NestedIntNullableFilter;
	_avg?: db_NestedFloatNullableFilter;
	_sum?: db_NestedIntNullableFilter;
	_min?: db_NestedIntNullableFilter;
	_max?: db_NestedIntNullableFilter;
}

export interface db_NestedIntNullableWithAggregatesFilter {
	equals?: number;
	in?: number[];
	notIn?: number[];
	lt?: number;
	lte?: number;
	gt?: number;
	gte?: number;
	not?: db_NestedIntNullableWithAggregatesFilter;
	_count?: db_NestedIntNullableFilter;
	_avg?: db_NestedFloatNullableFilter;
	_sum?: db_NestedIntNullableFilter;
	_min?: db_NestedIntNullableFilter;
	_max?: db_NestedIntNullableFilter;
}

export interface db_NestedFloatNullableFilter {
	equals?: number;
	in?: number[];
	notIn?: number[];
	lt?: number;
	lte?: number;
	gt?: number;
	gte?: number;
	not?: db_NestedFloatNullableFilter;
}

export interface db_DateTimeWithAggregatesFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	not?: db_NestedDateTimeWithAggregatesFilter;
	_count?: db_NestedIntFilter;
	_min?: db_NestedDateTimeFilter;
	_max?: db_NestedDateTimeFilter;
}

export interface db_NestedDateTimeWithAggregatesFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	not?: db_NestedDateTimeWithAggregatesFilter;
	_count?: db_NestedIntFilter;
	_min?: db_NestedDateTimeFilter;
	_max?: db_NestedDateTimeFilter;
}

export interface db_PostOrderByWithAggregationInput {
	id?: db_SortOrderValues;
	title?: db_SortOrderValues;
	content?: db_SortOrderValues;
	published?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	authorId?: db_SortOrderValues;
	_count?: db_PostCountOrderByAggregateInput;
	_max?: db_PostMaxOrderByAggregateInput;
	_min?: db_PostMinOrderByAggregateInput;
}

export interface db_PostCountOrderByAggregateInput {
	id?: db_SortOrderValues;
	title?: db_SortOrderValues;
	content?: db_SortOrderValues;
	published?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	authorId?: db_SortOrderValues;
}

export interface db_PostMaxOrderByAggregateInput {
	id?: db_SortOrderValues;
	title?: db_SortOrderValues;
	published?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	authorId?: db_SortOrderValues;
}

export interface db_PostMinOrderByAggregateInput {
	id?: db_SortOrderValues;
	title?: db_SortOrderValues;
	published?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	authorId?: db_SortOrderValues;
}

export interface db_PostScalarWhereWithAggregatesInput {
	AND?: db_PostScalarWhereWithAggregatesInput;
	OR?: db_PostScalarWhereWithAggregatesInput[];
	NOT?: db_PostScalarWhereWithAggregatesInput;
	id?: db_StringWithAggregatesFilter;
	title?: db_StringWithAggregatesFilter;
	content?: db_JsonNullableWithAggregatesFilter;
	published?: db_BoolWithAggregatesFilter;
	createdAt?: db_DateTimeWithAggregatesFilter;
	updatedAt?: db_DateTimeWithAggregatesFilter;
	authorId?: db_StringWithAggregatesFilter;
}

export interface db_JsonNullableWithAggregatesFilter {
	equals?: JSONValue;
	path?: string;
	string_contains?: string;
	string_starts_with?: string;
	string_ends_with?: string;
	array_contains?: JSONValue;
	array_starts_with?: JSONValue;
	array_ends_with?: JSONValue;
	lt?: JSONValue;
	lte?: JSONValue;
	gt?: JSONValue;
	gte?: JSONValue;
	not?: JSONValue;
	_count?: db_NestedIntNullableFilter;
	_min?: db_NestedJsonNullableFilter;
	_max?: db_NestedJsonNullableFilter;
}

export interface db_NestedJsonNullableFilter {
	equals?: JSONValue;
	path?: string;
	string_contains?: string;
	string_starts_with?: string;
	string_ends_with?: string;
	array_contains?: JSONValue;
	array_starts_with?: JSONValue;
	array_ends_with?: JSONValue;
	lt?: JSONValue;
	lte?: JSONValue;
	gt?: JSONValue;
	gte?: JSONValue;
	not?: JSONValue;
}

export interface db_BoolWithAggregatesFilter {
	equals?: boolean;
	not?: db_NestedBoolWithAggregatesFilter;
	_count?: db_NestedIntFilter;
	_min?: db_NestedBoolFilter;
	_max?: db_NestedBoolFilter;
}

export interface db_NestedBoolWithAggregatesFilter {
	equals?: boolean;
	not?: db_NestedBoolWithAggregatesFilter;
	_count?: db_NestedIntFilter;
	_min?: db_NestedBoolFilter;
	_max?: db_NestedBoolFilter;
}

export interface db_SessionOrderByWithAggregationInput {
	id?: db_SortOrderValues;
	sessionToken?: db_SortOrderValues;
	userId?: db_SortOrderValues;
	expires?: db_SortOrderValues;
	_count?: db_SessionCountOrderByAggregateInput;
	_max?: db_SessionMaxOrderByAggregateInput;
	_min?: db_SessionMinOrderByAggregateInput;
}

export interface db_SessionCountOrderByAggregateInput {
	id?: db_SortOrderValues;
	sessionToken?: db_SortOrderValues;
	userId?: db_SortOrderValues;
	expires?: db_SortOrderValues;
}

export interface db_SessionMaxOrderByAggregateInput {
	id?: db_SortOrderValues;
	sessionToken?: db_SortOrderValues;
	userId?: db_SortOrderValues;
	expires?: db_SortOrderValues;
}

export interface db_SessionMinOrderByAggregateInput {
	id?: db_SortOrderValues;
	sessionToken?: db_SortOrderValues;
	userId?: db_SortOrderValues;
	expires?: db_SortOrderValues;
}

export interface db_SessionScalarWhereWithAggregatesInput {
	AND?: db_SessionScalarWhereWithAggregatesInput;
	OR?: db_SessionScalarWhereWithAggregatesInput[];
	NOT?: db_SessionScalarWhereWithAggregatesInput;
	id?: db_StringWithAggregatesFilter;
	sessionToken?: db_StringWithAggregatesFilter;
	userId?: db_StringWithAggregatesFilter;
	expires?: db_DateTimeWithAggregatesFilter;
}

export interface db_TodoOrderByWithAggregationInput {
	id?: db_SortOrderValues;
	text?: db_SortOrderValues;
	isCompleted?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	userId?: db_SortOrderValues;
	_count?: db_TodoCountOrderByAggregateInput;
	_max?: db_TodoMaxOrderByAggregateInput;
	_min?: db_TodoMinOrderByAggregateInput;
}

export interface db_TodoCountOrderByAggregateInput {
	id?: db_SortOrderValues;
	text?: db_SortOrderValues;
	isCompleted?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	userId?: db_SortOrderValues;
}

export interface db_TodoMaxOrderByAggregateInput {
	id?: db_SortOrderValues;
	text?: db_SortOrderValues;
	isCompleted?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	userId?: db_SortOrderValues;
}

export interface db_TodoMinOrderByAggregateInput {
	id?: db_SortOrderValues;
	text?: db_SortOrderValues;
	isCompleted?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	userId?: db_SortOrderValues;
}

export interface db_TodoScalarWhereWithAggregatesInput {
	AND?: db_TodoScalarWhereWithAggregatesInput;
	OR?: db_TodoScalarWhereWithAggregatesInput[];
	NOT?: db_TodoScalarWhereWithAggregatesInput;
	id?: db_StringWithAggregatesFilter;
	text?: db_StringWithAggregatesFilter;
	isCompleted?: db_BoolWithAggregatesFilter;
	createdAt?: db_DateTimeWithAggregatesFilter;
	updatedAt?: db_DateTimeWithAggregatesFilter;
	userId?: db_StringWithAggregatesFilter;
}

export interface db_UserOrderByWithAggregationInput {
	id?: db_SortOrderValues;
	name?: db_SortOrderValues;
	email?: db_SortOrderValues;
	emailVerified?: db_SortOrderValues;
	image?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	stripeCustomerId?: db_SortOrderValues;
	stripeSubscriptionId?: db_SortOrderValues;
	stripePriceId?: db_SortOrderValues;
	stripeCurrentPeriodEnd?: db_SortOrderValues;
	_count?: db_UserCountOrderByAggregateInput;
	_max?: db_UserMaxOrderByAggregateInput;
	_min?: db_UserMinOrderByAggregateInput;
}

export interface db_UserCountOrderByAggregateInput {
	id?: db_SortOrderValues;
	name?: db_SortOrderValues;
	email?: db_SortOrderValues;
	emailVerified?: db_SortOrderValues;
	image?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	stripeCustomerId?: db_SortOrderValues;
	stripeSubscriptionId?: db_SortOrderValues;
	stripePriceId?: db_SortOrderValues;
	stripeCurrentPeriodEnd?: db_SortOrderValues;
}

export interface db_UserMaxOrderByAggregateInput {
	id?: db_SortOrderValues;
	name?: db_SortOrderValues;
	email?: db_SortOrderValues;
	emailVerified?: db_SortOrderValues;
	image?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	stripeCustomerId?: db_SortOrderValues;
	stripeSubscriptionId?: db_SortOrderValues;
	stripePriceId?: db_SortOrderValues;
	stripeCurrentPeriodEnd?: db_SortOrderValues;
}

export interface db_UserMinOrderByAggregateInput {
	id?: db_SortOrderValues;
	name?: db_SortOrderValues;
	email?: db_SortOrderValues;
	emailVerified?: db_SortOrderValues;
	image?: db_SortOrderValues;
	createdAt?: db_SortOrderValues;
	updatedAt?: db_SortOrderValues;
	stripeCustomerId?: db_SortOrderValues;
	stripeSubscriptionId?: db_SortOrderValues;
	stripePriceId?: db_SortOrderValues;
	stripeCurrentPeriodEnd?: db_SortOrderValues;
}

export interface db_UserScalarWhereWithAggregatesInput {
	AND?: db_UserScalarWhereWithAggregatesInput;
	OR?: db_UserScalarWhereWithAggregatesInput[];
	NOT?: db_UserScalarWhereWithAggregatesInput;
	id?: db_StringWithAggregatesFilter;
	name?: db_StringNullableWithAggregatesFilter;
	email?: db_StringNullableWithAggregatesFilter;
	emailVerified?: db_DateTimeNullableWithAggregatesFilter;
	image?: db_StringNullableWithAggregatesFilter;
	createdAt?: db_DateTimeWithAggregatesFilter;
	updatedAt?: db_DateTimeWithAggregatesFilter;
	stripeCustomerId?: db_StringNullableWithAggregatesFilter;
	stripeSubscriptionId?: db_StringNullableWithAggregatesFilter;
	stripePriceId?: db_StringNullableWithAggregatesFilter;
	stripeCurrentPeriodEnd?: db_DateTimeNullableWithAggregatesFilter;
}

export interface db_DateTimeNullableWithAggregatesFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	not?: db_NestedDateTimeNullableWithAggregatesFilter;
	_count?: db_NestedIntNullableFilter;
	_min?: db_NestedDateTimeNullableFilter;
	_max?: db_NestedDateTimeNullableFilter;
}

export interface db_NestedDateTimeNullableWithAggregatesFilter {
	equals?: string;
	in?: string[];
	notIn?: string[];
	lt?: string;
	lte?: string;
	gt?: string;
	gte?: string;
	not?: db_NestedDateTimeNullableWithAggregatesFilter;
	_count?: db_NestedIntNullableFilter;
	_min?: db_NestedDateTimeNullableFilter;
	_max?: db_NestedDateTimeNullableFilter;
}

export interface db_VerificationTokenOrderByWithAggregationInput {
	identifier?: db_SortOrderValues;
	token?: db_SortOrderValues;
	expires?: db_SortOrderValues;
	_count?: db_VerificationTokenCountOrderByAggregateInput;
	_max?: db_VerificationTokenMaxOrderByAggregateInput;
	_min?: db_VerificationTokenMinOrderByAggregateInput;
}

export interface db_VerificationTokenCountOrderByAggregateInput {
	identifier?: db_SortOrderValues;
	token?: db_SortOrderValues;
	expires?: db_SortOrderValues;
}

export interface db_VerificationTokenMaxOrderByAggregateInput {
	identifier?: db_SortOrderValues;
	token?: db_SortOrderValues;
	expires?: db_SortOrderValues;
}

export interface db_VerificationTokenMinOrderByAggregateInput {
	identifier?: db_SortOrderValues;
	token?: db_SortOrderValues;
	expires?: db_SortOrderValues;
}

export interface db_VerificationTokenScalarWhereWithAggregatesInput {
	AND?: db_VerificationTokenScalarWhereWithAggregatesInput;
	OR?: db_VerificationTokenScalarWhereWithAggregatesInput[];
	NOT?: db_VerificationTokenScalarWhereWithAggregatesInput;
	identifier?: db_StringWithAggregatesFilter;
	token?: db_StringWithAggregatesFilter;
	expires?: db_DateTimeWithAggregatesFilter;
}

export interface db_AccountUpdateManyMutationInput {
	id?: db_StringFieldUpdateOperationsInput;
	type?: db_StringFieldUpdateOperationsInput;
	provider?: db_StringFieldUpdateOperationsInput;
	providerAccountId?: db_StringFieldUpdateOperationsInput;
	refresh_token?: db_NullableStringFieldUpdateOperationsInput;
	access_token?: db_NullableStringFieldUpdateOperationsInput;
	expires_at?: db_NullableIntFieldUpdateOperationsInput;
	token_type?: db_NullableStringFieldUpdateOperationsInput;
	scope?: db_NullableStringFieldUpdateOperationsInput;
	id_token?: db_NullableStringFieldUpdateOperationsInput;
	session_state?: db_NullableStringFieldUpdateOperationsInput;
	createdAt?: db_DateTimeFieldUpdateOperationsInput;
	updatedAt?: db_DateTimeFieldUpdateOperationsInput;
}

export interface db_StringFieldUpdateOperationsInput {
	set?: string;
}

export interface db_NullableStringFieldUpdateOperationsInput {
	set?: string;
}

export interface db_NullableIntFieldUpdateOperationsInput {
	set?: number;
	increment?: number;
	decrement?: number;
	multiply?: number;
	divide?: number;
}

export interface db_DateTimeFieldUpdateOperationsInput {
	set?: string;
}

export interface db_PostUpdateManyMutationInput {
	id?: db_StringFieldUpdateOperationsInput;
	title?: db_StringFieldUpdateOperationsInput;
	content?: db_NullableJsonNullValueInputValues;
	published?: db_BoolFieldUpdateOperationsInput;
	createdAt?: db_DateTimeFieldUpdateOperationsInput;
	updatedAt?: db_DateTimeFieldUpdateOperationsInput;
}

export interface db_BoolFieldUpdateOperationsInput {
	set?: boolean;
}

export interface db_SessionUpdateManyMutationInput {
	id?: db_StringFieldUpdateOperationsInput;
	sessionToken?: db_StringFieldUpdateOperationsInput;
	expires?: db_DateTimeFieldUpdateOperationsInput;
}

export interface db_TodoUpdateManyMutationInput {
	id?: db_StringFieldUpdateOperationsInput;
	text?: db_StringFieldUpdateOperationsInput;
	isCompleted?: db_BoolFieldUpdateOperationsInput;
	createdAt?: db_DateTimeFieldUpdateOperationsInput;
	updatedAt?: db_DateTimeFieldUpdateOperationsInput;
}

export interface db_UserUpdateManyMutationInput {
	id?: db_StringFieldUpdateOperationsInput;
	name?: db_NullableStringFieldUpdateOperationsInput;
	email?: db_NullableStringFieldUpdateOperationsInput;
	emailVerified?: db_NullableDateTimeFieldUpdateOperationsInput;
	image?: db_NullableStringFieldUpdateOperationsInput;
	createdAt?: db_DateTimeFieldUpdateOperationsInput;
	updatedAt?: db_DateTimeFieldUpdateOperationsInput;
	stripeCustomerId?: db_NullableStringFieldUpdateOperationsInput;
	stripeSubscriptionId?: db_NullableStringFieldUpdateOperationsInput;
	stripePriceId?: db_NullableStringFieldUpdateOperationsInput;
	stripeCurrentPeriodEnd?: db_NullableDateTimeFieldUpdateOperationsInput;
}

export interface db_NullableDateTimeFieldUpdateOperationsInput {
	set?: string;
}

export interface db_VerificationTokenUpdateManyMutationInput {
	identifier?: db_StringFieldUpdateOperationsInput;
	token?: db_StringFieldUpdateOperationsInput;
	expires?: db_DateTimeFieldUpdateOperationsInput;
}

export interface db_AccountUpdateInput {
	id?: db_StringFieldUpdateOperationsInput;
	type?: db_StringFieldUpdateOperationsInput;
	provider?: db_StringFieldUpdateOperationsInput;
	providerAccountId?: db_StringFieldUpdateOperationsInput;
	refresh_token?: db_NullableStringFieldUpdateOperationsInput;
	access_token?: db_NullableStringFieldUpdateOperationsInput;
	expires_at?: db_NullableIntFieldUpdateOperationsInput;
	token_type?: db_NullableStringFieldUpdateOperationsInput;
	scope?: db_NullableStringFieldUpdateOperationsInput;
	id_token?: db_NullableStringFieldUpdateOperationsInput;
	session_state?: db_NullableStringFieldUpdateOperationsInput;
	createdAt?: db_DateTimeFieldUpdateOperationsInput;
	updatedAt?: db_DateTimeFieldUpdateOperationsInput;
	user?: db_UserUpdateOneRequiredWithoutAccountsNestedInput;
}

export interface db_UserUpdateOneRequiredWithoutAccountsNestedInput {
	create?: db_UserCreateWithoutAccountsInput;
	connectOrCreate?: db_UserCreateOrConnectWithoutAccountsInput;
	upsert?: db_UserUpsertWithoutAccountsInput;
	connect?: db_UserWhereUniqueInput;
	update?: db_UserUpdateWithoutAccountsInput;
}

export interface db_UserUpsertWithoutAccountsInput {
	update?: db_UserUpdateWithoutAccountsInput;
	create?: db_UserCreateWithoutAccountsInput;
}

export interface db_UserUpdateWithoutAccountsInput {
	id?: db_StringFieldUpdateOperationsInput;
	name?: db_NullableStringFieldUpdateOperationsInput;
	email?: db_NullableStringFieldUpdateOperationsInput;
	emailVerified?: db_NullableDateTimeFieldUpdateOperationsInput;
	image?: db_NullableStringFieldUpdateOperationsInput;
	createdAt?: db_DateTimeFieldUpdateOperationsInput;
	updatedAt?: db_DateTimeFieldUpdateOperationsInput;
	stripeCustomerId?: db_NullableStringFieldUpdateOperationsInput;
	stripeSubscriptionId?: db_NullableStringFieldUpdateOperationsInput;
	stripePriceId?: db_NullableStringFieldUpdateOperationsInput;
	stripeCurrentPeriodEnd?: db_NullableDateTimeFieldUpdateOperationsInput;
	sessions?: db_SessionUpdateManyWithoutUserNestedInput;
	Post?: db_PostUpdateManyWithoutAuthorNestedInput;
	Todo?: db_TodoUpdateManyWithoutUserNestedInput;
}

export interface db_SessionUpdateManyWithoutUserNestedInput {
	create?: db_SessionCreateWithoutUserInput;
	connectOrCreate?: db_SessionCreateOrConnectWithoutUserInput;
	upsert?: db_SessionUpsertWithWhereUniqueWithoutUserInput;
	createMany?: db_SessionCreateManyUserInputEnvelope;
	set?: db_SessionWhereUniqueInput;
	disconnect?: db_SessionWhereUniqueInput;
	delete?: db_SessionWhereUniqueInput;
	connect?: db_SessionWhereUniqueInput;
	update?: db_SessionUpdateWithWhereUniqueWithoutUserInput;
	updateMany?: db_SessionUpdateManyWithWhereWithoutUserInput;
	deleteMany?: db_SessionScalarWhereInput;
}

export interface db_SessionUpsertWithWhereUniqueWithoutUserInput {
	where?: db_SessionWhereUniqueInput;
	update?: db_SessionUpdateWithoutUserInput;
	create?: db_SessionCreateWithoutUserInput;
}

export interface db_SessionUpdateWithoutUserInput {
	id?: db_StringFieldUpdateOperationsInput;
	sessionToken?: db_StringFieldUpdateOperationsInput;
	expires?: db_DateTimeFieldUpdateOperationsInput;
}

export interface db_SessionUpdateWithWhereUniqueWithoutUserInput {
	where?: db_SessionWhereUniqueInput;
	data?: db_SessionUpdateWithoutUserInput;
}

export interface db_SessionUpdateManyWithWhereWithoutUserInput {
	where?: db_SessionScalarWhereInput;
	data?: db_SessionUpdateManyMutationInput;
}

export interface db_SessionScalarWhereInput {
	AND?: db_SessionScalarWhereInput;
	OR?: db_SessionScalarWhereInput[];
	NOT?: db_SessionScalarWhereInput;
	id?: db_StringFilter;
	sessionToken?: db_StringFilter;
	userId?: db_StringFilter;
	expires?: db_DateTimeFilter;
}

export interface db_PostUpdateManyWithoutAuthorNestedInput {
	create?: db_PostCreateWithoutAuthorInput;
	connectOrCreate?: db_PostCreateOrConnectWithoutAuthorInput;
	upsert?: db_PostUpsertWithWhereUniqueWithoutAuthorInput;
	createMany?: db_PostCreateManyAuthorInputEnvelope;
	set?: db_PostWhereUniqueInput;
	disconnect?: db_PostWhereUniqueInput;
	delete?: db_PostWhereUniqueInput;
	connect?: db_PostWhereUniqueInput;
	update?: db_PostUpdateWithWhereUniqueWithoutAuthorInput;
	updateMany?: db_PostUpdateManyWithWhereWithoutAuthorInput;
	deleteMany?: db_PostScalarWhereInput;
}

export interface db_PostUpsertWithWhereUniqueWithoutAuthorInput {
	where?: db_PostWhereUniqueInput;
	update?: db_PostUpdateWithoutAuthorInput;
	create?: db_PostCreateWithoutAuthorInput;
}

export interface db_PostUpdateWithoutAuthorInput {
	id?: db_StringFieldUpdateOperationsInput;
	title?: db_StringFieldUpdateOperationsInput;
	content?: db_NullableJsonNullValueInputValues;
	published?: db_BoolFieldUpdateOperationsInput;
	createdAt?: db_DateTimeFieldUpdateOperationsInput;
	updatedAt?: db_DateTimeFieldUpdateOperationsInput;
}

export interface db_PostUpdateWithWhereUniqueWithoutAuthorInput {
	where?: db_PostWhereUniqueInput;
	data?: db_PostUpdateWithoutAuthorInput;
}

export interface db_PostUpdateManyWithWhereWithoutAuthorInput {
	where?: db_PostScalarWhereInput;
	data?: db_PostUpdateManyMutationInput;
}

export interface db_PostScalarWhereInput {
	AND?: db_PostScalarWhereInput;
	OR?: db_PostScalarWhereInput[];
	NOT?: db_PostScalarWhereInput;
	id?: db_StringFilter;
	title?: db_StringFilter;
	content?: db_JsonNullableFilter;
	published?: db_BoolFilter;
	createdAt?: db_DateTimeFilter;
	updatedAt?: db_DateTimeFilter;
	authorId?: db_StringFilter;
}

export interface db_TodoUpdateManyWithoutUserNestedInput {
	create?: db_TodoCreateWithoutUserInput;
	connectOrCreate?: db_TodoCreateOrConnectWithoutUserInput;
	upsert?: db_TodoUpsertWithWhereUniqueWithoutUserInput;
	createMany?: db_TodoCreateManyUserInputEnvelope;
	set?: db_TodoWhereUniqueInput;
	disconnect?: db_TodoWhereUniqueInput;
	delete?: db_TodoWhereUniqueInput;
	connect?: db_TodoWhereUniqueInput;
	update?: db_TodoUpdateWithWhereUniqueWithoutUserInput;
	updateMany?: db_TodoUpdateManyWithWhereWithoutUserInput;
	deleteMany?: db_TodoScalarWhereInput;
}

export interface db_TodoUpsertWithWhereUniqueWithoutUserInput {
	where?: db_TodoWhereUniqueInput;
	update?: db_TodoUpdateWithoutUserInput;
	create?: db_TodoCreateWithoutUserInput;
}

export interface db_TodoUpdateWithoutUserInput {
	id?: db_StringFieldUpdateOperationsInput;
	text?: db_StringFieldUpdateOperationsInput;
	isCompleted?: db_BoolFieldUpdateOperationsInput;
	createdAt?: db_DateTimeFieldUpdateOperationsInput;
	updatedAt?: db_DateTimeFieldUpdateOperationsInput;
}

export interface db_TodoUpdateWithWhereUniqueWithoutUserInput {
	where?: db_TodoWhereUniqueInput;
	data?: db_TodoUpdateWithoutUserInput;
}

export interface db_TodoUpdateManyWithWhereWithoutUserInput {
	where?: db_TodoScalarWhereInput;
	data?: db_TodoUpdateManyMutationInput;
}

export interface db_TodoScalarWhereInput {
	AND?: db_TodoScalarWhereInput;
	OR?: db_TodoScalarWhereInput[];
	NOT?: db_TodoScalarWhereInput;
	id?: db_StringFilter;
	text?: db_StringFilter;
	isCompleted?: db_BoolFilter;
	createdAt?: db_DateTimeFilter;
	updatedAt?: db_DateTimeFilter;
	userId?: db_StringFilter;
}

export interface db_PostUpdateInput {
	id?: db_StringFieldUpdateOperationsInput;
	title?: db_StringFieldUpdateOperationsInput;
	content?: db_NullableJsonNullValueInputValues;
	published?: db_BoolFieldUpdateOperationsInput;
	createdAt?: db_DateTimeFieldUpdateOperationsInput;
	updatedAt?: db_DateTimeFieldUpdateOperationsInput;
	author?: db_UserUpdateOneRequiredWithoutPostNestedInput;
}

export interface db_UserUpdateOneRequiredWithoutPostNestedInput {
	create?: db_UserCreateWithoutPostInput;
	connectOrCreate?: db_UserCreateOrConnectWithoutPostInput;
	upsert?: db_UserUpsertWithoutPostInput;
	connect?: db_UserWhereUniqueInput;
	update?: db_UserUpdateWithoutPostInput;
}

export interface db_UserUpsertWithoutPostInput {
	update?: db_UserUpdateWithoutPostInput;
	create?: db_UserCreateWithoutPostInput;
}

export interface db_UserUpdateWithoutPostInput {
	id?: db_StringFieldUpdateOperationsInput;
	name?: db_NullableStringFieldUpdateOperationsInput;
	email?: db_NullableStringFieldUpdateOperationsInput;
	emailVerified?: db_NullableDateTimeFieldUpdateOperationsInput;
	image?: db_NullableStringFieldUpdateOperationsInput;
	createdAt?: db_DateTimeFieldUpdateOperationsInput;
	updatedAt?: db_DateTimeFieldUpdateOperationsInput;
	stripeCustomerId?: db_NullableStringFieldUpdateOperationsInput;
	stripeSubscriptionId?: db_NullableStringFieldUpdateOperationsInput;
	stripePriceId?: db_NullableStringFieldUpdateOperationsInput;
	stripeCurrentPeriodEnd?: db_NullableDateTimeFieldUpdateOperationsInput;
	accounts?: db_AccountUpdateManyWithoutUserNestedInput;
	sessions?: db_SessionUpdateManyWithoutUserNestedInput;
	Todo?: db_TodoUpdateManyWithoutUserNestedInput;
}

export interface db_AccountUpdateManyWithoutUserNestedInput {
	create?: db_AccountCreateWithoutUserInput;
	connectOrCreate?: db_AccountCreateOrConnectWithoutUserInput;
	upsert?: db_AccountUpsertWithWhereUniqueWithoutUserInput;
	createMany?: db_AccountCreateManyUserInputEnvelope;
	set?: db_AccountWhereUniqueInput;
	disconnect?: db_AccountWhereUniqueInput;
	delete?: db_AccountWhereUniqueInput;
	connect?: db_AccountWhereUniqueInput;
	update?: db_AccountUpdateWithWhereUniqueWithoutUserInput;
	updateMany?: db_AccountUpdateManyWithWhereWithoutUserInput;
	deleteMany?: db_AccountScalarWhereInput;
}

export interface db_AccountUpsertWithWhereUniqueWithoutUserInput {
	where?: db_AccountWhereUniqueInput;
	update?: db_AccountUpdateWithoutUserInput;
	create?: db_AccountCreateWithoutUserInput;
}

export interface db_AccountUpdateWithoutUserInput {
	id?: db_StringFieldUpdateOperationsInput;
	type?: db_StringFieldUpdateOperationsInput;
	provider?: db_StringFieldUpdateOperationsInput;
	providerAccountId?: db_StringFieldUpdateOperationsInput;
	refresh_token?: db_NullableStringFieldUpdateOperationsInput;
	access_token?: db_NullableStringFieldUpdateOperationsInput;
	expires_at?: db_NullableIntFieldUpdateOperationsInput;
	token_type?: db_NullableStringFieldUpdateOperationsInput;
	scope?: db_NullableStringFieldUpdateOperationsInput;
	id_token?: db_NullableStringFieldUpdateOperationsInput;
	session_state?: db_NullableStringFieldUpdateOperationsInput;
	createdAt?: db_DateTimeFieldUpdateOperationsInput;
	updatedAt?: db_DateTimeFieldUpdateOperationsInput;
}

export interface db_AccountUpdateWithWhereUniqueWithoutUserInput {
	where?: db_AccountWhereUniqueInput;
	data?: db_AccountUpdateWithoutUserInput;
}

export interface db_AccountUpdateManyWithWhereWithoutUserInput {
	where?: db_AccountScalarWhereInput;
	data?: db_AccountUpdateManyMutationInput;
}

export interface db_AccountScalarWhereInput {
	AND?: db_AccountScalarWhereInput;
	OR?: db_AccountScalarWhereInput[];
	NOT?: db_AccountScalarWhereInput;
	id?: db_StringFilter;
	userId?: db_StringFilter;
	type?: db_StringFilter;
	provider?: db_StringFilter;
	providerAccountId?: db_StringFilter;
	refresh_token?: db_StringNullableFilter;
	access_token?: db_StringNullableFilter;
	expires_at?: db_IntNullableFilter;
	token_type?: db_StringNullableFilter;
	scope?: db_StringNullableFilter;
	id_token?: db_StringNullableFilter;
	session_state?: db_StringNullableFilter;
	createdAt?: db_DateTimeFilter;
	updatedAt?: db_DateTimeFilter;
}

export interface db_SessionUpdateInput {
	id?: db_StringFieldUpdateOperationsInput;
	sessionToken?: db_StringFieldUpdateOperationsInput;
	expires?: db_DateTimeFieldUpdateOperationsInput;
	user?: db_UserUpdateOneRequiredWithoutSessionsNestedInput;
}

export interface db_UserUpdateOneRequiredWithoutSessionsNestedInput {
	create?: db_UserCreateWithoutSessionsInput;
	connectOrCreate?: db_UserCreateOrConnectWithoutSessionsInput;
	upsert?: db_UserUpsertWithoutSessionsInput;
	connect?: db_UserWhereUniqueInput;
	update?: db_UserUpdateWithoutSessionsInput;
}

export interface db_UserUpsertWithoutSessionsInput {
	update?: db_UserUpdateWithoutSessionsInput;
	create?: db_UserCreateWithoutSessionsInput;
}

export interface db_UserUpdateWithoutSessionsInput {
	id?: db_StringFieldUpdateOperationsInput;
	name?: db_NullableStringFieldUpdateOperationsInput;
	email?: db_NullableStringFieldUpdateOperationsInput;
	emailVerified?: db_NullableDateTimeFieldUpdateOperationsInput;
	image?: db_NullableStringFieldUpdateOperationsInput;
	createdAt?: db_DateTimeFieldUpdateOperationsInput;
	updatedAt?: db_DateTimeFieldUpdateOperationsInput;
	stripeCustomerId?: db_NullableStringFieldUpdateOperationsInput;
	stripeSubscriptionId?: db_NullableStringFieldUpdateOperationsInput;
	stripePriceId?: db_NullableStringFieldUpdateOperationsInput;
	stripeCurrentPeriodEnd?: db_NullableDateTimeFieldUpdateOperationsInput;
	accounts?: db_AccountUpdateManyWithoutUserNestedInput;
	Post?: db_PostUpdateManyWithoutAuthorNestedInput;
	Todo?: db_TodoUpdateManyWithoutUserNestedInput;
}

export interface db_TodoUpdateInput {
	id?: db_StringFieldUpdateOperationsInput;
	text?: db_StringFieldUpdateOperationsInput;
	isCompleted?: db_BoolFieldUpdateOperationsInput;
	createdAt?: db_DateTimeFieldUpdateOperationsInput;
	updatedAt?: db_DateTimeFieldUpdateOperationsInput;
	user?: db_UserUpdateOneRequiredWithoutTodoNestedInput;
}

export interface db_UserUpdateOneRequiredWithoutTodoNestedInput {
	create?: db_UserCreateWithoutTodoInput;
	connectOrCreate?: db_UserCreateOrConnectWithoutTodoInput;
	upsert?: db_UserUpsertWithoutTodoInput;
	connect?: db_UserWhereUniqueInput;
	update?: db_UserUpdateWithoutTodoInput;
}

export interface db_UserUpsertWithoutTodoInput {
	update?: db_UserUpdateWithoutTodoInput;
	create?: db_UserCreateWithoutTodoInput;
}

export interface db_UserUpdateWithoutTodoInput {
	id?: db_StringFieldUpdateOperationsInput;
	name?: db_NullableStringFieldUpdateOperationsInput;
	email?: db_NullableStringFieldUpdateOperationsInput;
	emailVerified?: db_NullableDateTimeFieldUpdateOperationsInput;
	image?: db_NullableStringFieldUpdateOperationsInput;
	createdAt?: db_DateTimeFieldUpdateOperationsInput;
	updatedAt?: db_DateTimeFieldUpdateOperationsInput;
	stripeCustomerId?: db_NullableStringFieldUpdateOperationsInput;
	stripeSubscriptionId?: db_NullableStringFieldUpdateOperationsInput;
	stripePriceId?: db_NullableStringFieldUpdateOperationsInput;
	stripeCurrentPeriodEnd?: db_NullableDateTimeFieldUpdateOperationsInput;
	accounts?: db_AccountUpdateManyWithoutUserNestedInput;
	sessions?: db_SessionUpdateManyWithoutUserNestedInput;
	Post?: db_PostUpdateManyWithoutAuthorNestedInput;
}

export interface db_UserUpdateInput {
	id?: db_StringFieldUpdateOperationsInput;
	name?: db_NullableStringFieldUpdateOperationsInput;
	email?: db_NullableStringFieldUpdateOperationsInput;
	emailVerified?: db_NullableDateTimeFieldUpdateOperationsInput;
	image?: db_NullableStringFieldUpdateOperationsInput;
	createdAt?: db_DateTimeFieldUpdateOperationsInput;
	updatedAt?: db_DateTimeFieldUpdateOperationsInput;
	stripeCustomerId?: db_NullableStringFieldUpdateOperationsInput;
	stripeSubscriptionId?: db_NullableStringFieldUpdateOperationsInput;
	stripePriceId?: db_NullableStringFieldUpdateOperationsInput;
	stripeCurrentPeriodEnd?: db_NullableDateTimeFieldUpdateOperationsInput;
	accounts?: db_AccountUpdateManyWithoutUserNestedInput;
	sessions?: db_SessionUpdateManyWithoutUserNestedInput;
	Post?: db_PostUpdateManyWithoutAuthorNestedInput;
	Todo?: db_TodoUpdateManyWithoutUserNestedInput;
}

export interface db_VerificationTokenUpdateInput {
	identifier?: db_StringFieldUpdateOperationsInput;
	token?: db_StringFieldUpdateOperationsInput;
	expires?: db_DateTimeFieldUpdateOperationsInput;
}

export interface weather_ConfigInput {
	lang?: weather_LanguageValues;
	units?: weather_UnitValues;
}

export type JSONValue = string | number | boolean | JSONObject | Array<JSONValue>;

export type JSONObject = { [key: string]: JSONValue };

export const db_SortOrder = {
	asc: "asc",
	desc: "desc",
} as const;

export type db_SortOrderValues = (typeof db_SortOrder)[keyof typeof db_SortOrder];

export const db_NullableJsonNullValueInput = {
	DbNull: "DbNull",
	JsonNull: "JsonNull",
} as const;

export type db_NullableJsonNullValueInputValues =
	(typeof db_NullableJsonNullValueInput)[keyof typeof db_NullableJsonNullValueInput];

export const db_SessionScalarFieldEnum = {
	id: "id",
	sessionToken: "sessionToken",
	userId: "userId",
	expires: "expires",
} as const;

export type db_SessionScalarFieldEnumValues =
	(typeof db_SessionScalarFieldEnum)[keyof typeof db_SessionScalarFieldEnum];

export const db_PostScalarFieldEnum = {
	id: "id",
	title: "title",
	content: "content",
	published: "published",
	createdAt: "createdAt",
	updatedAt: "updatedAt",
	authorId: "authorId",
} as const;

export type db_PostScalarFieldEnumValues = (typeof db_PostScalarFieldEnum)[keyof typeof db_PostScalarFieldEnum];

export const db_TodoScalarFieldEnum = {
	id: "id",
	text: "text",
	isCompleted: "isCompleted",
	createdAt: "createdAt",
	updatedAt: "updatedAt",
	userId: "userId",
} as const;

export type db_TodoScalarFieldEnumValues = (typeof db_TodoScalarFieldEnum)[keyof typeof db_TodoScalarFieldEnum];

export const db_AccountScalarFieldEnum = {
	id: "id",
	userId: "userId",
	type: "type",
	provider: "provider",
	providerAccountId: "providerAccountId",
	refresh_token: "refresh_token",
	access_token: "access_token",
	expires_at: "expires_at",
	token_type: "token_type",
	scope: "scope",
	id_token: "id_token",
	session_state: "session_state",
	createdAt: "createdAt",
	updatedAt: "updatedAt",
} as const;

export type db_AccountScalarFieldEnumValues =
	(typeof db_AccountScalarFieldEnum)[keyof typeof db_AccountScalarFieldEnum];

export const db_UserScalarFieldEnum = {
	id: "id",
	name: "name",
	email: "email",
	emailVerified: "emailVerified",
	image: "image",
	createdAt: "createdAt",
	updatedAt: "updatedAt",
	stripeCustomerId: "stripeCustomerId",
	stripeSubscriptionId: "stripeSubscriptionId",
	stripePriceId: "stripePriceId",
	stripeCurrentPeriodEnd: "stripeCurrentPeriodEnd",
} as const;

export type db_UserScalarFieldEnumValues = (typeof db_UserScalarFieldEnum)[keyof typeof db_UserScalarFieldEnum];

export const db_VerificationTokenScalarFieldEnum = {
	identifier: "identifier",
	token: "token",
	expires: "expires",
} as const;

export type db_VerificationTokenScalarFieldEnumValues =
	(typeof db_VerificationTokenScalarFieldEnum)[keyof typeof db_VerificationTokenScalarFieldEnum];

export const weather_Language = {
	af: "af",
	al: "al",
	ar: "ar",
	az: "az",
	bg: "bg",
	ca: "ca",
	cz: "cz",
	da: "da",
	de: "de",
	el: "el",
	en: "en",
	es: "es",
	eu: "eu",
	fa: "fa",
	fi: "fi",
	fr: "fr",
	gl: "gl",
	he: "he",
	hi: "hi",
	hr: "hr",
	hu: "hu",
	id: "id",
	it: "it",
	ja: "ja",
	kr: "kr",
	la: "la",
	lt: "lt",
	mk: "mk",
	nl: "nl",
	no: "no",
	pl: "pl",
	pt: "pt",
	pt_br: "pt_br",
	ro: "ro",
	ru: "ru",
	se: "se",
	sk: "sk",
	sl: "sl",
	sp: "sp",
	sr: "sr",
	sv: "sv",
	th: "th",
	tr: "tr",
	ua: "ua",
	uk: "uk",
	vi: "vi",
	zh_cn: "zh_cn",
	zh_tw: "zh_tw",
	zu: "zu",
} as const;

export type weather_LanguageValues = (typeof weather_Language)[keyof typeof weather_Language];

export const weather_Unit = {
	imperial: "imperial",
	kelvin: "kelvin",
	metric: "metric",
} as const;

export type weather_UnitValues = (typeof weather_Unit)[keyof typeof weather_Unit];

export interface CountriesContinentInput {
	code: string;
	countries_continent_countries_countries_name_lang?: string;
}

export interface CountriesContinentsInput {
	filter?: countries_ContinentFilterInput;
	countries_continents_countries_countries_name_lang?: string;
}

export interface CountriesCountriesInput {
	filter?: countries_CountryFilterInput;
	countries_countries_name_lang?: string;
}

export interface CountriesCountryInput {
	code: string;
	countries_country_name_lang?: string;
}

export interface CountriesCountryByCodeInput {
	code: string;
}

export interface CountriesLanguageInput {
	code: string;
}

export interface CountriesLanguagesInput {
	filter?: countries_LanguageFilterInput;
}

export interface DbAggregateAccountInput {
	where?: db_AccountWhereInput;
	orderBy?: db_AccountOrderByWithRelationInput[];
	cursor?: db_AccountWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbAggregatePostInput {
	where?: db_PostWhereInput;
	orderBy?: db_PostOrderByWithRelationInput[];
	cursor?: db_PostWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbAggregateSessionInput {
	where?: db_SessionWhereInput;
	orderBy?: db_SessionOrderByWithRelationInput[];
	cursor?: db_SessionWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbAggregateTodoInput {
	where?: db_TodoWhereInput;
	orderBy?: db_TodoOrderByWithRelationInput[];
	cursor?: db_TodoWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbAggregateUserInput {
	where?: db_UserWhereInput;
	orderBy?: db_UserOrderByWithRelationInput[];
	cursor?: db_UserWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbAggregateVerificationTokenInput {
	where?: db_VerificationTokenWhereInput;
	orderBy?: db_VerificationTokenOrderByWithRelationInput[];
	cursor?: db_VerificationTokenWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbCreateManyAccountInput {
	data: db_AccountCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateManyPostInput {
	data: db_PostCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateManySessionInput {
	data: db_SessionCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateManyTodoInput {
	data: db_TodoCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateManyUserInput {
	data: db_UserCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateManyVerificationTokenInput {
	data: db_VerificationTokenCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateOneAccountInput {
	data: db_AccountCreateInput;
	db_createOneAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_createOneAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_createOneAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_createOneAccount_user_user_sessions_take?: number;
	db_createOneAccount_user_user_sessions_skip?: number;
	db_createOneAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_createOneAccount_user_user_Post_where?: db_PostWhereInput;
	db_createOneAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_createOneAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_createOneAccount_user_user_Post_take?: number;
	db_createOneAccount_user_user_Post_skip?: number;
	db_createOneAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_createOneAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_createOneAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_createOneAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_createOneAccount_user_user_Todo_take?: number;
	db_createOneAccount_user_user_Todo_skip?: number;
	db_createOneAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbCreateOnePostInput {
	data: db_PostCreateInput;
	db_createOnePost_author_author_accounts_where?: db_AccountWhereInput;
	db_createOnePost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_createOnePost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_createOnePost_author_author_accounts_take?: number;
	db_createOnePost_author_author_accounts_skip?: number;
	db_createOnePost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_createOnePost_author_author_sessions_where?: db_SessionWhereInput;
	db_createOnePost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_createOnePost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_createOnePost_author_author_sessions_take?: number;
	db_createOnePost_author_author_sessions_skip?: number;
	db_createOnePost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_createOnePost_author_author_Todo_where?: db_TodoWhereInput;
	db_createOnePost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_createOnePost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_createOnePost_author_author_Todo_take?: number;
	db_createOnePost_author_author_Todo_skip?: number;
	db_createOnePost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbCreateOneSessionInput {
	data: db_SessionCreateInput;
	db_createOneSession_user_user_accounts_where?: db_AccountWhereInput;
	db_createOneSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_createOneSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_createOneSession_user_user_accounts_take?: number;
	db_createOneSession_user_user_accounts_skip?: number;
	db_createOneSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_createOneSession_user_user_Post_where?: db_PostWhereInput;
	db_createOneSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_createOneSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_createOneSession_user_user_Post_take?: number;
	db_createOneSession_user_user_Post_skip?: number;
	db_createOneSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_createOneSession_user_user_Todo_where?: db_TodoWhereInput;
	db_createOneSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_createOneSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_createOneSession_user_user_Todo_take?: number;
	db_createOneSession_user_user_Todo_skip?: number;
	db_createOneSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbCreateOneTodoInput {
	data: db_TodoCreateInput;
	db_createOneTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_createOneTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_createOneTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_createOneTodo_user_user_accounts_take?: number;
	db_createOneTodo_user_user_accounts_skip?: number;
	db_createOneTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_createOneTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_createOneTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_createOneTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_createOneTodo_user_user_sessions_take?: number;
	db_createOneTodo_user_user_sessions_skip?: number;
	db_createOneTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_createOneTodo_user_user_Post_where?: db_PostWhereInput;
	db_createOneTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_createOneTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_createOneTodo_user_user_Post_take?: number;
	db_createOneTodo_user_user_Post_skip?: number;
	db_createOneTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbCreateOneUserInput {
	data: db_UserCreateInput;
	db_createOneUser_accounts_where?: db_AccountWhereInput;
	db_createOneUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_createOneUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_createOneUser_accounts_take?: number;
	db_createOneUser_accounts_skip?: number;
	db_createOneUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_createOneUser_sessions_where?: db_SessionWhereInput;
	db_createOneUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_createOneUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_createOneUser_sessions_take?: number;
	db_createOneUser_sessions_skip?: number;
	db_createOneUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_createOneUser_Post_where?: db_PostWhereInput;
	db_createOneUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_createOneUser_Post_cursor?: db_PostWhereUniqueInput;
	db_createOneUser_Post_take?: number;
	db_createOneUser_Post_skip?: number;
	db_createOneUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_createOneUser_Todo_where?: db_TodoWhereInput;
	db_createOneUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_createOneUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_createOneUser_Todo_take?: number;
	db_createOneUser_Todo_skip?: number;
	db_createOneUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbCreateOneVerificationTokenInput {
	data: db_VerificationTokenCreateInput;
}

export interface DbDeleteManyAccountInput {
	where?: db_AccountWhereInput;
}

export interface DbDeleteManyPostInput {
	where?: db_PostWhereInput;
}

export interface DbDeleteManySessionInput {
	where?: db_SessionWhereInput;
}

export interface DbDeleteManyTodoInput {
	where?: db_TodoWhereInput;
}

export interface DbDeleteManyUserInput {
	where?: db_UserWhereInput;
}

export interface DbDeleteManyVerificationTokenInput {
	where?: db_VerificationTokenWhereInput;
}

export interface DbDeleteOneAccountInput {
	where: db_AccountWhereUniqueInput;
	db_deleteOneAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_deleteOneAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_deleteOneAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_deleteOneAccount_user_user_sessions_take?: number;
	db_deleteOneAccount_user_user_sessions_skip?: number;
	db_deleteOneAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_deleteOneAccount_user_user_Post_where?: db_PostWhereInput;
	db_deleteOneAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_deleteOneAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_deleteOneAccount_user_user_Post_take?: number;
	db_deleteOneAccount_user_user_Post_skip?: number;
	db_deleteOneAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_deleteOneAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_deleteOneAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_deleteOneAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_deleteOneAccount_user_user_Todo_take?: number;
	db_deleteOneAccount_user_user_Todo_skip?: number;
	db_deleteOneAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbDeleteOnePostInput {
	where: db_PostWhereUniqueInput;
	db_deleteOnePost_author_author_accounts_where?: db_AccountWhereInput;
	db_deleteOnePost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_deleteOnePost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_deleteOnePost_author_author_accounts_take?: number;
	db_deleteOnePost_author_author_accounts_skip?: number;
	db_deleteOnePost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_deleteOnePost_author_author_sessions_where?: db_SessionWhereInput;
	db_deleteOnePost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_deleteOnePost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_deleteOnePost_author_author_sessions_take?: number;
	db_deleteOnePost_author_author_sessions_skip?: number;
	db_deleteOnePost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_deleteOnePost_author_author_Todo_where?: db_TodoWhereInput;
	db_deleteOnePost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_deleteOnePost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_deleteOnePost_author_author_Todo_take?: number;
	db_deleteOnePost_author_author_Todo_skip?: number;
	db_deleteOnePost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbDeleteOneSessionInput {
	where: db_SessionWhereUniqueInput;
	db_deleteOneSession_user_user_accounts_where?: db_AccountWhereInput;
	db_deleteOneSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_deleteOneSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_deleteOneSession_user_user_accounts_take?: number;
	db_deleteOneSession_user_user_accounts_skip?: number;
	db_deleteOneSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_deleteOneSession_user_user_Post_where?: db_PostWhereInput;
	db_deleteOneSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_deleteOneSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_deleteOneSession_user_user_Post_take?: number;
	db_deleteOneSession_user_user_Post_skip?: number;
	db_deleteOneSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_deleteOneSession_user_user_Todo_where?: db_TodoWhereInput;
	db_deleteOneSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_deleteOneSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_deleteOneSession_user_user_Todo_take?: number;
	db_deleteOneSession_user_user_Todo_skip?: number;
	db_deleteOneSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbDeleteOneTodoInput {
	where: db_TodoWhereUniqueInput;
	db_deleteOneTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_deleteOneTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_deleteOneTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_deleteOneTodo_user_user_accounts_take?: number;
	db_deleteOneTodo_user_user_accounts_skip?: number;
	db_deleteOneTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_deleteOneTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_deleteOneTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_deleteOneTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_deleteOneTodo_user_user_sessions_take?: number;
	db_deleteOneTodo_user_user_sessions_skip?: number;
	db_deleteOneTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_deleteOneTodo_user_user_Post_where?: db_PostWhereInput;
	db_deleteOneTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_deleteOneTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_deleteOneTodo_user_user_Post_take?: number;
	db_deleteOneTodo_user_user_Post_skip?: number;
	db_deleteOneTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbDeleteOneUserInput {
	where: db_UserWhereUniqueInput;
	db_deleteOneUser_accounts_where?: db_AccountWhereInput;
	db_deleteOneUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_deleteOneUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_deleteOneUser_accounts_take?: number;
	db_deleteOneUser_accounts_skip?: number;
	db_deleteOneUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_deleteOneUser_sessions_where?: db_SessionWhereInput;
	db_deleteOneUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_deleteOneUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_deleteOneUser_sessions_take?: number;
	db_deleteOneUser_sessions_skip?: number;
	db_deleteOneUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_deleteOneUser_Post_where?: db_PostWhereInput;
	db_deleteOneUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_deleteOneUser_Post_cursor?: db_PostWhereUniqueInput;
	db_deleteOneUser_Post_take?: number;
	db_deleteOneUser_Post_skip?: number;
	db_deleteOneUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_deleteOneUser_Todo_where?: db_TodoWhereInput;
	db_deleteOneUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_deleteOneUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_deleteOneUser_Todo_take?: number;
	db_deleteOneUser_Todo_skip?: number;
	db_deleteOneUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbDeleteOneVerificationTokenInput {
	where: db_VerificationTokenWhereUniqueInput;
}

export interface DbExecuteRawInput {
	query: string;
	parameters?: string[];
}

export interface DbFindFirstAccountInput {
	where?: db_AccountWhereInput;
	orderBy?: db_AccountOrderByWithRelationInput[];
	cursor?: db_AccountWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_findFirstAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstAccount_user_user_sessions_take?: number;
	db_findFirstAccount_user_user_sessions_skip?: number;
	db_findFirstAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstAccount_user_user_Post_where?: db_PostWhereInput;
	db_findFirstAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstAccount_user_user_Post_take?: number;
	db_findFirstAccount_user_user_Post_skip?: number;
	db_findFirstAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_findFirstAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstAccount_user_user_Todo_take?: number;
	db_findFirstAccount_user_user_Todo_skip?: number;
	db_findFirstAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstAccountOrThrowInput {
	where?: db_AccountWhereInput;
	orderBy?: db_AccountOrderByWithRelationInput[];
	cursor?: db_AccountWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstAccountOrThrow_user_user_sessions_where?: db_SessionWhereInput;
	db_findFirstAccountOrThrow_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstAccountOrThrow_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstAccountOrThrow_user_user_sessions_take?: number;
	db_findFirstAccountOrThrow_user_user_sessions_skip?: number;
	db_findFirstAccountOrThrow_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstAccountOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findFirstAccountOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstAccountOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstAccountOrThrow_user_user_Post_take?: number;
	db_findFirstAccountOrThrow_user_user_Post_skip?: number;
	db_findFirstAccountOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstAccountOrThrow_user_user_Todo_where?: db_TodoWhereInput;
	db_findFirstAccountOrThrow_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstAccountOrThrow_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstAccountOrThrow_user_user_Todo_take?: number;
	db_findFirstAccountOrThrow_user_user_Todo_skip?: number;
	db_findFirstAccountOrThrow_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstPostInput {
	where?: db_PostWhereInput;
	orderBy?: db_PostOrderByWithRelationInput[];
	cursor?: db_PostWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstPost_author_author_accounts_where?: db_AccountWhereInput;
	db_findFirstPost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstPost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstPost_author_author_accounts_take?: number;
	db_findFirstPost_author_author_accounts_skip?: number;
	db_findFirstPost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstPost_author_author_sessions_where?: db_SessionWhereInput;
	db_findFirstPost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstPost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstPost_author_author_sessions_take?: number;
	db_findFirstPost_author_author_sessions_skip?: number;
	db_findFirstPost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstPost_author_author_Todo_where?: db_TodoWhereInput;
	db_findFirstPost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstPost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstPost_author_author_Todo_take?: number;
	db_findFirstPost_author_author_Todo_skip?: number;
	db_findFirstPost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstPostOrThrowInput {
	where?: db_PostWhereInput;
	orderBy?: db_PostOrderByWithRelationInput[];
	cursor?: db_PostWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstPostOrThrow_author_author_accounts_where?: db_AccountWhereInput;
	db_findFirstPostOrThrow_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstPostOrThrow_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstPostOrThrow_author_author_accounts_take?: number;
	db_findFirstPostOrThrow_author_author_accounts_skip?: number;
	db_findFirstPostOrThrow_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstPostOrThrow_author_author_sessions_where?: db_SessionWhereInput;
	db_findFirstPostOrThrow_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstPostOrThrow_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstPostOrThrow_author_author_sessions_take?: number;
	db_findFirstPostOrThrow_author_author_sessions_skip?: number;
	db_findFirstPostOrThrow_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstPostOrThrow_author_author_Todo_where?: db_TodoWhereInput;
	db_findFirstPostOrThrow_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstPostOrThrow_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstPostOrThrow_author_author_Todo_take?: number;
	db_findFirstPostOrThrow_author_author_Todo_skip?: number;
	db_findFirstPostOrThrow_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstSessionInput {
	where?: db_SessionWhereInput;
	orderBy?: db_SessionOrderByWithRelationInput[];
	cursor?: db_SessionWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstSession_user_user_accounts_where?: db_AccountWhereInput;
	db_findFirstSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstSession_user_user_accounts_take?: number;
	db_findFirstSession_user_user_accounts_skip?: number;
	db_findFirstSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstSession_user_user_Post_where?: db_PostWhereInput;
	db_findFirstSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstSession_user_user_Post_take?: number;
	db_findFirstSession_user_user_Post_skip?: number;
	db_findFirstSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstSession_user_user_Todo_where?: db_TodoWhereInput;
	db_findFirstSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstSession_user_user_Todo_take?: number;
	db_findFirstSession_user_user_Todo_skip?: number;
	db_findFirstSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstSessionOrThrowInput {
	where?: db_SessionWhereInput;
	orderBy?: db_SessionOrderByWithRelationInput[];
	cursor?: db_SessionWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstSessionOrThrow_user_user_accounts_where?: db_AccountWhereInput;
	db_findFirstSessionOrThrow_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstSessionOrThrow_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstSessionOrThrow_user_user_accounts_take?: number;
	db_findFirstSessionOrThrow_user_user_accounts_skip?: number;
	db_findFirstSessionOrThrow_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstSessionOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findFirstSessionOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstSessionOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstSessionOrThrow_user_user_Post_take?: number;
	db_findFirstSessionOrThrow_user_user_Post_skip?: number;
	db_findFirstSessionOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstSessionOrThrow_user_user_Todo_where?: db_TodoWhereInput;
	db_findFirstSessionOrThrow_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstSessionOrThrow_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstSessionOrThrow_user_user_Todo_take?: number;
	db_findFirstSessionOrThrow_user_user_Todo_skip?: number;
	db_findFirstSessionOrThrow_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstTodoInput {
	where?: db_TodoWhereInput;
	orderBy?: db_TodoOrderByWithRelationInput[];
	cursor?: db_TodoWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_TodoScalarFieldEnumValues[];
	db_findFirstTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_findFirstTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstTodo_user_user_accounts_take?: number;
	db_findFirstTodo_user_user_accounts_skip?: number;
	db_findFirstTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_findFirstTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstTodo_user_user_sessions_take?: number;
	db_findFirstTodo_user_user_sessions_skip?: number;
	db_findFirstTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstTodo_user_user_Post_where?: db_PostWhereInput;
	db_findFirstTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstTodo_user_user_Post_take?: number;
	db_findFirstTodo_user_user_Post_skip?: number;
	db_findFirstTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbFindFirstTodoOrThrowInput {
	where?: db_TodoWhereInput;
	orderBy?: db_TodoOrderByWithRelationInput[];
	cursor?: db_TodoWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_TodoScalarFieldEnumValues[];
	db_findFirstTodoOrThrow_user_user_accounts_where?: db_AccountWhereInput;
	db_findFirstTodoOrThrow_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstTodoOrThrow_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstTodoOrThrow_user_user_accounts_take?: number;
	db_findFirstTodoOrThrow_user_user_accounts_skip?: number;
	db_findFirstTodoOrThrow_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstTodoOrThrow_user_user_sessions_where?: db_SessionWhereInput;
	db_findFirstTodoOrThrow_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstTodoOrThrow_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstTodoOrThrow_user_user_sessions_take?: number;
	db_findFirstTodoOrThrow_user_user_sessions_skip?: number;
	db_findFirstTodoOrThrow_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstTodoOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findFirstTodoOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstTodoOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstTodoOrThrow_user_user_Post_take?: number;
	db_findFirstTodoOrThrow_user_user_Post_skip?: number;
	db_findFirstTodoOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbFindFirstUserInput {
	where?: db_UserWhereInput;
	orderBy?: db_UserOrderByWithRelationInput[];
	cursor?: db_UserWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_UserScalarFieldEnumValues[];
	db_findFirstUser_accounts_where?: db_AccountWhereInput;
	db_findFirstUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstUser_accounts_take?: number;
	db_findFirstUser_accounts_skip?: number;
	db_findFirstUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstUser_sessions_where?: db_SessionWhereInput;
	db_findFirstUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstUser_sessions_take?: number;
	db_findFirstUser_sessions_skip?: number;
	db_findFirstUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstUser_Post_where?: db_PostWhereInput;
	db_findFirstUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstUser_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstUser_Post_take?: number;
	db_findFirstUser_Post_skip?: number;
	db_findFirstUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstUser_Todo_where?: db_TodoWhereInput;
	db_findFirstUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstUser_Todo_take?: number;
	db_findFirstUser_Todo_skip?: number;
	db_findFirstUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstUserOrThrowInput {
	where?: db_UserWhereInput;
	orderBy?: db_UserOrderByWithRelationInput[];
	cursor?: db_UserWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_UserScalarFieldEnumValues[];
	db_findFirstUserOrThrow_accounts_where?: db_AccountWhereInput;
	db_findFirstUserOrThrow_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstUserOrThrow_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstUserOrThrow_accounts_take?: number;
	db_findFirstUserOrThrow_accounts_skip?: number;
	db_findFirstUserOrThrow_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstUserOrThrow_sessions_where?: db_SessionWhereInput;
	db_findFirstUserOrThrow_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstUserOrThrow_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstUserOrThrow_sessions_take?: number;
	db_findFirstUserOrThrow_sessions_skip?: number;
	db_findFirstUserOrThrow_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstUserOrThrow_Post_where?: db_PostWhereInput;
	db_findFirstUserOrThrow_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstUserOrThrow_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstUserOrThrow_Post_take?: number;
	db_findFirstUserOrThrow_Post_skip?: number;
	db_findFirstUserOrThrow_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstUserOrThrow_Todo_where?: db_TodoWhereInput;
	db_findFirstUserOrThrow_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstUserOrThrow_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstUserOrThrow_Todo_take?: number;
	db_findFirstUserOrThrow_Todo_skip?: number;
	db_findFirstUserOrThrow_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstVerificationTokenInput {
	where?: db_VerificationTokenWhereInput;
	orderBy?: db_VerificationTokenOrderByWithRelationInput[];
	cursor?: db_VerificationTokenWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_VerificationTokenScalarFieldEnumValues[];
}

export interface DbFindFirstVerificationTokenOrThrowInput {
	where?: db_VerificationTokenWhereInput;
	orderBy?: db_VerificationTokenOrderByWithRelationInput[];
	cursor?: db_VerificationTokenWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_VerificationTokenScalarFieldEnumValues[];
}

export interface DbFindManyAccountInput {
	where?: db_AccountWhereInput;
	orderBy?: db_AccountOrderByWithRelationInput[];
	cursor?: db_AccountWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_AccountScalarFieldEnumValues[];
	db_findManyAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_findManyAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findManyAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findManyAccount_user_user_sessions_take?: number;
	db_findManyAccount_user_user_sessions_skip?: number;
	db_findManyAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findManyAccount_user_user_Post_where?: db_PostWhereInput;
	db_findManyAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findManyAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findManyAccount_user_user_Post_take?: number;
	db_findManyAccount_user_user_Post_skip?: number;
	db_findManyAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findManyAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_findManyAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findManyAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findManyAccount_user_user_Todo_take?: number;
	db_findManyAccount_user_user_Todo_skip?: number;
	db_findManyAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindManyPostInput {
	where?: db_PostWhereInput;
	orderBy?: db_PostOrderByWithRelationInput[];
	cursor?: db_PostWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_PostScalarFieldEnumValues[];
	db_findManyPost_author_author_accounts_where?: db_AccountWhereInput;
	db_findManyPost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findManyPost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findManyPost_author_author_accounts_take?: number;
	db_findManyPost_author_author_accounts_skip?: number;
	db_findManyPost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findManyPost_author_author_sessions_where?: db_SessionWhereInput;
	db_findManyPost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findManyPost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findManyPost_author_author_sessions_take?: number;
	db_findManyPost_author_author_sessions_skip?: number;
	db_findManyPost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findManyPost_author_author_Todo_where?: db_TodoWhereInput;
	db_findManyPost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findManyPost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findManyPost_author_author_Todo_take?: number;
	db_findManyPost_author_author_Todo_skip?: number;
	db_findManyPost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindManySessionInput {
	where?: db_SessionWhereInput;
	orderBy?: db_SessionOrderByWithRelationInput[];
	cursor?: db_SessionWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_SessionScalarFieldEnumValues[];
	db_findManySession_user_user_accounts_where?: db_AccountWhereInput;
	db_findManySession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findManySession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findManySession_user_user_accounts_take?: number;
	db_findManySession_user_user_accounts_skip?: number;
	db_findManySession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findManySession_user_user_Post_where?: db_PostWhereInput;
	db_findManySession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findManySession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findManySession_user_user_Post_take?: number;
	db_findManySession_user_user_Post_skip?: number;
	db_findManySession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findManySession_user_user_Todo_where?: db_TodoWhereInput;
	db_findManySession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findManySession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findManySession_user_user_Todo_take?: number;
	db_findManySession_user_user_Todo_skip?: number;
	db_findManySession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindManyTodoInput {
	where?: db_TodoWhereInput;
	orderBy?: db_TodoOrderByWithRelationInput[];
	cursor?: db_TodoWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_TodoScalarFieldEnumValues[];
	db_findManyTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_findManyTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findManyTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findManyTodo_user_user_accounts_take?: number;
	db_findManyTodo_user_user_accounts_skip?: number;
	db_findManyTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findManyTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_findManyTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findManyTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findManyTodo_user_user_sessions_take?: number;
	db_findManyTodo_user_user_sessions_skip?: number;
	db_findManyTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findManyTodo_user_user_Post_where?: db_PostWhereInput;
	db_findManyTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findManyTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findManyTodo_user_user_Post_take?: number;
	db_findManyTodo_user_user_Post_skip?: number;
	db_findManyTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbFindManyUserInput {
	where?: db_UserWhereInput;
	orderBy?: db_UserOrderByWithRelationInput[];
	cursor?: db_UserWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_UserScalarFieldEnumValues[];
	db_findManyUser_accounts_where?: db_AccountWhereInput;
	db_findManyUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findManyUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findManyUser_accounts_take?: number;
	db_findManyUser_accounts_skip?: number;
	db_findManyUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findManyUser_sessions_where?: db_SessionWhereInput;
	db_findManyUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findManyUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findManyUser_sessions_take?: number;
	db_findManyUser_sessions_skip?: number;
	db_findManyUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findManyUser_Post_where?: db_PostWhereInput;
	db_findManyUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findManyUser_Post_cursor?: db_PostWhereUniqueInput;
	db_findManyUser_Post_take?: number;
	db_findManyUser_Post_skip?: number;
	db_findManyUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findManyUser_Todo_where?: db_TodoWhereInput;
	db_findManyUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findManyUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findManyUser_Todo_take?: number;
	db_findManyUser_Todo_skip?: number;
	db_findManyUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindManyVerificationTokenInput {
	where?: db_VerificationTokenWhereInput;
	orderBy?: db_VerificationTokenOrderByWithRelationInput[];
	cursor?: db_VerificationTokenWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_VerificationTokenScalarFieldEnumValues[];
}

export interface DbFindUniqueAccountInput {
	where: db_AccountWhereUniqueInput;
	db_findUniqueAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_findUniqueAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueAccount_user_user_sessions_take?: number;
	db_findUniqueAccount_user_user_sessions_skip?: number;
	db_findUniqueAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueAccount_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueAccount_user_user_Post_take?: number;
	db_findUniqueAccount_user_user_Post_skip?: number;
	db_findUniqueAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_findUniqueAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueAccount_user_user_Todo_take?: number;
	db_findUniqueAccount_user_user_Todo_skip?: number;
	db_findUniqueAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueAccountOrThrowInput {
	where: db_AccountWhereUniqueInput;
	db_findUniqueAccountOrThrow_user_user_sessions_where?: db_SessionWhereInput;
	db_findUniqueAccountOrThrow_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueAccountOrThrow_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueAccountOrThrow_user_user_sessions_take?: number;
	db_findUniqueAccountOrThrow_user_user_sessions_skip?: number;
	db_findUniqueAccountOrThrow_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueAccountOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueAccountOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueAccountOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueAccountOrThrow_user_user_Post_take?: number;
	db_findUniqueAccountOrThrow_user_user_Post_skip?: number;
	db_findUniqueAccountOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueAccountOrThrow_user_user_Todo_where?: db_TodoWhereInput;
	db_findUniqueAccountOrThrow_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueAccountOrThrow_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueAccountOrThrow_user_user_Todo_take?: number;
	db_findUniqueAccountOrThrow_user_user_Todo_skip?: number;
	db_findUniqueAccountOrThrow_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniquePostInput {
	where: db_PostWhereUniqueInput;
	db_findUniquePost_author_author_accounts_where?: db_AccountWhereInput;
	db_findUniquePost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniquePost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniquePost_author_author_accounts_take?: number;
	db_findUniquePost_author_author_accounts_skip?: number;
	db_findUniquePost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniquePost_author_author_sessions_where?: db_SessionWhereInput;
	db_findUniquePost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniquePost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniquePost_author_author_sessions_take?: number;
	db_findUniquePost_author_author_sessions_skip?: number;
	db_findUniquePost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniquePost_author_author_Todo_where?: db_TodoWhereInput;
	db_findUniquePost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniquePost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniquePost_author_author_Todo_take?: number;
	db_findUniquePost_author_author_Todo_skip?: number;
	db_findUniquePost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniquePostOrThrowInput {
	where: db_PostWhereUniqueInput;
	db_findUniquePostOrThrow_author_author_accounts_where?: db_AccountWhereInput;
	db_findUniquePostOrThrow_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniquePostOrThrow_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniquePostOrThrow_author_author_accounts_take?: number;
	db_findUniquePostOrThrow_author_author_accounts_skip?: number;
	db_findUniquePostOrThrow_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniquePostOrThrow_author_author_sessions_where?: db_SessionWhereInput;
	db_findUniquePostOrThrow_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniquePostOrThrow_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniquePostOrThrow_author_author_sessions_take?: number;
	db_findUniquePostOrThrow_author_author_sessions_skip?: number;
	db_findUniquePostOrThrow_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniquePostOrThrow_author_author_Todo_where?: db_TodoWhereInput;
	db_findUniquePostOrThrow_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniquePostOrThrow_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniquePostOrThrow_author_author_Todo_take?: number;
	db_findUniquePostOrThrow_author_author_Todo_skip?: number;
	db_findUniquePostOrThrow_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueSessionInput {
	where: db_SessionWhereUniqueInput;
	db_findUniqueSession_user_user_accounts_where?: db_AccountWhereInput;
	db_findUniqueSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueSession_user_user_accounts_take?: number;
	db_findUniqueSession_user_user_accounts_skip?: number;
	db_findUniqueSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueSession_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueSession_user_user_Post_take?: number;
	db_findUniqueSession_user_user_Post_skip?: number;
	db_findUniqueSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueSession_user_user_Todo_where?: db_TodoWhereInput;
	db_findUniqueSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueSession_user_user_Todo_take?: number;
	db_findUniqueSession_user_user_Todo_skip?: number;
	db_findUniqueSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueSessionOrThrowInput {
	where: db_SessionWhereUniqueInput;
	db_findUniqueSessionOrThrow_user_user_accounts_where?: db_AccountWhereInput;
	db_findUniqueSessionOrThrow_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueSessionOrThrow_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueSessionOrThrow_user_user_accounts_take?: number;
	db_findUniqueSessionOrThrow_user_user_accounts_skip?: number;
	db_findUniqueSessionOrThrow_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueSessionOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueSessionOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueSessionOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueSessionOrThrow_user_user_Post_take?: number;
	db_findUniqueSessionOrThrow_user_user_Post_skip?: number;
	db_findUniqueSessionOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueSessionOrThrow_user_user_Todo_where?: db_TodoWhereInput;
	db_findUniqueSessionOrThrow_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueSessionOrThrow_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueSessionOrThrow_user_user_Todo_take?: number;
	db_findUniqueSessionOrThrow_user_user_Todo_skip?: number;
	db_findUniqueSessionOrThrow_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueTodoInput {
	where: db_TodoWhereUniqueInput;
	db_findUniqueTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_findUniqueTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueTodo_user_user_accounts_take?: number;
	db_findUniqueTodo_user_user_accounts_skip?: number;
	db_findUniqueTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_findUniqueTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueTodo_user_user_sessions_take?: number;
	db_findUniqueTodo_user_user_sessions_skip?: number;
	db_findUniqueTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueTodo_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueTodo_user_user_Post_take?: number;
	db_findUniqueTodo_user_user_Post_skip?: number;
	db_findUniqueTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbFindUniqueTodoOrThrowInput {
	where: db_TodoWhereUniqueInput;
	db_findUniqueTodoOrThrow_user_user_accounts_where?: db_AccountWhereInput;
	db_findUniqueTodoOrThrow_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueTodoOrThrow_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueTodoOrThrow_user_user_accounts_take?: number;
	db_findUniqueTodoOrThrow_user_user_accounts_skip?: number;
	db_findUniqueTodoOrThrow_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueTodoOrThrow_user_user_sessions_where?: db_SessionWhereInput;
	db_findUniqueTodoOrThrow_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueTodoOrThrow_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueTodoOrThrow_user_user_sessions_take?: number;
	db_findUniqueTodoOrThrow_user_user_sessions_skip?: number;
	db_findUniqueTodoOrThrow_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueTodoOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueTodoOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueTodoOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueTodoOrThrow_user_user_Post_take?: number;
	db_findUniqueTodoOrThrow_user_user_Post_skip?: number;
	db_findUniqueTodoOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbFindUniqueUserInput {
	where: db_UserWhereUniqueInput;
	db_findUniqueUser_accounts_where?: db_AccountWhereInput;
	db_findUniqueUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueUser_accounts_take?: number;
	db_findUniqueUser_accounts_skip?: number;
	db_findUniqueUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueUser_sessions_where?: db_SessionWhereInput;
	db_findUniqueUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueUser_sessions_take?: number;
	db_findUniqueUser_sessions_skip?: number;
	db_findUniqueUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueUser_Post_where?: db_PostWhereInput;
	db_findUniqueUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueUser_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueUser_Post_take?: number;
	db_findUniqueUser_Post_skip?: number;
	db_findUniqueUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueUser_Todo_where?: db_TodoWhereInput;
	db_findUniqueUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueUser_Todo_take?: number;
	db_findUniqueUser_Todo_skip?: number;
	db_findUniqueUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueUserOrThrowInput {
	where: db_UserWhereUniqueInput;
	db_findUniqueUserOrThrow_accounts_where?: db_AccountWhereInput;
	db_findUniqueUserOrThrow_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueUserOrThrow_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueUserOrThrow_accounts_take?: number;
	db_findUniqueUserOrThrow_accounts_skip?: number;
	db_findUniqueUserOrThrow_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueUserOrThrow_sessions_where?: db_SessionWhereInput;
	db_findUniqueUserOrThrow_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueUserOrThrow_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueUserOrThrow_sessions_take?: number;
	db_findUniqueUserOrThrow_sessions_skip?: number;
	db_findUniqueUserOrThrow_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueUserOrThrow_Post_where?: db_PostWhereInput;
	db_findUniqueUserOrThrow_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueUserOrThrow_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueUserOrThrow_Post_take?: number;
	db_findUniqueUserOrThrow_Post_skip?: number;
	db_findUniqueUserOrThrow_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueUserOrThrow_Todo_where?: db_TodoWhereInput;
	db_findUniqueUserOrThrow_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueUserOrThrow_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueUserOrThrow_Todo_take?: number;
	db_findUniqueUserOrThrow_Todo_skip?: number;
	db_findUniqueUserOrThrow_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueVerificationTokenInput {
	where: db_VerificationTokenWhereUniqueInput;
}

export interface DbFindUniqueVerificationTokenOrThrowInput {
	where: db_VerificationTokenWhereUniqueInput;
}

export interface DbGroupByAccountInput {
	where?: db_AccountWhereInput;
	orderBy?: db_AccountOrderByWithAggregationInput[];
	by: db_AccountScalarFieldEnumValues[];
	having?: db_AccountScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbGroupByPostInput {
	where?: db_PostWhereInput;
	orderBy?: db_PostOrderByWithAggregationInput[];
	by: db_PostScalarFieldEnumValues[];
	having?: db_PostScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbGroupBySessionInput {
	where?: db_SessionWhereInput;
	orderBy?: db_SessionOrderByWithAggregationInput[];
	by: db_SessionScalarFieldEnumValues[];
	having?: db_SessionScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbGroupByTodoInput {
	where?: db_TodoWhereInput;
	orderBy?: db_TodoOrderByWithAggregationInput[];
	by: db_TodoScalarFieldEnumValues[];
	having?: db_TodoScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbGroupByUserInput {
	where?: db_UserWhereInput;
	orderBy?: db_UserOrderByWithAggregationInput[];
	by: db_UserScalarFieldEnumValues[];
	having?: db_UserScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbGroupByVerificationTokenInput {
	where?: db_VerificationTokenWhereInput;
	orderBy?: db_VerificationTokenOrderByWithAggregationInput[];
	by: db_VerificationTokenScalarFieldEnumValues[];
	having?: db_VerificationTokenScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbQueryRawInput {
	query: string;
	parameters?: string[];
}

export interface DbQueryRawJSONInput {
	query: string;
	parameters?: string[];
}

export interface DbUpdateManyAccountInput {
	data: db_AccountUpdateManyMutationInput;
	where?: db_AccountWhereInput;
}

export interface DbUpdateManyPostInput {
	data: db_PostUpdateManyMutationInput;
	where?: db_PostWhereInput;
}

export interface DbUpdateManySessionInput {
	data: db_SessionUpdateManyMutationInput;
	where?: db_SessionWhereInput;
}

export interface DbUpdateManyTodoInput {
	data: db_TodoUpdateManyMutationInput;
	where?: db_TodoWhereInput;
}

export interface DbUpdateManyUserInput {
	data: db_UserUpdateManyMutationInput;
	where?: db_UserWhereInput;
}

export interface DbUpdateManyVerificationTokenInput {
	data: db_VerificationTokenUpdateManyMutationInput;
	where?: db_VerificationTokenWhereInput;
}

export interface DbUpdateOneAccountInput {
	data: db_AccountUpdateInput;
	where: db_AccountWhereUniqueInput;
	db_updateOneAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_updateOneAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_updateOneAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_updateOneAccount_user_user_sessions_take?: number;
	db_updateOneAccount_user_user_sessions_skip?: number;
	db_updateOneAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_updateOneAccount_user_user_Post_where?: db_PostWhereInput;
	db_updateOneAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_updateOneAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_updateOneAccount_user_user_Post_take?: number;
	db_updateOneAccount_user_user_Post_skip?: number;
	db_updateOneAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_updateOneAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_updateOneAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_updateOneAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_updateOneAccount_user_user_Todo_take?: number;
	db_updateOneAccount_user_user_Todo_skip?: number;
	db_updateOneAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpdateOnePostInput {
	data: db_PostUpdateInput;
	where: db_PostWhereUniqueInput;
	db_updateOnePost_author_author_accounts_where?: db_AccountWhereInput;
	db_updateOnePost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_updateOnePost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_updateOnePost_author_author_accounts_take?: number;
	db_updateOnePost_author_author_accounts_skip?: number;
	db_updateOnePost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_updateOnePost_author_author_sessions_where?: db_SessionWhereInput;
	db_updateOnePost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_updateOnePost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_updateOnePost_author_author_sessions_take?: number;
	db_updateOnePost_author_author_sessions_skip?: number;
	db_updateOnePost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_updateOnePost_author_author_Todo_where?: db_TodoWhereInput;
	db_updateOnePost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_updateOnePost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_updateOnePost_author_author_Todo_take?: number;
	db_updateOnePost_author_author_Todo_skip?: number;
	db_updateOnePost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpdateOneSessionInput {
	data: db_SessionUpdateInput;
	where: db_SessionWhereUniqueInput;
	db_updateOneSession_user_user_accounts_where?: db_AccountWhereInput;
	db_updateOneSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_updateOneSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_updateOneSession_user_user_accounts_take?: number;
	db_updateOneSession_user_user_accounts_skip?: number;
	db_updateOneSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_updateOneSession_user_user_Post_where?: db_PostWhereInput;
	db_updateOneSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_updateOneSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_updateOneSession_user_user_Post_take?: number;
	db_updateOneSession_user_user_Post_skip?: number;
	db_updateOneSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_updateOneSession_user_user_Todo_where?: db_TodoWhereInput;
	db_updateOneSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_updateOneSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_updateOneSession_user_user_Todo_take?: number;
	db_updateOneSession_user_user_Todo_skip?: number;
	db_updateOneSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpdateOneTodoInput {
	data: db_TodoUpdateInput;
	where: db_TodoWhereUniqueInput;
	db_updateOneTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_updateOneTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_updateOneTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_updateOneTodo_user_user_accounts_take?: number;
	db_updateOneTodo_user_user_accounts_skip?: number;
	db_updateOneTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_updateOneTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_updateOneTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_updateOneTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_updateOneTodo_user_user_sessions_take?: number;
	db_updateOneTodo_user_user_sessions_skip?: number;
	db_updateOneTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_updateOneTodo_user_user_Post_where?: db_PostWhereInput;
	db_updateOneTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_updateOneTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_updateOneTodo_user_user_Post_take?: number;
	db_updateOneTodo_user_user_Post_skip?: number;
	db_updateOneTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbUpdateOneUserInput {
	data: db_UserUpdateInput;
	where: db_UserWhereUniqueInput;
	db_updateOneUser_accounts_where?: db_AccountWhereInput;
	db_updateOneUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_updateOneUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_updateOneUser_accounts_take?: number;
	db_updateOneUser_accounts_skip?: number;
	db_updateOneUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_updateOneUser_sessions_where?: db_SessionWhereInput;
	db_updateOneUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_updateOneUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_updateOneUser_sessions_take?: number;
	db_updateOneUser_sessions_skip?: number;
	db_updateOneUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_updateOneUser_Post_where?: db_PostWhereInput;
	db_updateOneUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_updateOneUser_Post_cursor?: db_PostWhereUniqueInput;
	db_updateOneUser_Post_take?: number;
	db_updateOneUser_Post_skip?: number;
	db_updateOneUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_updateOneUser_Todo_where?: db_TodoWhereInput;
	db_updateOneUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_updateOneUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_updateOneUser_Todo_take?: number;
	db_updateOneUser_Todo_skip?: number;
	db_updateOneUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpdateOneVerificationTokenInput {
	data: db_VerificationTokenUpdateInput;
	where: db_VerificationTokenWhereUniqueInput;
}

export interface DbUpsertOneAccountInput {
	where: db_AccountWhereUniqueInput;
	create: db_AccountCreateInput;
	update: db_AccountUpdateInput;
	db_upsertOneAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_upsertOneAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_upsertOneAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_upsertOneAccount_user_user_sessions_take?: number;
	db_upsertOneAccount_user_user_sessions_skip?: number;
	db_upsertOneAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_upsertOneAccount_user_user_Post_where?: db_PostWhereInput;
	db_upsertOneAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_upsertOneAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_upsertOneAccount_user_user_Post_take?: number;
	db_upsertOneAccount_user_user_Post_skip?: number;
	db_upsertOneAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_upsertOneAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_upsertOneAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_upsertOneAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_upsertOneAccount_user_user_Todo_take?: number;
	db_upsertOneAccount_user_user_Todo_skip?: number;
	db_upsertOneAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpsertOnePostInput {
	where: db_PostWhereUniqueInput;
	create: db_PostCreateInput;
	update: db_PostUpdateInput;
	db_upsertOnePost_author_author_accounts_where?: db_AccountWhereInput;
	db_upsertOnePost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_upsertOnePost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_upsertOnePost_author_author_accounts_take?: number;
	db_upsertOnePost_author_author_accounts_skip?: number;
	db_upsertOnePost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_upsertOnePost_author_author_sessions_where?: db_SessionWhereInput;
	db_upsertOnePost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_upsertOnePost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_upsertOnePost_author_author_sessions_take?: number;
	db_upsertOnePost_author_author_sessions_skip?: number;
	db_upsertOnePost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_upsertOnePost_author_author_Todo_where?: db_TodoWhereInput;
	db_upsertOnePost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_upsertOnePost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_upsertOnePost_author_author_Todo_take?: number;
	db_upsertOnePost_author_author_Todo_skip?: number;
	db_upsertOnePost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpsertOneSessionInput {
	where: db_SessionWhereUniqueInput;
	create: db_SessionCreateInput;
	update: db_SessionUpdateInput;
	db_upsertOneSession_user_user_accounts_where?: db_AccountWhereInput;
	db_upsertOneSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_upsertOneSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_upsertOneSession_user_user_accounts_take?: number;
	db_upsertOneSession_user_user_accounts_skip?: number;
	db_upsertOneSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_upsertOneSession_user_user_Post_where?: db_PostWhereInput;
	db_upsertOneSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_upsertOneSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_upsertOneSession_user_user_Post_take?: number;
	db_upsertOneSession_user_user_Post_skip?: number;
	db_upsertOneSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_upsertOneSession_user_user_Todo_where?: db_TodoWhereInput;
	db_upsertOneSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_upsertOneSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_upsertOneSession_user_user_Todo_take?: number;
	db_upsertOneSession_user_user_Todo_skip?: number;
	db_upsertOneSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpsertOneTodoInput {
	where: db_TodoWhereUniqueInput;
	create: db_TodoCreateInput;
	update: db_TodoUpdateInput;
	db_upsertOneTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_upsertOneTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_upsertOneTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_upsertOneTodo_user_user_accounts_take?: number;
	db_upsertOneTodo_user_user_accounts_skip?: number;
	db_upsertOneTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_upsertOneTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_upsertOneTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_upsertOneTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_upsertOneTodo_user_user_sessions_take?: number;
	db_upsertOneTodo_user_user_sessions_skip?: number;
	db_upsertOneTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_upsertOneTodo_user_user_Post_where?: db_PostWhereInput;
	db_upsertOneTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_upsertOneTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_upsertOneTodo_user_user_Post_take?: number;
	db_upsertOneTodo_user_user_Post_skip?: number;
	db_upsertOneTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbUpsertOneUserInput {
	where: db_UserWhereUniqueInput;
	create: db_UserCreateInput;
	update: db_UserUpdateInput;
	db_upsertOneUser_accounts_where?: db_AccountWhereInput;
	db_upsertOneUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_upsertOneUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_upsertOneUser_accounts_take?: number;
	db_upsertOneUser_accounts_skip?: number;
	db_upsertOneUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_upsertOneUser_sessions_where?: db_SessionWhereInput;
	db_upsertOneUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_upsertOneUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_upsertOneUser_sessions_take?: number;
	db_upsertOneUser_sessions_skip?: number;
	db_upsertOneUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_upsertOneUser_Post_where?: db_PostWhereInput;
	db_upsertOneUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_upsertOneUser_Post_cursor?: db_PostWhereUniqueInput;
	db_upsertOneUser_Post_take?: number;
	db_upsertOneUser_Post_skip?: number;
	db_upsertOneUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_upsertOneUser_Todo_where?: db_TodoWhereInput;
	db_upsertOneUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_upsertOneUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_upsertOneUser_Todo_take?: number;
	db_upsertOneUser_Todo_skip?: number;
	db_upsertOneUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpsertOneVerificationTokenInput {
	where: db_VerificationTokenWhereUniqueInput;
	create: db_VerificationTokenCreateInput;
	update: db_VerificationTokenUpdateInput;
}

export interface TodosAddTodoInput {
	text: string;
	userId: string;
}

export interface TodosGetAllTodosForCurrentUserInput {
	userId: string;
}

export interface TodosUpdateTodoInput {
	id: string;
	text: string;
	isCompleted: boolean;
}

export interface WeatherGetCityByIdInput {
	config?: weather_ConfigInput;
	id?: string[];
}

export interface WeatherGetCityByNameInput {
	config?: weather_ConfigInput;
	country?: string;
	name: string;
}

export type OpenaiExtract_website_metadataInput = ExtractInput<typeof function_OpenaiExtract_website_metadata>;

export type OpenaiLoad_urlInput = ExtractInput<typeof function_OpenaiLoad_url>;

export type OpenaiSummarize_url_contentInput = ExtractInput<typeof function_OpenaiSummarize_url_content>;

export type OpenaiSummaryInput = ExtractInput<typeof function_OpenaiSummary>;

export type OpenaiWeatherInput = ExtractInput<typeof function_OpenaiWeather>;

export type UsersGetInput = ExtractInput<typeof function_UsersGet>;

export type UsersSubscribeInput = ExtractInput<typeof function_UsersSubscribe>;

export type UsersUpdateInput = ExtractInput<typeof function_UsersUpdate>;

export interface CountriesContinentInputInternal {
	code: string;
	countries_continent_countries_countries_name_lang?: string;
}

export interface CountriesContinentsInputInternal {
	filter?: countries_ContinentFilterInput;
	countries_continents_countries_countries_name_lang?: string;
}

export interface CountriesCountriesInputInternal {
	filter?: countries_CountryFilterInput;
	countries_countries_name_lang?: string;
}

export interface CountriesCountryInputInternal {
	code: string;
	countries_country_name_lang?: string;
}

export interface CountriesCountryByCodeInputInternal {
	code: string;
}

export interface CountriesLanguageInputInternal {
	code: string;
}

export interface CountriesLanguagesInputInternal {
	filter?: countries_LanguageFilterInput;
}

export interface DbAggregateAccountInputInternal {
	where?: db_AccountWhereInput;
	orderBy?: db_AccountOrderByWithRelationInput[];
	cursor?: db_AccountWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbAggregatePostInputInternal {
	where?: db_PostWhereInput;
	orderBy?: db_PostOrderByWithRelationInput[];
	cursor?: db_PostWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbAggregateSessionInputInternal {
	where?: db_SessionWhereInput;
	orderBy?: db_SessionOrderByWithRelationInput[];
	cursor?: db_SessionWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbAggregateTodoInputInternal {
	where?: db_TodoWhereInput;
	orderBy?: db_TodoOrderByWithRelationInput[];
	cursor?: db_TodoWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbAggregateUserInputInternal {
	where?: db_UserWhereInput;
	orderBy?: db_UserOrderByWithRelationInput[];
	cursor?: db_UserWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbAggregateVerificationTokenInputInternal {
	where?: db_VerificationTokenWhereInput;
	orderBy?: db_VerificationTokenOrderByWithRelationInput[];
	cursor?: db_VerificationTokenWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbCreateManyAccountInputInternal {
	data: db_AccountCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateManyPostInputInternal {
	data: db_PostCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateManySessionInputInternal {
	data: db_SessionCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateManyTodoInputInternal {
	data: db_TodoCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateManyUserInputInternal {
	data: db_UserCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateManyVerificationTokenInputInternal {
	data: db_VerificationTokenCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateOneAccountInputInternal {
	data: db_AccountCreateInput;
	db_createOneAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_createOneAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_createOneAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_createOneAccount_user_user_sessions_take?: number;
	db_createOneAccount_user_user_sessions_skip?: number;
	db_createOneAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_createOneAccount_user_user_Post_where?: db_PostWhereInput;
	db_createOneAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_createOneAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_createOneAccount_user_user_Post_take?: number;
	db_createOneAccount_user_user_Post_skip?: number;
	db_createOneAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_createOneAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_createOneAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_createOneAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_createOneAccount_user_user_Todo_take?: number;
	db_createOneAccount_user_user_Todo_skip?: number;
	db_createOneAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbCreateOnePostInputInternal {
	data: db_PostCreateInput;
	db_createOnePost_author_author_accounts_where?: db_AccountWhereInput;
	db_createOnePost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_createOnePost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_createOnePost_author_author_accounts_take?: number;
	db_createOnePost_author_author_accounts_skip?: number;
	db_createOnePost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_createOnePost_author_author_sessions_where?: db_SessionWhereInput;
	db_createOnePost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_createOnePost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_createOnePost_author_author_sessions_take?: number;
	db_createOnePost_author_author_sessions_skip?: number;
	db_createOnePost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_createOnePost_author_author_Todo_where?: db_TodoWhereInput;
	db_createOnePost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_createOnePost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_createOnePost_author_author_Todo_take?: number;
	db_createOnePost_author_author_Todo_skip?: number;
	db_createOnePost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbCreateOneSessionInputInternal {
	data: db_SessionCreateInput;
	db_createOneSession_user_user_accounts_where?: db_AccountWhereInput;
	db_createOneSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_createOneSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_createOneSession_user_user_accounts_take?: number;
	db_createOneSession_user_user_accounts_skip?: number;
	db_createOneSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_createOneSession_user_user_Post_where?: db_PostWhereInput;
	db_createOneSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_createOneSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_createOneSession_user_user_Post_take?: number;
	db_createOneSession_user_user_Post_skip?: number;
	db_createOneSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_createOneSession_user_user_Todo_where?: db_TodoWhereInput;
	db_createOneSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_createOneSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_createOneSession_user_user_Todo_take?: number;
	db_createOneSession_user_user_Todo_skip?: number;
	db_createOneSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbCreateOneTodoInputInternal {
	data: db_TodoCreateInput;
	db_createOneTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_createOneTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_createOneTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_createOneTodo_user_user_accounts_take?: number;
	db_createOneTodo_user_user_accounts_skip?: number;
	db_createOneTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_createOneTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_createOneTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_createOneTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_createOneTodo_user_user_sessions_take?: number;
	db_createOneTodo_user_user_sessions_skip?: number;
	db_createOneTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_createOneTodo_user_user_Post_where?: db_PostWhereInput;
	db_createOneTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_createOneTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_createOneTodo_user_user_Post_take?: number;
	db_createOneTodo_user_user_Post_skip?: number;
	db_createOneTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbCreateOneUserInputInternal {
	data: db_UserCreateInput;
	db_createOneUser_accounts_where?: db_AccountWhereInput;
	db_createOneUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_createOneUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_createOneUser_accounts_take?: number;
	db_createOneUser_accounts_skip?: number;
	db_createOneUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_createOneUser_sessions_where?: db_SessionWhereInput;
	db_createOneUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_createOneUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_createOneUser_sessions_take?: number;
	db_createOneUser_sessions_skip?: number;
	db_createOneUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_createOneUser_Post_where?: db_PostWhereInput;
	db_createOneUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_createOneUser_Post_cursor?: db_PostWhereUniqueInput;
	db_createOneUser_Post_take?: number;
	db_createOneUser_Post_skip?: number;
	db_createOneUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_createOneUser_Todo_where?: db_TodoWhereInput;
	db_createOneUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_createOneUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_createOneUser_Todo_take?: number;
	db_createOneUser_Todo_skip?: number;
	db_createOneUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbCreateOneVerificationTokenInputInternal {
	data: db_VerificationTokenCreateInput;
}

export interface DbDeleteManyAccountInputInternal {
	where?: db_AccountWhereInput;
}

export interface DbDeleteManyPostInputInternal {
	where?: db_PostWhereInput;
}

export interface DbDeleteManySessionInputInternal {
	where?: db_SessionWhereInput;
}

export interface DbDeleteManyTodoInputInternal {
	where?: db_TodoWhereInput;
}

export interface DbDeleteManyUserInputInternal {
	where?: db_UserWhereInput;
}

export interface DbDeleteManyVerificationTokenInputInternal {
	where?: db_VerificationTokenWhereInput;
}

export interface DbDeleteOneAccountInputInternal {
	where: db_AccountWhereUniqueInput;
	db_deleteOneAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_deleteOneAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_deleteOneAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_deleteOneAccount_user_user_sessions_take?: number;
	db_deleteOneAccount_user_user_sessions_skip?: number;
	db_deleteOneAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_deleteOneAccount_user_user_Post_where?: db_PostWhereInput;
	db_deleteOneAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_deleteOneAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_deleteOneAccount_user_user_Post_take?: number;
	db_deleteOneAccount_user_user_Post_skip?: number;
	db_deleteOneAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_deleteOneAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_deleteOneAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_deleteOneAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_deleteOneAccount_user_user_Todo_take?: number;
	db_deleteOneAccount_user_user_Todo_skip?: number;
	db_deleteOneAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbDeleteOnePostInputInternal {
	where: db_PostWhereUniqueInput;
	db_deleteOnePost_author_author_accounts_where?: db_AccountWhereInput;
	db_deleteOnePost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_deleteOnePost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_deleteOnePost_author_author_accounts_take?: number;
	db_deleteOnePost_author_author_accounts_skip?: number;
	db_deleteOnePost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_deleteOnePost_author_author_sessions_where?: db_SessionWhereInput;
	db_deleteOnePost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_deleteOnePost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_deleteOnePost_author_author_sessions_take?: number;
	db_deleteOnePost_author_author_sessions_skip?: number;
	db_deleteOnePost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_deleteOnePost_author_author_Todo_where?: db_TodoWhereInput;
	db_deleteOnePost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_deleteOnePost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_deleteOnePost_author_author_Todo_take?: number;
	db_deleteOnePost_author_author_Todo_skip?: number;
	db_deleteOnePost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbDeleteOneSessionInputInternal {
	where: db_SessionWhereUniqueInput;
	db_deleteOneSession_user_user_accounts_where?: db_AccountWhereInput;
	db_deleteOneSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_deleteOneSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_deleteOneSession_user_user_accounts_take?: number;
	db_deleteOneSession_user_user_accounts_skip?: number;
	db_deleteOneSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_deleteOneSession_user_user_Post_where?: db_PostWhereInput;
	db_deleteOneSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_deleteOneSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_deleteOneSession_user_user_Post_take?: number;
	db_deleteOneSession_user_user_Post_skip?: number;
	db_deleteOneSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_deleteOneSession_user_user_Todo_where?: db_TodoWhereInput;
	db_deleteOneSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_deleteOneSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_deleteOneSession_user_user_Todo_take?: number;
	db_deleteOneSession_user_user_Todo_skip?: number;
	db_deleteOneSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbDeleteOneTodoInputInternal {
	where: db_TodoWhereUniqueInput;
	db_deleteOneTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_deleteOneTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_deleteOneTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_deleteOneTodo_user_user_accounts_take?: number;
	db_deleteOneTodo_user_user_accounts_skip?: number;
	db_deleteOneTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_deleteOneTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_deleteOneTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_deleteOneTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_deleteOneTodo_user_user_sessions_take?: number;
	db_deleteOneTodo_user_user_sessions_skip?: number;
	db_deleteOneTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_deleteOneTodo_user_user_Post_where?: db_PostWhereInput;
	db_deleteOneTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_deleteOneTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_deleteOneTodo_user_user_Post_take?: number;
	db_deleteOneTodo_user_user_Post_skip?: number;
	db_deleteOneTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbDeleteOneUserInputInternal {
	where: db_UserWhereUniqueInput;
	db_deleteOneUser_accounts_where?: db_AccountWhereInput;
	db_deleteOneUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_deleteOneUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_deleteOneUser_accounts_take?: number;
	db_deleteOneUser_accounts_skip?: number;
	db_deleteOneUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_deleteOneUser_sessions_where?: db_SessionWhereInput;
	db_deleteOneUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_deleteOneUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_deleteOneUser_sessions_take?: number;
	db_deleteOneUser_sessions_skip?: number;
	db_deleteOneUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_deleteOneUser_Post_where?: db_PostWhereInput;
	db_deleteOneUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_deleteOneUser_Post_cursor?: db_PostWhereUniqueInput;
	db_deleteOneUser_Post_take?: number;
	db_deleteOneUser_Post_skip?: number;
	db_deleteOneUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_deleteOneUser_Todo_where?: db_TodoWhereInput;
	db_deleteOneUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_deleteOneUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_deleteOneUser_Todo_take?: number;
	db_deleteOneUser_Todo_skip?: number;
	db_deleteOneUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbDeleteOneVerificationTokenInputInternal {
	where: db_VerificationTokenWhereUniqueInput;
}

export interface DbExecuteRawInputInternal {
	query: string;
	parameters?: string[];
}

export interface DbFindFirstAccountInputInternal {
	where?: db_AccountWhereInput;
	orderBy?: db_AccountOrderByWithRelationInput[];
	cursor?: db_AccountWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_findFirstAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstAccount_user_user_sessions_take?: number;
	db_findFirstAccount_user_user_sessions_skip?: number;
	db_findFirstAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstAccount_user_user_Post_where?: db_PostWhereInput;
	db_findFirstAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstAccount_user_user_Post_take?: number;
	db_findFirstAccount_user_user_Post_skip?: number;
	db_findFirstAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_findFirstAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstAccount_user_user_Todo_take?: number;
	db_findFirstAccount_user_user_Todo_skip?: number;
	db_findFirstAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstAccountOrThrowInputInternal {
	where?: db_AccountWhereInput;
	orderBy?: db_AccountOrderByWithRelationInput[];
	cursor?: db_AccountWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstAccountOrThrow_user_user_sessions_where?: db_SessionWhereInput;
	db_findFirstAccountOrThrow_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstAccountOrThrow_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstAccountOrThrow_user_user_sessions_take?: number;
	db_findFirstAccountOrThrow_user_user_sessions_skip?: number;
	db_findFirstAccountOrThrow_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstAccountOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findFirstAccountOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstAccountOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstAccountOrThrow_user_user_Post_take?: number;
	db_findFirstAccountOrThrow_user_user_Post_skip?: number;
	db_findFirstAccountOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstAccountOrThrow_user_user_Todo_where?: db_TodoWhereInput;
	db_findFirstAccountOrThrow_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstAccountOrThrow_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstAccountOrThrow_user_user_Todo_take?: number;
	db_findFirstAccountOrThrow_user_user_Todo_skip?: number;
	db_findFirstAccountOrThrow_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstPostInputInternal {
	where?: db_PostWhereInput;
	orderBy?: db_PostOrderByWithRelationInput[];
	cursor?: db_PostWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstPost_author_author_accounts_where?: db_AccountWhereInput;
	db_findFirstPost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstPost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstPost_author_author_accounts_take?: number;
	db_findFirstPost_author_author_accounts_skip?: number;
	db_findFirstPost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstPost_author_author_sessions_where?: db_SessionWhereInput;
	db_findFirstPost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstPost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstPost_author_author_sessions_take?: number;
	db_findFirstPost_author_author_sessions_skip?: number;
	db_findFirstPost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstPost_author_author_Todo_where?: db_TodoWhereInput;
	db_findFirstPost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstPost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstPost_author_author_Todo_take?: number;
	db_findFirstPost_author_author_Todo_skip?: number;
	db_findFirstPost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstPostOrThrowInputInternal {
	where?: db_PostWhereInput;
	orderBy?: db_PostOrderByWithRelationInput[];
	cursor?: db_PostWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstPostOrThrow_author_author_accounts_where?: db_AccountWhereInput;
	db_findFirstPostOrThrow_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstPostOrThrow_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstPostOrThrow_author_author_accounts_take?: number;
	db_findFirstPostOrThrow_author_author_accounts_skip?: number;
	db_findFirstPostOrThrow_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstPostOrThrow_author_author_sessions_where?: db_SessionWhereInput;
	db_findFirstPostOrThrow_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstPostOrThrow_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstPostOrThrow_author_author_sessions_take?: number;
	db_findFirstPostOrThrow_author_author_sessions_skip?: number;
	db_findFirstPostOrThrow_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstPostOrThrow_author_author_Todo_where?: db_TodoWhereInput;
	db_findFirstPostOrThrow_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstPostOrThrow_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstPostOrThrow_author_author_Todo_take?: number;
	db_findFirstPostOrThrow_author_author_Todo_skip?: number;
	db_findFirstPostOrThrow_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstSessionInputInternal {
	where?: db_SessionWhereInput;
	orderBy?: db_SessionOrderByWithRelationInput[];
	cursor?: db_SessionWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstSession_user_user_accounts_where?: db_AccountWhereInput;
	db_findFirstSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstSession_user_user_accounts_take?: number;
	db_findFirstSession_user_user_accounts_skip?: number;
	db_findFirstSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstSession_user_user_Post_where?: db_PostWhereInput;
	db_findFirstSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstSession_user_user_Post_take?: number;
	db_findFirstSession_user_user_Post_skip?: number;
	db_findFirstSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstSession_user_user_Todo_where?: db_TodoWhereInput;
	db_findFirstSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstSession_user_user_Todo_take?: number;
	db_findFirstSession_user_user_Todo_skip?: number;
	db_findFirstSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstSessionOrThrowInputInternal {
	where?: db_SessionWhereInput;
	orderBy?: db_SessionOrderByWithRelationInput[];
	cursor?: db_SessionWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstSessionOrThrow_user_user_accounts_where?: db_AccountWhereInput;
	db_findFirstSessionOrThrow_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstSessionOrThrow_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstSessionOrThrow_user_user_accounts_take?: number;
	db_findFirstSessionOrThrow_user_user_accounts_skip?: number;
	db_findFirstSessionOrThrow_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstSessionOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findFirstSessionOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstSessionOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstSessionOrThrow_user_user_Post_take?: number;
	db_findFirstSessionOrThrow_user_user_Post_skip?: number;
	db_findFirstSessionOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstSessionOrThrow_user_user_Todo_where?: db_TodoWhereInput;
	db_findFirstSessionOrThrow_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstSessionOrThrow_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstSessionOrThrow_user_user_Todo_take?: number;
	db_findFirstSessionOrThrow_user_user_Todo_skip?: number;
	db_findFirstSessionOrThrow_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstTodoInputInternal {
	where?: db_TodoWhereInput;
	orderBy?: db_TodoOrderByWithRelationInput[];
	cursor?: db_TodoWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_TodoScalarFieldEnumValues[];
	db_findFirstTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_findFirstTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstTodo_user_user_accounts_take?: number;
	db_findFirstTodo_user_user_accounts_skip?: number;
	db_findFirstTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_findFirstTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstTodo_user_user_sessions_take?: number;
	db_findFirstTodo_user_user_sessions_skip?: number;
	db_findFirstTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstTodo_user_user_Post_where?: db_PostWhereInput;
	db_findFirstTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstTodo_user_user_Post_take?: number;
	db_findFirstTodo_user_user_Post_skip?: number;
	db_findFirstTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbFindFirstTodoOrThrowInputInternal {
	where?: db_TodoWhereInput;
	orderBy?: db_TodoOrderByWithRelationInput[];
	cursor?: db_TodoWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_TodoScalarFieldEnumValues[];
	db_findFirstTodoOrThrow_user_user_accounts_where?: db_AccountWhereInput;
	db_findFirstTodoOrThrow_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstTodoOrThrow_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstTodoOrThrow_user_user_accounts_take?: number;
	db_findFirstTodoOrThrow_user_user_accounts_skip?: number;
	db_findFirstTodoOrThrow_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstTodoOrThrow_user_user_sessions_where?: db_SessionWhereInput;
	db_findFirstTodoOrThrow_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstTodoOrThrow_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstTodoOrThrow_user_user_sessions_take?: number;
	db_findFirstTodoOrThrow_user_user_sessions_skip?: number;
	db_findFirstTodoOrThrow_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstTodoOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findFirstTodoOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstTodoOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstTodoOrThrow_user_user_Post_take?: number;
	db_findFirstTodoOrThrow_user_user_Post_skip?: number;
	db_findFirstTodoOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbFindFirstUserInputInternal {
	where?: db_UserWhereInput;
	orderBy?: db_UserOrderByWithRelationInput[];
	cursor?: db_UserWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_UserScalarFieldEnumValues[];
	db_findFirstUser_accounts_where?: db_AccountWhereInput;
	db_findFirstUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstUser_accounts_take?: number;
	db_findFirstUser_accounts_skip?: number;
	db_findFirstUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstUser_sessions_where?: db_SessionWhereInput;
	db_findFirstUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstUser_sessions_take?: number;
	db_findFirstUser_sessions_skip?: number;
	db_findFirstUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstUser_Post_where?: db_PostWhereInput;
	db_findFirstUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstUser_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstUser_Post_take?: number;
	db_findFirstUser_Post_skip?: number;
	db_findFirstUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstUser_Todo_where?: db_TodoWhereInput;
	db_findFirstUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstUser_Todo_take?: number;
	db_findFirstUser_Todo_skip?: number;
	db_findFirstUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstUserOrThrowInputInternal {
	where?: db_UserWhereInput;
	orderBy?: db_UserOrderByWithRelationInput[];
	cursor?: db_UserWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_UserScalarFieldEnumValues[];
	db_findFirstUserOrThrow_accounts_where?: db_AccountWhereInput;
	db_findFirstUserOrThrow_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstUserOrThrow_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstUserOrThrow_accounts_take?: number;
	db_findFirstUserOrThrow_accounts_skip?: number;
	db_findFirstUserOrThrow_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstUserOrThrow_sessions_where?: db_SessionWhereInput;
	db_findFirstUserOrThrow_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstUserOrThrow_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstUserOrThrow_sessions_take?: number;
	db_findFirstUserOrThrow_sessions_skip?: number;
	db_findFirstUserOrThrow_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstUserOrThrow_Post_where?: db_PostWhereInput;
	db_findFirstUserOrThrow_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstUserOrThrow_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstUserOrThrow_Post_take?: number;
	db_findFirstUserOrThrow_Post_skip?: number;
	db_findFirstUserOrThrow_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstUserOrThrow_Todo_where?: db_TodoWhereInput;
	db_findFirstUserOrThrow_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstUserOrThrow_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstUserOrThrow_Todo_take?: number;
	db_findFirstUserOrThrow_Todo_skip?: number;
	db_findFirstUserOrThrow_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstVerificationTokenInputInternal {
	where?: db_VerificationTokenWhereInput;
	orderBy?: db_VerificationTokenOrderByWithRelationInput[];
	cursor?: db_VerificationTokenWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_VerificationTokenScalarFieldEnumValues[];
}

export interface DbFindFirstVerificationTokenOrThrowInputInternal {
	where?: db_VerificationTokenWhereInput;
	orderBy?: db_VerificationTokenOrderByWithRelationInput[];
	cursor?: db_VerificationTokenWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_VerificationTokenScalarFieldEnumValues[];
}

export interface DbFindManyAccountInputInternal {
	where?: db_AccountWhereInput;
	orderBy?: db_AccountOrderByWithRelationInput[];
	cursor?: db_AccountWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_AccountScalarFieldEnumValues[];
	db_findManyAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_findManyAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findManyAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findManyAccount_user_user_sessions_take?: number;
	db_findManyAccount_user_user_sessions_skip?: number;
	db_findManyAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findManyAccount_user_user_Post_where?: db_PostWhereInput;
	db_findManyAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findManyAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findManyAccount_user_user_Post_take?: number;
	db_findManyAccount_user_user_Post_skip?: number;
	db_findManyAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findManyAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_findManyAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findManyAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findManyAccount_user_user_Todo_take?: number;
	db_findManyAccount_user_user_Todo_skip?: number;
	db_findManyAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindManyPostInputInternal {
	where?: db_PostWhereInput;
	orderBy?: db_PostOrderByWithRelationInput[];
	cursor?: db_PostWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_PostScalarFieldEnumValues[];
	db_findManyPost_author_author_accounts_where?: db_AccountWhereInput;
	db_findManyPost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findManyPost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findManyPost_author_author_accounts_take?: number;
	db_findManyPost_author_author_accounts_skip?: number;
	db_findManyPost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findManyPost_author_author_sessions_where?: db_SessionWhereInput;
	db_findManyPost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findManyPost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findManyPost_author_author_sessions_take?: number;
	db_findManyPost_author_author_sessions_skip?: number;
	db_findManyPost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findManyPost_author_author_Todo_where?: db_TodoWhereInput;
	db_findManyPost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findManyPost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findManyPost_author_author_Todo_take?: number;
	db_findManyPost_author_author_Todo_skip?: number;
	db_findManyPost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindManySessionInputInternal {
	where?: db_SessionWhereInput;
	orderBy?: db_SessionOrderByWithRelationInput[];
	cursor?: db_SessionWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_SessionScalarFieldEnumValues[];
	db_findManySession_user_user_accounts_where?: db_AccountWhereInput;
	db_findManySession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findManySession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findManySession_user_user_accounts_take?: number;
	db_findManySession_user_user_accounts_skip?: number;
	db_findManySession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findManySession_user_user_Post_where?: db_PostWhereInput;
	db_findManySession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findManySession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findManySession_user_user_Post_take?: number;
	db_findManySession_user_user_Post_skip?: number;
	db_findManySession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findManySession_user_user_Todo_where?: db_TodoWhereInput;
	db_findManySession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findManySession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findManySession_user_user_Todo_take?: number;
	db_findManySession_user_user_Todo_skip?: number;
	db_findManySession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindManyTodoInputInternal {
	where?: db_TodoWhereInput;
	orderBy?: db_TodoOrderByWithRelationInput[];
	cursor?: db_TodoWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_TodoScalarFieldEnumValues[];
	db_findManyTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_findManyTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findManyTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findManyTodo_user_user_accounts_take?: number;
	db_findManyTodo_user_user_accounts_skip?: number;
	db_findManyTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findManyTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_findManyTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findManyTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findManyTodo_user_user_sessions_take?: number;
	db_findManyTodo_user_user_sessions_skip?: number;
	db_findManyTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findManyTodo_user_user_Post_where?: db_PostWhereInput;
	db_findManyTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findManyTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findManyTodo_user_user_Post_take?: number;
	db_findManyTodo_user_user_Post_skip?: number;
	db_findManyTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbFindManyUserInputInternal {
	where?: db_UserWhereInput;
	orderBy?: db_UserOrderByWithRelationInput[];
	cursor?: db_UserWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_UserScalarFieldEnumValues[];
	db_findManyUser_accounts_where?: db_AccountWhereInput;
	db_findManyUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findManyUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findManyUser_accounts_take?: number;
	db_findManyUser_accounts_skip?: number;
	db_findManyUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findManyUser_sessions_where?: db_SessionWhereInput;
	db_findManyUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findManyUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findManyUser_sessions_take?: number;
	db_findManyUser_sessions_skip?: number;
	db_findManyUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findManyUser_Post_where?: db_PostWhereInput;
	db_findManyUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findManyUser_Post_cursor?: db_PostWhereUniqueInput;
	db_findManyUser_Post_take?: number;
	db_findManyUser_Post_skip?: number;
	db_findManyUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findManyUser_Todo_where?: db_TodoWhereInput;
	db_findManyUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findManyUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findManyUser_Todo_take?: number;
	db_findManyUser_Todo_skip?: number;
	db_findManyUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindManyVerificationTokenInputInternal {
	where?: db_VerificationTokenWhereInput;
	orderBy?: db_VerificationTokenOrderByWithRelationInput[];
	cursor?: db_VerificationTokenWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_VerificationTokenScalarFieldEnumValues[];
}

export interface DbFindUniqueAccountInputInternal {
	where: db_AccountWhereUniqueInput;
	db_findUniqueAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_findUniqueAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueAccount_user_user_sessions_take?: number;
	db_findUniqueAccount_user_user_sessions_skip?: number;
	db_findUniqueAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueAccount_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueAccount_user_user_Post_take?: number;
	db_findUniqueAccount_user_user_Post_skip?: number;
	db_findUniqueAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_findUniqueAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueAccount_user_user_Todo_take?: number;
	db_findUniqueAccount_user_user_Todo_skip?: number;
	db_findUniqueAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueAccountOrThrowInputInternal {
	where: db_AccountWhereUniqueInput;
	db_findUniqueAccountOrThrow_user_user_sessions_where?: db_SessionWhereInput;
	db_findUniqueAccountOrThrow_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueAccountOrThrow_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueAccountOrThrow_user_user_sessions_take?: number;
	db_findUniqueAccountOrThrow_user_user_sessions_skip?: number;
	db_findUniqueAccountOrThrow_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueAccountOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueAccountOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueAccountOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueAccountOrThrow_user_user_Post_take?: number;
	db_findUniqueAccountOrThrow_user_user_Post_skip?: number;
	db_findUniqueAccountOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueAccountOrThrow_user_user_Todo_where?: db_TodoWhereInput;
	db_findUniqueAccountOrThrow_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueAccountOrThrow_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueAccountOrThrow_user_user_Todo_take?: number;
	db_findUniqueAccountOrThrow_user_user_Todo_skip?: number;
	db_findUniqueAccountOrThrow_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniquePostInputInternal {
	where: db_PostWhereUniqueInput;
	db_findUniquePost_author_author_accounts_where?: db_AccountWhereInput;
	db_findUniquePost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniquePost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniquePost_author_author_accounts_take?: number;
	db_findUniquePost_author_author_accounts_skip?: number;
	db_findUniquePost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniquePost_author_author_sessions_where?: db_SessionWhereInput;
	db_findUniquePost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniquePost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniquePost_author_author_sessions_take?: number;
	db_findUniquePost_author_author_sessions_skip?: number;
	db_findUniquePost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniquePost_author_author_Todo_where?: db_TodoWhereInput;
	db_findUniquePost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniquePost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniquePost_author_author_Todo_take?: number;
	db_findUniquePost_author_author_Todo_skip?: number;
	db_findUniquePost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniquePostOrThrowInputInternal {
	where: db_PostWhereUniqueInput;
	db_findUniquePostOrThrow_author_author_accounts_where?: db_AccountWhereInput;
	db_findUniquePostOrThrow_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniquePostOrThrow_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniquePostOrThrow_author_author_accounts_take?: number;
	db_findUniquePostOrThrow_author_author_accounts_skip?: number;
	db_findUniquePostOrThrow_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniquePostOrThrow_author_author_sessions_where?: db_SessionWhereInput;
	db_findUniquePostOrThrow_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniquePostOrThrow_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniquePostOrThrow_author_author_sessions_take?: number;
	db_findUniquePostOrThrow_author_author_sessions_skip?: number;
	db_findUniquePostOrThrow_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniquePostOrThrow_author_author_Todo_where?: db_TodoWhereInput;
	db_findUniquePostOrThrow_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniquePostOrThrow_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniquePostOrThrow_author_author_Todo_take?: number;
	db_findUniquePostOrThrow_author_author_Todo_skip?: number;
	db_findUniquePostOrThrow_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueSessionInputInternal {
	where: db_SessionWhereUniqueInput;
	db_findUniqueSession_user_user_accounts_where?: db_AccountWhereInput;
	db_findUniqueSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueSession_user_user_accounts_take?: number;
	db_findUniqueSession_user_user_accounts_skip?: number;
	db_findUniqueSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueSession_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueSession_user_user_Post_take?: number;
	db_findUniqueSession_user_user_Post_skip?: number;
	db_findUniqueSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueSession_user_user_Todo_where?: db_TodoWhereInput;
	db_findUniqueSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueSession_user_user_Todo_take?: number;
	db_findUniqueSession_user_user_Todo_skip?: number;
	db_findUniqueSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueSessionOrThrowInputInternal {
	where: db_SessionWhereUniqueInput;
	db_findUniqueSessionOrThrow_user_user_accounts_where?: db_AccountWhereInput;
	db_findUniqueSessionOrThrow_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueSessionOrThrow_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueSessionOrThrow_user_user_accounts_take?: number;
	db_findUniqueSessionOrThrow_user_user_accounts_skip?: number;
	db_findUniqueSessionOrThrow_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueSessionOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueSessionOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueSessionOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueSessionOrThrow_user_user_Post_take?: number;
	db_findUniqueSessionOrThrow_user_user_Post_skip?: number;
	db_findUniqueSessionOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueSessionOrThrow_user_user_Todo_where?: db_TodoWhereInput;
	db_findUniqueSessionOrThrow_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueSessionOrThrow_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueSessionOrThrow_user_user_Todo_take?: number;
	db_findUniqueSessionOrThrow_user_user_Todo_skip?: number;
	db_findUniqueSessionOrThrow_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueTodoInputInternal {
	where: db_TodoWhereUniqueInput;
	db_findUniqueTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_findUniqueTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueTodo_user_user_accounts_take?: number;
	db_findUniqueTodo_user_user_accounts_skip?: number;
	db_findUniqueTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_findUniqueTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueTodo_user_user_sessions_take?: number;
	db_findUniqueTodo_user_user_sessions_skip?: number;
	db_findUniqueTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueTodo_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueTodo_user_user_Post_take?: number;
	db_findUniqueTodo_user_user_Post_skip?: number;
	db_findUniqueTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbFindUniqueTodoOrThrowInputInternal {
	where: db_TodoWhereUniqueInput;
	db_findUniqueTodoOrThrow_user_user_accounts_where?: db_AccountWhereInput;
	db_findUniqueTodoOrThrow_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueTodoOrThrow_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueTodoOrThrow_user_user_accounts_take?: number;
	db_findUniqueTodoOrThrow_user_user_accounts_skip?: number;
	db_findUniqueTodoOrThrow_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueTodoOrThrow_user_user_sessions_where?: db_SessionWhereInput;
	db_findUniqueTodoOrThrow_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueTodoOrThrow_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueTodoOrThrow_user_user_sessions_take?: number;
	db_findUniqueTodoOrThrow_user_user_sessions_skip?: number;
	db_findUniqueTodoOrThrow_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueTodoOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueTodoOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueTodoOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueTodoOrThrow_user_user_Post_take?: number;
	db_findUniqueTodoOrThrow_user_user_Post_skip?: number;
	db_findUniqueTodoOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbFindUniqueUserInputInternal {
	where: db_UserWhereUniqueInput;
	db_findUniqueUser_accounts_where?: db_AccountWhereInput;
	db_findUniqueUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueUser_accounts_take?: number;
	db_findUniqueUser_accounts_skip?: number;
	db_findUniqueUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueUser_sessions_where?: db_SessionWhereInput;
	db_findUniqueUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueUser_sessions_take?: number;
	db_findUniqueUser_sessions_skip?: number;
	db_findUniqueUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueUser_Post_where?: db_PostWhereInput;
	db_findUniqueUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueUser_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueUser_Post_take?: number;
	db_findUniqueUser_Post_skip?: number;
	db_findUniqueUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueUser_Todo_where?: db_TodoWhereInput;
	db_findUniqueUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueUser_Todo_take?: number;
	db_findUniqueUser_Todo_skip?: number;
	db_findUniqueUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueUserOrThrowInputInternal {
	where: db_UserWhereUniqueInput;
	db_findUniqueUserOrThrow_accounts_where?: db_AccountWhereInput;
	db_findUniqueUserOrThrow_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueUserOrThrow_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueUserOrThrow_accounts_take?: number;
	db_findUniqueUserOrThrow_accounts_skip?: number;
	db_findUniqueUserOrThrow_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueUserOrThrow_sessions_where?: db_SessionWhereInput;
	db_findUniqueUserOrThrow_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueUserOrThrow_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueUserOrThrow_sessions_take?: number;
	db_findUniqueUserOrThrow_sessions_skip?: number;
	db_findUniqueUserOrThrow_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueUserOrThrow_Post_where?: db_PostWhereInput;
	db_findUniqueUserOrThrow_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueUserOrThrow_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueUserOrThrow_Post_take?: number;
	db_findUniqueUserOrThrow_Post_skip?: number;
	db_findUniqueUserOrThrow_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueUserOrThrow_Todo_where?: db_TodoWhereInput;
	db_findUniqueUserOrThrow_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueUserOrThrow_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueUserOrThrow_Todo_take?: number;
	db_findUniqueUserOrThrow_Todo_skip?: number;
	db_findUniqueUserOrThrow_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueVerificationTokenInputInternal {
	where: db_VerificationTokenWhereUniqueInput;
}

export interface DbFindUniqueVerificationTokenOrThrowInputInternal {
	where: db_VerificationTokenWhereUniqueInput;
}

export interface DbGroupByAccountInputInternal {
	where?: db_AccountWhereInput;
	orderBy?: db_AccountOrderByWithAggregationInput[];
	by: db_AccountScalarFieldEnumValues[];
	having?: db_AccountScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbGroupByPostInputInternal {
	where?: db_PostWhereInput;
	orderBy?: db_PostOrderByWithAggregationInput[];
	by: db_PostScalarFieldEnumValues[];
	having?: db_PostScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbGroupBySessionInputInternal {
	where?: db_SessionWhereInput;
	orderBy?: db_SessionOrderByWithAggregationInput[];
	by: db_SessionScalarFieldEnumValues[];
	having?: db_SessionScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbGroupByTodoInputInternal {
	where?: db_TodoWhereInput;
	orderBy?: db_TodoOrderByWithAggregationInput[];
	by: db_TodoScalarFieldEnumValues[];
	having?: db_TodoScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbGroupByUserInputInternal {
	where?: db_UserWhereInput;
	orderBy?: db_UserOrderByWithAggregationInput[];
	by: db_UserScalarFieldEnumValues[];
	having?: db_UserScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbGroupByVerificationTokenInputInternal {
	where?: db_VerificationTokenWhereInput;
	orderBy?: db_VerificationTokenOrderByWithAggregationInput[];
	by: db_VerificationTokenScalarFieldEnumValues[];
	having?: db_VerificationTokenScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbQueryRawInputInternal {
	query: string;
	parameters?: string[];
}

export interface DbQueryRawJSONInputInternal {
	query: string;
	parameters?: string[];
}

export interface DbUpdateManyAccountInputInternal {
	data: db_AccountUpdateManyMutationInput;
	where?: db_AccountWhereInput;
}

export interface DbUpdateManyPostInputInternal {
	data: db_PostUpdateManyMutationInput;
	where?: db_PostWhereInput;
}

export interface DbUpdateManySessionInputInternal {
	data: db_SessionUpdateManyMutationInput;
	where?: db_SessionWhereInput;
}

export interface DbUpdateManyTodoInputInternal {
	data: db_TodoUpdateManyMutationInput;
	where?: db_TodoWhereInput;
}

export interface DbUpdateManyUserInputInternal {
	data: db_UserUpdateManyMutationInput;
	where?: db_UserWhereInput;
}

export interface DbUpdateManyVerificationTokenInputInternal {
	data: db_VerificationTokenUpdateManyMutationInput;
	where?: db_VerificationTokenWhereInput;
}

export interface DbUpdateOneAccountInputInternal {
	data: db_AccountUpdateInput;
	where: db_AccountWhereUniqueInput;
	db_updateOneAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_updateOneAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_updateOneAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_updateOneAccount_user_user_sessions_take?: number;
	db_updateOneAccount_user_user_sessions_skip?: number;
	db_updateOneAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_updateOneAccount_user_user_Post_where?: db_PostWhereInput;
	db_updateOneAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_updateOneAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_updateOneAccount_user_user_Post_take?: number;
	db_updateOneAccount_user_user_Post_skip?: number;
	db_updateOneAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_updateOneAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_updateOneAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_updateOneAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_updateOneAccount_user_user_Todo_take?: number;
	db_updateOneAccount_user_user_Todo_skip?: number;
	db_updateOneAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpdateOnePostInputInternal {
	data: db_PostUpdateInput;
	where: db_PostWhereUniqueInput;
	db_updateOnePost_author_author_accounts_where?: db_AccountWhereInput;
	db_updateOnePost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_updateOnePost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_updateOnePost_author_author_accounts_take?: number;
	db_updateOnePost_author_author_accounts_skip?: number;
	db_updateOnePost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_updateOnePost_author_author_sessions_where?: db_SessionWhereInput;
	db_updateOnePost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_updateOnePost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_updateOnePost_author_author_sessions_take?: number;
	db_updateOnePost_author_author_sessions_skip?: number;
	db_updateOnePost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_updateOnePost_author_author_Todo_where?: db_TodoWhereInput;
	db_updateOnePost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_updateOnePost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_updateOnePost_author_author_Todo_take?: number;
	db_updateOnePost_author_author_Todo_skip?: number;
	db_updateOnePost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpdateOneSessionInputInternal {
	data: db_SessionUpdateInput;
	where: db_SessionWhereUniqueInput;
	db_updateOneSession_user_user_accounts_where?: db_AccountWhereInput;
	db_updateOneSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_updateOneSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_updateOneSession_user_user_accounts_take?: number;
	db_updateOneSession_user_user_accounts_skip?: number;
	db_updateOneSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_updateOneSession_user_user_Post_where?: db_PostWhereInput;
	db_updateOneSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_updateOneSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_updateOneSession_user_user_Post_take?: number;
	db_updateOneSession_user_user_Post_skip?: number;
	db_updateOneSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_updateOneSession_user_user_Todo_where?: db_TodoWhereInput;
	db_updateOneSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_updateOneSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_updateOneSession_user_user_Todo_take?: number;
	db_updateOneSession_user_user_Todo_skip?: number;
	db_updateOneSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpdateOneTodoInputInternal {
	data: db_TodoUpdateInput;
	where: db_TodoWhereUniqueInput;
	db_updateOneTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_updateOneTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_updateOneTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_updateOneTodo_user_user_accounts_take?: number;
	db_updateOneTodo_user_user_accounts_skip?: number;
	db_updateOneTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_updateOneTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_updateOneTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_updateOneTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_updateOneTodo_user_user_sessions_take?: number;
	db_updateOneTodo_user_user_sessions_skip?: number;
	db_updateOneTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_updateOneTodo_user_user_Post_where?: db_PostWhereInput;
	db_updateOneTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_updateOneTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_updateOneTodo_user_user_Post_take?: number;
	db_updateOneTodo_user_user_Post_skip?: number;
	db_updateOneTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbUpdateOneUserInputInternal {
	data: db_UserUpdateInput;
	where: db_UserWhereUniqueInput;
	db_updateOneUser_accounts_where?: db_AccountWhereInput;
	db_updateOneUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_updateOneUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_updateOneUser_accounts_take?: number;
	db_updateOneUser_accounts_skip?: number;
	db_updateOneUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_updateOneUser_sessions_where?: db_SessionWhereInput;
	db_updateOneUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_updateOneUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_updateOneUser_sessions_take?: number;
	db_updateOneUser_sessions_skip?: number;
	db_updateOneUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_updateOneUser_Post_where?: db_PostWhereInput;
	db_updateOneUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_updateOneUser_Post_cursor?: db_PostWhereUniqueInput;
	db_updateOneUser_Post_take?: number;
	db_updateOneUser_Post_skip?: number;
	db_updateOneUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_updateOneUser_Todo_where?: db_TodoWhereInput;
	db_updateOneUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_updateOneUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_updateOneUser_Todo_take?: number;
	db_updateOneUser_Todo_skip?: number;
	db_updateOneUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpdateOneVerificationTokenInputInternal {
	data: db_VerificationTokenUpdateInput;
	where: db_VerificationTokenWhereUniqueInput;
}

export interface DbUpsertOneAccountInputInternal {
	where: db_AccountWhereUniqueInput;
	create: db_AccountCreateInput;
	update: db_AccountUpdateInput;
	db_upsertOneAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_upsertOneAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_upsertOneAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_upsertOneAccount_user_user_sessions_take?: number;
	db_upsertOneAccount_user_user_sessions_skip?: number;
	db_upsertOneAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_upsertOneAccount_user_user_Post_where?: db_PostWhereInput;
	db_upsertOneAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_upsertOneAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_upsertOneAccount_user_user_Post_take?: number;
	db_upsertOneAccount_user_user_Post_skip?: number;
	db_upsertOneAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_upsertOneAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_upsertOneAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_upsertOneAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_upsertOneAccount_user_user_Todo_take?: number;
	db_upsertOneAccount_user_user_Todo_skip?: number;
	db_upsertOneAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpsertOnePostInputInternal {
	where: db_PostWhereUniqueInput;
	create: db_PostCreateInput;
	update: db_PostUpdateInput;
	db_upsertOnePost_author_author_accounts_where?: db_AccountWhereInput;
	db_upsertOnePost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_upsertOnePost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_upsertOnePost_author_author_accounts_take?: number;
	db_upsertOnePost_author_author_accounts_skip?: number;
	db_upsertOnePost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_upsertOnePost_author_author_sessions_where?: db_SessionWhereInput;
	db_upsertOnePost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_upsertOnePost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_upsertOnePost_author_author_sessions_take?: number;
	db_upsertOnePost_author_author_sessions_skip?: number;
	db_upsertOnePost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_upsertOnePost_author_author_Todo_where?: db_TodoWhereInput;
	db_upsertOnePost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_upsertOnePost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_upsertOnePost_author_author_Todo_take?: number;
	db_upsertOnePost_author_author_Todo_skip?: number;
	db_upsertOnePost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpsertOneSessionInputInternal {
	where: db_SessionWhereUniqueInput;
	create: db_SessionCreateInput;
	update: db_SessionUpdateInput;
	db_upsertOneSession_user_user_accounts_where?: db_AccountWhereInput;
	db_upsertOneSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_upsertOneSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_upsertOneSession_user_user_accounts_take?: number;
	db_upsertOneSession_user_user_accounts_skip?: number;
	db_upsertOneSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_upsertOneSession_user_user_Post_where?: db_PostWhereInput;
	db_upsertOneSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_upsertOneSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_upsertOneSession_user_user_Post_take?: number;
	db_upsertOneSession_user_user_Post_skip?: number;
	db_upsertOneSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_upsertOneSession_user_user_Todo_where?: db_TodoWhereInput;
	db_upsertOneSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_upsertOneSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_upsertOneSession_user_user_Todo_take?: number;
	db_upsertOneSession_user_user_Todo_skip?: number;
	db_upsertOneSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpsertOneTodoInputInternal {
	where: db_TodoWhereUniqueInput;
	create: db_TodoCreateInput;
	update: db_TodoUpdateInput;
	db_upsertOneTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_upsertOneTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_upsertOneTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_upsertOneTodo_user_user_accounts_take?: number;
	db_upsertOneTodo_user_user_accounts_skip?: number;
	db_upsertOneTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_upsertOneTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_upsertOneTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_upsertOneTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_upsertOneTodo_user_user_sessions_take?: number;
	db_upsertOneTodo_user_user_sessions_skip?: number;
	db_upsertOneTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_upsertOneTodo_user_user_Post_where?: db_PostWhereInput;
	db_upsertOneTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_upsertOneTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_upsertOneTodo_user_user_Post_take?: number;
	db_upsertOneTodo_user_user_Post_skip?: number;
	db_upsertOneTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbUpsertOneUserInputInternal {
	where: db_UserWhereUniqueInput;
	create: db_UserCreateInput;
	update: db_UserUpdateInput;
	db_upsertOneUser_accounts_where?: db_AccountWhereInput;
	db_upsertOneUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_upsertOneUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_upsertOneUser_accounts_take?: number;
	db_upsertOneUser_accounts_skip?: number;
	db_upsertOneUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_upsertOneUser_sessions_where?: db_SessionWhereInput;
	db_upsertOneUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_upsertOneUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_upsertOneUser_sessions_take?: number;
	db_upsertOneUser_sessions_skip?: number;
	db_upsertOneUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_upsertOneUser_Post_where?: db_PostWhereInput;
	db_upsertOneUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_upsertOneUser_Post_cursor?: db_PostWhereUniqueInput;
	db_upsertOneUser_Post_take?: number;
	db_upsertOneUser_Post_skip?: number;
	db_upsertOneUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_upsertOneUser_Todo_where?: db_TodoWhereInput;
	db_upsertOneUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_upsertOneUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_upsertOneUser_Todo_take?: number;
	db_upsertOneUser_Todo_skip?: number;
	db_upsertOneUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpsertOneVerificationTokenInputInternal {
	where: db_VerificationTokenWhereUniqueInput;
	create: db_VerificationTokenCreateInput;
	update: db_VerificationTokenUpdateInput;
}

export interface TodosAddTodoInputInternal {
	text: string;
	userId: string;
}

export interface TodosGetAllTodosForCurrentUserInputInternal {
	userId: string;
}

export interface TodosUpdateTodoInputInternal {
	id: string;
	text: string;
	isCompleted: boolean;
}

export interface WeatherGetCityByIdInputInternal {
	config?: weather_ConfigInput;
	id?: string[];
}

export interface WeatherGetCityByNameInputInternal {
	config?: weather_ConfigInput;
	country?: string;
	name: string;
}

export interface OpenaiExtract_website_metadataInputInternal {
	url: string;
}

export interface OpenaiLoad_urlInputInternal {
	url: string;
}

export interface OpenaiSummarize_url_contentInputInternal {
	url: string;
}

export interface OpenaiSummaryInputInternal {
	url: string;
}

export interface OpenaiWeatherInputInternal {
	country: string;
}

export interface UsersGetInputInternal {
	id: string;
}

export interface UsersSubscribeInputInternal {
	id: string;
}

export interface UsersUpdateInputInternal {
	id: string;
	name: string;
	bio: string;
}

export interface CountriesContinentInputInjected {
	code: string;
	countries_continent_countries_countries_name_lang?: string;
}

export interface CountriesContinentsInputInjected {
	filter?: countries_ContinentFilterInput;
	countries_continents_countries_countries_name_lang?: string;
}

export interface CountriesCountriesInputInjected {
	filter?: countries_CountryFilterInput;
	countries_countries_name_lang?: string;
}

export interface CountriesCountryInputInjected {
	code: string;
	countries_country_name_lang?: string;
}

export interface CountriesCountryByCodeInputInjected {
	code: string;
}

export interface CountriesLanguageInputInjected {
	code: string;
}

export interface CountriesLanguagesInputInjected {
	filter?: countries_LanguageFilterInput;
}

export interface DbAggregateAccountInputInjected {
	where?: db_AccountWhereInput;
	orderBy?: db_AccountOrderByWithRelationInput[];
	cursor?: db_AccountWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbAggregatePostInputInjected {
	where?: db_PostWhereInput;
	orderBy?: db_PostOrderByWithRelationInput[];
	cursor?: db_PostWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbAggregateSessionInputInjected {
	where?: db_SessionWhereInput;
	orderBy?: db_SessionOrderByWithRelationInput[];
	cursor?: db_SessionWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbAggregateTodoInputInjected {
	where?: db_TodoWhereInput;
	orderBy?: db_TodoOrderByWithRelationInput[];
	cursor?: db_TodoWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbAggregateUserInputInjected {
	where?: db_UserWhereInput;
	orderBy?: db_UserOrderByWithRelationInput[];
	cursor?: db_UserWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbAggregateVerificationTokenInputInjected {
	where?: db_VerificationTokenWhereInput;
	orderBy?: db_VerificationTokenOrderByWithRelationInput[];
	cursor?: db_VerificationTokenWhereUniqueInput;
	take?: number;
	skip?: number;
}

export interface DbCreateManyAccountInputInjected {
	data: db_AccountCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateManyPostInputInjected {
	data: db_PostCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateManySessionInputInjected {
	data: db_SessionCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateManyTodoInputInjected {
	data: db_TodoCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateManyUserInputInjected {
	data: db_UserCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateManyVerificationTokenInputInjected {
	data: db_VerificationTokenCreateManyInput[];
	skipDuplicates?: boolean;
}

export interface DbCreateOneAccountInputInjected {
	data: db_AccountCreateInput;
	db_createOneAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_createOneAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_createOneAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_createOneAccount_user_user_sessions_take?: number;
	db_createOneAccount_user_user_sessions_skip?: number;
	db_createOneAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_createOneAccount_user_user_Post_where?: db_PostWhereInput;
	db_createOneAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_createOneAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_createOneAccount_user_user_Post_take?: number;
	db_createOneAccount_user_user_Post_skip?: number;
	db_createOneAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_createOneAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_createOneAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_createOneAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_createOneAccount_user_user_Todo_take?: number;
	db_createOneAccount_user_user_Todo_skip?: number;
	db_createOneAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbCreateOnePostInputInjected {
	data: db_PostCreateInput;
	db_createOnePost_author_author_accounts_where?: db_AccountWhereInput;
	db_createOnePost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_createOnePost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_createOnePost_author_author_accounts_take?: number;
	db_createOnePost_author_author_accounts_skip?: number;
	db_createOnePost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_createOnePost_author_author_sessions_where?: db_SessionWhereInput;
	db_createOnePost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_createOnePost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_createOnePost_author_author_sessions_take?: number;
	db_createOnePost_author_author_sessions_skip?: number;
	db_createOnePost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_createOnePost_author_author_Todo_where?: db_TodoWhereInput;
	db_createOnePost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_createOnePost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_createOnePost_author_author_Todo_take?: number;
	db_createOnePost_author_author_Todo_skip?: number;
	db_createOnePost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbCreateOneSessionInputInjected {
	data: db_SessionCreateInput;
	db_createOneSession_user_user_accounts_where?: db_AccountWhereInput;
	db_createOneSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_createOneSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_createOneSession_user_user_accounts_take?: number;
	db_createOneSession_user_user_accounts_skip?: number;
	db_createOneSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_createOneSession_user_user_Post_where?: db_PostWhereInput;
	db_createOneSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_createOneSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_createOneSession_user_user_Post_take?: number;
	db_createOneSession_user_user_Post_skip?: number;
	db_createOneSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_createOneSession_user_user_Todo_where?: db_TodoWhereInput;
	db_createOneSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_createOneSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_createOneSession_user_user_Todo_take?: number;
	db_createOneSession_user_user_Todo_skip?: number;
	db_createOneSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbCreateOneTodoInputInjected {
	data: db_TodoCreateInput;
	db_createOneTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_createOneTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_createOneTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_createOneTodo_user_user_accounts_take?: number;
	db_createOneTodo_user_user_accounts_skip?: number;
	db_createOneTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_createOneTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_createOneTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_createOneTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_createOneTodo_user_user_sessions_take?: number;
	db_createOneTodo_user_user_sessions_skip?: number;
	db_createOneTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_createOneTodo_user_user_Post_where?: db_PostWhereInput;
	db_createOneTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_createOneTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_createOneTodo_user_user_Post_take?: number;
	db_createOneTodo_user_user_Post_skip?: number;
	db_createOneTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbCreateOneUserInputInjected {
	data: db_UserCreateInput;
	db_createOneUser_accounts_where?: db_AccountWhereInput;
	db_createOneUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_createOneUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_createOneUser_accounts_take?: number;
	db_createOneUser_accounts_skip?: number;
	db_createOneUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_createOneUser_sessions_where?: db_SessionWhereInput;
	db_createOneUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_createOneUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_createOneUser_sessions_take?: number;
	db_createOneUser_sessions_skip?: number;
	db_createOneUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_createOneUser_Post_where?: db_PostWhereInput;
	db_createOneUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_createOneUser_Post_cursor?: db_PostWhereUniqueInput;
	db_createOneUser_Post_take?: number;
	db_createOneUser_Post_skip?: number;
	db_createOneUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_createOneUser_Todo_where?: db_TodoWhereInput;
	db_createOneUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_createOneUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_createOneUser_Todo_take?: number;
	db_createOneUser_Todo_skip?: number;
	db_createOneUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbCreateOneVerificationTokenInputInjected {
	data: db_VerificationTokenCreateInput;
}

export interface DbDeleteManyAccountInputInjected {
	where?: db_AccountWhereInput;
}

export interface DbDeleteManyPostInputInjected {
	where?: db_PostWhereInput;
}

export interface DbDeleteManySessionInputInjected {
	where?: db_SessionWhereInput;
}

export interface DbDeleteManyTodoInputInjected {
	where?: db_TodoWhereInput;
}

export interface DbDeleteManyUserInputInjected {
	where?: db_UserWhereInput;
}

export interface DbDeleteManyVerificationTokenInputInjected {
	where?: db_VerificationTokenWhereInput;
}

export interface DbDeleteOneAccountInputInjected {
	where: db_AccountWhereUniqueInput;
	db_deleteOneAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_deleteOneAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_deleteOneAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_deleteOneAccount_user_user_sessions_take?: number;
	db_deleteOneAccount_user_user_sessions_skip?: number;
	db_deleteOneAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_deleteOneAccount_user_user_Post_where?: db_PostWhereInput;
	db_deleteOneAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_deleteOneAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_deleteOneAccount_user_user_Post_take?: number;
	db_deleteOneAccount_user_user_Post_skip?: number;
	db_deleteOneAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_deleteOneAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_deleteOneAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_deleteOneAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_deleteOneAccount_user_user_Todo_take?: number;
	db_deleteOneAccount_user_user_Todo_skip?: number;
	db_deleteOneAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbDeleteOnePostInputInjected {
	where: db_PostWhereUniqueInput;
	db_deleteOnePost_author_author_accounts_where?: db_AccountWhereInput;
	db_deleteOnePost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_deleteOnePost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_deleteOnePost_author_author_accounts_take?: number;
	db_deleteOnePost_author_author_accounts_skip?: number;
	db_deleteOnePost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_deleteOnePost_author_author_sessions_where?: db_SessionWhereInput;
	db_deleteOnePost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_deleteOnePost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_deleteOnePost_author_author_sessions_take?: number;
	db_deleteOnePost_author_author_sessions_skip?: number;
	db_deleteOnePost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_deleteOnePost_author_author_Todo_where?: db_TodoWhereInput;
	db_deleteOnePost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_deleteOnePost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_deleteOnePost_author_author_Todo_take?: number;
	db_deleteOnePost_author_author_Todo_skip?: number;
	db_deleteOnePost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbDeleteOneSessionInputInjected {
	where: db_SessionWhereUniqueInput;
	db_deleteOneSession_user_user_accounts_where?: db_AccountWhereInput;
	db_deleteOneSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_deleteOneSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_deleteOneSession_user_user_accounts_take?: number;
	db_deleteOneSession_user_user_accounts_skip?: number;
	db_deleteOneSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_deleteOneSession_user_user_Post_where?: db_PostWhereInput;
	db_deleteOneSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_deleteOneSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_deleteOneSession_user_user_Post_take?: number;
	db_deleteOneSession_user_user_Post_skip?: number;
	db_deleteOneSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_deleteOneSession_user_user_Todo_where?: db_TodoWhereInput;
	db_deleteOneSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_deleteOneSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_deleteOneSession_user_user_Todo_take?: number;
	db_deleteOneSession_user_user_Todo_skip?: number;
	db_deleteOneSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbDeleteOneTodoInputInjected {
	where: db_TodoWhereUniqueInput;
	db_deleteOneTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_deleteOneTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_deleteOneTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_deleteOneTodo_user_user_accounts_take?: number;
	db_deleteOneTodo_user_user_accounts_skip?: number;
	db_deleteOneTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_deleteOneTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_deleteOneTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_deleteOneTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_deleteOneTodo_user_user_sessions_take?: number;
	db_deleteOneTodo_user_user_sessions_skip?: number;
	db_deleteOneTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_deleteOneTodo_user_user_Post_where?: db_PostWhereInput;
	db_deleteOneTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_deleteOneTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_deleteOneTodo_user_user_Post_take?: number;
	db_deleteOneTodo_user_user_Post_skip?: number;
	db_deleteOneTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbDeleteOneUserInputInjected {
	where: db_UserWhereUniqueInput;
	db_deleteOneUser_accounts_where?: db_AccountWhereInput;
	db_deleteOneUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_deleteOneUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_deleteOneUser_accounts_take?: number;
	db_deleteOneUser_accounts_skip?: number;
	db_deleteOneUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_deleteOneUser_sessions_where?: db_SessionWhereInput;
	db_deleteOneUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_deleteOneUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_deleteOneUser_sessions_take?: number;
	db_deleteOneUser_sessions_skip?: number;
	db_deleteOneUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_deleteOneUser_Post_where?: db_PostWhereInput;
	db_deleteOneUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_deleteOneUser_Post_cursor?: db_PostWhereUniqueInput;
	db_deleteOneUser_Post_take?: number;
	db_deleteOneUser_Post_skip?: number;
	db_deleteOneUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_deleteOneUser_Todo_where?: db_TodoWhereInput;
	db_deleteOneUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_deleteOneUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_deleteOneUser_Todo_take?: number;
	db_deleteOneUser_Todo_skip?: number;
	db_deleteOneUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbDeleteOneVerificationTokenInputInjected {
	where: db_VerificationTokenWhereUniqueInput;
}

export interface DbExecuteRawInputInjected {
	query: string;
	parameters?: string[];
}

export interface DbFindFirstAccountInputInjected {
	where?: db_AccountWhereInput;
	orderBy?: db_AccountOrderByWithRelationInput[];
	cursor?: db_AccountWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_findFirstAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstAccount_user_user_sessions_take?: number;
	db_findFirstAccount_user_user_sessions_skip?: number;
	db_findFirstAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstAccount_user_user_Post_where?: db_PostWhereInput;
	db_findFirstAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstAccount_user_user_Post_take?: number;
	db_findFirstAccount_user_user_Post_skip?: number;
	db_findFirstAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_findFirstAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstAccount_user_user_Todo_take?: number;
	db_findFirstAccount_user_user_Todo_skip?: number;
	db_findFirstAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstAccountOrThrowInputInjected {
	where?: db_AccountWhereInput;
	orderBy?: db_AccountOrderByWithRelationInput[];
	cursor?: db_AccountWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstAccountOrThrow_user_user_sessions_where?: db_SessionWhereInput;
	db_findFirstAccountOrThrow_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstAccountOrThrow_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstAccountOrThrow_user_user_sessions_take?: number;
	db_findFirstAccountOrThrow_user_user_sessions_skip?: number;
	db_findFirstAccountOrThrow_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstAccountOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findFirstAccountOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstAccountOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstAccountOrThrow_user_user_Post_take?: number;
	db_findFirstAccountOrThrow_user_user_Post_skip?: number;
	db_findFirstAccountOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstAccountOrThrow_user_user_Todo_where?: db_TodoWhereInput;
	db_findFirstAccountOrThrow_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstAccountOrThrow_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstAccountOrThrow_user_user_Todo_take?: number;
	db_findFirstAccountOrThrow_user_user_Todo_skip?: number;
	db_findFirstAccountOrThrow_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstPostInputInjected {
	where?: db_PostWhereInput;
	orderBy?: db_PostOrderByWithRelationInput[];
	cursor?: db_PostWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstPost_author_author_accounts_where?: db_AccountWhereInput;
	db_findFirstPost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstPost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstPost_author_author_accounts_take?: number;
	db_findFirstPost_author_author_accounts_skip?: number;
	db_findFirstPost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstPost_author_author_sessions_where?: db_SessionWhereInput;
	db_findFirstPost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstPost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstPost_author_author_sessions_take?: number;
	db_findFirstPost_author_author_sessions_skip?: number;
	db_findFirstPost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstPost_author_author_Todo_where?: db_TodoWhereInput;
	db_findFirstPost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstPost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstPost_author_author_Todo_take?: number;
	db_findFirstPost_author_author_Todo_skip?: number;
	db_findFirstPost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstPostOrThrowInputInjected {
	where?: db_PostWhereInput;
	orderBy?: db_PostOrderByWithRelationInput[];
	cursor?: db_PostWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstPostOrThrow_author_author_accounts_where?: db_AccountWhereInput;
	db_findFirstPostOrThrow_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstPostOrThrow_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstPostOrThrow_author_author_accounts_take?: number;
	db_findFirstPostOrThrow_author_author_accounts_skip?: number;
	db_findFirstPostOrThrow_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstPostOrThrow_author_author_sessions_where?: db_SessionWhereInput;
	db_findFirstPostOrThrow_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstPostOrThrow_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstPostOrThrow_author_author_sessions_take?: number;
	db_findFirstPostOrThrow_author_author_sessions_skip?: number;
	db_findFirstPostOrThrow_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstPostOrThrow_author_author_Todo_where?: db_TodoWhereInput;
	db_findFirstPostOrThrow_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstPostOrThrow_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstPostOrThrow_author_author_Todo_take?: number;
	db_findFirstPostOrThrow_author_author_Todo_skip?: number;
	db_findFirstPostOrThrow_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstSessionInputInjected {
	where?: db_SessionWhereInput;
	orderBy?: db_SessionOrderByWithRelationInput[];
	cursor?: db_SessionWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstSession_user_user_accounts_where?: db_AccountWhereInput;
	db_findFirstSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstSession_user_user_accounts_take?: number;
	db_findFirstSession_user_user_accounts_skip?: number;
	db_findFirstSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstSession_user_user_Post_where?: db_PostWhereInput;
	db_findFirstSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstSession_user_user_Post_take?: number;
	db_findFirstSession_user_user_Post_skip?: number;
	db_findFirstSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstSession_user_user_Todo_where?: db_TodoWhereInput;
	db_findFirstSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstSession_user_user_Todo_take?: number;
	db_findFirstSession_user_user_Todo_skip?: number;
	db_findFirstSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstSessionOrThrowInputInjected {
	where?: db_SessionWhereInput;
	orderBy?: db_SessionOrderByWithRelationInput[];
	cursor?: db_SessionWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstSessionOrThrow_user_user_accounts_where?: db_AccountWhereInput;
	db_findFirstSessionOrThrow_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstSessionOrThrow_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstSessionOrThrow_user_user_accounts_take?: number;
	db_findFirstSessionOrThrow_user_user_accounts_skip?: number;
	db_findFirstSessionOrThrow_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstSessionOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findFirstSessionOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstSessionOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstSessionOrThrow_user_user_Post_take?: number;
	db_findFirstSessionOrThrow_user_user_Post_skip?: number;
	db_findFirstSessionOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstSessionOrThrow_user_user_Todo_where?: db_TodoWhereInput;
	db_findFirstSessionOrThrow_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstSessionOrThrow_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstSessionOrThrow_user_user_Todo_take?: number;
	db_findFirstSessionOrThrow_user_user_Todo_skip?: number;
	db_findFirstSessionOrThrow_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstTodoInputInjected {
	where?: db_TodoWhereInput;
	orderBy?: db_TodoOrderByWithRelationInput[];
	cursor?: db_TodoWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_TodoScalarFieldEnumValues[];
	db_findFirstTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_findFirstTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstTodo_user_user_accounts_take?: number;
	db_findFirstTodo_user_user_accounts_skip?: number;
	db_findFirstTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_findFirstTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstTodo_user_user_sessions_take?: number;
	db_findFirstTodo_user_user_sessions_skip?: number;
	db_findFirstTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstTodo_user_user_Post_where?: db_PostWhereInput;
	db_findFirstTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstTodo_user_user_Post_take?: number;
	db_findFirstTodo_user_user_Post_skip?: number;
	db_findFirstTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbFindFirstTodoOrThrowInputInjected {
	where?: db_TodoWhereInput;
	orderBy?: db_TodoOrderByWithRelationInput[];
	cursor?: db_TodoWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_TodoScalarFieldEnumValues[];
	db_findFirstTodoOrThrow_user_user_accounts_where?: db_AccountWhereInput;
	db_findFirstTodoOrThrow_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstTodoOrThrow_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstTodoOrThrow_user_user_accounts_take?: number;
	db_findFirstTodoOrThrow_user_user_accounts_skip?: number;
	db_findFirstTodoOrThrow_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstTodoOrThrow_user_user_sessions_where?: db_SessionWhereInput;
	db_findFirstTodoOrThrow_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstTodoOrThrow_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstTodoOrThrow_user_user_sessions_take?: number;
	db_findFirstTodoOrThrow_user_user_sessions_skip?: number;
	db_findFirstTodoOrThrow_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstTodoOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findFirstTodoOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstTodoOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstTodoOrThrow_user_user_Post_take?: number;
	db_findFirstTodoOrThrow_user_user_Post_skip?: number;
	db_findFirstTodoOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbFindFirstUserInputInjected {
	where?: db_UserWhereInput;
	orderBy?: db_UserOrderByWithRelationInput[];
	cursor?: db_UserWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_UserScalarFieldEnumValues[];
	db_findFirstUser_accounts_where?: db_AccountWhereInput;
	db_findFirstUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstUser_accounts_take?: number;
	db_findFirstUser_accounts_skip?: number;
	db_findFirstUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstUser_sessions_where?: db_SessionWhereInput;
	db_findFirstUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstUser_sessions_take?: number;
	db_findFirstUser_sessions_skip?: number;
	db_findFirstUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstUser_Post_where?: db_PostWhereInput;
	db_findFirstUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstUser_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstUser_Post_take?: number;
	db_findFirstUser_Post_skip?: number;
	db_findFirstUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstUser_Todo_where?: db_TodoWhereInput;
	db_findFirstUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstUser_Todo_take?: number;
	db_findFirstUser_Todo_skip?: number;
	db_findFirstUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstUserOrThrowInputInjected {
	where?: db_UserWhereInput;
	orderBy?: db_UserOrderByWithRelationInput[];
	cursor?: db_UserWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_UserScalarFieldEnumValues[];
	db_findFirstUserOrThrow_accounts_where?: db_AccountWhereInput;
	db_findFirstUserOrThrow_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findFirstUserOrThrow_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findFirstUserOrThrow_accounts_take?: number;
	db_findFirstUserOrThrow_accounts_skip?: number;
	db_findFirstUserOrThrow_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findFirstUserOrThrow_sessions_where?: db_SessionWhereInput;
	db_findFirstUserOrThrow_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findFirstUserOrThrow_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findFirstUserOrThrow_sessions_take?: number;
	db_findFirstUserOrThrow_sessions_skip?: number;
	db_findFirstUserOrThrow_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findFirstUserOrThrow_Post_where?: db_PostWhereInput;
	db_findFirstUserOrThrow_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findFirstUserOrThrow_Post_cursor?: db_PostWhereUniqueInput;
	db_findFirstUserOrThrow_Post_take?: number;
	db_findFirstUserOrThrow_Post_skip?: number;
	db_findFirstUserOrThrow_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findFirstUserOrThrow_Todo_where?: db_TodoWhereInput;
	db_findFirstUserOrThrow_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findFirstUserOrThrow_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findFirstUserOrThrow_Todo_take?: number;
	db_findFirstUserOrThrow_Todo_skip?: number;
	db_findFirstUserOrThrow_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindFirstVerificationTokenInputInjected {
	where?: db_VerificationTokenWhereInput;
	orderBy?: db_VerificationTokenOrderByWithRelationInput[];
	cursor?: db_VerificationTokenWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_VerificationTokenScalarFieldEnumValues[];
}

export interface DbFindFirstVerificationTokenOrThrowInputInjected {
	where?: db_VerificationTokenWhereInput;
	orderBy?: db_VerificationTokenOrderByWithRelationInput[];
	cursor?: db_VerificationTokenWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_VerificationTokenScalarFieldEnumValues[];
}

export interface DbFindManyAccountInputInjected {
	where?: db_AccountWhereInput;
	orderBy?: db_AccountOrderByWithRelationInput[];
	cursor?: db_AccountWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_AccountScalarFieldEnumValues[];
	db_findManyAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_findManyAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findManyAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findManyAccount_user_user_sessions_take?: number;
	db_findManyAccount_user_user_sessions_skip?: number;
	db_findManyAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findManyAccount_user_user_Post_where?: db_PostWhereInput;
	db_findManyAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findManyAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findManyAccount_user_user_Post_take?: number;
	db_findManyAccount_user_user_Post_skip?: number;
	db_findManyAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findManyAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_findManyAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findManyAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findManyAccount_user_user_Todo_take?: number;
	db_findManyAccount_user_user_Todo_skip?: number;
	db_findManyAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindManyPostInputInjected {
	where?: db_PostWhereInput;
	orderBy?: db_PostOrderByWithRelationInput[];
	cursor?: db_PostWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_PostScalarFieldEnumValues[];
	db_findManyPost_author_author_accounts_where?: db_AccountWhereInput;
	db_findManyPost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findManyPost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findManyPost_author_author_accounts_take?: number;
	db_findManyPost_author_author_accounts_skip?: number;
	db_findManyPost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findManyPost_author_author_sessions_where?: db_SessionWhereInput;
	db_findManyPost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findManyPost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findManyPost_author_author_sessions_take?: number;
	db_findManyPost_author_author_sessions_skip?: number;
	db_findManyPost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findManyPost_author_author_Todo_where?: db_TodoWhereInput;
	db_findManyPost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findManyPost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findManyPost_author_author_Todo_take?: number;
	db_findManyPost_author_author_Todo_skip?: number;
	db_findManyPost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindManySessionInputInjected {
	where?: db_SessionWhereInput;
	orderBy?: db_SessionOrderByWithRelationInput[];
	cursor?: db_SessionWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_SessionScalarFieldEnumValues[];
	db_findManySession_user_user_accounts_where?: db_AccountWhereInput;
	db_findManySession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findManySession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findManySession_user_user_accounts_take?: number;
	db_findManySession_user_user_accounts_skip?: number;
	db_findManySession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findManySession_user_user_Post_where?: db_PostWhereInput;
	db_findManySession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findManySession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findManySession_user_user_Post_take?: number;
	db_findManySession_user_user_Post_skip?: number;
	db_findManySession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findManySession_user_user_Todo_where?: db_TodoWhereInput;
	db_findManySession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findManySession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findManySession_user_user_Todo_take?: number;
	db_findManySession_user_user_Todo_skip?: number;
	db_findManySession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindManyTodoInputInjected {
	where?: db_TodoWhereInput;
	orderBy?: db_TodoOrderByWithRelationInput[];
	cursor?: db_TodoWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_TodoScalarFieldEnumValues[];
	db_findManyTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_findManyTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findManyTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findManyTodo_user_user_accounts_take?: number;
	db_findManyTodo_user_user_accounts_skip?: number;
	db_findManyTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findManyTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_findManyTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findManyTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findManyTodo_user_user_sessions_take?: number;
	db_findManyTodo_user_user_sessions_skip?: number;
	db_findManyTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findManyTodo_user_user_Post_where?: db_PostWhereInput;
	db_findManyTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findManyTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findManyTodo_user_user_Post_take?: number;
	db_findManyTodo_user_user_Post_skip?: number;
	db_findManyTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbFindManyUserInputInjected {
	where?: db_UserWhereInput;
	orderBy?: db_UserOrderByWithRelationInput[];
	cursor?: db_UserWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_UserScalarFieldEnumValues[];
	db_findManyUser_accounts_where?: db_AccountWhereInput;
	db_findManyUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findManyUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findManyUser_accounts_take?: number;
	db_findManyUser_accounts_skip?: number;
	db_findManyUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findManyUser_sessions_where?: db_SessionWhereInput;
	db_findManyUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findManyUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findManyUser_sessions_take?: number;
	db_findManyUser_sessions_skip?: number;
	db_findManyUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findManyUser_Post_where?: db_PostWhereInput;
	db_findManyUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findManyUser_Post_cursor?: db_PostWhereUniqueInput;
	db_findManyUser_Post_take?: number;
	db_findManyUser_Post_skip?: number;
	db_findManyUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findManyUser_Todo_where?: db_TodoWhereInput;
	db_findManyUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findManyUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findManyUser_Todo_take?: number;
	db_findManyUser_Todo_skip?: number;
	db_findManyUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindManyVerificationTokenInputInjected {
	where?: db_VerificationTokenWhereInput;
	orderBy?: db_VerificationTokenOrderByWithRelationInput[];
	cursor?: db_VerificationTokenWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: db_VerificationTokenScalarFieldEnumValues[];
}

export interface DbFindUniqueAccountInputInjected {
	where: db_AccountWhereUniqueInput;
	db_findUniqueAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_findUniqueAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueAccount_user_user_sessions_take?: number;
	db_findUniqueAccount_user_user_sessions_skip?: number;
	db_findUniqueAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueAccount_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueAccount_user_user_Post_take?: number;
	db_findUniqueAccount_user_user_Post_skip?: number;
	db_findUniqueAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_findUniqueAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueAccount_user_user_Todo_take?: number;
	db_findUniqueAccount_user_user_Todo_skip?: number;
	db_findUniqueAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueAccountOrThrowInputInjected {
	where: db_AccountWhereUniqueInput;
	db_findUniqueAccountOrThrow_user_user_sessions_where?: db_SessionWhereInput;
	db_findUniqueAccountOrThrow_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueAccountOrThrow_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueAccountOrThrow_user_user_sessions_take?: number;
	db_findUniqueAccountOrThrow_user_user_sessions_skip?: number;
	db_findUniqueAccountOrThrow_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueAccountOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueAccountOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueAccountOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueAccountOrThrow_user_user_Post_take?: number;
	db_findUniqueAccountOrThrow_user_user_Post_skip?: number;
	db_findUniqueAccountOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueAccountOrThrow_user_user_Todo_where?: db_TodoWhereInput;
	db_findUniqueAccountOrThrow_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueAccountOrThrow_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueAccountOrThrow_user_user_Todo_take?: number;
	db_findUniqueAccountOrThrow_user_user_Todo_skip?: number;
	db_findUniqueAccountOrThrow_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniquePostInputInjected {
	where: db_PostWhereUniqueInput;
	db_findUniquePost_author_author_accounts_where?: db_AccountWhereInput;
	db_findUniquePost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniquePost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniquePost_author_author_accounts_take?: number;
	db_findUniquePost_author_author_accounts_skip?: number;
	db_findUniquePost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniquePost_author_author_sessions_where?: db_SessionWhereInput;
	db_findUniquePost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniquePost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniquePost_author_author_sessions_take?: number;
	db_findUniquePost_author_author_sessions_skip?: number;
	db_findUniquePost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniquePost_author_author_Todo_where?: db_TodoWhereInput;
	db_findUniquePost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniquePost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniquePost_author_author_Todo_take?: number;
	db_findUniquePost_author_author_Todo_skip?: number;
	db_findUniquePost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniquePostOrThrowInputInjected {
	where: db_PostWhereUniqueInput;
	db_findUniquePostOrThrow_author_author_accounts_where?: db_AccountWhereInput;
	db_findUniquePostOrThrow_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniquePostOrThrow_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniquePostOrThrow_author_author_accounts_take?: number;
	db_findUniquePostOrThrow_author_author_accounts_skip?: number;
	db_findUniquePostOrThrow_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniquePostOrThrow_author_author_sessions_where?: db_SessionWhereInput;
	db_findUniquePostOrThrow_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniquePostOrThrow_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniquePostOrThrow_author_author_sessions_take?: number;
	db_findUniquePostOrThrow_author_author_sessions_skip?: number;
	db_findUniquePostOrThrow_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniquePostOrThrow_author_author_Todo_where?: db_TodoWhereInput;
	db_findUniquePostOrThrow_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniquePostOrThrow_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniquePostOrThrow_author_author_Todo_take?: number;
	db_findUniquePostOrThrow_author_author_Todo_skip?: number;
	db_findUniquePostOrThrow_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueSessionInputInjected {
	where: db_SessionWhereUniqueInput;
	db_findUniqueSession_user_user_accounts_where?: db_AccountWhereInput;
	db_findUniqueSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueSession_user_user_accounts_take?: number;
	db_findUniqueSession_user_user_accounts_skip?: number;
	db_findUniqueSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueSession_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueSession_user_user_Post_take?: number;
	db_findUniqueSession_user_user_Post_skip?: number;
	db_findUniqueSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueSession_user_user_Todo_where?: db_TodoWhereInput;
	db_findUniqueSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueSession_user_user_Todo_take?: number;
	db_findUniqueSession_user_user_Todo_skip?: number;
	db_findUniqueSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueSessionOrThrowInputInjected {
	where: db_SessionWhereUniqueInput;
	db_findUniqueSessionOrThrow_user_user_accounts_where?: db_AccountWhereInput;
	db_findUniqueSessionOrThrow_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueSessionOrThrow_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueSessionOrThrow_user_user_accounts_take?: number;
	db_findUniqueSessionOrThrow_user_user_accounts_skip?: number;
	db_findUniqueSessionOrThrow_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueSessionOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueSessionOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueSessionOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueSessionOrThrow_user_user_Post_take?: number;
	db_findUniqueSessionOrThrow_user_user_Post_skip?: number;
	db_findUniqueSessionOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueSessionOrThrow_user_user_Todo_where?: db_TodoWhereInput;
	db_findUniqueSessionOrThrow_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueSessionOrThrow_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueSessionOrThrow_user_user_Todo_take?: number;
	db_findUniqueSessionOrThrow_user_user_Todo_skip?: number;
	db_findUniqueSessionOrThrow_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueTodoInputInjected {
	where: db_TodoWhereUniqueInput;
	db_findUniqueTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_findUniqueTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueTodo_user_user_accounts_take?: number;
	db_findUniqueTodo_user_user_accounts_skip?: number;
	db_findUniqueTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_findUniqueTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueTodo_user_user_sessions_take?: number;
	db_findUniqueTodo_user_user_sessions_skip?: number;
	db_findUniqueTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueTodo_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueTodo_user_user_Post_take?: number;
	db_findUniqueTodo_user_user_Post_skip?: number;
	db_findUniqueTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbFindUniqueTodoOrThrowInputInjected {
	where: db_TodoWhereUniqueInput;
	db_findUniqueTodoOrThrow_user_user_accounts_where?: db_AccountWhereInput;
	db_findUniqueTodoOrThrow_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueTodoOrThrow_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueTodoOrThrow_user_user_accounts_take?: number;
	db_findUniqueTodoOrThrow_user_user_accounts_skip?: number;
	db_findUniqueTodoOrThrow_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueTodoOrThrow_user_user_sessions_where?: db_SessionWhereInput;
	db_findUniqueTodoOrThrow_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueTodoOrThrow_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueTodoOrThrow_user_user_sessions_take?: number;
	db_findUniqueTodoOrThrow_user_user_sessions_skip?: number;
	db_findUniqueTodoOrThrow_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueTodoOrThrow_user_user_Post_where?: db_PostWhereInput;
	db_findUniqueTodoOrThrow_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueTodoOrThrow_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueTodoOrThrow_user_user_Post_take?: number;
	db_findUniqueTodoOrThrow_user_user_Post_skip?: number;
	db_findUniqueTodoOrThrow_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbFindUniqueUserInputInjected {
	where: db_UserWhereUniqueInput;
	db_findUniqueUser_accounts_where?: db_AccountWhereInput;
	db_findUniqueUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueUser_accounts_take?: number;
	db_findUniqueUser_accounts_skip?: number;
	db_findUniqueUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueUser_sessions_where?: db_SessionWhereInput;
	db_findUniqueUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueUser_sessions_take?: number;
	db_findUniqueUser_sessions_skip?: number;
	db_findUniqueUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueUser_Post_where?: db_PostWhereInput;
	db_findUniqueUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueUser_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueUser_Post_take?: number;
	db_findUniqueUser_Post_skip?: number;
	db_findUniqueUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueUser_Todo_where?: db_TodoWhereInput;
	db_findUniqueUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueUser_Todo_take?: number;
	db_findUniqueUser_Todo_skip?: number;
	db_findUniqueUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueUserOrThrowInputInjected {
	where: db_UserWhereUniqueInput;
	db_findUniqueUserOrThrow_accounts_where?: db_AccountWhereInput;
	db_findUniqueUserOrThrow_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_findUniqueUserOrThrow_accounts_cursor?: db_AccountWhereUniqueInput;
	db_findUniqueUserOrThrow_accounts_take?: number;
	db_findUniqueUserOrThrow_accounts_skip?: number;
	db_findUniqueUserOrThrow_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_findUniqueUserOrThrow_sessions_where?: db_SessionWhereInput;
	db_findUniqueUserOrThrow_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_findUniqueUserOrThrow_sessions_cursor?: db_SessionWhereUniqueInput;
	db_findUniqueUserOrThrow_sessions_take?: number;
	db_findUniqueUserOrThrow_sessions_skip?: number;
	db_findUniqueUserOrThrow_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_findUniqueUserOrThrow_Post_where?: db_PostWhereInput;
	db_findUniqueUserOrThrow_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_findUniqueUserOrThrow_Post_cursor?: db_PostWhereUniqueInput;
	db_findUniqueUserOrThrow_Post_take?: number;
	db_findUniqueUserOrThrow_Post_skip?: number;
	db_findUniqueUserOrThrow_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_findUniqueUserOrThrow_Todo_where?: db_TodoWhereInput;
	db_findUniqueUserOrThrow_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_findUniqueUserOrThrow_Todo_cursor?: db_TodoWhereUniqueInput;
	db_findUniqueUserOrThrow_Todo_take?: number;
	db_findUniqueUserOrThrow_Todo_skip?: number;
	db_findUniqueUserOrThrow_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbFindUniqueVerificationTokenInputInjected {
	where: db_VerificationTokenWhereUniqueInput;
}

export interface DbFindUniqueVerificationTokenOrThrowInputInjected {
	where: db_VerificationTokenWhereUniqueInput;
}

export interface DbGroupByAccountInputInjected {
	where?: db_AccountWhereInput;
	orderBy?: db_AccountOrderByWithAggregationInput[];
	by: db_AccountScalarFieldEnumValues[];
	having?: db_AccountScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbGroupByPostInputInjected {
	where?: db_PostWhereInput;
	orderBy?: db_PostOrderByWithAggregationInput[];
	by: db_PostScalarFieldEnumValues[];
	having?: db_PostScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbGroupBySessionInputInjected {
	where?: db_SessionWhereInput;
	orderBy?: db_SessionOrderByWithAggregationInput[];
	by: db_SessionScalarFieldEnumValues[];
	having?: db_SessionScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbGroupByTodoInputInjected {
	where?: db_TodoWhereInput;
	orderBy?: db_TodoOrderByWithAggregationInput[];
	by: db_TodoScalarFieldEnumValues[];
	having?: db_TodoScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbGroupByUserInputInjected {
	where?: db_UserWhereInput;
	orderBy?: db_UserOrderByWithAggregationInput[];
	by: db_UserScalarFieldEnumValues[];
	having?: db_UserScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbGroupByVerificationTokenInputInjected {
	where?: db_VerificationTokenWhereInput;
	orderBy?: db_VerificationTokenOrderByWithAggregationInput[];
	by: db_VerificationTokenScalarFieldEnumValues[];
	having?: db_VerificationTokenScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
}

export interface DbQueryRawInputInjected {
	query: string;
	parameters?: string[];
}

export interface DbQueryRawJSONInputInjected {
	query: string;
	parameters?: string[];
}

export interface DbUpdateManyAccountInputInjected {
	data: db_AccountUpdateManyMutationInput;
	where?: db_AccountWhereInput;
}

export interface DbUpdateManyPostInputInjected {
	data: db_PostUpdateManyMutationInput;
	where?: db_PostWhereInput;
}

export interface DbUpdateManySessionInputInjected {
	data: db_SessionUpdateManyMutationInput;
	where?: db_SessionWhereInput;
}

export interface DbUpdateManyTodoInputInjected {
	data: db_TodoUpdateManyMutationInput;
	where?: db_TodoWhereInput;
}

export interface DbUpdateManyUserInputInjected {
	data: db_UserUpdateManyMutationInput;
	where?: db_UserWhereInput;
}

export interface DbUpdateManyVerificationTokenInputInjected {
	data: db_VerificationTokenUpdateManyMutationInput;
	where?: db_VerificationTokenWhereInput;
}

export interface DbUpdateOneAccountInputInjected {
	data: db_AccountUpdateInput;
	where: db_AccountWhereUniqueInput;
	db_updateOneAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_updateOneAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_updateOneAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_updateOneAccount_user_user_sessions_take?: number;
	db_updateOneAccount_user_user_sessions_skip?: number;
	db_updateOneAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_updateOneAccount_user_user_Post_where?: db_PostWhereInput;
	db_updateOneAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_updateOneAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_updateOneAccount_user_user_Post_take?: number;
	db_updateOneAccount_user_user_Post_skip?: number;
	db_updateOneAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_updateOneAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_updateOneAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_updateOneAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_updateOneAccount_user_user_Todo_take?: number;
	db_updateOneAccount_user_user_Todo_skip?: number;
	db_updateOneAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpdateOnePostInputInjected {
	data: db_PostUpdateInput;
	where: db_PostWhereUniqueInput;
	db_updateOnePost_author_author_accounts_where?: db_AccountWhereInput;
	db_updateOnePost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_updateOnePost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_updateOnePost_author_author_accounts_take?: number;
	db_updateOnePost_author_author_accounts_skip?: number;
	db_updateOnePost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_updateOnePost_author_author_sessions_where?: db_SessionWhereInput;
	db_updateOnePost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_updateOnePost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_updateOnePost_author_author_sessions_take?: number;
	db_updateOnePost_author_author_sessions_skip?: number;
	db_updateOnePost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_updateOnePost_author_author_Todo_where?: db_TodoWhereInput;
	db_updateOnePost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_updateOnePost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_updateOnePost_author_author_Todo_take?: number;
	db_updateOnePost_author_author_Todo_skip?: number;
	db_updateOnePost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpdateOneSessionInputInjected {
	data: db_SessionUpdateInput;
	where: db_SessionWhereUniqueInput;
	db_updateOneSession_user_user_accounts_where?: db_AccountWhereInput;
	db_updateOneSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_updateOneSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_updateOneSession_user_user_accounts_take?: number;
	db_updateOneSession_user_user_accounts_skip?: number;
	db_updateOneSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_updateOneSession_user_user_Post_where?: db_PostWhereInput;
	db_updateOneSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_updateOneSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_updateOneSession_user_user_Post_take?: number;
	db_updateOneSession_user_user_Post_skip?: number;
	db_updateOneSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_updateOneSession_user_user_Todo_where?: db_TodoWhereInput;
	db_updateOneSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_updateOneSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_updateOneSession_user_user_Todo_take?: number;
	db_updateOneSession_user_user_Todo_skip?: number;
	db_updateOneSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpdateOneTodoInputInjected {
	data: db_TodoUpdateInput;
	where: db_TodoWhereUniqueInput;
	db_updateOneTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_updateOneTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_updateOneTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_updateOneTodo_user_user_accounts_take?: number;
	db_updateOneTodo_user_user_accounts_skip?: number;
	db_updateOneTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_updateOneTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_updateOneTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_updateOneTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_updateOneTodo_user_user_sessions_take?: number;
	db_updateOneTodo_user_user_sessions_skip?: number;
	db_updateOneTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_updateOneTodo_user_user_Post_where?: db_PostWhereInput;
	db_updateOneTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_updateOneTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_updateOneTodo_user_user_Post_take?: number;
	db_updateOneTodo_user_user_Post_skip?: number;
	db_updateOneTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbUpdateOneUserInputInjected {
	data: db_UserUpdateInput;
	where: db_UserWhereUniqueInput;
	db_updateOneUser_accounts_where?: db_AccountWhereInput;
	db_updateOneUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_updateOneUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_updateOneUser_accounts_take?: number;
	db_updateOneUser_accounts_skip?: number;
	db_updateOneUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_updateOneUser_sessions_where?: db_SessionWhereInput;
	db_updateOneUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_updateOneUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_updateOneUser_sessions_take?: number;
	db_updateOneUser_sessions_skip?: number;
	db_updateOneUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_updateOneUser_Post_where?: db_PostWhereInput;
	db_updateOneUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_updateOneUser_Post_cursor?: db_PostWhereUniqueInput;
	db_updateOneUser_Post_take?: number;
	db_updateOneUser_Post_skip?: number;
	db_updateOneUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_updateOneUser_Todo_where?: db_TodoWhereInput;
	db_updateOneUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_updateOneUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_updateOneUser_Todo_take?: number;
	db_updateOneUser_Todo_skip?: number;
	db_updateOneUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpdateOneVerificationTokenInputInjected {
	data: db_VerificationTokenUpdateInput;
	where: db_VerificationTokenWhereUniqueInput;
}

export interface DbUpsertOneAccountInputInjected {
	where: db_AccountWhereUniqueInput;
	create: db_AccountCreateInput;
	update: db_AccountUpdateInput;
	db_upsertOneAccount_user_user_sessions_where?: db_SessionWhereInput;
	db_upsertOneAccount_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_upsertOneAccount_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_upsertOneAccount_user_user_sessions_take?: number;
	db_upsertOneAccount_user_user_sessions_skip?: number;
	db_upsertOneAccount_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_upsertOneAccount_user_user_Post_where?: db_PostWhereInput;
	db_upsertOneAccount_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_upsertOneAccount_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_upsertOneAccount_user_user_Post_take?: number;
	db_upsertOneAccount_user_user_Post_skip?: number;
	db_upsertOneAccount_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_upsertOneAccount_user_user_Todo_where?: db_TodoWhereInput;
	db_upsertOneAccount_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_upsertOneAccount_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_upsertOneAccount_user_user_Todo_take?: number;
	db_upsertOneAccount_user_user_Todo_skip?: number;
	db_upsertOneAccount_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpsertOnePostInputInjected {
	where: db_PostWhereUniqueInput;
	create: db_PostCreateInput;
	update: db_PostUpdateInput;
	db_upsertOnePost_author_author_accounts_where?: db_AccountWhereInput;
	db_upsertOnePost_author_author_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_upsertOnePost_author_author_accounts_cursor?: db_AccountWhereUniqueInput;
	db_upsertOnePost_author_author_accounts_take?: number;
	db_upsertOnePost_author_author_accounts_skip?: number;
	db_upsertOnePost_author_author_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_upsertOnePost_author_author_sessions_where?: db_SessionWhereInput;
	db_upsertOnePost_author_author_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_upsertOnePost_author_author_sessions_cursor?: db_SessionWhereUniqueInput;
	db_upsertOnePost_author_author_sessions_take?: number;
	db_upsertOnePost_author_author_sessions_skip?: number;
	db_upsertOnePost_author_author_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_upsertOnePost_author_author_Todo_where?: db_TodoWhereInput;
	db_upsertOnePost_author_author_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_upsertOnePost_author_author_Todo_cursor?: db_TodoWhereUniqueInput;
	db_upsertOnePost_author_author_Todo_take?: number;
	db_upsertOnePost_author_author_Todo_skip?: number;
	db_upsertOnePost_author_author_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpsertOneSessionInputInjected {
	where: db_SessionWhereUniqueInput;
	create: db_SessionCreateInput;
	update: db_SessionUpdateInput;
	db_upsertOneSession_user_user_accounts_where?: db_AccountWhereInput;
	db_upsertOneSession_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_upsertOneSession_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_upsertOneSession_user_user_accounts_take?: number;
	db_upsertOneSession_user_user_accounts_skip?: number;
	db_upsertOneSession_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_upsertOneSession_user_user_Post_where?: db_PostWhereInput;
	db_upsertOneSession_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_upsertOneSession_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_upsertOneSession_user_user_Post_take?: number;
	db_upsertOneSession_user_user_Post_skip?: number;
	db_upsertOneSession_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_upsertOneSession_user_user_Todo_where?: db_TodoWhereInput;
	db_upsertOneSession_user_user_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_upsertOneSession_user_user_Todo_cursor?: db_TodoWhereUniqueInput;
	db_upsertOneSession_user_user_Todo_take?: number;
	db_upsertOneSession_user_user_Todo_skip?: number;
	db_upsertOneSession_user_user_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpsertOneTodoInputInjected {
	where: db_TodoWhereUniqueInput;
	create: db_TodoCreateInput;
	update: db_TodoUpdateInput;
	db_upsertOneTodo_user_user_accounts_where?: db_AccountWhereInput;
	db_upsertOneTodo_user_user_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_upsertOneTodo_user_user_accounts_cursor?: db_AccountWhereUniqueInput;
	db_upsertOneTodo_user_user_accounts_take?: number;
	db_upsertOneTodo_user_user_accounts_skip?: number;
	db_upsertOneTodo_user_user_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_upsertOneTodo_user_user_sessions_where?: db_SessionWhereInput;
	db_upsertOneTodo_user_user_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_upsertOneTodo_user_user_sessions_cursor?: db_SessionWhereUniqueInput;
	db_upsertOneTodo_user_user_sessions_take?: number;
	db_upsertOneTodo_user_user_sessions_skip?: number;
	db_upsertOneTodo_user_user_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_upsertOneTodo_user_user_Post_where?: db_PostWhereInput;
	db_upsertOneTodo_user_user_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_upsertOneTodo_user_user_Post_cursor?: db_PostWhereUniqueInput;
	db_upsertOneTodo_user_user_Post_take?: number;
	db_upsertOneTodo_user_user_Post_skip?: number;
	db_upsertOneTodo_user_user_Post_distinct?: db_PostScalarFieldEnumValues[];
}

export interface DbUpsertOneUserInputInjected {
	where: db_UserWhereUniqueInput;
	create: db_UserCreateInput;
	update: db_UserUpdateInput;
	db_upsertOneUser_accounts_where?: db_AccountWhereInput;
	db_upsertOneUser_accounts_orderBy?: db_AccountOrderByWithRelationInput[];
	db_upsertOneUser_accounts_cursor?: db_AccountWhereUniqueInput;
	db_upsertOneUser_accounts_take?: number;
	db_upsertOneUser_accounts_skip?: number;
	db_upsertOneUser_accounts_distinct?: db_AccountScalarFieldEnumValues[];
	db_upsertOneUser_sessions_where?: db_SessionWhereInput;
	db_upsertOneUser_sessions_orderBy?: db_SessionOrderByWithRelationInput[];
	db_upsertOneUser_sessions_cursor?: db_SessionWhereUniqueInput;
	db_upsertOneUser_sessions_take?: number;
	db_upsertOneUser_sessions_skip?: number;
	db_upsertOneUser_sessions_distinct?: db_SessionScalarFieldEnumValues[];
	db_upsertOneUser_Post_where?: db_PostWhereInput;
	db_upsertOneUser_Post_orderBy?: db_PostOrderByWithRelationInput[];
	db_upsertOneUser_Post_cursor?: db_PostWhereUniqueInput;
	db_upsertOneUser_Post_take?: number;
	db_upsertOneUser_Post_skip?: number;
	db_upsertOneUser_Post_distinct?: db_PostScalarFieldEnumValues[];
	db_upsertOneUser_Todo_where?: db_TodoWhereInput;
	db_upsertOneUser_Todo_orderBy?: db_TodoOrderByWithRelationInput[];
	db_upsertOneUser_Todo_cursor?: db_TodoWhereUniqueInput;
	db_upsertOneUser_Todo_take?: number;
	db_upsertOneUser_Todo_skip?: number;
	db_upsertOneUser_Todo_distinct?: db_TodoScalarFieldEnumValues[];
}

export interface DbUpsertOneVerificationTokenInputInjected {
	where: db_VerificationTokenWhereUniqueInput;
	create: db_VerificationTokenCreateInput;
	update: db_VerificationTokenUpdateInput;
}

export interface TodosAddTodoInputInjected {
	text: string;
	userId: string;
}

export interface TodosGetAllTodosForCurrentUserInputInjected {
	userId: string;
}

export interface TodosUpdateTodoInputInjected {
	id: string;
	text: string;
	isCompleted: boolean;
}

export interface WeatherGetCityByIdInputInjected {
	config?: weather_ConfigInput;
	id?: string[];
}

export interface WeatherGetCityByNameInputInjected {
	config?: weather_ConfigInput;
	country?: string;
	name: string;
}

export interface CountriesContinentResponse {
	data?: CountriesContinentResponseData;
	errors?: GraphQLError[];
}

export interface CountriesContinentsResponse {
	data?: CountriesContinentsResponseData;
	errors?: GraphQLError[];
}

export interface CountriesCountriesResponse {
	data?: CountriesCountriesResponseData;
	errors?: GraphQLError[];
}

export interface CountriesCountryResponse {
	data?: CountriesCountryResponseData;
	errors?: GraphQLError[];
}

export interface CountriesCountryByCodeResponse {
	data?: CountriesCountryByCodeResponseData;
	errors?: GraphQLError[];
}

export interface CountriesLanguageResponse {
	data?: CountriesLanguageResponseData;
	errors?: GraphQLError[];
}

export interface CountriesLanguagesResponse {
	data?: CountriesLanguagesResponseData;
	errors?: GraphQLError[];
}

export interface DbAggregateAccountResponse {
	data?: DbAggregateAccountResponseData;
	errors?: GraphQLError[];
}

export interface DbAggregatePostResponse {
	data?: DbAggregatePostResponseData;
	errors?: GraphQLError[];
}

export interface DbAggregateSessionResponse {
	data?: DbAggregateSessionResponseData;
	errors?: GraphQLError[];
}

export interface DbAggregateTodoResponse {
	data?: DbAggregateTodoResponseData;
	errors?: GraphQLError[];
}

export interface DbAggregateUserResponse {
	data?: DbAggregateUserResponseData;
	errors?: GraphQLError[];
}

export interface DbAggregateVerificationTokenResponse {
	data?: DbAggregateVerificationTokenResponseData;
	errors?: GraphQLError[];
}

export interface DbCreateManyAccountResponse {
	data?: DbCreateManyAccountResponseData;
	errors?: GraphQLError[];
}

export interface DbCreateManyPostResponse {
	data?: DbCreateManyPostResponseData;
	errors?: GraphQLError[];
}

export interface DbCreateManySessionResponse {
	data?: DbCreateManySessionResponseData;
	errors?: GraphQLError[];
}

export interface DbCreateManyTodoResponse {
	data?: DbCreateManyTodoResponseData;
	errors?: GraphQLError[];
}

export interface DbCreateManyUserResponse {
	data?: DbCreateManyUserResponseData;
	errors?: GraphQLError[];
}

export interface DbCreateManyVerificationTokenResponse {
	data?: DbCreateManyVerificationTokenResponseData;
	errors?: GraphQLError[];
}

export interface DbCreateOneAccountResponse {
	data?: DbCreateOneAccountResponseData;
	errors?: GraphQLError[];
}

export interface DbCreateOnePostResponse {
	data?: DbCreateOnePostResponseData;
	errors?: GraphQLError[];
}

export interface DbCreateOneSessionResponse {
	data?: DbCreateOneSessionResponseData;
	errors?: GraphQLError[];
}

export interface DbCreateOneTodoResponse {
	data?: DbCreateOneTodoResponseData;
	errors?: GraphQLError[];
}

export interface DbCreateOneUserResponse {
	data?: DbCreateOneUserResponseData;
	errors?: GraphQLError[];
}

export interface DbCreateOneVerificationTokenResponse {
	data?: DbCreateOneVerificationTokenResponseData;
	errors?: GraphQLError[];
}

export interface DbDeleteManyAccountResponse {
	data?: DbDeleteManyAccountResponseData;
	errors?: GraphQLError[];
}

export interface DbDeleteManyPostResponse {
	data?: DbDeleteManyPostResponseData;
	errors?: GraphQLError[];
}

export interface DbDeleteManySessionResponse {
	data?: DbDeleteManySessionResponseData;
	errors?: GraphQLError[];
}

export interface DbDeleteManyTodoResponse {
	data?: DbDeleteManyTodoResponseData;
	errors?: GraphQLError[];
}

export interface DbDeleteManyUserResponse {
	data?: DbDeleteManyUserResponseData;
	errors?: GraphQLError[];
}

export interface DbDeleteManyVerificationTokenResponse {
	data?: DbDeleteManyVerificationTokenResponseData;
	errors?: GraphQLError[];
}

export interface DbDeleteOneAccountResponse {
	data?: DbDeleteOneAccountResponseData;
	errors?: GraphQLError[];
}

export interface DbDeleteOnePostResponse {
	data?: DbDeleteOnePostResponseData;
	errors?: GraphQLError[];
}

export interface DbDeleteOneSessionResponse {
	data?: DbDeleteOneSessionResponseData;
	errors?: GraphQLError[];
}

export interface DbDeleteOneTodoResponse {
	data?: DbDeleteOneTodoResponseData;
	errors?: GraphQLError[];
}

export interface DbDeleteOneUserResponse {
	data?: DbDeleteOneUserResponseData;
	errors?: GraphQLError[];
}

export interface DbDeleteOneVerificationTokenResponse {
	data?: DbDeleteOneVerificationTokenResponseData;
	errors?: GraphQLError[];
}

export interface DbExecuteRawResponse {
	data?: DbExecuteRawResponseData;
	errors?: GraphQLError[];
}

export interface DbFindFirstAccountResponse {
	data?: DbFindFirstAccountResponseData;
	errors?: GraphQLError[];
}

export interface DbFindFirstAccountOrThrowResponse {
	data?: DbFindFirstAccountOrThrowResponseData;
	errors?: GraphQLError[];
}

export interface DbFindFirstPostResponse {
	data?: DbFindFirstPostResponseData;
	errors?: GraphQLError[];
}

export interface DbFindFirstPostOrThrowResponse {
	data?: DbFindFirstPostOrThrowResponseData;
	errors?: GraphQLError[];
}

export interface DbFindFirstSessionResponse {
	data?: DbFindFirstSessionResponseData;
	errors?: GraphQLError[];
}

export interface DbFindFirstSessionOrThrowResponse {
	data?: DbFindFirstSessionOrThrowResponseData;
	errors?: GraphQLError[];
}

export interface DbFindFirstTodoResponse {
	data?: DbFindFirstTodoResponseData;
	errors?: GraphQLError[];
}

export interface DbFindFirstTodoOrThrowResponse {
	data?: DbFindFirstTodoOrThrowResponseData;
	errors?: GraphQLError[];
}

export interface DbFindFirstUserResponse {
	data?: DbFindFirstUserResponseData;
	errors?: GraphQLError[];
}

export interface DbFindFirstUserOrThrowResponse {
	data?: DbFindFirstUserOrThrowResponseData;
	errors?: GraphQLError[];
}

export interface DbFindFirstVerificationTokenResponse {
	data?: DbFindFirstVerificationTokenResponseData;
	errors?: GraphQLError[];
}

export interface DbFindFirstVerificationTokenOrThrowResponse {
	data?: DbFindFirstVerificationTokenOrThrowResponseData;
	errors?: GraphQLError[];
}

export interface DbFindManyAccountResponse {
	data?: DbFindManyAccountResponseData;
	errors?: GraphQLError[];
}

export interface DbFindManyPostResponse {
	data?: DbFindManyPostResponseData;
	errors?: GraphQLError[];
}

export interface DbFindManySessionResponse {
	data?: DbFindManySessionResponseData;
	errors?: GraphQLError[];
}

export interface DbFindManyTodoResponse {
	data?: DbFindManyTodoResponseData;
	errors?: GraphQLError[];
}

export interface DbFindManyUserResponse {
	data?: DbFindManyUserResponseData;
	errors?: GraphQLError[];
}

export interface DbFindManyVerificationTokenResponse {
	data?: DbFindManyVerificationTokenResponseData;
	errors?: GraphQLError[];
}

export interface DbFindUniqueAccountResponse {
	data?: DbFindUniqueAccountResponseData;
	errors?: GraphQLError[];
}

export interface DbFindUniqueAccountOrThrowResponse {
	data?: DbFindUniqueAccountOrThrowResponseData;
	errors?: GraphQLError[];
}

export interface DbFindUniquePostResponse {
	data?: DbFindUniquePostResponseData;
	errors?: GraphQLError[];
}

export interface DbFindUniquePostOrThrowResponse {
	data?: DbFindUniquePostOrThrowResponseData;
	errors?: GraphQLError[];
}

export interface DbFindUniqueSessionResponse {
	data?: DbFindUniqueSessionResponseData;
	errors?: GraphQLError[];
}

export interface DbFindUniqueSessionOrThrowResponse {
	data?: DbFindUniqueSessionOrThrowResponseData;
	errors?: GraphQLError[];
}

export interface DbFindUniqueTodoResponse {
	data?: DbFindUniqueTodoResponseData;
	errors?: GraphQLError[];
}

export interface DbFindUniqueTodoOrThrowResponse {
	data?: DbFindUniqueTodoOrThrowResponseData;
	errors?: GraphQLError[];
}

export interface DbFindUniqueUserResponse {
	data?: DbFindUniqueUserResponseData;
	errors?: GraphQLError[];
}

export interface DbFindUniqueUserOrThrowResponse {
	data?: DbFindUniqueUserOrThrowResponseData;
	errors?: GraphQLError[];
}

export interface DbFindUniqueVerificationTokenResponse {
	data?: DbFindUniqueVerificationTokenResponseData;
	errors?: GraphQLError[];
}

export interface DbFindUniqueVerificationTokenOrThrowResponse {
	data?: DbFindUniqueVerificationTokenOrThrowResponseData;
	errors?: GraphQLError[];
}

export interface DbGroupByAccountResponse {
	data?: DbGroupByAccountResponseData;
	errors?: GraphQLError[];
}

export interface DbGroupByPostResponse {
	data?: DbGroupByPostResponseData;
	errors?: GraphQLError[];
}

export interface DbGroupBySessionResponse {
	data?: DbGroupBySessionResponseData;
	errors?: GraphQLError[];
}

export interface DbGroupByTodoResponse {
	data?: DbGroupByTodoResponseData;
	errors?: GraphQLError[];
}

export interface DbGroupByUserResponse {
	data?: DbGroupByUserResponseData;
	errors?: GraphQLError[];
}

export interface DbGroupByVerificationTokenResponse {
	data?: DbGroupByVerificationTokenResponseData;
	errors?: GraphQLError[];
}

export interface DbQueryRawResponse {
	data?: DbQueryRawResponseData;
	errors?: GraphQLError[];
}

export interface DbQueryRawJSONResponse {
	data?: DbQueryRawJSONResponseData;
	errors?: GraphQLError[];
}

export interface DbUpdateManyAccountResponse {
	data?: DbUpdateManyAccountResponseData;
	errors?: GraphQLError[];
}

export interface DbUpdateManyPostResponse {
	data?: DbUpdateManyPostResponseData;
	errors?: GraphQLError[];
}

export interface DbUpdateManySessionResponse {
	data?: DbUpdateManySessionResponseData;
	errors?: GraphQLError[];
}

export interface DbUpdateManyTodoResponse {
	data?: DbUpdateManyTodoResponseData;
	errors?: GraphQLError[];
}

export interface DbUpdateManyUserResponse {
	data?: DbUpdateManyUserResponseData;
	errors?: GraphQLError[];
}

export interface DbUpdateManyVerificationTokenResponse {
	data?: DbUpdateManyVerificationTokenResponseData;
	errors?: GraphQLError[];
}

export interface DbUpdateOneAccountResponse {
	data?: DbUpdateOneAccountResponseData;
	errors?: GraphQLError[];
}

export interface DbUpdateOnePostResponse {
	data?: DbUpdateOnePostResponseData;
	errors?: GraphQLError[];
}

export interface DbUpdateOneSessionResponse {
	data?: DbUpdateOneSessionResponseData;
	errors?: GraphQLError[];
}

export interface DbUpdateOneTodoResponse {
	data?: DbUpdateOneTodoResponseData;
	errors?: GraphQLError[];
}

export interface DbUpdateOneUserResponse {
	data?: DbUpdateOneUserResponseData;
	errors?: GraphQLError[];
}

export interface DbUpdateOneVerificationTokenResponse {
	data?: DbUpdateOneVerificationTokenResponseData;
	errors?: GraphQLError[];
}

export interface DbUpsertOneAccountResponse {
	data?: DbUpsertOneAccountResponseData;
	errors?: GraphQLError[];
}

export interface DbUpsertOnePostResponse {
	data?: DbUpsertOnePostResponseData;
	errors?: GraphQLError[];
}

export interface DbUpsertOneSessionResponse {
	data?: DbUpsertOneSessionResponseData;
	errors?: GraphQLError[];
}

export interface DbUpsertOneTodoResponse {
	data?: DbUpsertOneTodoResponseData;
	errors?: GraphQLError[];
}

export interface DbUpsertOneUserResponse {
	data?: DbUpsertOneUserResponseData;
	errors?: GraphQLError[];
}

export interface DbUpsertOneVerificationTokenResponse {
	data?: DbUpsertOneVerificationTokenResponseData;
	errors?: GraphQLError[];
}

export interface TodosAddTodoResponse {
	data?: TodosAddTodoResponseData;
	errors?: GraphQLError[];
}

export interface TodosGetAllTodosForCurrentUserResponse {
	data?: TodosGetAllTodosForCurrentUserResponseData;
	errors?: GraphQLError[];
}

export interface TodosUpdateTodoResponse {
	data?: TodosUpdateTodoResponseData;
	errors?: GraphQLError[];
}

export interface WeatherGetCityByIdResponse {
	data?: WeatherGetCityByIdResponseData;
	errors?: GraphQLError[];
}

export interface WeatherGetCityByNameResponse {
	data?: WeatherGetCityByNameResponseData;
	errors?: GraphQLError[];
}

export interface OpenaiExtract_website_metadataResponse {
	data?: OpenaiExtract_website_metadataResponseData;
	errors?: GraphQLError[];
}

export interface OpenaiLoad_urlResponse {
	data?: OpenaiLoad_urlResponseData;
	errors?: GraphQLError[];
}

export interface OpenaiSummarize_url_contentResponse {
	data?: OpenaiSummarize_url_contentResponseData;
	errors?: GraphQLError[];
}

export interface OpenaiSummaryResponse {
	data?: OpenaiSummaryResponseData;
	errors?: GraphQLError[];
}

export interface OpenaiWeatherResponse {
	data?: OpenaiWeatherResponseData;
	errors?: GraphQLError[];
}

export interface UsersGetResponse {
	data?: UsersGetResponseData;
	errors?: GraphQLError[];
}

export interface UsersSubscribeResponse {
	data?: UsersSubscribeResponseData;
	errors?: GraphQLError[];
}

export interface UsersUpdateResponse {
	data?: UsersUpdateResponseData;
	errors?: GraphQLError[];
}

export interface CountriesContinentResponseData {
	countries_continent?: {
		code: string;
		countries: {
			awsRegion: string;
			capital?: string;
			code: string;
			currencies: string[];
			currency?: string;
			emoji: string;
			emojiU: string;
			languages: {
				code: string;
				name: string;
				native: string;
				rtl: boolean;
			}[];
			name: string;
			native: string;
			phone: string;
			phones: string[];
			states: {
				code?: string;
				name: string;
			}[];
			subdivisions: {
				code: string;
				emoji?: string;
				name: string;
			}[];
		}[];
		name: string;
	};
}

export interface CountriesContinentsResponseData {
	countries_continents: {
		code: string;
		countries: {
			awsRegion: string;
			capital?: string;
			code: string;
			currencies: string[];
			currency?: string;
			emoji: string;
			emojiU: string;
			languages: {
				code: string;
				name: string;
				native: string;
				rtl: boolean;
			}[];
			name: string;
			native: string;
			phone: string;
			phones: string[];
			states: {
				code?: string;
				name: string;
			}[];
			subdivisions: {
				code: string;
				emoji?: string;
				name: string;
			}[];
		}[];
		name: string;
	}[];
}

export interface CountriesCountriesResponseData {
	countries_countries: {
		awsRegion: string;
		capital?: string;
		code: string;
		continent: {
			code: string;
			name: string;
		};
		currencies: string[];
		currency?: string;
		emoji: string;
		emojiU: string;
		languages: {
			code: string;
			name: string;
			native: string;
			rtl: boolean;
		}[];
		name: string;
		native: string;
		phone: string;
		phones: string[];
		states: {
			code?: string;
			name: string;
		}[];
		subdivisions: {
			code: string;
			emoji?: string;
			name: string;
		}[];
	}[];
}

export interface CountriesCountryResponseData {
	countries_country?: {
		awsRegion: string;
		capital?: string;
		code: string;
		continent: {
			code: string;
			name: string;
		};
		currencies: string[];
		currency?: string;
		emoji: string;
		emojiU: string;
		languages: {
			code: string;
			name: string;
			native: string;
			rtl: boolean;
		}[];
		name: string;
		native: string;
		phone: string;
		phones: string[];
		states: {
			code?: string;
			name: string;
		}[];
		subdivisions: {
			code: string;
			emoji?: string;
			name: string;
		}[];
	};
}

export interface CountriesCountryByCodeResponseData {
	countries_country?: {
		code: string;
		name: string;
		currencies: string[];
		capital?: string;
	};
}

export interface CountriesLanguageResponseData {
	countries_language?: {
		code: string;
		name: string;
		native: string;
		rtl: boolean;
	};
}

export interface CountriesLanguagesResponseData {
	countries_languages: {
		code: string;
		name: string;
		native: string;
		rtl: boolean;
	}[];
}

export interface DbAggregateAccountResponseData {
	db_aggregateAccount: {
		_count?: {
			id: number;
			userId: number;
			type: number;
			provider: number;
			providerAccountId: number;
			refresh_token: number;
			access_token: number;
			expires_at: number;
			token_type: number;
			scope: number;
			id_token: number;
			session_state: number;
			createdAt: number;
			updatedAt: number;
			_all: number;
		};
		_avg?: {
			expires_at?: number;
		};
		_sum?: {
			expires_at?: number;
		};
		_min?: {
			id?: string;
			userId?: string;
			type?: string;
			provider?: string;
			providerAccountId?: string;
			refresh_token?: string;
			access_token?: string;
			expires_at?: number;
			token_type?: string;
			scope?: string;
			id_token?: string;
			session_state?: string;
			createdAt?: string;
			updatedAt?: string;
		};
		_max?: {
			id?: string;
			userId?: string;
			type?: string;
			provider?: string;
			providerAccountId?: string;
			refresh_token?: string;
			access_token?: string;
			expires_at?: number;
			token_type?: string;
			scope?: string;
			id_token?: string;
			session_state?: string;
			createdAt?: string;
			updatedAt?: string;
		};
	};
}

export interface DbAggregatePostResponseData {
	db_aggregatePost: {
		_count?: {
			id: number;
			title: number;
			content: number;
			published: number;
			createdAt: number;
			updatedAt: number;
			authorId: number;
			_all: number;
		};
		_min?: {
			id?: string;
			title?: string;
			published?: boolean;
			createdAt?: string;
			updatedAt?: string;
			authorId?: string;
		};
		_max?: {
			id?: string;
			title?: string;
			published?: boolean;
			createdAt?: string;
			updatedAt?: string;
			authorId?: string;
		};
	};
}

export interface DbAggregateSessionResponseData {
	db_aggregateSession: {
		_count?: {
			id: number;
			sessionToken: number;
			userId: number;
			expires: number;
			_all: number;
		};
		_min?: {
			id?: string;
			sessionToken?: string;
			userId?: string;
			expires?: string;
		};
		_max?: {
			id?: string;
			sessionToken?: string;
			userId?: string;
			expires?: string;
		};
	};
}

export interface DbAggregateTodoResponseData {
	db_aggregateTodo: {
		_count?: {
			id: number;
			text: number;
			isCompleted: number;
			createdAt: number;
			updatedAt: number;
			userId: number;
			_all: number;
		};
		_min?: {
			id?: string;
			text?: string;
			isCompleted?: boolean;
			createdAt?: string;
			updatedAt?: string;
			userId?: string;
		};
		_max?: {
			id?: string;
			text?: string;
			isCompleted?: boolean;
			createdAt?: string;
			updatedAt?: string;
			userId?: string;
		};
	};
}

export interface DbAggregateUserResponseData {
	db_aggregateUser: {
		_count?: {
			id: number;
			name: number;
			email: number;
			emailVerified: number;
			image: number;
			createdAt: number;
			updatedAt: number;
			stripeCustomerId: number;
			stripeSubscriptionId: number;
			stripePriceId: number;
			stripeCurrentPeriodEnd: number;
			_all: number;
		};
		_min?: {
			id?: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt?: string;
			updatedAt?: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
		};
		_max?: {
			id?: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt?: string;
			updatedAt?: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
		};
	};
}

export interface DbAggregateVerificationTokenResponseData {
	db_aggregateVerificationToken: {
		_count?: {
			identifier: number;
			token: number;
			expires: number;
			_all: number;
		};
		_min?: {
			identifier?: string;
			token?: string;
			expires?: string;
		};
		_max?: {
			identifier?: string;
			token?: string;
			expires?: string;
		};
	};
}

export interface DbCreateManyAccountResponseData {
	db_createManyAccount?: {
		count: number;
	};
}

export interface DbCreateManyPostResponseData {
	db_createManyPost?: {
		count: number;
	};
}

export interface DbCreateManySessionResponseData {
	db_createManySession?: {
		count: number;
	};
}

export interface DbCreateManyTodoResponseData {
	db_createManyTodo?: {
		count: number;
	};
}

export interface DbCreateManyUserResponseData {
	db_createManyUser?: {
		count: number;
	};
}

export interface DbCreateManyVerificationTokenResponseData {
	db_createManyVerificationToken?: {
		count: number;
	};
}

export interface DbCreateOneAccountResponseData {
	db_createOneAccount?: {
		id: string;
		userId: string;
		type: string;
		provider: string;
		providerAccountId: string;
		refresh_token?: string;
		access_token?: string;
		expires_at?: number;
		token_type?: string;
		scope?: string;
		id_token?: string;
		session_state?: string;
		createdAt: string;
		updatedAt: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbCreateOnePostResponseData {
	db_createOnePost?: {
		id: string;
		title: string;
		content?: JSONValue;
		published: boolean;
		createdAt: string;
		updatedAt: string;
		authorId: string;
		author: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbCreateOneSessionResponseData {
	db_createOneSession?: {
		id: string;
		sessionToken: string;
		userId: string;
		expires: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbCreateOneTodoResponseData {
	db_createOneTodo?: {
		id: string;
		text: string;
		isCompleted: boolean;
		createdAt: string;
		updatedAt: string;
		userId: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbCreateOneUserResponseData {
	db_createOneUser?: {
		id: string;
		name?: string;
		email?: string;
		emailVerified?: string;
		image?: string;
		createdAt: string;
		updatedAt: string;
		stripeCustomerId?: string;
		stripeSubscriptionId?: string;
		stripePriceId?: string;
		stripeCurrentPeriodEnd?: string;
		accounts?: {
			id: string;
			userId: string;
			type: string;
			provider: string;
			providerAccountId: string;
			refresh_token?: string;
			access_token?: string;
			expires_at?: number;
			token_type?: string;
			scope?: string;
			id_token?: string;
			session_state?: string;
			createdAt: string;
			updatedAt: string;
		}[];
		sessions?: {
			id: string;
			sessionToken: string;
			userId: string;
			expires: string;
		}[];
		Post?: {
			id: string;
			title: string;
			content?: JSONValue;
			published: boolean;
			createdAt: string;
			updatedAt: string;
			authorId: string;
		}[];
		Todo?: {
			id: string;
			text: string;
			isCompleted: boolean;
			createdAt: string;
			updatedAt: string;
			userId: string;
		}[];
		_count: {
			accounts: number;
			sessions: number;
			Post: number;
			Todo: number;
		};
	};
}

export interface DbCreateOneVerificationTokenResponseData {
	db_createOneVerificationToken?: {
		identifier: string;
		token: string;
		expires: string;
	};
}

export interface DbDeleteManyAccountResponseData {
	db_deleteManyAccount?: {
		count: number;
	};
}

export interface DbDeleteManyPostResponseData {
	db_deleteManyPost?: {
		count: number;
	};
}

export interface DbDeleteManySessionResponseData {
	db_deleteManySession?: {
		count: number;
	};
}

export interface DbDeleteManyTodoResponseData {
	db_deleteManyTodo?: {
		count: number;
	};
}

export interface DbDeleteManyUserResponseData {
	db_deleteManyUser?: {
		count: number;
	};
}

export interface DbDeleteManyVerificationTokenResponseData {
	db_deleteManyVerificationToken?: {
		count: number;
	};
}

export interface DbDeleteOneAccountResponseData {
	db_deleteOneAccount?: {
		id: string;
		userId: string;
		type: string;
		provider: string;
		providerAccountId: string;
		refresh_token?: string;
		access_token?: string;
		expires_at?: number;
		token_type?: string;
		scope?: string;
		id_token?: string;
		session_state?: string;
		createdAt: string;
		updatedAt: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbDeleteOnePostResponseData {
	db_deleteOnePost?: {
		id: string;
		title: string;
		content?: JSONValue;
		published: boolean;
		createdAt: string;
		updatedAt: string;
		authorId: string;
		author: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbDeleteOneSessionResponseData {
	db_deleteOneSession?: {
		id: string;
		sessionToken: string;
		userId: string;
		expires: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbDeleteOneTodoResponseData {
	db_deleteOneTodo?: {
		id: string;
		text: string;
		isCompleted: boolean;
		createdAt: string;
		updatedAt: string;
		userId: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbDeleteOneUserResponseData {
	db_deleteOneUser?: {
		id: string;
		name?: string;
		email?: string;
		emailVerified?: string;
		image?: string;
		createdAt: string;
		updatedAt: string;
		stripeCustomerId?: string;
		stripeSubscriptionId?: string;
		stripePriceId?: string;
		stripeCurrentPeriodEnd?: string;
		accounts?: {
			id: string;
			userId: string;
			type: string;
			provider: string;
			providerAccountId: string;
			refresh_token?: string;
			access_token?: string;
			expires_at?: number;
			token_type?: string;
			scope?: string;
			id_token?: string;
			session_state?: string;
			createdAt: string;
			updatedAt: string;
		}[];
		sessions?: {
			id: string;
			sessionToken: string;
			userId: string;
			expires: string;
		}[];
		Post?: {
			id: string;
			title: string;
			content?: JSONValue;
			published: boolean;
			createdAt: string;
			updatedAt: string;
			authorId: string;
		}[];
		Todo?: {
			id: string;
			text: string;
			isCompleted: boolean;
			createdAt: string;
			updatedAt: string;
			userId: string;
		}[];
		_count: {
			accounts: number;
			sessions: number;
			Post: number;
			Todo: number;
		};
	};
}

export interface DbDeleteOneVerificationTokenResponseData {
	db_deleteOneVerificationToken?: {
		identifier: string;
		token: string;
		expires: string;
	};
}

export interface DbExecuteRawResponseData {
	db_executeRaw: number;
}

export interface DbFindFirstAccountResponseData {
	db_findFirstAccount?: {
		id: string;
		userId: string;
		type: string;
		provider: string;
		providerAccountId: string;
		refresh_token?: string;
		access_token?: string;
		expires_at?: number;
		token_type?: string;
		scope?: string;
		id_token?: string;
		session_state?: string;
		createdAt: string;
		updatedAt: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindFirstAccountOrThrowResponseData {
	db_findFirstAccountOrThrow?: {
		id: string;
		userId: string;
		type: string;
		provider: string;
		providerAccountId: string;
		refresh_token?: string;
		access_token?: string;
		expires_at?: number;
		token_type?: string;
		scope?: string;
		id_token?: string;
		session_state?: string;
		createdAt: string;
		updatedAt: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindFirstPostResponseData {
	db_findFirstPost?: {
		id: string;
		title: string;
		content?: JSONValue;
		published: boolean;
		createdAt: string;
		updatedAt: string;
		authorId: string;
		author: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindFirstPostOrThrowResponseData {
	db_findFirstPostOrThrow?: {
		id: string;
		title: string;
		content?: JSONValue;
		published: boolean;
		createdAt: string;
		updatedAt: string;
		authorId: string;
		author: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindFirstSessionResponseData {
	db_findFirstSession?: {
		id: string;
		sessionToken: string;
		userId: string;
		expires: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindFirstSessionOrThrowResponseData {
	db_findFirstSessionOrThrow?: {
		id: string;
		sessionToken: string;
		userId: string;
		expires: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindFirstTodoResponseData {
	db_findFirstTodo?: {
		id: string;
		text: string;
		isCompleted: boolean;
		createdAt: string;
		updatedAt: string;
		userId: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindFirstTodoOrThrowResponseData {
	db_findFirstTodoOrThrow?: {
		id: string;
		text: string;
		isCompleted: boolean;
		createdAt: string;
		updatedAt: string;
		userId: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindFirstUserResponseData {
	db_findFirstUser?: {
		id: string;
		name?: string;
		email?: string;
		emailVerified?: string;
		image?: string;
		createdAt: string;
		updatedAt: string;
		stripeCustomerId?: string;
		stripeSubscriptionId?: string;
		stripePriceId?: string;
		stripeCurrentPeriodEnd?: string;
		accounts?: {
			id: string;
			userId: string;
			type: string;
			provider: string;
			providerAccountId: string;
			refresh_token?: string;
			access_token?: string;
			expires_at?: number;
			token_type?: string;
			scope?: string;
			id_token?: string;
			session_state?: string;
			createdAt: string;
			updatedAt: string;
		}[];
		sessions?: {
			id: string;
			sessionToken: string;
			userId: string;
			expires: string;
		}[];
		Post?: {
			id: string;
			title: string;
			content?: JSONValue;
			published: boolean;
			createdAt: string;
			updatedAt: string;
			authorId: string;
		}[];
		Todo?: {
			id: string;
			text: string;
			isCompleted: boolean;
			createdAt: string;
			updatedAt: string;
			userId: string;
		}[];
		_count: {
			accounts: number;
			sessions: number;
			Post: number;
			Todo: number;
		};
	};
}

export interface DbFindFirstUserOrThrowResponseData {
	db_findFirstUserOrThrow?: {
		id: string;
		name?: string;
		email?: string;
		emailVerified?: string;
		image?: string;
		createdAt: string;
		updatedAt: string;
		stripeCustomerId?: string;
		stripeSubscriptionId?: string;
		stripePriceId?: string;
		stripeCurrentPeriodEnd?: string;
		accounts?: {
			id: string;
			userId: string;
			type: string;
			provider: string;
			providerAccountId: string;
			refresh_token?: string;
			access_token?: string;
			expires_at?: number;
			token_type?: string;
			scope?: string;
			id_token?: string;
			session_state?: string;
			createdAt: string;
			updatedAt: string;
		}[];
		sessions?: {
			id: string;
			sessionToken: string;
			userId: string;
			expires: string;
		}[];
		Post?: {
			id: string;
			title: string;
			content?: JSONValue;
			published: boolean;
			createdAt: string;
			updatedAt: string;
			authorId: string;
		}[];
		Todo?: {
			id: string;
			text: string;
			isCompleted: boolean;
			createdAt: string;
			updatedAt: string;
			userId: string;
		}[];
		_count: {
			accounts: number;
			sessions: number;
			Post: number;
			Todo: number;
		};
	};
}

export interface DbFindFirstVerificationTokenResponseData {
	db_findFirstVerificationToken?: {
		identifier: string;
		token: string;
		expires: string;
	};
}

export interface DbFindFirstVerificationTokenOrThrowResponseData {
	db_findFirstVerificationTokenOrThrow?: {
		identifier: string;
		token: string;
		expires: string;
	};
}

export interface DbFindManyAccountResponseData {
	db_findManyAccount: {
		id: string;
		userId: string;
		type: string;
		provider: string;
		providerAccountId: string;
		refresh_token?: string;
		access_token?: string;
		expires_at?: number;
		token_type?: string;
		scope?: string;
		id_token?: string;
		session_state?: string;
		createdAt: string;
		updatedAt: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	}[];
}

export interface DbFindManyPostResponseData {
	db_findManyPost: {
		id: string;
		title: string;
		content?: JSONValue;
		published: boolean;
		createdAt: string;
		updatedAt: string;
		authorId: string;
		author: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	}[];
}

export interface DbFindManySessionResponseData {
	db_findManySession: {
		id: string;
		sessionToken: string;
		userId: string;
		expires: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	}[];
}

export interface DbFindManyTodoResponseData {
	db_findManyTodo: {
		id: string;
		text: string;
		isCompleted: boolean;
		createdAt: string;
		updatedAt: string;
		userId: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	}[];
}

export interface DbFindManyUserResponseData {
	db_findManyUser: {
		id: string;
		name?: string;
		email?: string;
		emailVerified?: string;
		image?: string;
		createdAt: string;
		updatedAt: string;
		stripeCustomerId?: string;
		stripeSubscriptionId?: string;
		stripePriceId?: string;
		stripeCurrentPeriodEnd?: string;
		accounts?: {
			id: string;
			userId: string;
			type: string;
			provider: string;
			providerAccountId: string;
			refresh_token?: string;
			access_token?: string;
			expires_at?: number;
			token_type?: string;
			scope?: string;
			id_token?: string;
			session_state?: string;
			createdAt: string;
			updatedAt: string;
		}[];
		sessions?: {
			id: string;
			sessionToken: string;
			userId: string;
			expires: string;
		}[];
		Post?: {
			id: string;
			title: string;
			content?: JSONValue;
			published: boolean;
			createdAt: string;
			updatedAt: string;
			authorId: string;
		}[];
		Todo?: {
			id: string;
			text: string;
			isCompleted: boolean;
			createdAt: string;
			updatedAt: string;
			userId: string;
		}[];
		_count: {
			accounts: number;
			sessions: number;
			Post: number;
			Todo: number;
		};
	}[];
}

export interface DbFindManyVerificationTokenResponseData {
	db_findManyVerificationToken: {
		identifier: string;
		token: string;
		expires: string;
	}[];
}

export interface DbFindUniqueAccountResponseData {
	db_findUniqueAccount?: {
		id: string;
		userId: string;
		type: string;
		provider: string;
		providerAccountId: string;
		refresh_token?: string;
		access_token?: string;
		expires_at?: number;
		token_type?: string;
		scope?: string;
		id_token?: string;
		session_state?: string;
		createdAt: string;
		updatedAt: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindUniqueAccountOrThrowResponseData {
	db_findUniqueAccountOrThrow?: {
		id: string;
		userId: string;
		type: string;
		provider: string;
		providerAccountId: string;
		refresh_token?: string;
		access_token?: string;
		expires_at?: number;
		token_type?: string;
		scope?: string;
		id_token?: string;
		session_state?: string;
		createdAt: string;
		updatedAt: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindUniquePostResponseData {
	db_findUniquePost?: {
		id: string;
		title: string;
		content?: JSONValue;
		published: boolean;
		createdAt: string;
		updatedAt: string;
		authorId: string;
		author: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindUniquePostOrThrowResponseData {
	db_findUniquePostOrThrow?: {
		id: string;
		title: string;
		content?: JSONValue;
		published: boolean;
		createdAt: string;
		updatedAt: string;
		authorId: string;
		author: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindUniqueSessionResponseData {
	db_findUniqueSession?: {
		id: string;
		sessionToken: string;
		userId: string;
		expires: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindUniqueSessionOrThrowResponseData {
	db_findUniqueSessionOrThrow?: {
		id: string;
		sessionToken: string;
		userId: string;
		expires: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindUniqueTodoResponseData {
	db_findUniqueTodo?: {
		id: string;
		text: string;
		isCompleted: boolean;
		createdAt: string;
		updatedAt: string;
		userId: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindUniqueTodoOrThrowResponseData {
	db_findUniqueTodoOrThrow?: {
		id: string;
		text: string;
		isCompleted: boolean;
		createdAt: string;
		updatedAt: string;
		userId: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbFindUniqueUserResponseData {
	db_findUniqueUser?: {
		id: string;
		name?: string;
		email?: string;
		emailVerified?: string;
		image?: string;
		createdAt: string;
		updatedAt: string;
		stripeCustomerId?: string;
		stripeSubscriptionId?: string;
		stripePriceId?: string;
		stripeCurrentPeriodEnd?: string;
		accounts?: {
			id: string;
			userId: string;
			type: string;
			provider: string;
			providerAccountId: string;
			refresh_token?: string;
			access_token?: string;
			expires_at?: number;
			token_type?: string;
			scope?: string;
			id_token?: string;
			session_state?: string;
			createdAt: string;
			updatedAt: string;
		}[];
		sessions?: {
			id: string;
			sessionToken: string;
			userId: string;
			expires: string;
		}[];
		Post?: {
			id: string;
			title: string;
			content?: JSONValue;
			published: boolean;
			createdAt: string;
			updatedAt: string;
			authorId: string;
		}[];
		Todo?: {
			id: string;
			text: string;
			isCompleted: boolean;
			createdAt: string;
			updatedAt: string;
			userId: string;
		}[];
		_count: {
			accounts: number;
			sessions: number;
			Post: number;
			Todo: number;
		};
	};
}

export interface DbFindUniqueUserOrThrowResponseData {
	db_findUniqueUserOrThrow?: {
		id: string;
		name?: string;
		email?: string;
		emailVerified?: string;
		image?: string;
		createdAt: string;
		updatedAt: string;
		stripeCustomerId?: string;
		stripeSubscriptionId?: string;
		stripePriceId?: string;
		stripeCurrentPeriodEnd?: string;
		accounts?: {
			id: string;
			userId: string;
			type: string;
			provider: string;
			providerAccountId: string;
			refresh_token?: string;
			access_token?: string;
			expires_at?: number;
			token_type?: string;
			scope?: string;
			id_token?: string;
			session_state?: string;
			createdAt: string;
			updatedAt: string;
		}[];
		sessions?: {
			id: string;
			sessionToken: string;
			userId: string;
			expires: string;
		}[];
		Post?: {
			id: string;
			title: string;
			content?: JSONValue;
			published: boolean;
			createdAt: string;
			updatedAt: string;
			authorId: string;
		}[];
		Todo?: {
			id: string;
			text: string;
			isCompleted: boolean;
			createdAt: string;
			updatedAt: string;
			userId: string;
		}[];
		_count: {
			accounts: number;
			sessions: number;
			Post: number;
			Todo: number;
		};
	};
}

export interface DbFindUniqueVerificationTokenResponseData {
	db_findUniqueVerificationToken?: {
		identifier: string;
		token: string;
		expires: string;
	};
}

export interface DbFindUniqueVerificationTokenOrThrowResponseData {
	db_findUniqueVerificationTokenOrThrow?: {
		identifier: string;
		token: string;
		expires: string;
	};
}

export interface DbGroupByAccountResponseData {
	db_groupByAccount: {
		id: string;
		userId: string;
		type: string;
		provider: string;
		providerAccountId: string;
		refresh_token?: string;
		access_token?: string;
		expires_at?: number;
		token_type?: string;
		scope?: string;
		id_token?: string;
		session_state?: string;
		createdAt: string;
		updatedAt: string;
		_count?: {
			id: number;
			userId: number;
			type: number;
			provider: number;
			providerAccountId: number;
			refresh_token: number;
			access_token: number;
			expires_at: number;
			token_type: number;
			scope: number;
			id_token: number;
			session_state: number;
			createdAt: number;
			updatedAt: number;
			_all: number;
		};
		_avg?: {
			expires_at?: number;
		};
		_sum?: {
			expires_at?: number;
		};
		_min?: {
			id?: string;
			userId?: string;
			type?: string;
			provider?: string;
			providerAccountId?: string;
			refresh_token?: string;
			access_token?: string;
			expires_at?: number;
			token_type?: string;
			scope?: string;
			id_token?: string;
			session_state?: string;
			createdAt?: string;
			updatedAt?: string;
		};
		_max?: {
			id?: string;
			userId?: string;
			type?: string;
			provider?: string;
			providerAccountId?: string;
			refresh_token?: string;
			access_token?: string;
			expires_at?: number;
			token_type?: string;
			scope?: string;
			id_token?: string;
			session_state?: string;
			createdAt?: string;
			updatedAt?: string;
		};
	}[];
}

export interface DbGroupByPostResponseData {
	db_groupByPost: {
		id: string;
		title: string;
		content?: JSONValue;
		published: boolean;
		createdAt: string;
		updatedAt: string;
		authorId: string;
		_count?: {
			id: number;
			title: number;
			content: number;
			published: number;
			createdAt: number;
			updatedAt: number;
			authorId: number;
			_all: number;
		};
		_min?: {
			id?: string;
			title?: string;
			published?: boolean;
			createdAt?: string;
			updatedAt?: string;
			authorId?: string;
		};
		_max?: {
			id?: string;
			title?: string;
			published?: boolean;
			createdAt?: string;
			updatedAt?: string;
			authorId?: string;
		};
	}[];
}

export interface DbGroupBySessionResponseData {
	db_groupBySession: {
		id: string;
		sessionToken: string;
		userId: string;
		expires: string;
		_count?: {
			id: number;
			sessionToken: number;
			userId: number;
			expires: number;
			_all: number;
		};
		_min?: {
			id?: string;
			sessionToken?: string;
			userId?: string;
			expires?: string;
		};
		_max?: {
			id?: string;
			sessionToken?: string;
			userId?: string;
			expires?: string;
		};
	}[];
}

export interface DbGroupByTodoResponseData {
	db_groupByTodo: {
		id: string;
		text: string;
		isCompleted: boolean;
		createdAt: string;
		updatedAt: string;
		userId: string;
		_count?: {
			id: number;
			text: number;
			isCompleted: number;
			createdAt: number;
			updatedAt: number;
			userId: number;
			_all: number;
		};
		_min?: {
			id?: string;
			text?: string;
			isCompleted?: boolean;
			createdAt?: string;
			updatedAt?: string;
			userId?: string;
		};
		_max?: {
			id?: string;
			text?: string;
			isCompleted?: boolean;
			createdAt?: string;
			updatedAt?: string;
			userId?: string;
		};
	}[];
}

export interface DbGroupByUserResponseData {
	db_groupByUser: {
		id: string;
		name?: string;
		email?: string;
		emailVerified?: string;
		image?: string;
		createdAt: string;
		updatedAt: string;
		stripeCustomerId?: string;
		stripeSubscriptionId?: string;
		stripePriceId?: string;
		stripeCurrentPeriodEnd?: string;
		_count?: {
			id: number;
			name: number;
			email: number;
			emailVerified: number;
			image: number;
			createdAt: number;
			updatedAt: number;
			stripeCustomerId: number;
			stripeSubscriptionId: number;
			stripePriceId: number;
			stripeCurrentPeriodEnd: number;
			_all: number;
		};
		_min?: {
			id?: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt?: string;
			updatedAt?: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
		};
		_max?: {
			id?: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt?: string;
			updatedAt?: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
		};
	}[];
}

export interface DbGroupByVerificationTokenResponseData {
	db_groupByVerificationToken: {
		identifier: string;
		token: string;
		expires: string;
		_count?: {
			identifier: number;
			token: number;
			expires: number;
			_all: number;
		};
		_min?: {
			identifier?: string;
			token?: string;
			expires?: string;
		};
		_max?: {
			identifier?: string;
			token?: string;
			expires?: string;
		};
	}[];
}

export interface DbQueryRawResponseData {
	db_queryRaw: {
		ID: string;
		Int: number;
		Float: number;
		String: string;
		Boolean: boolean;
		DateTime: string;
		JSON: JSONValue;
		Object: {
			ID: string;
			Int: number;
			Float: number;
			String: string;
			Boolean: boolean;
			DateTime: string;
			JSON: JSONValue;
			OptionalID?: string;
			OptionalInt?: number;
			OptionalFloat?: number;
			OptionalString?: string;
			OptionalBoolean?: boolean;
			OptionalDateTime?: string;
			OptionalJSON?: JSONValue;
		};
		Array: {
			ID: string;
			Int: number;
			Float: number;
			String: string;
			Boolean: boolean;
			DateTime: string;
			JSON: JSONValue;
			OptionalID?: string;
			OptionalInt?: number;
			OptionalFloat?: number;
			OptionalString?: string;
			OptionalBoolean?: boolean;
			OptionalDateTime?: string;
			OptionalJSON?: JSONValue;
		}[];
		OptionalID?: string;
		OptionalInt?: number;
		OptionalFloat?: number;
		OptionalString?: string;
		OptionalBoolean?: boolean;
		OptionalDateTime?: string;
		OptionalJSON?: JSONValue;
		OptionalObject?: {
			ID: string;
			Int: number;
			Float: number;
			String: string;
			Boolean: boolean;
			DateTime: string;
			JSON: JSONValue;
			OptionalID?: string;
			OptionalInt?: number;
			OptionalFloat?: number;
			OptionalString?: string;
			OptionalBoolean?: boolean;
			OptionalDateTime?: string;
			OptionalJSON?: JSONValue;
		};
		OptionalArray: {
			ID: string;
			Int: number;
			Float: number;
			String: string;
			Boolean: boolean;
			DateTime: string;
			JSON: JSONValue;
			OptionalID?: string;
			OptionalInt?: number;
			OptionalFloat?: number;
			OptionalString?: string;
			OptionalBoolean?: boolean;
			OptionalDateTime?: string;
			OptionalJSON?: JSONValue;
		}[];
	}[];
}

export interface DbQueryRawJSONResponseData {
	db_queryRawJSON?: JSONValue;
}

export interface DbUpdateManyAccountResponseData {
	db_updateManyAccount?: {
		count: number;
	};
}

export interface DbUpdateManyPostResponseData {
	db_updateManyPost?: {
		count: number;
	};
}

export interface DbUpdateManySessionResponseData {
	db_updateManySession?: {
		count: number;
	};
}

export interface DbUpdateManyTodoResponseData {
	db_updateManyTodo?: {
		count: number;
	};
}

export interface DbUpdateManyUserResponseData {
	db_updateManyUser?: {
		count: number;
	};
}

export interface DbUpdateManyVerificationTokenResponseData {
	db_updateManyVerificationToken?: {
		count: number;
	};
}

export interface DbUpdateOneAccountResponseData {
	db_updateOneAccount?: {
		id: string;
		userId: string;
		type: string;
		provider: string;
		providerAccountId: string;
		refresh_token?: string;
		access_token?: string;
		expires_at?: number;
		token_type?: string;
		scope?: string;
		id_token?: string;
		session_state?: string;
		createdAt: string;
		updatedAt: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbUpdateOnePostResponseData {
	db_updateOnePost?: {
		id: string;
		title: string;
		content?: JSONValue;
		published: boolean;
		createdAt: string;
		updatedAt: string;
		authorId: string;
		author: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbUpdateOneSessionResponseData {
	db_updateOneSession?: {
		id: string;
		sessionToken: string;
		userId: string;
		expires: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbUpdateOneTodoResponseData {
	db_updateOneTodo?: {
		id: string;
		text: string;
		isCompleted: boolean;
		createdAt: string;
		updatedAt: string;
		userId: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbUpdateOneUserResponseData {
	db_updateOneUser?: {
		id: string;
		name?: string;
		email?: string;
		emailVerified?: string;
		image?: string;
		createdAt: string;
		updatedAt: string;
		stripeCustomerId?: string;
		stripeSubscriptionId?: string;
		stripePriceId?: string;
		stripeCurrentPeriodEnd?: string;
		accounts?: {
			id: string;
			userId: string;
			type: string;
			provider: string;
			providerAccountId: string;
			refresh_token?: string;
			access_token?: string;
			expires_at?: number;
			token_type?: string;
			scope?: string;
			id_token?: string;
			session_state?: string;
			createdAt: string;
			updatedAt: string;
		}[];
		sessions?: {
			id: string;
			sessionToken: string;
			userId: string;
			expires: string;
		}[];
		Post?: {
			id: string;
			title: string;
			content?: JSONValue;
			published: boolean;
			createdAt: string;
			updatedAt: string;
			authorId: string;
		}[];
		Todo?: {
			id: string;
			text: string;
			isCompleted: boolean;
			createdAt: string;
			updatedAt: string;
			userId: string;
		}[];
		_count: {
			accounts: number;
			sessions: number;
			Post: number;
			Todo: number;
		};
	};
}

export interface DbUpdateOneVerificationTokenResponseData {
	db_updateOneVerificationToken?: {
		identifier: string;
		token: string;
		expires: string;
	};
}

export interface DbUpsertOneAccountResponseData {
	db_upsertOneAccount?: {
		id: string;
		userId: string;
		type: string;
		provider: string;
		providerAccountId: string;
		refresh_token?: string;
		access_token?: string;
		expires_at?: number;
		token_type?: string;
		scope?: string;
		id_token?: string;
		session_state?: string;
		createdAt: string;
		updatedAt: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbUpsertOnePostResponseData {
	db_upsertOnePost?: {
		id: string;
		title: string;
		content?: JSONValue;
		published: boolean;
		createdAt: string;
		updatedAt: string;
		authorId: string;
		author: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbUpsertOneSessionResponseData {
	db_upsertOneSession?: {
		id: string;
		sessionToken: string;
		userId: string;
		expires: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			Todo?: {
				id: string;
				text: string;
				isCompleted: boolean;
				createdAt: string;
				updatedAt: string;
				userId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbUpsertOneTodoResponseData {
	db_upsertOneTodo?: {
		id: string;
		text: string;
		isCompleted: boolean;
		createdAt: string;
		updatedAt: string;
		userId: string;
		user: {
			id: string;
			name?: string;
			email?: string;
			emailVerified?: string;
			image?: string;
			createdAt: string;
			updatedAt: string;
			stripeCustomerId?: string;
			stripeSubscriptionId?: string;
			stripePriceId?: string;
			stripeCurrentPeriodEnd?: string;
			accounts?: {
				id: string;
				userId: string;
				type: string;
				provider: string;
				providerAccountId: string;
				refresh_token?: string;
				access_token?: string;
				expires_at?: number;
				token_type?: string;
				scope?: string;
				id_token?: string;
				session_state?: string;
				createdAt: string;
				updatedAt: string;
			}[];
			sessions?: {
				id: string;
				sessionToken: string;
				userId: string;
				expires: string;
			}[];
			Post?: {
				id: string;
				title: string;
				content?: JSONValue;
				published: boolean;
				createdAt: string;
				updatedAt: string;
				authorId: string;
			}[];
			_count: {
				accounts: number;
				sessions: number;
				Post: number;
				Todo: number;
			};
		};
	};
}

export interface DbUpsertOneUserResponseData {
	db_upsertOneUser?: {
		id: string;
		name?: string;
		email?: string;
		emailVerified?: string;
		image?: string;
		createdAt: string;
		updatedAt: string;
		stripeCustomerId?: string;
		stripeSubscriptionId?: string;
		stripePriceId?: string;
		stripeCurrentPeriodEnd?: string;
		accounts?: {
			id: string;
			userId: string;
			type: string;
			provider: string;
			providerAccountId: string;
			refresh_token?: string;
			access_token?: string;
			expires_at?: number;
			token_type?: string;
			scope?: string;
			id_token?: string;
			session_state?: string;
			createdAt: string;
			updatedAt: string;
		}[];
		sessions?: {
			id: string;
			sessionToken: string;
			userId: string;
			expires: string;
		}[];
		Post?: {
			id: string;
			title: string;
			content?: JSONValue;
			published: boolean;
			createdAt: string;
			updatedAt: string;
			authorId: string;
		}[];
		Todo?: {
			id: string;
			text: string;
			isCompleted: boolean;
			createdAt: string;
			updatedAt: string;
			userId: string;
		}[];
		_count: {
			accounts: number;
			sessions: number;
			Post: number;
			Todo: number;
		};
	};
}

export interface DbUpsertOneVerificationTokenResponseData {
	db_upsertOneVerificationToken?: {
		identifier: string;
		token: string;
		expires: string;
	};
}

export interface TodosAddTodoResponseData {
	db_createOneTodo?: {
		id: string;
		text: string;
		user: {
			id: string;
			name?: string;
		};
	};
}

export interface TodosGetAllTodosForCurrentUserResponseData {
	db_findManyTodo: {
		id: string;
		text: string;
		isCompleted: boolean;
	}[];
}

export interface TodosUpdateTodoResponseData {
	db_updateOneTodo?: {
		id: string;
		text: string;
		isCompleted: boolean;
	};
}

export interface WeatherGetCityByIdResponseData {
	weather_getCityById?: {
		coord?: {
			lat?: number;
			lon?: number;
		};
		country?: string;
		id?: string;
		name?: string;
		weather?: {
			clouds?: {
				all?: number;
				humidity?: number;
				visibility?: number;
			};
			summary?: {
				description?: string;
				icon?: string;
				title?: string;
			};
			temperature?: {
				actual?: number;
				feelsLike?: number;
				max?: number;
				min?: number;
			};
			timestamp?: number;
			wind?: {
				deg?: number;
				speed?: number;
			};
		};
	}[];
}

export interface WeatherGetCityByNameResponseData {
	weather_getCityByName?: {
		coord?: {
			lat?: number;
			lon?: number;
		};
		country?: string;
		id?: string;
		name?: string;
		weather?: {
			clouds?: {
				all?: number;
				humidity?: number;
				visibility?: number;
			};
			summary?: {
				description?: string;
				icon?: string;
				title?: string;
			};
			temperature?: {
				actual?: number;
				feelsLike?: number;
				max?: number;
				min?: number;
			};
			timestamp?: number;
			wind?: {
				deg?: number;
				speed?: number;
			};
		};
	};
}

export type OpenaiExtract_website_metadataResponseData = ExtractResponse<
	typeof function_OpenaiExtract_website_metadata
>;

export type OpenaiLoad_urlResponseData = ExtractResponse<typeof function_OpenaiLoad_url>;

export type OpenaiSummarize_url_contentResponseData = ExtractResponse<typeof function_OpenaiSummarize_url_content>;

export type OpenaiSummaryResponseData = ExtractResponse<typeof function_OpenaiSummary>;

export type OpenaiWeatherResponseData = ExtractResponse<typeof function_OpenaiWeather>;

export type UsersGetResponseData = ExtractResponse<typeof function_UsersGet>;

export type UsersSubscribeResponseData = ExtractResponse<typeof function_UsersSubscribe>;

export type UsersUpdateResponseData = ExtractResponse<typeof function_UsersUpdate>;
